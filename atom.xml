<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Stay hungry. Stay foolish.</title>
  
  
  <link href="https://blog.icjlu.eu.org/atom.xml" rel="self"/>
  
  <link href="https://blog.icjlu.eu.org/"/>
  <updated>2025-04-26T02:46:49.661Z</updated>
  <id>https://blog.icjlu.eu.org/</id>
  
  <author>
    <name>Yuxico</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>LeetCode每日一题2025-04-26</title>
    <link href="https://blog.icjlu.eu.org/post/count-subarrays-with-fixed-bounds.html"/>
    <id>https://blog.icjlu.eu.org/post/count-subarrays-with-fixed-bounds.html</id>
    <published>2025-04-26T02:13:43.000Z</published>
    <updated>2025-04-26T02:46:49.661Z</updated>
    
    <content type="html"><![CDATA[<h1><a href="https://leetcode.cn/problems/count-subarrays-with-fixed-bounds/">2444. 统计定界子数组的数目</a> H</h1><p>给你一个整数数组 <code>nums</code> 和两个整数 <code>minK</code> 以及 <code>maxK</code> 。</p><p><code>nums</code> 的定界子数组是满足下述条件的一个子数组：</p><ul><li>子数组中的 <strong>最小值</strong> 等于 <code>minK</code> 。</li><li>子数组中的 <strong>最大值</strong> 等于 <code>maxK</code> 。</li></ul><p>返回定界子数组的数目。</p><p>子数组是数组中的一个连续部分。</p><p><strong>示例 1：</strong></p><blockquote><p>输入：nums = [1,3,5,2,7,5], minK = 1, maxK = 5<br>输出：2<br>解释：定界子数组是 [1,3,5] 和 [1,3,5,2] 。</p></blockquote><p><strong>示例 2：</strong></p><blockquote><p>输入：nums = [1,1,1,1], minK = 1, maxK = 1<br>输出：10<br>解释：nums 的每个子数组都是一个定界子数组。共有 10 个子数组。</p></blockquote><p><strong>提示：</strong></p><ul><li>2 <code>&lt;= nums.length &lt;=</code> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>10</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span></li><li>1 <code>&lt;= nums[i], minK, maxK &lt;=</code> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>10</mn><mn>6</mn></msup></mrow><annotation encoding="application/x-tex">10^6</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span></span></span></span></li></ul><h2 id="问题分析">问题分析</h2><p>我们要统计所有「最小值＝<code>minK</code> 且 最大值＝<code>maxK</code>」的子数组个数。核心在于：</p><ol><li><p><strong>无效区间</strong>：任何超出区间 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mi>i</mi><mi>n</mi><mi>K</mi><mo separator="true">,</mo><mi>m</mi><mi>a</mi><mi>x</mi><mi>K</mi></mrow><annotation encoding="application/x-tex">minK, maxK</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">min</span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span> 的元素都会“破坏”子数组；我们记录它的最近位置 <code>last_invalid</code>，子数组一旦跨过此位置就一定包含不合格元素。</p></li><li><p><strong>关键位置</strong>：必须同时出现 <code>minK</code> 和 <code>maxK</code>，因此我们分别记录扫描到当前位置为止，最后一次出现 <code>minK</code> 的下标 <code>last_min</code>，以及最后一次出现 <code>maxK</code> 的下标 <code>last_max</code>。</p></li><li><p><strong>结尾贡献</strong>：对于每个位置 <code>i</code>，以它为结尾的所有合法子数组，起始位置 <code>j</code> 必须满足：</p><ul><li><code>j &gt; last_invalid</code>（子数组中不包含任何无效元素）</li><li>而且子数组要同时包含最近一次的 <code>minK</code> 和 <code>maxK</code>，也就是说 <code>j ≤ min(last_min, last_max)</code>。</li></ul><p>因此，以 <code>i</code> 结尾的合法子数组数量是：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">max(0, min(last_min, last_max) - last_invalid)</span><br></pre></td></tr></table></figure><p>累加到全局答案中即可。</p></li></ol><h2 id="算法思路">算法思路</h2><ol><li>定义三个指针/下标变量：<ul><li><code>last_invalid</code>：上一个不满足 <code>minK ≤ nums[i] ≤ maxK</code> 的位置（初始化为 −1）。</li><li><code>last_min</code>：上一个等于 <code>minK</code> 的位置（初始化为 −1）。</li><li><code>last_max</code>：上一个等于 <code>maxK</code> 的位置（初始化为 −1）。</li></ul></li><li>从左至右遍历数组，每到索引 <code>i</code>：<ul><li>若 <code>nums[i] &lt; minK</code> 或 <code>nums[i] &gt; maxK</code>，则更新 <code>last_invalid = i</code>。</li><li>若 <code>nums[i] == minK</code>，则更新 <code>last_min = i</code>。</li><li>若 <code>nums[i] == maxK</code>，则更新 <code>last_max = i</code>。</li></ul></li><li>以 <code>i</code> 结尾的所有合法子数组，起始点必须在 <code>(last_invalid, min(last_min, last_max)]</code> 之间，故可累加 <code>max(0, min(last_min, last_max) - last_invalid)</code> 到答案中。</li><li>最终累加得到所有定界子数组的数量。</li></ol><h2 id="时间复杂度">时间复杂度</h2><ul><li>时间复杂度：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 为数组长度</li><li>空间复杂度：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span>（仅使用常数额外变量）</li></ul><h2 id="代码实现">代码实现</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">countSubarrays</span>(<span class="params">self, nums: <span class="built_in">list</span>[<span class="built_in">int</span>], minK: <span class="built_in">int</span>, maxK: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        last_invalid = -<span class="number">1</span>     <span class="comment"># 最后一个不在 [minK, maxK] 范围内的索引</span></span><br><span class="line">        last_min = -<span class="number">1</span>         <span class="comment"># 最后一个出现 minK 的索引</span></span><br><span class="line">        last_max = -<span class="number">1</span>         <span class="comment"># 最后一个出现 maxK 的索引</span></span><br><span class="line">        count = <span class="number">0</span>             <span class="comment"># 结果计数</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i, x <span class="keyword">in</span> <span class="built_in">enumerate</span>(nums):</span><br><span class="line">            <span class="comment"># 1）如果 x 超出 [minK, maxK] 区间，则标记为无效</span></span><br><span class="line">            <span class="keyword">if</span> x &lt; minK <span class="keyword">or</span> x &gt; maxK:</span><br><span class="line">                last_invalid = i</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 2）记录最新出现 minK 和 maxK 的位置</span></span><br><span class="line">            <span class="keyword">if</span> x == minK:</span><br><span class="line">                last_min = i</span><br><span class="line">            <span class="keyword">if</span> x == maxK:</span><br><span class="line">                last_max = i</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 3）计算以 i 结尾的合法子数组个数</span></span><br><span class="line">            <span class="comment">#    起始点 j 必须 &gt; last_invalid，且 ≤ min(last_min, last_max)</span></span><br><span class="line">            valid_start = <span class="built_in">min</span>(last_min, last_max)</span><br><span class="line">            <span class="keyword">if</span> valid_start &gt; last_invalid:</span><br><span class="line">                count += (valid_start - last_invalid)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> count</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>以 <code>nums = [1,3,5,2,7,5]</code>, <code>minK = 1</code>, <code>maxK = 5</code>为例：</p><table><thead><tr><th>i</th><th>nums[i]</th><th>last_invalid</th><th>last_min</th><th>last_max</th><th>min(last_min, last_max)</th><th>新增子数组 = max(0, min–last_invalid)</th><th>累计 count</th></tr></thead><tbody><tr><td>-1</td><td>—</td><td>-1</td><td>-1</td><td>-1</td><td>—</td><td>—</td><td>0</td></tr><tr><td>0</td><td>1</td><td>-1</td><td>0</td><td>-1</td><td>-1</td><td>max(0, -1 − (-1)) = 0</td><td>0</td></tr><tr><td>1</td><td>3</td><td>-1</td><td>0</td><td>-1</td><td>-1</td><td>max(0, -1 − (-1)) = 0</td><td>0</td></tr><tr><td>2</td><td>5</td><td>-1</td><td>0</td><td>2</td><td>0</td><td>max(0, 0 − (-1)) = 1</td><td>1</td></tr><tr><td>3</td><td>2</td><td>-1</td><td>0</td><td>2</td><td>0</td><td>max(0, 0 − (-1)) = 1</td><td>2</td></tr><tr><td>4</td><td>7 (&gt;5)</td><td>4</td><td>0</td><td>2</td><td>0</td><td>max(0, 0 − 4) = 0</td><td>2</td></tr><tr><td>5</td><td>5</td><td>4</td><td>0</td><td>5</td><td>0</td><td>max(0, 0 − 4) = 0</td><td>2</td></tr></tbody></table><ul><li><strong>i=2</strong> 时，<code>nums[2]=5</code>，更新 <code>last_max=2</code>，此时 <code>min(last_min,last_max)=0</code>，新增子数组有 <code>1</code> 个，即 <code>[1,3,5]</code>。</li><li><strong>i=3</strong> 时，<code>nums[3]=2</code>，没有更新 <code>last_min/last_max</code>，但依然可延伸前面那个“有效段”贡献 <code>1</code> 个，即 <code>[1,3,5,2]</code>。</li><li><strong>i=4</strong> 时跳到 <code>7</code>（无效），<code>last_invalid=4</code>，后续以任何 <code>i≥4</code> 结尾的子数组都必须从 5 之后开始；此时在位置 5 上虽然又出现了 <code>maxK</code>，但最早的 <code>minK</code> 还是在 0，所以 <code>min(last_min,last_max)=0≤ last_invalid=4</code>，无有效子数组。</li></ul><p>最终总数为 <strong>2</strong>。</p><p><strong>边界</strong></p><ol><li><strong>minK == maxK</strong><br>算法依然适用，此时要求子数组内所有元素都等于同一个值 <code>K</code>，也就统计所有连续等于 <code>K</code> 的子数组个数。</li><li><strong>数组中无 minK 或 maxK</strong><br>某一关键位置永远为 −1，则 <code>min(last_min,last_max) = −1</code>，每次贡献都为 0，最终答案 0。</li><li><strong>整型溢出</strong><br>累加次数最多是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mathcal{O}(n^2/2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathcal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord">/2</span><span class="mclose">)</span></span></span></span> 级别（当所有子数组都合法时），对于 n≤ <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>10</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span>，要用 64 位整型（Python 中 int 自动大整型）。</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;a href=&quot;https://leetcode.cn/problems/count-subarrays-with-fixed-bounds/&quot;&gt;2444. 统计定界子数组的数目&lt;/a&gt; H&lt;/h1&gt;
&lt;p&gt;给你一个整数数组 &lt;code&gt;nums&lt;/code&gt; 和两个整</summary>
      
    
    
    
    <category term="算法" scheme="https://blog.icjlu.eu.org/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="Algorithm" scheme="https://blog.icjlu.eu.org/tags/Algorithm/"/>
    
    <category term="困难" scheme="https://blog.icjlu.eu.org/tags/%E5%9B%B0%E9%9A%BE/"/>
    
    <category term="滑动窗口" scheme="https://blog.icjlu.eu.org/tags/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/"/>
    
    <category term="双指针" scheme="https://blog.icjlu.eu.org/tags/%E5%8F%8C%E6%8C%87%E9%92%88/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode每日一题2025-04-25</title>
    <link href="https://blog.icjlu.eu.org/post/count-of-interesting-subarrays.html"/>
    <id>https://blog.icjlu.eu.org/post/count-of-interesting-subarrays.html</id>
    <published>2025-04-25T01:41:37.000Z</published>
    <updated>2025-04-25T05:49:43.646Z</updated>
    
    <content type="html"><![CDATA[<h1><a href="https://leetcode.cn/problems/count-of-interesting-subarrays/">2845. 统计趣味子数组的数目</a> M</h1><p>给你一个下标从 <strong>0</strong> 开始的整数数组 <code>nums</code> ，以及整数 <code>modulo</code> 和整数 <code>k</code> 。</p><p>请你找出并统计数组中 <strong>趣味子数组</strong> 的数目。</p><p>如果 <strong>子数组</strong> <code>nums[l..r]</code> 满足下述条件，则称其为 <strong>趣味子数组</strong> ：</p><ul><li>在范围 <code>[l, r]</code> 内，设 <code>cnt</code> 为满足 <code>nums[i] % modulo == k</code> 的索引 <code>i</code> 的数量。并且 <code>cnt % modulo == k</code> 。</li></ul><p>以整数形式表示并返回趣味子数组的数目。</p><p><strong>注意：</strong> 子数组是数组中的一个连续非空的元素序列。</p><p><strong>示例 1：</strong></p><blockquote><p>输入：nums = [3,2,4], modulo = 2, k = 1<br>输出：3<br>解释：在这个示例中，趣味子数组分别是：<br>子数组 nums[0…0] ，也就是 [3] 。</p><ul><li>在范围 [0, 0] 内，只存在 1 个下标 i = 0 满足 nums[i] % modulo == k 。</li><li>因此 cnt = 1 ，且 cnt % modulo == k 。<br>子数组 nums[0…1] ，也就是 [3,2] 。</li><li>在范围 [0, 1] 内，只存在 1 个下标 i = 0 满足 nums[i] % modulo == k 。</li><li>因此 cnt = 1 ，且 cnt % modulo == k 。<br>子数组 nums[0…2] ，也就是 [3,2,4] 。</li><li>在范围 [0, 2] 内，只存在 1 个下标 i = 0 满足 nums[i] % modulo == k 。</li><li>因此 cnt = 1 ，且 cnt % modulo == k 。<br>可以证明不存在其他趣味子数组。因此，答案为 3 。</li></ul></blockquote><p><strong>示例 2：</strong></p><blockquote><p>输入：nums = [3,1,9,6], modulo = 3, k = 0<br>输出：2<br>解释：在这个示例中，趣味子数组分别是：<br>子数组 nums[0…3] ，也就是 [3,1,9,6] 。</p><ul><li>在范围 [0, 3] 内，只存在 3 个下标 i = 0, 2, 3 满足 nums[i] % modulo == k 。</li><li>因此 cnt = 3 ，且 cnt % modulo == k 。<br>子数组 nums[1…1] ，也就是 [1] 。</li><li>在范围 [1, 1] 内，不存在下标满足 nums[i] % modulo == k 。</li><li>因此 cnt = 0 ，且 cnt % modulo == k 。<br>可以证明不存在其他趣味子数组，因此答案为 2 。</li></ul></blockquote><p><strong>提示：</strong></p><ul><li>1 <code>&lt;= nums.length &lt;=</code> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>10</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span></li><li>1 <code>&lt;= nums[i] &lt;=</code> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>10</mn><mn>9</mn></msup></mrow><annotation encoding="application/x-tex">10^9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">9</span></span></span></span></span></span></span></span></span></span></span></li><li>1 <code>&lt;= modulo &lt;=</code> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>10</mn><mn>9</mn></msup></mrow><annotation encoding="application/x-tex">10^9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">9</span></span></span></span></span></span></span></span></span></span></span></li><li><code>0 &lt;= k &lt; modulo</code></li></ul><h2 id="问题分析">问题分析</h2><p>我们要统计子数组中满足以下两个条件的子数组个数：</p><ul><li>在子数组范围内，满足 <code>nums[i] % modulo == k</code> 的元素个数记为 <code>cnt</code></li><li>且 <code>cnt % modulo == k</code></li></ul><h2 id="算法思路">算法思路</h2><ol><li><p>为了更方便地计数，我们先把原数组 <code>nums</code> 转换成一个二值数组 <code>b</code>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b[i] = <span class="number">1</span> <span class="keyword">if</span> nums[i] % modulo == k <span class="keyword">else</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><p>此时，任意子数组 <code>[l..r]</code> 中满足条件的元素个数</p><p>就是 <code>b[l] + b[l+1] + … + b[r]</code>。</p></li><li><p>引入<strong>前缀和</strong> + <strong>模运算</strong></p><p>定义前缀和数组 <code>P</code>，并对 <code>modulo</code> 取模，使得计算更简单：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">P[0] = 0</span><br><span class="line">P[i] = (b[0] + b[1] + … + b[i-1]) % modulo    （1 ≤ i ≤ n）</span><br></pre></td></tr></table></figure><ul><li>注意：<code>P[i]</code> 表示前 <code>i</code> 个元素（即 <code>b[0..i-1]</code>）的和 mod <code>modulo</code></li></ul><p>那么子数组 <code>[l..r]</code> 的“有趣计数” <code>cnt = b[l] + … + b[r]</code>，可以写成：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnt = (P[r+1] - P[l] + modulo) % modulo</span><br></pre></td></tr></table></figure><p>我们需要 <code>cnt % modulo == k</code>，即</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(P[r+1] - P[l]) % modulo == k</span><br><span class="line">⇔ P[r+1] ≡ P[l] + k   (modulo)</span><br><span class="line">⇔ P[l] ≡ P[r+1] - k   (modulo)</span><br></pre></td></tr></table></figure></li><li><p>利用<strong>哈希表</strong>计数</p><p>由上面等式可知：在遍历到位置 <code>r</code>（即计算出 <code>P[r+1]</code>）时，我们只要知道有多少个 <code>l &lt; r+1</code> 使得</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo stretchy="false">[</mo><mi>l</mi><mo stretchy="false">]</mo><mo>≡</mo><mo stretchy="false">(</mo><mi>P</mi><mo stretchy="false">[</mo><mi>r</mi><mo>+</mo><mn>1</mn><mo stretchy="false">]</mo><mo>−</mo><mi>k</mi><mo stretchy="false">)</mo><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mtext>modulo</mtext></mrow><annotation encoding="application/x-tex">P[l] \equiv (P[r+1] - k) \bmod \text{modulo}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.0556em;"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">mod</span></span></span><span class="mspace" style="margin-right:0.0556em;"></span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord text"><span class="mord">modulo</span></span></span></span></span></span></p><p>即可将这些子数组都计入答案。因此，我们用一个哈希表 <code>cntMap</code> 来维护“每种前缀和出现的次数”：</p><ul><li><strong>键</strong>：某个值 <code>v</code> 表示前缀和 <code>P[*] = v</code></li><li><strong>值</strong>：该前缀和出现了多少次</li></ul></li></ol><h2 id="时间复杂度">时间复杂度</h2><p><strong>时间复杂度</strong>：</p><ul><li>遍历一次数组，共 <code>n</code> 步</li><li>每步中哈希表的查询与更新均摊 O(1) → 总体 O(n)</li></ul><p><strong>空间复杂度</strong>：哈希表 <code>cntMap</code> 最多存储 <code>O(min(n, modulo))</code> 个不同的前缀和值 → 最坏 O(n)，通常远小于 n</p><h2 id="代码分解">代码分解</h2><ol><li><p>初始化</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cntMap = defaultdict(<span class="built_in">int</span>)</span><br><span class="line">cntMap[<span class="number">0</span>] = <span class="number">1</span></span><br><span class="line">cur = <span class="number">0</span>    <span class="comment"># 当前前缀和 P[i]（初始化为 P[0]）</span></span><br><span class="line">ans = <span class="number">0</span></span><br></pre></td></tr></table></figure><ul><li><code>cntMap[0] = 1</code>：表示空前缀（即 <code>P[0]</code>）出现 1 次，便于统计以开头就满足条件的子数组</li></ul></li><li><p>遍历数组</p><p>对于每个 <code>x = nums[i]</code>，更新：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> x % modulo == k:</span><br><span class="line">    cur = (cur + <span class="number">1</span>) % modulo</span><br><span class="line"><span class="comment"># 此时 cur = P[i+1]</span></span><br></pre></td></tr></table></figure></li><li><p>查询并累加</p><p>计算目标前缀和值：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">target = (cur - k + modulo) % modulo</span><br><span class="line">ans += cntMap[target]</span><br></pre></td></tr></table></figure><p>这一步相当于“找到所有 l，使得 P[l] == target”，将其数量直接加到答案中</p></li><li><p>更新哈希表</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cntMap[cur] += <span class="number">1</span></span><br></pre></td></tr></table></figure><p>将当前前缀和也记入哈希表，以便后续作为 <code>l</code> 被使用</p></li></ol><p>遍历结束后，<code>ans</code> 即为所有“趣味子数组”的总数</p><h2 id="代码实现">代码实现</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> defaultdict</span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">List</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">countInterestingSubarrays</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>], modulo: <span class="built_in">int</span>, k: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        <span class="comment"># b[i] = 1 if nums[i] % modulo == k else 0</span></span><br><span class="line">        <span class="comment"># 前缀和计数映射</span></span><br><span class="line">        cntMap = defaultdict(<span class="built_in">int</span>)</span><br><span class="line">        cntMap[<span class="number">0</span>] = <span class="number">1</span>    <span class="comment"># 初始：空前缀和为 0 出现过一次</span></span><br><span class="line">        </span><br><span class="line">        cur = <span class="number">0</span>          <span class="comment"># 当前前缀和（modulo 取模后）</span></span><br><span class="line">        ans = <span class="number">0</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> nums:</span><br><span class="line">            <span class="comment"># 转换 b[i] 并更新前缀和</span></span><br><span class="line">            <span class="keyword">if</span> x % modulo == k:</span><br><span class="line">                cur = (cur + <span class="number">1</span>) % modulo</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># 计算能与当前前缀和配对的目标值</span></span><br><span class="line">            target = (cur - k + modulo) % modulo</span><br><span class="line">            ans += cntMap[target]</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># 记录当前前缀和出现次数</span></span><br><span class="line">            cntMap[cur] += <span class="number">1</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>以 <code>nums = [3,2,4]，modulo = 2，k = 1</code> 为例：</p><table><thead><tr><th>i</th><th>nums[i]</th><th>nums[i]%2==1?</th><th>b[i]</th><th>cur (P[i+1])</th><th>target=(cur−k)%2</th><th>cntMap before</th><th>新增 ans</th><th>cntMap after</th></tr></thead><tbody><tr><td>初始</td><td></td><td></td><td></td><td>cur = 0</td><td></td><td>{0:1}</td><td>0</td><td>{0:1}</td></tr><tr><td>i=0</td><td>3</td><td>是</td><td>1</td><td>(0+1)%2 = 1</td><td>(1-1)%2 = 0</td><td>{0:1}</td><td>+1 → 1</td><td>{0:1, 1:1}</td></tr><tr><td>i=1</td><td>2</td><td>否</td><td>0</td><td>(1+0)%2 = 1</td><td>(1-1)%2 = 0</td><td>{0:1,1:1}</td><td>+1 → 2</td><td>{0:1, 1:2}</td></tr><tr><td>i=2</td><td>4</td><td>否</td><td>0</td><td>(1+0)%2 = 1</td><td>(1-1)%2 = 0</td><td>{0:1,1:2}</td><td>+1 → 3</td><td>{0:1, 1:3}</td></tr></tbody></table><ul><li><p><strong>i=0</strong>：<code>cur=1</code>，<code>target=0</code>，<code>cntMap[0]=1</code>，<code>ans=1</code></p></li><li><p><strong>i=1</strong>：<code>cur=1</code>，<code>target=0</code>，<code>cntMap[0]=1</code>，<code>ans=2</code></p></li><li><p><strong>i=2</strong>：<code>cur=1</code>，<code>target=0</code>，<code>cntMap[0]=1</code>，<code>ans=3</code></p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;a href=&quot;https://leetcode.cn/problems/count-of-interesting-subarrays/&quot;&gt;2845. 统计趣味子数组的数目&lt;/a&gt; M&lt;/h1&gt;
&lt;p&gt;给你一个下标从 &lt;strong&gt;0&lt;/strong&gt; 开始的整数数组</summary>
      
    
    
    
    <category term="算法" scheme="https://blog.icjlu.eu.org/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="Algorithm" scheme="https://blog.icjlu.eu.org/tags/Algorithm/"/>
    
    <category term="中等" scheme="https://blog.icjlu.eu.org/tags/%E4%B8%AD%E7%AD%89/"/>
    
    <category term="哈希表" scheme="https://blog.icjlu.eu.org/tags/%E5%93%88%E5%B8%8C%E8%A1%A8/"/>
    
    <category term="数据结构" scheme="https://blog.icjlu.eu.org/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    <category term="前缀和" scheme="https://blog.icjlu.eu.org/tags/%E5%89%8D%E7%BC%80%E5%92%8C/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode每日一题2025-04-24</title>
    <link href="https://blog.icjlu.eu.org/post/count-complete-subarrays-in-an-array.html"/>
    <id>https://blog.icjlu.eu.org/post/count-complete-subarrays-in-an-array.html</id>
    <published>2025-04-24T01:27:09.000Z</published>
    <updated>2025-04-24T02:11:43.275Z</updated>
    
    <content type="html"><![CDATA[<h1><a href="https://leetcode.cn/problems/count-complete-subarrays-in-an-array/">2799. 统计完全子数组的数目</a> M</h1><p>给你一个由 <strong>正</strong> 整数组成的数组 <code>nums</code> 。</p><p>如果数组中的某个子数组满足下述条件，则称之为 <strong>完全子数组</strong> ：</p><ul><li>子数组中 <strong>不同</strong> 元素的数目等于整个数组不同元素的数目。</li></ul><p>返回数组中 <strong>完全子数组</strong> 的数目。</p><p><strong>子数组</strong> 是数组中的一个连续非空序列。</p><p><strong>示例 1：</strong></p><blockquote><p><strong>输入</strong>：nums = [1,3,1,2,2]<br><strong>输出</strong>：4<br><strong>解释</strong>：完全子数组有：[1,3,1,2]、[1,3,1,2,2]、[3,1,2] 和 [3,1,2,2] 。</p></blockquote><p><strong>示例 2：</strong></p><blockquote><p><strong>输入</strong>：nums = [5,5,5,5]<br><strong>输出</strong>：10<br><strong>解释</strong>：数组仅由整数 5 组成，所以任意子数组都满足完全子数组的条件。子数组的总数为 10 。</p></blockquote><p><strong>提示：</strong></p><ul><li><code>1 &lt;= nums.length &lt;= 1000</code></li><li><code>1 &lt;= nums[i] &lt;= 2000</code></li></ul><h2 id="问题分析">问题分析</h2><ul><li><p>给定正整数数组 <code>nums</code>，长度为 <code>n</code>（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≤</mo><mn>1000</mn></mrow><annotation encoding="application/x-tex">\le 1000</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1000</span></span></span></span>）。</p></li><li><p>记数组 <code>nums</code> 中 <strong>不同</strong> 元素的总数为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span>。</p></li><li><p>我们需要统计「子数组中不同元素数 <strong>等于</strong><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span>」的子数组个数。</p></li></ul><h2 id="算法思路">算法思路</h2><p><em>暴力枚举</em>：枚举左端点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mtext> </mtext><mo stretchy="false">(</mo><mn>0</mn><mo>⋯</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">i\text{ }(0\cdots n-1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">i</span><span class="mord text"><span class="mord"> </span></span><span class="mopen">(</span><span class="mord">0</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span> ，再枚举右端点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi><mtext> </mtext><mo stretchy="false">(</mo><mi>i</mi><mo>⋯</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">j\text{ }(i\cdots n-1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mord text"><span class="mord"> </span></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>，对每个子数组 <code>nums[i:j+1]</code> 用哈希或 <code>set</code> 统计不同元素数，再对比是否等于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span>。</p><p>时间复杂度：</p><ul><li>枚举子数组一共 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li><li>每个子数组去重也要 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></li><li>合计 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>3</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>=</mo><mn>1000</mn></mrow><annotation encoding="application/x-tex">n=1000</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1000</span></span></span></span> 时是不可行的（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>10</mn><mn>9</mn></msup></mrow><annotation encoding="application/x-tex">10^9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">9</span></span></span></span></span></span></span></span></span></span></span> 级别的操作）。</li></ul><blockquote><p>暴力+优化也可通过测试：采用双重循环遍历所有可能的子数组，并检查每个子数组是否符合条件，对于每一个起始索引 <code>i</code>，逐步扩展结束索引 <code>j</code>，使用集合记录当前子数组中的元素。一旦集合大小达到整个数组的不同元素数量，则计数加一；若超过该数量则提前终止内层循环，时间复杂度最坏为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">countCompleteSubarrays</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        total_unique = <span class="built_in">len</span>(<span class="built_in">set</span>(nums))</span><br><span class="line">        <span class="keyword">if</span> total_unique == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        </span><br><span class="line">        K = total_unique</span><br><span class="line">        result = <span class="number">0</span></span><br><span class="line">        n = <span class="built_in">len</span>(nums)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">            current_set = <span class="built_in">set</span>()</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i, n):</span><br><span class="line">                current_set.add(nums[j])</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">len</span>(current_set) == K:</span><br><span class="line">                    result += <span class="number">1</span></span><br><span class="line">                <span class="keyword">elif</span> <span class="built_in">len</span>(current_set) &gt; K:</span><br><span class="line">                    <span class="keyword">break</span>  <span class="comment"># 一旦超出所需的唯一计数，就不需要检查其他元素</span></span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br></pre></td></tr></table></figure></blockquote><p><strong>我们令函数</strong></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo><mo>=</mo><mtext>“不同元素数</mtext><mo>≤</mo><mi>k</mi><mtext>”的子数组数量</mtext><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">F(k) = \text{“不同元素数} \leq k \text{”的子数组数量}.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8304em;vertical-align:-0.136em;"></span><span class="mord text"><span class="mord">“</span><span class="mord cjk_fallback">不同元素数</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord text"><span class="mord">”</span><span class="mord cjk_fallback">的子数组数量</span></span><span class="mord">.</span></span></span></span></span></p><p>则恰好等于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span> 的子数组数目</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="normal">#</mi><mo stretchy="false">{</mo><mtext>distinct</mtext><mo>=</mo><mi>K</mi><mo stretchy="false">}</mo><mo>=</mo><mi>F</mi><mo stretchy="false">(</mo><mi>K</mi><mo stretchy="false">)</mo><mo>−</mo><mi>F</mi><mo stretchy="false">(</mo><mi>K</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">\#\{\text{distinct} = K\} = F(K) - F(K - 1).</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">#</span><span class="mopen">{</span><span class="mord text"><span class="mord">distinct</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mclose">}</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord">.</span></span></span></span></span></p><p>所有「不同数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≤</mo><mi>K</mi></mrow><annotation encoding="application/x-tex">\le K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span>」的子数组共 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>K</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F(K)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mclose">)</span></span></span></span> 个，</p><p>但其中也包括「不同数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≤</mo><mi>K</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\le K−1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>」的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>K</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F(K-1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span> 个，</p><p>二者相减，即剩下「不同数恰好 = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span>」的部分。</p><p>使用<strong>滑动窗口 + 双指针</strong>：</p><ol><li><strong>窗口定义</strong><ul><li>左指针 <code>i</code>，右指针 <code>j</code>，初始都指向 0。</li><li>窗口 <code>nums[i…j]</code> 内维护哈希表 <code>count</code>，记录每个数字出现的次数。</li><li>变量 <code>distinct</code> 表示当前窗口内 <strong>不同</strong> 元素的个数。</li></ul></li><li><strong>右指针扩展</strong><ul><li>遍历 <code>j</code> 从 0 到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>：<ul><li>将 <code>nums[j]</code> 加入窗口：若原来 <code>count[nums[j]]==0</code>，则 <code>distinct += 1</code>；再 <code>count[nums[j]] += 1</code>。</li></ul></li></ul></li><li><strong>左指针收缩</strong><ul><li><strong>当</strong> <code>distinct &gt; k</code> 时，需要不断移动左指针 <code>i</code>：<ul><li>从窗口移出 <code>nums[i]</code>：<code>count[nums[i]] -= 1</code>；若 <code>count[nums[i]]</code> 变为 0，则 <code>distinct -= 1</code>；然后 <code>i += 1</code></li></ul></li><li>收缩后，窗口再次保证 <code>distinct ≤ k</code>。</li></ul></li><li><strong>计数子数组</strong><ul><li>对于每一个新的 <code>j</code> 位置，<strong>当前窗口</strong> 所包含的所有合法子数组（以 <code>j</code> 为右端）数量就是窗口长度：<code>j - i + 1</code>。<ul><li>因为任意左端点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi></mrow><annotation encoding="application/x-tex">L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span></span></span></span> 满足 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>≤</mo><mi>L</mi><mo>≤</mo><mi>j</mi></mrow><annotation encoding="application/x-tex">i \le L \le j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7955em;vertical-align:-0.136em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.136em;"></span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span>，子数组 <code>nums[L…j]</code> 都有 <code>distinct ≤ k</code>。</li></ul></li></ul></li><li><strong>累加结果</strong><ul><li>对每个 <code>j</code>，将 <code>j - i + 1</code> 累加到 <code>res</code>，最终 <code>res = F(k)</code>。</li></ul></li></ol><p>以 <code>nums = [1,3,1,2,2]</code>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>=</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">k=2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span> 为例，计算「不同数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≤</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">\le 2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span>」的子数组数：</p><table><thead><tr><th>步骤</th><th>j</th><th>加入 nums[j]</th><th>window</th><th>distinct</th><th>i</th><th>新增子数组数 j−i+1</th><th>累计 res</th></tr></thead><tbody><tr><td>初始化</td><td>—</td><td>—</td><td>[]</td><td>0</td><td>0</td><td>—</td><td>0</td></tr><tr><td>1</td><td>0</td><td>1</td><td>[1]</td><td>1</td><td>0</td><td>0−0+1 = 1</td><td>1</td></tr><tr><td>2</td><td>1</td><td>3</td><td>[1,3]</td><td>2</td><td>0</td><td>1−0+1 = 2</td><td>3</td></tr><tr><td>3</td><td>2</td><td>1</td><td>[1,3,1]</td><td>2</td><td>0</td><td>2−0+1 = 3</td><td>6</td></tr><tr><td>4</td><td>3</td><td>2 → distinct=3</td><td>[1,3,1,2] → 收缩 → [3,1,2]</td><td>2 → 经过收缩</td><td>1</td><td>3−1+1 = 3</td><td>9</td></tr><tr><td>5</td><td>4</td><td>2</td><td>[3,1,2,2]</td><td>3→收缩→2</td><td>2</td><td>4−2+1 = 3</td><td>12</td></tr></tbody></table><p>最终我们得到 <code>F(2) = 12</code>。<br>类似地可以算出 <code>F(1)</code>，最后 <code>F(2) - F(1)</code> 就是「不同数恰好 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>=</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">=2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span>」的子数组数。</p><h2 id="时间复杂度">时间复杂度</h2><ul><li><strong>时间复杂度</strong>：一次 <code>atMost</code> 为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，每个元素最多进出窗口各一次共两次，故 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></li><li><strong>空间复杂度</strong>：哈希表存储最多 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 个键，故 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></li></ul><h2 id="代码分解">代码分解</h2><ol><li><p>用「<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≤</mo><mi>K</mi></mrow><annotation encoding="application/x-tex">\le K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span>」和「<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≤</mo><mi>K</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\le K−1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>」之差得到「<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>=</mo><mi>K</mi></mrow><annotation encoding="application/x-tex">=K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span>」。</p></li><li><p>滑动窗口维护「不同元素数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≤</mo><mi>k</mi></mrow><annotation encoding="application/x-tex">\le k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>」的区间，通过左右指针一遍扫描完成。</p></li><li><p>累加 <code>(j - i + 1)</code> 即可统计当前右端下所有合法子数组。</p></li></ol><h2 id="代码实现">代码实现</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">countCompleteSubarrays</span>(<span class="params">self, nums</span>):</span><br><span class="line">        <span class="comment"># 整体不同元素个数</span></span><br><span class="line">        K = <span class="built_in">len</span>(<span class="built_in">set</span>(nums))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 计算「不同元素 ≤ k」的子数组数量</span></span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">atMost</span>(<span class="params">k</span>):</span><br><span class="line">            count = &#123;&#125;       <span class="comment"># 哈希表：元素 -&gt; 频次</span></span><br><span class="line">            res = <span class="number">0</span></span><br><span class="line">            distinct = <span class="number">0</span>     <span class="comment"># 当前窗口中不同元素数</span></span><br><span class="line">            left = <span class="number">0</span>         <span class="comment"># 窗口左指针</span></span><br><span class="line">            <span class="keyword">for</span> right, x <span class="keyword">in</span> <span class="built_in">enumerate</span>(nums):</span><br><span class="line">                <span class="comment"># 右指针加入</span></span><br><span class="line">                <span class="keyword">if</span> count.get(x, <span class="number">0</span>) == <span class="number">0</span>:</span><br><span class="line">                    distinct += <span class="number">1</span></span><br><span class="line">                count[x] = count.get(x, <span class="number">0</span>) + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">                <span class="comment"># 如果超过 k，左指针收缩</span></span><br><span class="line">                <span class="keyword">while</span> distinct &gt; k:</span><br><span class="line">                    y = nums[left]</span><br><span class="line">                    count[y] -= <span class="number">1</span></span><br><span class="line">                    <span class="keyword">if</span> count[y] == <span class="number">0</span>:</span><br><span class="line">                        distinct -= <span class="number">1</span></span><br><span class="line">                    left += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">                <span class="comment"># 以 right 为结尾的「不同元素 ≤ k」子数组有 (right - left + 1) 个</span></span><br><span class="line">                res += right - left + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 答案 = 至多 K 不同 − 至多 (K-1) 不同</span></span><br><span class="line">        <span class="keyword">return</span> atMost(K) - atMost(K - <span class="number">1</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;a href=&quot;https://leetcode.cn/problems/count-complete-subarrays-in-an-array/&quot;&gt;2799. 统计完全子数组的数目&lt;/a&gt; M&lt;/h1&gt;
&lt;p&gt;给你一个由 &lt;strong&gt;正&lt;/strong&gt; 整数组</summary>
      
    
    
    
    <category term="算法" scheme="https://blog.icjlu.eu.org/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="Algorithm" scheme="https://blog.icjlu.eu.org/tags/Algorithm/"/>
    
    <category term="中等" scheme="https://blog.icjlu.eu.org/tags/%E4%B8%AD%E7%AD%89/"/>
    
    <category term="哈希表" scheme="https://blog.icjlu.eu.org/tags/%E5%93%88%E5%B8%8C%E8%A1%A8/"/>
    
    <category term="滑动窗口" scheme="https://blog.icjlu.eu.org/tags/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/"/>
    
    <category term="双指针" scheme="https://blog.icjlu.eu.org/tags/%E5%8F%8C%E6%8C%87%E9%92%88/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode每日一题2025-04-23</title>
    <link href="https://blog.icjlu.eu.org/post/count-largest-group.html"/>
    <id>https://blog.icjlu.eu.org/post/count-largest-group.html</id>
    <published>2025-04-23T01:48:57.000Z</published>
    <updated>2025-04-23T04:39:01.819Z</updated>
    
    <content type="html"><![CDATA[<h1><a href="https://leetcode.cn/problems/count-largest-group/">1399. 统计最大组的数目</a> E</h1><p>给你一个整数 <code>n</code> 。请你先求出从 <code>1</code> 到 <code>n</code> 的每个整数 10 进制表示下的数位和（每一位上的数字相加），然后把数位和相等的数字放到同一个组中。</p><p>请你统计每个组中的数字数目，并返回数字数目并列最多的组有多少个。</p><p><strong>示例 1：</strong></p><blockquote><p>输入：n = 13<br>输出：4<br>解释：总共有 9 个组，将 1 到 13 按数位求和后这些组分别是：<br>[1,10]，[2,11]，[3,12]，[4,13]，[5]，[6]，[7]，[8]，[9]。总共有 4 个组拥有的数字并列最多。</p></blockquote><p><strong>示例 2：</strong></p><blockquote><p>输入：n = 2<br>输出：2<br>解释：总共有 2 个大小为 1 的组 [1]，[2]。</p></blockquote><p><strong>示例 3：</strong></p><blockquote><p>输入：n = 15<br>输出：6</p></blockquote><p><strong>示例 4：</strong></p><blockquote><p>输入：n = 24<br>输出：5</p></blockquote><p><strong>提示：</strong></p><ul><li>1 <code>&lt;= n &lt;=</code> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>10</mn><mn>4</mn></msup></mrow><annotation encoding="application/x-tex">10^4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span></span></span></span></li></ul><h2 id="问题分析">问题分析</h2><p>给定一个整数 <code>n</code>，计算从1到<code>n</code>的每个数字的十进制位数和，并将具有相同位数和的数字分组。统计各组大小并找出最大值出现的次数。</p><h2 id="算法思路">算法思路</h2><ol><li><strong>计算每位数字的和</strong>：遍历每个数字 <code>i</code>，将各位相加得到其和。</li><li><strong>统计每种和的频率</strong>：使用字典记录每个位数和对应有多少个数字。</li><li>找出最大组大小及对应的组数量：<ul><li>找出所有组中的最大组大小。</li><li>统计有多少个不同的位数和的组达到该最大值。</li></ul></li></ol><h2 id="时间复杂度">时间复杂度</h2><ul><li><strong>计算位数和</strong>：对于每个数字 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span>，分解其各位需要 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>log</mi><mo>⁡</mo><mi>i</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(\log i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span></span></span></span> 的时间（由于每次除以10）。总时间为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo>×</mo><mi>log</mi><mo>⁡</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n \times \log n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>。</li><li><strong>统计与查找最大值</strong>：遍历所有键值对的时间为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span></span></span></span>，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 是不同位数和的组的数量。在最坏情况下 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 约为 <code>37</code>（例如数字 <code>9999</code> 的各位和是 <code>9+9+9+9 = 36</code>），因此这部分可以视为常量时间。</li></ul><p>总的时间复杂度：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>log</mi><mo>⁡</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n \log n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，对于 <code>n ≤</code> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>10</mn><mn>4</mn></msup></mrow><annotation encoding="application/x-tex">10^4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span></span></span></span> 是可接受的。</p><ul><li>使用字典存储不同位数和对应的计数值，空间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span></span></span></span>。最坏情况下 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>≈</mo><mi>O</mi><mo stretchy="false">(</mo><mi>log</mi><mo>⁡</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">k \approx O(\log n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>（例如所有数字位数和都唯一），因此是<strong>线性空间</strong>。</li></ul><h2 id="代码分解">代码分解</h2><ol><li>初始化字典<code>groups</code></li><li>从1遍历到n，计算 i 的数位和，在 <code>groups</code> 中将对应键的计数加 1</li><li>计算出最大频次 <code>max_size</code></li><li>遍历 <code>groups</code>，统计有多少个键的值等于 <code>max_size</code> 并返回</li></ol><h2 id="代码实现">代码实现</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> defaultdict</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">countLargestGroup</span>(<span class="params">self, n: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        <span class="comment"># 使用字典统计每个数位和出现的次数</span></span><br><span class="line">        groups = defaultdict(<span class="built_in">int</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, n + <span class="number">1</span>):</span><br><span class="line">            <span class="comment"># 计算当前数字i的十进制各位之和</span></span><br><span class="line">            digit_sum = <span class="built_in">sum</span>(<span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">str</span>(i)))</span><br><span class="line">            groups[digit_sum] += <span class="number">1</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> groups:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 找出最大的组大小</span></span><br><span class="line">        max_size = <span class="built_in">max</span>(groups.values())</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 统计有多少个组达到了这个最大值</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">sum</span>(<span class="number">1</span> <span class="keyword">for</span> size <span class="keyword">in</span> groups.values() <span class="keyword">if</span> size == max_size)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;a href=&quot;https://leetcode.cn/problems/count-largest-group/&quot;&gt;1399. 统计最大组的数目&lt;/a&gt; E&lt;/h1&gt;
&lt;p&gt;给你一个整数 &lt;code&gt;n&lt;/code&gt; 。请你先求出从 &lt;code&gt;1&lt;/code&gt; 到 </summary>
      
    
    
    
    <category term="算法" scheme="https://blog.icjlu.eu.org/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="Algorithm" scheme="https://blog.icjlu.eu.org/tags/Algorithm/"/>
    
    <category term="枚举与剪枝" scheme="https://blog.icjlu.eu.org/tags/%E6%9E%9A%E4%B8%BE%E4%B8%8E%E5%89%AA%E6%9E%9D/"/>
    
    <category term="暴力搜索" scheme="https://blog.icjlu.eu.org/tags/%E6%9A%B4%E5%8A%9B%E6%90%9C%E7%B4%A2/"/>
    
    <category term="数位处理" scheme="https://blog.icjlu.eu.org/tags/%E6%95%B0%E4%BD%8D%E5%A4%84%E7%90%86/"/>
    
    <category term="简单" scheme="https://blog.icjlu.eu.org/tags/%E7%AE%80%E5%8D%95/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode每日一题2025-04-22</title>
    <link href="https://blog.icjlu.eu.org/post/count-the-number-of-ideal-arrays.html"/>
    <id>https://blog.icjlu.eu.org/post/count-the-number-of-ideal-arrays.html</id>
    <published>2025-04-22T00:47:23.000Z</published>
    <updated>2025-04-22T03:22:05.523Z</updated>
    
    <content type="html"><![CDATA[<h1><a href="https://leetcode.cn/problems/count-the-number-of-ideal-arrays/">2338. 统计理想数组的数目</a> H</h1><p>给你两个整数 <code>n</code> 和 <code>maxValue</code> ，用于描述一个 <strong>理想数组</strong> 。</p><p>对于下标从 <strong>0</strong> 开始、长度为 <code>n</code> 的整数数组 <code>arr</code> ，如果满足以下条件，则认为该数组是一个 <strong>理想数组</strong> ：</p><ul><li>每个 <code>arr[i]</code> 都是从 <code>1</code> 到 <code>maxValue</code> 范围内的一个值，其中 <code>0 &lt;= i &lt; n</code> 。</li><li>每个 <code>arr[i]</code> 都可以被 <code>arr[i - 1]</code> 整除，其中 <code>0 &lt; i &lt; n</code> 。</li></ul><p>返回长度为 <code>n</code> 的 <strong>不同</strong> 理想数组的数目。由于答案可能很大，返回对 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>10</mn><mn>9</mn></msup><mo>+</mo><mn>7</mn></mrow><annotation encoding="application/x-tex">10^9 + 7</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">9</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">7</span></span></span></span> 取余的结果。</p><p><strong>示例 1：</strong></p><blockquote><p><strong>输入</strong>：n = 2, maxValue = 5<br><strong>输出</strong>：10<br><strong>解释</strong>：存在以下理想数组：</p><ul><li>以 1 开头的数组（5 个）：[1,1]、[1,2]、[1,3]、[1,4]、[1,5]</li><li>以 2 开头的数组（2 个）：[2,2]、[2,4]</li><li>以 3 开头的数组（1 个）：[3,3]</li><li>以 4 开头的数组（1 个）：[4,4]</li><li>以 5 开头的数组（1 个）：[5,5]<br>共计 5 + 2 + 1 + 1 + 1 = 10 个不同理想数组。</li></ul></blockquote><p><strong>示例 2：</strong></p><blockquote><p><strong>输入</strong>：n = 5, maxValue = 3<br><strong>输出</strong>：11<br><strong>解释</strong>：存在以下理想数组：</p><ul><li>以 1 开头的数组（9 个）：<ul><li>不含其他不同值（1 个）：[1,1,1,1,1]</li><li>含一个不同值 2（4 个）：[1,1,1,1,2], [1,1,1,2,2], [1,1,2,2,2], [1,2,2,2,2]</li><li>含一个不同值 3（4 个）：[1,1,1,1,3], [1,1,1,3,3], [1,1,3,3,3], [1,3,3,3,3]</li></ul></li><li>以 2 开头的数组（1 个）：[2,2,2,2,2]</li><li>以 3 开头的数组（1 个）：[3,3,3,3,3]<br>共计 9 + 1 + 1 = 11 个不同理想数组。</li></ul></blockquote><p><strong>提示：</strong></p><ul><li><p>2 <code>&lt;= n &lt;=</code> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>10</mn><mn>4</mn></msup></mrow><annotation encoding="application/x-tex">10^4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span></span></span></span></p></li><li><p>1 <code>&lt;= maxValue &lt;=</code> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>10</mn><mn>4</mn></msup></mrow><annotation encoding="application/x-tex">10^4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span></span></span></span></p></li></ul><h2 id="问题分析">问题分析</h2><p><strong>注意到</strong>：</p><ul><li><p>任意理想数组 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">{a_i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span> 满足 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>≤</mo><msub><mi>a</mi><mn>0</mn></msub><mo>∣</mo><msub><mi>a</mi><mn>1</mn></msub><mo>∣</mo><mo>⋯</mo><mo>∣</mo><msub><mi>a</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>=</mo><mi>y</mi><mo separator="true">,</mo><mtext> </mtext><msub><mi>a</mi><mi>i</mi></msub><mo>≤</mo><mtext>maxValue</mtext></mrow><annotation encoding="application/x-tex">1\le a_0\mid a_1\mid\cdots\mid a_{n-1}= y,\text{ }a_i\le \text{maxValue}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6389em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8304em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord text"><span class="mord"> </span></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord text"><span class="mord">maxValue</span></span></span></span></span> 。</p></li><li><p>对于固定的末尾值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>≤</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">a</mi><mi mathvariant="normal">x</mi><mi mathvariant="normal">V</mi><mi mathvariant="normal">a</mi><mi mathvariant="normal">l</mi><mi mathvariant="normal">u</mi><mi mathvariant="normal">e</mi></mrow></mrow><annotation encoding="application/x-tex">y\le\mathrm{maxValue}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8304em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord"><span class="mord mathrm">maxValue</span></span></span></span></span>，从 1 变到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span> 的“除数链”可看作在每个质因数方向上“累积指数”的过程（把它的每个质因子 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span></span></span></span>、指数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>e</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">e_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 看成要在前 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 个“空位”中放 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>e</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">e_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 个“乘 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span></span></span></span>”操作）。</p></li><li><p>若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><mo>∏</mo><msubsup><mi>p</mi><mi>i</mi><msub><mi>e</mi><mi>i</mi></msub></msubsup></mrow><annotation encoding="application/x-tex">y=\prod p_i^{e_i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0269em;vertical-align:-0.2769em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">∏</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7463em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1449em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span></span></span></span>，则在长度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 的链中，需要分配这 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>e</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">e_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 次“乘以 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">p_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>”操作到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 个相邻位置上，属于 <strong>「Stars and Bars」</strong> 模型（ <strong>“星星与条纹”</strong> ），每种质因子独立，所以总方案数是：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="normal">#</mi><mo stretchy="false">{</mo><mtext>链数</mtext><mo stretchy="false">}</mo><mo>=</mo><munder><mo>∏</mo><mi>i</mi></munder><mrow><mo fence="true">(</mo><mfrac linethickness="0px"><mrow><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><msub><mi>e</mi><mi>i</mi></msub></mrow><msub><mi>e</mi><mi>i</mi></msub></mfrac><mo fence="true">)</mo></mrow><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">\#\{\text{链数}\}=\prod_i\binom{(n-1)+e_i}{e_i}.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">#</span><span class="mopen">{</span><span class="mord text"><span class="mord cjk_fallback">链数</span></span><span class="mclose">}</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.7277em;vertical-align:-1.2777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.836em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="mord">.</span></span></span></span></span></p></li><li><p>最后对所有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span> 累加，并对 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>10</mn><mn>9</mn></msup><mo>+</mo><mn>7</mn></mrow><annotation encoding="application/x-tex">10^9+7</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">9</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">7</span></span></span></span> 取模，因此，答案就是</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><munderover><mo>∑</mo><mrow><mi>y</mi><mo>=</mo><mn>1</mn></mrow><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">a</mi><mi mathvariant="normal">x</mi><mi mathvariant="normal">V</mi><mi mathvariant="normal">a</mi><mi mathvariant="normal">l</mi><mi mathvariant="normal">u</mi><mi mathvariant="normal">e</mi></mrow></munderover><mrow><mo fence="true">[</mo><munder><mo>∏</mo><mrow><msup><mi>p</mi><mi>e</mi></msup><mi mathvariant="normal">∥</mi><mi>y</mi></mrow></munder><mrow><mo fence="true">(</mo><mfrac linethickness="0px"><mrow><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><mi>e</mi></mrow><mi>e</mi></mfrac><mo fence="true">)</mo></mrow><mo fence="true">]</mo></mrow><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mo stretchy="false">(</mo><msup><mn>10</mn><mn>9</mn></msup><mo>+</mo><mn>7</mn><mo stretchy="false">)</mo><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">\sum_{y=1}^\mathrm{maxValue}\left[\prod_{p^e\|y}\binom{(n-1)+e}{e}\right]\mathrm{mod}(10^9+7).</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.6em;vertical-align:-1.55em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8361em;"><span style="top:-1.8829em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathrm mtight">maxValue</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4032em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.05em;"><span class="pstrut" style="height:5.6em;"></span><span style="width:0.667em;height:3.600em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.667em" height="3.600em" viewBox="0 0 667 3600"><path d="M403 1759 V84 H666 V0 H319 V1759 v0 v1759 h347 v-84H403z M403 1759 V0 H319 V1759 v0 v1759 h84z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.809em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5935em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">e</span></span></span></span></span></span></span></span><span class="mord mtight">∥</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.516em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">e</span></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.05em;"><span class="pstrut" style="height:5.6em;"></span><span style="width:0.667em;height:3.600em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.667em" height="3.600em" viewBox="0 0 667 3600"><path d="M347 1759 V0 H0 V84 H263 V1759 v0 v1759 H0 v84 H347zM347 1759 V0 H263 V1759 v0 v1759 h84z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathrm">mod</span></span><span class="mopen">(</span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">9</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">7</span><span class="mclose">)</span><span class="mord">.</span></span></span></span></span></p></li></ul><p><code>预处理</code> → <code>枚举 y=1…maxValue</code> → <code>分解 y 的质因子</code> → <code>用“comb”累乘</code> → <code>累加取模</code> → <code>返回</code></p><h2 id="算法思路">算法思路</h2><ol><li><strong>预处理阶乘与逆元阶乘</strong>，支持快速计算组合数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="true">(</mo><mfrac linethickness="0px"><mi>a</mi><mi>b</mi></mfrac><mo fence="true">)</mo></mrow><annotation encoding="application/x-tex">\binom{a}{b}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2em;vertical-align:-0.35em;"></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7454em;"><span style="top:-2.355em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span style="top:-3.144em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span></span>。</li><li>用 <strong>线性／筛法</strong>（<code>SPF</code> 最小质因子）对 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>1</mn><mo>…</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">a</mi><mi mathvariant="normal">x</mi><mi mathvariant="normal">V</mi><mi mathvariant="normal">a</mi><mi mathvariant="normal">l</mi><mi mathvariant="normal">u</mi><mi mathvariant="normal">e</mi></mrow><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[1\ldots\mathrm{maxValue}]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">1</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathrm">maxValue</span></span><span class="mclose">]</span></span></span></span> 做一次质因数分解，整体复杂度约 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">a</mi><mi mathvariant="normal">x</mi><mi mathvariant="normal">V</mi><mi mathvariant="normal">a</mi><mi mathvariant="normal">l</mi><mi mathvariant="normal">u</mi><mi mathvariant="normal">e</mi></mrow><mi>log</mi><mo>⁡</mo><mi>log</mi><mo>⁡</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">a</mi><mi mathvariant="normal">x</mi><mi mathvariant="normal">V</mi><mi mathvariant="normal">a</mi><mi mathvariant="normal">l</mi><mi mathvariant="normal">u</mi><mi mathvariant="normal">e</mi></mrow><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(\mathrm{maxValue}\log\log \mathrm{maxValue})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathrm">maxValue</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathrm">maxValue</span></span><span class="mclose">)</span></span></span></span>。</li><li>对每个 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span> 枚举其质因数指数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>e</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">e_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，累乘组合数即可。</li></ol><h2 id="时间复杂度">时间复杂度</h2><ul><li>阶乘 &amp; 逆元：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mi>log</mi><mo>⁡</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">a</mi><mi mathvariant="normal">x</mi><mi mathvariant="normal">V</mi><mi mathvariant="normal">a</mi><mi mathvariant="normal">l</mi><mi mathvariant="normal">u</mi><mi mathvariant="normal">e</mi></mrow><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n + \log \mathrm{maxValue})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathrm">maxValue</span></span><span class="mclose">)</span></span></span></span></li><li><code>SPF</code> 筛：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>max</mi><mo>⁡</mo><mrow><mi mathvariant="normal">V</mi><mi mathvariant="normal">a</mi><mi mathvariant="normal">l</mi><mi mathvariant="normal">u</mi><mi mathvariant="normal">e</mi></mrow><mi>log</mi><mo>⁡</mo><mi>log</mi><mo>⁡</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">a</mi><mi mathvariant="normal">x</mi><mi mathvariant="normal">V</mi><mi mathvariant="normal">a</mi><mi mathvariant="normal">l</mi><mi mathvariant="normal">u</mi><mi mathvariant="normal">e</mi></mrow><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(\max\mathrm{Value}\log\log\mathrm{maxValue})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mop">max</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathrm">Value</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathrm">maxValue</span></span><span class="mclose">)</span></span></span></span></li><li>主循环：每个 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span> 仅分解一次，总体 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>max</mi><mo>⁡</mo><mrow><mi mathvariant="normal">V</mi><mi mathvariant="normal">a</mi><mi mathvariant="normal">l</mi><mi mathvariant="normal">u</mi><mi mathvariant="normal">e</mi></mrow><mi>log</mi><mo>⁡</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">a</mi><mi mathvariant="normal">x</mi><mi mathvariant="normal">V</mi><mi mathvariant="normal">a</mi><mi mathvariant="normal">l</mi><mi mathvariant="normal">u</mi><mi mathvariant="normal">e</mi></mrow><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(\max\mathrm{Value}\log\mathrm{maxValue})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mop">max</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathrm">Value</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathrm">maxValue</span></span><span class="mclose">)</span></span></span></span></li><li><strong>总体</strong>：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mi>max</mi><mo>⁡</mo><mrow><mi mathvariant="normal">V</mi><mi mathvariant="normal">a</mi><mi mathvariant="normal">l</mi><mi mathvariant="normal">u</mi><mi mathvariant="normal">e</mi></mrow><mi>log</mi><mo>⁡</mo><mi>log</mi><mo>⁡</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">a</mi><mi mathvariant="normal">x</mi><mi mathvariant="normal">V</mi><mi mathvariant="normal">a</mi><mi mathvariant="normal">l</mi><mi mathvariant="normal">u</mi><mi mathvariant="normal">e</mi></mrow><mo>+</mo><mi>max</mi><mo>⁡</mo><mrow><mi mathvariant="normal">V</mi><mi mathvariant="normal">a</mi><mi mathvariant="normal">l</mi><mi mathvariant="normal">u</mi><mi mathvariant="normal">e</mi></mrow><mi>log</mi><mo>⁡</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">a</mi><mi mathvariant="normal">x</mi><mi mathvariant="normal">V</mi><mi mathvariant="normal">a</mi><mi mathvariant="normal">l</mi><mi mathvariant="normal">u</mi><mi mathvariant="normal">e</mi></mrow><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n+\max\mathrm{Value}\log\log\mathrm{maxValue}+\max\mathrm{Value}\log\mathrm{maxValue})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mop">max</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathrm">Value</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathrm">maxValue</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">max</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathrm">Value</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathrm">maxValue</span></span><span class="mclose">)</span></span></span></span> ，低于DP</li></ul><p>空间复杂度：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mi>max</mi><mo>⁡</mo><mrow><mi mathvariant="normal">V</mi><mi mathvariant="normal">a</mi><mi mathvariant="normal">l</mi><mi mathvariant="normal">u</mi><mi mathvariant="normal">e</mi></mrow><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n+\max\mathrm{Value})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">max</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathrm">Value</span></span><span class="mclose">)</span></span></span></span> ，主要用于阶乘数组与 SPF 数组。</p><h2 id="代码实现">代码实现</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">idealArrays</span>(<span class="params">self, n: <span class="built_in">int</span>, maxValue: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        MOD = <span class="number">10</span>**<span class="number">9</span> + <span class="number">7</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># —— 1. 预处理：阶乘 &amp; 逆阶乘 —— </span></span><br><span class="line">        <span class="comment"># 最大可能的指数增量 ≈ log2(maxValue)</span></span><br><span class="line">        maxE = <span class="built_in">int</span>(math.log2(maxValue)) + <span class="number">1</span></span><br><span class="line">        up = n - <span class="number">1</span> + maxE</span><br><span class="line">        fact = [<span class="number">1</span>] * (up + <span class="number">1</span>)</span><br><span class="line">        invfact = [<span class="number">1</span>] * (up + <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, up + <span class="number">1</span>):</span><br><span class="line">            fact[i] = fact[i-<span class="number">1</span>] * i % MOD</span><br><span class="line">        invfact[up] = <span class="built_in">pow</span>(fact[up], MOD-<span class="number">2</span>, MOD)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(up, <span class="number">0</span>, -<span class="number">1</span>):</span><br><span class="line">            invfact[i-<span class="number">1</span>] = invfact[i] * i % MOD</span><br><span class="line"></span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">comb</span>(<span class="params">a: <span class="built_in">int</span>, b: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">            <span class="keyword">if</span> b &lt; <span class="number">0</span> <span class="keyword">or</span> b &gt; a: </span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">            <span class="keyword">return</span> fact[a] * invfact[b] % MOD * invfact[a-b] % MOD</span><br><span class="line"></span><br><span class="line">        <span class="comment"># —— 2. SPF 最小质因子筛 —— </span></span><br><span class="line">        spf = <span class="built_in">list</span>(<span class="built_in">range</span>(maxValue + <span class="number">1</span>))</span><br><span class="line">        <span class="keyword">for</span> p <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, <span class="built_in">int</span>(maxValue**<span class="number">0.5</span>) + <span class="number">1</span>):</span><br><span class="line">            <span class="keyword">if</span> spf[p] == p:</span><br><span class="line">                <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(p*p, maxValue + <span class="number">1</span>, p):</span><br><span class="line">                    <span class="keyword">if</span> spf[j] == j:</span><br><span class="line">                        spf[j] = p</span><br><span class="line"></span><br><span class="line">        <span class="comment"># —— 3. 主循环：对每个 y 分解、累乘组合数 —— </span></span><br><span class="line">        ans = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, maxValue + <span class="number">1</span>):</span><br><span class="line">            ways = <span class="number">1</span></span><br><span class="line">            v = y</span><br><span class="line">            <span class="keyword">while</span> v &gt; <span class="number">1</span>:</span><br><span class="line">                p = spf[v]</span><br><span class="line">                e = <span class="number">0</span></span><br><span class="line">                <span class="keyword">while</span> v % p == <span class="number">0</span>:</span><br><span class="line">                    v //= p</span><br><span class="line">                    e += <span class="number">1</span></span><br><span class="line">                <span class="comment"># 在 n-1 个间隔里放置 e 次“乘 p”操作</span></span><br><span class="line">                ways = ways * comb((n-<span class="number">1</span>) + e, e) % MOD</span><br><span class="line">            ans = (ans + ways) % MOD</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>另看到题解：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">idealArrays</span>(<span class="params">self, n: <span class="built_in">int</span>, maxValue: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        MOD = <span class="number">10</span>**<span class="number">9</span> + <span class="number">7</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># —— 1. 预处理：组合数 Pascal 三角 —— </span></span><br><span class="line">        maxE = <span class="built_in">int</span>(math.log2(maxValue)) + <span class="number">1</span></span><br><span class="line">        up = n - <span class="number">1</span> + maxE</span><br><span class="line">        C = [[<span class="number">0</span>] * (maxE + <span class="number">1</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(up + <span class="number">1</span>)]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(up + <span class="number">1</span>):</span><br><span class="line">            C[i][<span class="number">0</span>] = <span class="number">1</span></span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="built_in">min</span>(i, maxE) + <span class="number">1</span>):</span><br><span class="line">                C[i][j] = (C[i-<span class="number">1</span>][j] + C[i-<span class="number">1</span>][j-<span class="number">1</span>]) % MOD</span><br><span class="line"></span><br><span class="line">        <span class="comment"># —— 2. 预处理：EXP 质因子指数列表 —— </span></span><br><span class="line">        EXP = [[] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(maxValue + <span class="number">1</span>)]</span><br><span class="line">        <span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, maxValue + <span class="number">1</span>):</span><br><span class="line">            v = y</span><br><span class="line">            p = <span class="number">2</span></span><br><span class="line">            <span class="keyword">while</span> p * p &lt;= v:</span><br><span class="line">                e = <span class="number">0</span></span><br><span class="line">                <span class="keyword">while</span> v % p == <span class="number">0</span>:</span><br><span class="line">                    v //= p</span><br><span class="line">                    e += <span class="number">1</span></span><br><span class="line">                <span class="keyword">if</span> e:</span><br><span class="line">                    EXP[y].append(e)</span><br><span class="line">                p += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> v &gt; <span class="number">1</span>:</span><br><span class="line">                EXP[y].append(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># —— 3. 主循环：对每个 y 累乘组合数 —— </span></span><br><span class="line">        ans = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, maxValue + <span class="number">1</span>):</span><br><span class="line">            ways = <span class="number">1</span></span><br><span class="line">            <span class="keyword">for</span> e <span class="keyword">in</span> EXP[y]:</span><br><span class="line">                ways = ways * C[n - <span class="number">1</span> + e][e] % MOD</span><br><span class="line">            ans = (ans + ways) % MOD</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li><strong>DP 转组合</strong>：把「每一步都要保持可整除」的递推，转化为「质因子指数如何在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 个位置上非负分配」的组合计数；</li><li><strong>枚举</strong>：对每个可能的末尾值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span> 计算它的组合数贡献，再求和。</li></ol><ul><li><p>对于固定的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>，它的每个质因子 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span></span></span></span> 在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>0</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>a</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">a_0,\dots,a_{n-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6389em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span> 中的<strong>指数序列</strong></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>e</mi><mn>0</mn></msub><mo>=</mo><mn>0</mn><mo stretchy="false">(</mo><mtext>不一定为0</mtext><mo stretchy="false">)</mo><mo>≤</mo><msub><mi>e</mi><mn>1</mn></msub><mo>≤</mo><mo>⋯</mo><mo>≤</mo><msub><mi>e</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>=</mo><mi>E</mi><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">e_0=0(\text{不一定为0})\le e_1\le\cdots\le e_{n−1}=E,</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mopen">(</span><span class="mord text"><span class="mord cjk_fallback">不一定为</span><span class="mord">0</span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.786em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6389em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mpunct">,</span></span></span></span></span></p><p>且 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∑</mo></mrow><annotation encoding="application/x-tex">\sum</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span></span></span></span> 个位置上的“增加量”恰好等于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi></mrow><annotation encoding="application/x-tex">E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span></span> （ <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>e</mi><mn>1</mn></msub><mo>+</mo><msub><mi>e</mi><mn>2</mn></msub><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><msub><mi>e</mi><mi>k</mi></msub><mo>=</mo><mi>E</mi></mrow><annotation encoding="application/x-tex">e_1 + e_2 + ... + e_k = E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">...</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span></span> ）（即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span> 中该质因子的总指数）。</p></li><li><p><strong>“星星与条纹”</strong>：前文已解释</p></li><li><p>实现</p><ul><li><strong>预处理每个 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>≤</mo><mtext>maxValue</mtext></mrow><annotation encoding="application/x-tex">x≤\text{maxValue}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord text"><span class="mord">maxValue</span></span></span></span></span> 的质因数指数列表</strong>，<code>EXP[x]</code> 存放 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span> 分解后，每个质因子的指数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><msub><mi>e</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>e</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mtext> </mtext><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[e_1,e_2,\dots]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mclose">]</span></span></span></span>。</li><li><strong>预计算组合数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="true">(</mo><mfrac linethickness="0px"><mi>N</mi><mi>k</mi></mfrac><mo fence="true">)</mo></mrow><annotation encoding="application/x-tex">\binom{N}{k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2723em;vertical-align:-0.35em;"></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9223em;"><span style="top:-2.355em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.144em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span></span></strong>：由于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>≤</mo><msup><mn>10</mn><mn>4</mn></msup></mrow><annotation encoding="application/x-tex">n\le10^4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span></span></span></span>, 指数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">E_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> 也最多 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mrow><mi>log</mi><mo>⁡</mo></mrow><mn>2</mn></msub><mo stretchy="false">(</mo><msup><mn>10</mn><mn>4</mn></msup><mo stretchy="false">)</mo><mo>≈</mo><mn>14</mn></mrow><annotation encoding="application/x-tex">\log_2(10^4)\approx14</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.207em;"><span style="top:-2.4559em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2441em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">14</span></span></span></span>，我们只需算到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mo>=</mo><mi>n</mi><mo>+</mo><mn>14</mn><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">N=n+14-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">14</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>。<br>用帕斯卡三角，这样 <code>C[N][k]</code> 就是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mo fence="true">(</mo><mfrac linethickness="0px"><mi>N</mi><mi>k</mi></mfrac><mo fence="true">)</mo></mrow><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mo stretchy="false">(</mo><msup><mn>10</mn><mn>9</mn></msup><mo>+</mo><mn>7</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\binom{N}{k}\bmod(10^9+7)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2723em;vertical-align:-0.35em;"></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9223em;"><span style="top:-2.355em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.144em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.0556em;"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">mod</span></span></span><span class="mspace" style="margin-right:0.0556em;"></span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">9</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">7</span><span class="mclose">)</span></span></span></span>。</li><li><strong>枚举所有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><mn>1</mn><mo>…</mo><mi>m</mi><mi>a</mi><mi>x</mi><mi>V</mi><mi>a</mi><mi>l</mi><mi>u</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">x=1…maxValue</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span><span class="mord mathnormal">Va</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">u</span><span class="mord mathnormal">e</span></span></span></span></strong>，累加它们作为数组末尾的方案数，注意 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 时 <code>EXP[1]</code> 为空，<code>res=1</code>，对应 “全 1 数组” 这一类。</li></ul></li><li><p>复杂度：</p><ul><li><strong>质因数分解</strong>：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>x</mi><mo>=</mo><mn>1</mn></mrow><mi>M</mi></msubsup><msqrt><mi>x</mi></msqrt><mo>=</mo><mi>O</mi><mo stretchy="false">(</mo><msup><mi>M</mi><mrow><mn>3</mn><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sum_{x=1}^{M}\sqrt{x}=O(M^{3/2})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2809em;vertical-align:-0.2997em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9812em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8003em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord mathnormal">x</span></span></span><span style="top:-2.7603em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.08em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2397em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3/2</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，这里 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo>=</mo><mtext>maxValue</mtext><mo>≤</mo><msup><mn>10</mn><mn>4</mn></msup></mrow><annotation encoding="application/x-tex">M=\text{maxValue}\le10^4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8304em;vertical-align:-0.136em;"></span><span class="mord text"><span class="mord">maxValue</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span></span></span></span> 足够快。</li><li><strong>组合数预处理</strong>：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo fence="true" stretchy="true" minsize="1.2em" maxsize="1.2em">(</mo><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mi>max</mi><mo>⁡</mo><mi>E</mi><mo stretchy="false">)</mo><mo>×</mo><mi>max</mi><mo>⁡</mo><mi>E</mi><mo fence="true" stretchy="true" minsize="1.2em" maxsize="1.2em">)</mo><mo>≈</mo><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo>⋅</mo><mi>log</mi><mo>⁡</mo><mi>M</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O\bigl((n+\max E)\times \max E\bigr)\approx O(n\cdot\log M)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2em;vertical-align:-0.35em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen"><span class="delimsizing size1">(</span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">max</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.2em;vertical-align:-0.35em;"></span><span class="mop">max</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose"><span class="delimsizing size1">)</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">)</span></span></span></span>。</li><li><strong>枚举累加</strong>：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo fence="true" stretchy="true" minsize="1.2em" maxsize="1.2em">(</mo><mi>M</mi><mo>×</mo><mo stretchy="false">(</mo><mtext>平均质因子数</mtext><mo stretchy="false">)</mo><mo fence="true" stretchy="true" minsize="1.2em" maxsize="1.2em">)</mo><mo>≈</mo><mi>O</mi><mo stretchy="false">(</mo><mi>M</mi><mi>log</mi><mo>⁡</mo><mi>M</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O\bigl(M\times (\text{平均质因子数})\bigr)\approx O(M\log M)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2em;vertical-align:-0.35em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen"><span class="delimsizing size1">(</span></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.2em;vertical-align:-0.35em;"></span><span class="mopen">(</span><span class="mord text"><span class="mord cjk_fallback">平均质因子数</span></span><span class="mclose">)</span><span class="mclose"><span class="delimsizing size1">)</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">)</span></span></span></span>。</li></ul></li></ul><table><thead><tr><th>特性</th><th>第一个实现（阶乘 + 逆元 comb + SPF 筛分解）</th><th>第二个实现（Pascal 组合表 + 试除分解）</th></tr></thead><tbody><tr><td><strong>组合数计算</strong></td><td>预计算 <code>fact</code> 和 <code>invfact</code> 数组，用公式 <br/><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mo fence="true">(</mo><mfrac linethickness="0px"><mi>a</mi><mi>b</mi></mfrac><mo fence="true">)</mo></mrow><mo>=</mo><mfrac><mrow><mtext>fact</mtext><mo stretchy="false">[</mo><mi>a</mi><mo stretchy="false">]</mo></mrow><mrow><mtext>fact</mtext><mo stretchy="false">[</mo><mi>b</mi><mo stretchy="false">]</mo><mo>×</mo><mtext>fact</mtext><mo stretchy="false">[</mo><mi>a</mi><mo>−</mo><mi>b</mi><mo stretchy="false">]</mo></mrow></mfrac><mspace></mspace><mspace width="0.6667em"/><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>p</mi></mrow><annotation encoding="application/x-tex">\binom{a}{b} = \frac{\text{fact}[a]}{\text{fact}[b] \times \text{fact}[a - b]} \mod p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2em;vertical-align:-0.35em;"></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7454em;"><span style="top:-2.355em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span style="top:-3.144em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.53em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">fact</span></span><span class="mopen mtight">[</span><span class="mord mathnormal mtight">b</span><span class="mclose mtight">]</span><span class="mbin mtight">×</span><span class="mord text mtight"><span class="mord mtight">fact</span></span><span class="mopen mtight">[</span><span class="mord mathnormal mtight">a</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">b</span><span class="mclose mtight">]</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">fact</span></span><span class="mopen mtight">[</span><span class="mord mathnormal mtight">a</span><span class="mclose mtight">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.6667em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">mod</span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">p</span></span></span></span> 每次 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span> 快速计算</td><td>用帕斯卡三角预计算 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>=</mo><mrow><mo fence="true">(</mo><mfrac linethickness="0px"><mi>i</mi><mi>j</mi></mfrac><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">C[i][j] = \binom{i}{j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.3868em;vertical-align:-0.4811em;"></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9057em;"><span style="top:-2.355em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.144em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4811em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span></span> <br>查询时直接 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span> 取表</td></tr><tr><td><strong>质因子分解</strong></td><td>先用线性/埃氏思路构造 <code>SPF</code>（最小质因子）表 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>p</mi><mi>f</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">spf[i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span></span></span></span> <br>分解时不断 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi><mi mathvariant="normal">/</mi><mi mathvariant="normal">/</mi><mo>=</mo><mi>s</mi><mi>p</mi><mi>f</mi><mo stretchy="false">[</mo><mi>v</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">v //= spf[v]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord">//</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">]</span></span></span></span>，复杂度约 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>log</mi><mo>⁡</mo><mi>v</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(\log{v})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span><span class="mclose">)</span></span></span></span></td><td>每个 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span> 用试除法 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msqrt><mi>x</mi></msqrt></mrow><annotation encoding="application/x-tex">\sqrt{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.2397em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8003em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord mathnormal">x</span></span></span><span style="top:-2.7603em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.08em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2397em;"><span></span></span></span></span></span></span></span></span> 搜索素因子，累计其指数</td></tr><tr><td><strong>预处理时间</strong></td><td>构造 <code>fact</code>, <code>invfact</code>：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mi>max</mi><mo>⁡</mo><mi>E</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n + \max E)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">max</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">)</span></span></span></span>（再加一次快速幂取逆）  构造 <code>SPF</code>：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>M</mi><mi>log</mi><mo>⁡</mo><mi>log</mi><mo>⁡</mo><mi>M</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(M \log \log M)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">)</span></span></span></span></td><td>构造 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span> 表：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo fence="true" stretchy="true" minsize="1.2em" maxsize="1.2em">(</mo><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mi>max</mi><mo>⁡</mo><mi>E</mi><mo stretchy="false">)</mo><mo>×</mo><mi>max</mi><mo>⁡</mo><mi>E</mi><mo fence="true" stretchy="true" minsize="1.2em" maxsize="1.2em">)</mo></mrow><annotation encoding="application/x-tex">O\bigl((n + \max E) \times \max E\bigr)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2em;vertical-align:-0.35em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen"><span class="delimsizing size1">(</span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">max</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.2em;vertical-align:-0.35em;"></span><span class="mop">max</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose"><span class="delimsizing size1">)</span></span></span></span></span>  <br>试除分解：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>x</mi><mo>=</mo><mn>1</mn></mrow><mi>M</mi></msubsup><mi>O</mi><mo stretchy="false">(</mo><msqrt><mi>x</mi></msqrt><mo stretchy="false">)</mo><mo>≈</mo><mi>O</mi><mo stretchy="false">(</mo><msup><mi>M</mi><mrow><mn>3</mn><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sum_{x=1}^M O(\sqrt{x}) \approx O(M^{3/2})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2809em;vertical-align:-0.2997em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9812em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8003em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord mathnormal">x</span></span></span><span style="top:-2.7603em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.08em" viewBox="0 0 400000 1080" preserveAspectRatio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2397em;"><span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3/2</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td></tr><tr><td><strong>空间开销</strong></td><td>两个长度 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>+</mo><mi>max</mi><mo>⁡</mo><mi>E</mi></mrow><annotation encoding="application/x-tex">n + \max E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mop">max</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span></span> 的数组 + 一个长度 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span> 的 <code>SPF</code> 数组</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span> 表大约 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mi>max</mi><mo>⁡</mo><mi>E</mi><mo stretchy="false">)</mo><mo>×</mo><mo stretchy="false">(</mo><mi>max</mi><mo>⁡</mo><mi>E</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(n + \max E) \times (\max E)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">max</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mop">max</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">)</span></span></span></span> 个整数</td></tr><tr><td><strong>适用场景</strong></td><td>当  <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>max</mi><mo>⁡</mo><mrow><mi>V</mi><mi>a</mi><mi>l</mi><mi>u</mi><mi>e</mi></mrow></mrow><annotation encoding="application/x-tex">\max{Value}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mop">max</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">Va</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">u</span><span class="mord mathnormal">e</span></span></span></span></span> 更大（比如 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>10</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span> 、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>10</mn><mn>6</mn></msup></mrow><annotation encoding="application/x-tex">10^6</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span></span></span></span></span></span></span></span>） 时，<code>SPF</code> 分解会更快、更稳，阶乘逆元计算组合数也更节省空间</td><td><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo separator="true">,</mo><mi>max</mi><mo>⁡</mo><mrow><mi>V</mi><mi>a</mi><mi>l</mi><mi>u</mi><mi>e</mi></mrow><mo>≤</mo><msup><mn>10</mn><mn>4</mn></msup></mrow><annotation encoding="application/x-tex">n, \max{Value} \le 10^4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">max</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">Va</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">u</span><span class="mord mathnormal">e</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span></span></span></span> 都较小，预先填表和试除都能在 <code>1–2s</code> 内完成</td></tr><tr><td><strong>代码复杂度</strong></td><td>略微复杂一些，需要处理逆元和 <code>SPF</code> 数组</td><td>直观易懂，组合表和试除都很朴素</td></tr></tbody></table><p><code>Qwen QWQ 32b</code>给出的解，思路大致相同<br>(预处理最小质因数 → 质因数分解存储 → 阶乘与逆元预计算 → DP到组合数学 → 前缀和优化)：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">idealArrays</span>(<span class="params">self, n: <span class="built_in">int</span>, maxValue: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        MOD = <span class="number">10</span>**<span class="number">9</span> + <span class="number">7</span></span><br><span class="line">        t = n - <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> t == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> maxValue % MOD</span><br><span class="line">        </span><br><span class="line">        max_num = maxValue</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 步骤 1：计算筛的 min_prime 数组.</span></span><br><span class="line">        min_prime = [<span class="number">0</span>] * (max_num + <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, max_num + <span class="number">1</span>):</span><br><span class="line">            <span class="keyword">if</span> min_prime[i] == <span class="number">0</span>:</span><br><span class="line">                min_prime[i] = i</span><br><span class="line">                <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i*i, max_num+<span class="number">1</span>, i):</span><br><span class="line">                    <span class="keyword">if</span> min_prime[j] == <span class="number">0</span>:</span><br><span class="line">                        min_prime[j] = i</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 预计算 factor_list[m]：从质数到指数的字典.</span></span><br><span class="line">        factor_list = [&#123;&#125; <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(max_num + <span class="number">1</span>)]</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> m <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, max_num + <span class="number">1</span>):</span><br><span class="line">            num = m</span><br><span class="line">            factors = &#123;&#125;</span><br><span class="line">            <span class="keyword">while</span> num &gt; <span class="number">1</span>:</span><br><span class="line">                p = min_prime[num]</span><br><span class="line">                cnt = <span class="number">0</span></span><br><span class="line">                <span class="keyword">while</span> num % p == <span class="number">0</span>:</span><br><span class="line">                    cnt += <span class="number">1</span></span><br><span class="line">                    num //= p</span><br><span class="line">                factors[p] = cnt</span><br><span class="line">            factor_list[m] = factors.copy() <span class="keyword">if</span> factors <span class="keyword">else</span> &#123;&#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 步骤 2：预计算 fact 和 inv_fact，最多 N=2e5.</span></span><br><span class="line">        N_fact = <span class="number">2</span> * <span class="number">10</span>**<span class="number">5</span></span><br><span class="line">        fact = [<span class="number">1</span>] * (N_fact + <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, N_fact + <span class="number">1</span>):</span><br><span class="line">            fact[i] = (fact[i-<span class="number">1</span>] * i) % MOD</span><br><span class="line">        </span><br><span class="line">        inv_fact = [<span class="number">1</span>]*(N_fact + <span class="number">1</span>)</span><br><span class="line">        inv_fact[N_fact] = <span class="built_in">pow</span>(fact[N_fact], MOD -<span class="number">2</span>, MOD)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(N_fact -<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>):</span><br><span class="line">            inv_fact[i] = (inv_fact[i+<span class="number">1</span>] * (i+<span class="number">1</span>)) % MOD</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 步骤 3：计算 fm 数组.</span></span><br><span class="line">        fm = [<span class="number">0</span>]*(max_num + <span class="number">1</span>)  <span class="comment"># 从 0 到 maxValue 的索引.</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> m <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, max_num + <span class="number">1</span>):</span><br><span class="line">            <span class="keyword">if</span> m == <span class="number">1</span>:</span><br><span class="line">                factors_dict = &#123;&#125;</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                factors_dict = factor_list[m]</span><br><span class="line">            </span><br><span class="line">            product = <span class="number">1</span></span><br><span class="line">            <span class="keyword">for</span> p <span class="keyword">in</span> factors_dict:</span><br><span class="line">                a_i = factors_dict[p]</span><br><span class="line">                n_val = a_i + t - <span class="number">1</span></span><br><span class="line">                k_val = t - <span class="number">1</span></span><br><span class="line">                </span><br><span class="line">                <span class="comment"># 选择 k 和 (n_val -k) 之间的较小值，以减少计算量.</span></span><br><span class="line">                <span class="keyword">if</span> k_val &gt; (n_val - k_val):</span><br><span class="line">                    k_val = n_val - k_val</span><br><span class="line">                </span><br><span class="line">                <span class="comment"># 计算 C(n_val, k_val)</span></span><br><span class="line">                c_n_k = fact[n_val] * inv_fact[k_val] % MOD</span><br><span class="line">                c_n_k = c_n_k * inv_fact[n_val - k_val] % MOD</span><br><span class="line">                product = (product * c_n_k) % MOD</span><br><span class="line">            </span><br><span class="line">            fm[m] = product</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 计算前缀数组.</span></span><br><span class="line">        prefix = [<span class="number">0</span>]*(max_num + <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, max_num+<span class="number">1</span>):</span><br><span class="line">            prefix[i] = (prefix[i-<span class="number">1</span>] + fm[i]) % MOD</span><br><span class="line">        </span><br><span class="line">        res = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> a_val <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, maxValue + <span class="number">1</span>):</span><br><span class="line">            m_max = maxValue // a_val</span><br><span class="line">            res += prefix[m_max]</span><br><span class="line">            res %= MOD</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> res</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;a href=&quot;https://leetcode.cn/problems/count-the-number-of-ideal-arrays/&quot;&gt;2338. 统计理想数组的数目&lt;/a&gt; H&lt;/h1&gt;
&lt;p&gt;给你两个整数 &lt;code&gt;n&lt;/code&gt; 和 &lt;code&gt;max</summary>
      
    
    
    
    <category term="算法" scheme="https://blog.icjlu.eu.org/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="Algorithm" scheme="https://blog.icjlu.eu.org/tags/Algorithm/"/>
    
    <category term="枚举与剪枝" scheme="https://blog.icjlu.eu.org/tags/%E6%9E%9A%E4%B8%BE%E4%B8%8E%E5%89%AA%E6%9E%9D/"/>
    
    <category term="困难" scheme="https://blog.icjlu.eu.org/tags/%E5%9B%B0%E9%9A%BE/"/>
    
    <category term="组合数学" scheme="https://blog.icjlu.eu.org/tags/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/"/>
    
    <category term="快速幂" scheme="https://blog.icjlu.eu.org/tags/%E5%BF%AB%E9%80%9F%E5%B9%82/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode每日一题2025-04-21</title>
    <link href="https://blog.icjlu.eu.org/post/count-the-hidden-sequences.html"/>
    <id>https://blog.icjlu.eu.org/post/count-the-hidden-sequences.html</id>
    <published>2025-04-21T04:19:13.000Z</published>
    <updated>2025-04-21T05:41:20.729Z</updated>
    
    <content type="html"><![CDATA[<h1><a href="https://leetcode.cn/problems/count-the-hidden-sequences/">2145. 统计隐藏数组数目</a> M</h1><p>给你一个下标从 <strong>0</strong> 开始且长度为 <code>n</code> 的整数数组 <code>differences</code> ，它表示一个长度为 <code>n + 1</code> 的 <strong>隐藏</strong> 数组 <strong>相邻</strong> 元素之间的 <strong>差值</strong> 。更正式的表述为：我们将隐藏数组记作 <code>hidden</code> ，那么 <code>differences[i] = hidden[i + 1] - hidden[i]</code> 。</p><p>同时给你两个整数 <code>lower</code> 和 <code>upper</code> ，它们表示隐藏数组中所有数字的值都在 <strong>闭</strong> 区间 <code>[lower, upper]</code> 之间。</p><ul><li>比方说，<code>differences = [1, -3, 4]</code> ，<code>lower = 1</code> ，<code>upper = 6</code> ，那么隐藏数组是一个长度为<code>4</code> 且所有值都在 <code>1</code> 和 <code>6</code> （包含两者）之间的数组。<ul><li><code>[3, 4, 1, 5]</code> 和 <code>[4, 5, 2, 6]</code> 都是符合要求的隐藏数组。</li><li><code>[5, 6, 3, 7]</code> 不符合要求，因为它包含大于 <code>6</code> 的元素。</li><li><code>[1, 2, 3, 4]</code> 不符合要求，因为相邻元素的差值不符合给定数据。</li></ul></li></ul><p>请你返回 <strong>符合</strong> 要求的隐藏数组的数目。如果没有符合要求的隐藏数组，请返回 <code>0</code> 。</p><p><strong>示例 1：</strong></p><blockquote><p><strong>输入</strong>：differences = [1,-3,4], lower = 1, upper = 6<br><strong>输出</strong>：2<br><strong>解释</strong>：符合要求的隐藏数组为：</p><ul><li>[3, 4, 1, 5]</li><li>[4, 5, 2, 6]</li></ul><p>所以返回 2 。</p></blockquote><p><strong>示例 2：</strong></p><blockquote><p><strong>输入</strong>：differences = [3,-4,5,1,-2], lower = -4, upper = 5<br><strong>输出</strong>：4<br><strong>解释</strong>：符合要求的隐藏数组为：</p><ul><li>[-3, 0, -4, 1, 2, 0]</li><li>[-2, 1, -3, 2, 3, 1]</li><li>[-1, 2, -2, 3, 4, 2]</li><li>[0, 3, -1, 4, 5, 3]</li></ul><p>所以返回 4 。</p></blockquote><p><strong>示例 3：</strong></p><blockquote><p><strong>输入</strong>：differences = [4,-7,2], lower = 3, upper = 6<br><strong>输出</strong>：0<br><strong>解释</strong>：没有符合要求的隐藏数组，所以返回 0 。</p></blockquote><p><strong>提示：</strong></p><ul><li><code>n == differences.length</code></li><li>1 <code>&lt;= n &lt;=</code> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>10</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><msup><mn>10</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">-10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span> <code>&lt;= differences[i] &lt;=</code> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>10</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><msup><mn>10</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">-10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span> <code>&lt;= lower &lt;= upper &lt;=</code> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>10</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span></li></ul><h2 id="问题分析">问题分析</h2><ol><li><p><strong>前缀和（Prefix Sums）</strong></p><p>定义</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>P</mi><mn>0</mn></msub><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mspace width="1em"/><msub><mi>P</mi><mi>i</mi></msub><mo>=</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></munderover><mtext>differences</mtext><mo stretchy="false">[</mo><mi>k</mi><mo stretchy="false">]</mo><mspace width="1em"/><mo stretchy="false">(</mo><mn>1</mn><mo>≤</mo><mi>i</mi><mo>≤</mo><mi>n</mi><mo stretchy="false">)</mo><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">P_0=0,\quad P_i=\sum_{k=0}^{i-1}\text{differences}[k]\quad(1\leq i\leq n).</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.1138em;vertical-align:-1.3021em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8117em;"><span style="top:-1.8479em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3021em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord text"><span class="mord">differences</span></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">]</span><span class="mspace" style="margin-right:1em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7955em;vertical-align:-0.136em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mord">.</span></span></span></span></span></p><p>则隐藏数组第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 个元素有</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>hidden</mtext><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo>=</mo><mtext>hidden</mtext><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo>+</mo><msub><mi>P</mi><mi>i</mi></msub><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">\text{hidden}[i]=\text{hidden}[0]+P_i.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">hidden</span></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">hidden</span></span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span></span></span></span></span></p></li><li><p><strong>区间约束转化</strong></p><p>要保证所有元素都在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mtext>lower</mtext><mo separator="true">,</mo><mtext>  </mtext><mtext>upper</mtext><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[\text{lower},\;\text{upper}]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord text"><span class="mord">lower</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord text"><span class="mord">upper</span></span><span class="mclose">]</span></span></span></span> 之间，即对所有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>≤</mo><mi>i</mi><mo>≤</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">0\le i\le n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7955em;vertical-align:-0.136em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 都有</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>lower</mtext><mo>≤</mo><mtext>hidden</mtext><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo>+</mo><msub><mi>P</mi><mi>i</mi></msub><mo>≤</mo><mtext>upper</mtext><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">\text{lower}\le \text{hidden}[0]+P_i \le \text{upper}.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8304em;vertical-align:-0.136em;"></span><span class="mord text"><span class="mord">lower</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">hidden</span></span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord text"><span class="mord">upper</span></span><span class="mord">.</span></span></span></span></span></p><p>等价于</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><munder><mrow><mi>max</mi><mo>⁡</mo></mrow><mi>i</mi></munder><mo fence="true" stretchy="true" minsize="1.2em" maxsize="1.2em">(</mo><mrow><mi mathvariant="normal">h</mi><mi mathvariant="normal">i</mi><mi mathvariant="normal">d</mi><mi mathvariant="normal">d</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">n</mi></mrow><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo>+</mo><msub><mi>P</mi><mi>i</mi></msub><mo fence="true" stretchy="true" minsize="1.2em" maxsize="1.2em">)</mo><mo>≤</mo><mrow><mi mathvariant="normal">u</mi><mi mathvariant="normal">p</mi><mi mathvariant="normal">p</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">r</mi></mrow><mspace width="1em"/><mo>⟹</mo><mspace width="1em"/><mrow><mi mathvariant="normal">h</mi><mi mathvariant="normal">i</mi><mi mathvariant="normal">d</mi><mi mathvariant="normal">d</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">n</mi></mrow><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo>≤</mo><mrow><mi mathvariant="normal">u</mi><mi mathvariant="normal">p</mi><mi mathvariant="normal">p</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">r</mi></mrow><mo>−</mo><munder><mrow><mi>max</mi><mo>⁡</mo></mrow><mi>i</mi></munder><msub><mi>P</mi><mi>i</mi></msub><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">\max_{i}\bigl(\mathrm{hidden}[0] + P_{i}\bigr) \leq \mathrm{upper} \quad\Longrightarrow\quad \mathrm{hidden}[0] \leq \mathrm{upper} - \max_{i} P_{i},</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.5777em;vertical-align:-0.7277em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.4306em;"><span style="top:-2.3723em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7277em;"><span></span></span></span></span></span><span class="mopen"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathrm">hidden</span></span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.2em;vertical-align:-0.35em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing size1">)</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7194em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathrm">upper</span></span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⟹</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathrm">hidden</span></span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathrm">upper</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.411em;vertical-align:-0.7277em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.4306em;"><span style="top:-2.3723em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7277em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><munder><mrow><mi>min</mi><mo>⁡</mo></mrow><mi>i</mi></munder><mo fence="true" stretchy="true" minsize="1.2em" maxsize="1.2em">(</mo><mrow><mi mathvariant="normal">h</mi><mi mathvariant="normal">i</mi><mi mathvariant="normal">d</mi><mi mathvariant="normal">d</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">n</mi></mrow><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo>+</mo><msub><mi>P</mi><mi>i</mi></msub><mo fence="true" stretchy="true" minsize="1.2em" maxsize="1.2em">)</mo><mo>≥</mo><mrow><mi mathvariant="normal">l</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">w</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">r</mi></mrow><mspace width="1em"/><mo>⟹</mo><mspace width="1em"/><mrow><mi mathvariant="normal">h</mi><mi mathvariant="normal">i</mi><mi mathvariant="normal">d</mi><mi mathvariant="normal">d</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">n</mi></mrow><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo>≥</mo><mrow><mi mathvariant="normal">l</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">w</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">r</mi></mrow><mo>−</mo><munder><mrow><mi>min</mi><mo>⁡</mo></mrow><mi>i</mi></munder><msub><mi>P</mi><mi>i</mi></msub><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">\min_{i}\bigl(\mathrm{hidden}[0] + P_{i}\bigr) \geq \mathrm{lower} \quad\Longrightarrow\quad \mathrm{hidden}[0] \geq \mathrm{lower} - \min_{i} P_{i}.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.5777em;vertical-align:-0.7277em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6679em;"><span style="top:-2.3723em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">min</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7277em;"><span></span></span></span></span></span><span class="mopen"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathrm">hidden</span></span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.2em;vertical-align:-0.35em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing size1">)</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7184em;vertical-align:-0.024em;"></span><span class="mord"><span class="mord mathrm">lower</span></span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⟹</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathrm">hidden</span></span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathrm">lower</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.411em;vertical-align:-0.7277em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6679em;"><span style="top:-2.3723em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">min</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7277em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mrow><mi mathvariant="normal">h</mi><mi mathvariant="normal">i</mi><mi mathvariant="normal">d</mi><mi mathvariant="normal">d</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">n</mi></mrow><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo>≤</mo><mrow><mi mathvariant="normal">u</mi><mi mathvariant="normal">p</mi><mi mathvariant="normal">p</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">r</mi></mrow><mo>−</mo><munder><mrow><mi>max</mi><mo>⁡</mo></mrow><mi>i</mi></munder><msub><mi>P</mi><mi>i</mi></msub><mo separator="true">,</mo><mspace width="1em"/><mrow><mi mathvariant="normal">h</mi><mi mathvariant="normal">i</mi><mi mathvariant="normal">d</mi><mi mathvariant="normal">d</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">n</mi></mrow><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo>≥</mo><mrow><mi mathvariant="normal">l</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">w</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">r</mi></mrow><mo>−</mo><munder><mrow><mi>min</mi><mo>⁡</mo></mrow><mi>i</mi></munder><msub><mi>P</mi><mi>i</mi></msub><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">\mathrm{hidden}[0]\leq\mathrm{upper}-\max_iP_i,\quad\mathrm{hidden}[0]\geq\mathrm{lower}-\min_iP_i.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathrm">hidden</span></span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathrm">upper</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.4777em;vertical-align:-0.7277em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.4306em;"><span style="top:-2.3723em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7277em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathrm">hidden</span></span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathrm">lower</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.411em;vertical-align:-0.7277em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6679em;"><span style="top:-2.3723em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">min</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7277em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span></span></span></span></span></p></li><li><p><strong>可行起始值个数</strong></p><p>记 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mi>i</mi><mi>n</mi><mi>P</mi><mo>=</mo><msub><mrow><mi>min</mi><mo>⁡</mo></mrow><mi>i</mi></msub><msub><mi>P</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>m</mi><mi>a</mi><mi>x</mi><mi>P</mi><mo>=</mo><msub><mrow><mi>max</mi><mo>⁡</mo></mrow><mi>i</mi></msub><msub><mi>P</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">minP=\min_iP_i,maxP=\max_iP_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">min</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mop"><span class="mop">min</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mop"><span class="mop">max</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 。</p><p>那么</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mrow><mi mathvariant="normal">h</mi><mi mathvariant="normal">i</mi><mi mathvariant="normal">d</mi><mi mathvariant="normal">d</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">n</mi></mrow><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo>∈</mo><mo stretchy="false">[</mo><mrow><mi mathvariant="normal">l</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">w</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">r</mi></mrow><mo>−</mo><mi>min</mi><mo>⁡</mo><mtext>P</mtext><mo separator="true">,</mo><mrow><mi mathvariant="normal">u</mi><mi mathvariant="normal">p</mi><mi mathvariant="normal">p</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">r</mi></mrow><mo>−</mo><mi>max</mi><mo>⁡</mo><mtext>P</mtext><mo stretchy="false">]</mo><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">\mathrm{hidden}[0]∈[\mathrm{lower}−\min\text{P},\mathrm{upper}−\max\text{P}],</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathrm">hidden</span></span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathrm">lower</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mop">min</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord text"><span class="mord">P</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathrm">upper</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">max</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord text"><span class="mord">P</span></span><span class="mclose">]</span><span class="mpunct">,</span></span></span></span></span></p><p>区间长度（整数个数）为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">(</mo><mrow><mtext> </mtext><mi mathvariant="normal">u</mi><mi mathvariant="normal">p</mi><mi mathvariant="normal">p</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">r</mi></mrow><mo>−</mo><mi>m</mi><mi>a</mi><mi>x</mi><mi>P</mi><mo stretchy="false">)</mo><mo>−</mo><mo stretchy="false">(</mo><mrow><mtext> </mtext><mi mathvariant="normal">l</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">w</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">r</mi></mrow><mo>−</mo><mi>m</mi><mi>i</mi><mi>n</mi><mi>P</mi><mo stretchy="false">)</mo><mo>+</mo><mn>1</mn><mo>=</mo><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">u</mi><mi mathvariant="normal">p</mi><mi mathvariant="normal">p</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">r</mi></mrow><mo>−</mo><mrow><mi mathvariant="normal">l</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">w</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">r</mi></mrow><mo stretchy="false">)</mo><mo>−</mo><mo stretchy="false">(</mo><mi>m</mi><mi>a</mi><mi>x</mi><mi>P</mi><mo>−</mo><mi>m</mi><mi>i</mi><mi>n</mi><mi>P</mi><mo stretchy="false">)</mo><mo>+</mo><mn>1.</mn></mrow><annotation encoding="application/x-tex">(\mathrm{~upper}-maxP)-(\mathrm{~lower}-minP)+1=(\mathrm{upper}-\mathrm{lower})-(maxP-minP)+1.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mspace nobreak"> </span><span class="mord mathrm">upper</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mspace nobreak"> </span><span class="mord mathrm">lower</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">min</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathrm">upper</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathrm">lower</span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">min</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1.</span></span></span></span></span></p><p>若该值为负，则答案是0。</p></li></ol><h2 id="算法思路">算法思路</h2><ol><li><p><strong>遍历一次 differences</strong>，用变量 <code>curr</code> 累加差分，实时维护 <code>minP = min(minP, curr)</code> 和 <code>maxP = max(maxP, curr)</code>。</p></li><li><p>根据上面推导，计算可行的 <code>hidden[0]</code> 的左端点 <code>L = lower - minP</code>，右端点 <code>R = upper - maxP</code>。</p></li><li><p>答案即为 <code>max(0, R - L + 1)</code>。</p></li></ol><h2 id="时间复杂度">时间复杂度</h2><ul><li><p>算法的时间复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>是<code>differences</code>数组的长度。因为只需遍历一次差异数组即可计算所有必要的参数，没有嵌套循环，因此效率较高。</p></li><li><p>仅使用常数级额外空间，故空间复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span>。</p></li></ul><h2 id="代码实现">代码实现</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 先求前缀极值再统一算区间</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">numberOfArrays</span>(<span class="params">self, differences: <span class="type">List</span>[<span class="built_in">int</span>], lower: <span class="built_in">int</span>, upper: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        <span class="comment"># 初始化前缀和的最小值和最大值</span></span><br><span class="line">        minP = <span class="number">0</span></span><br><span class="line">        maxP = <span class="number">0</span></span><br><span class="line">        curr = <span class="number">0</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 遍历差分数组，更新前缀和区间</span></span><br><span class="line">        <span class="keyword">for</span> d <span class="keyword">in</span> differences:</span><br><span class="line">            curr += d</span><br><span class="line">            minP = <span class="built_in">min</span>(minP, curr)</span><br><span class="line">            maxP = <span class="built_in">max</span>(maxP, curr)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 计算起始值 hidden[0] 的可行区间 [L, R]</span></span><br><span class="line">        L = lower - minP</span><br><span class="line">        R = upper - maxP</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 区间长度即为符合要求的数组个数</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">max</span>(<span class="number">0</span>, R - L + <span class="number">1</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>也可直接把对每个位置的区间约束（本质相同）</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mrow><mi mathvariant="normal">l</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">w</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">r</mi></mrow><mo>≤</mo><mrow><mi mathvariant="normal">h</mi><mi mathvariant="normal">i</mi><mi mathvariant="normal">d</mi><mi mathvariant="normal">d</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">n</mi></mrow><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo>+</mo><msub><mi>P</mi><mi>i</mi></msub><mo>≤</mo><mrow><mi mathvariant="normal">u</mi><mi mathvariant="normal">p</mi><mi mathvariant="normal">p</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">r</mi></mrow></mrow><annotation encoding="application/x-tex">\mathrm{lower}\leq\mathrm{hidden}[0]+P_i\leq\mathrm{upper}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8304em;vertical-align:-0.136em;"></span><span class="mord"><span class="mord mathrm">lower</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathrm">hidden</span></span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathrm">upper</span></span></span></span></span></span></p><p>转化为对 <code>hidden[0]</code> 的上下界，并在遍历中不断收缩，最终得出相同可行区间 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mi>max</mi><mo>⁡</mo><mo stretchy="false">{</mo><munder accentunder="true"><mi>L</mi><mo stretchy="true">‾</mo></munder><mo stretchy="false">}</mo><mo separator="true">,</mo><mi>min</mi><mo>⁡</mo><mo stretchy="false">{</mo><mover accent="true"><mi>R</mi><mo stretchy="true">‾</mo></mover><mo stretchy="false">}</mo><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[\max\{\underline{L}\},\min\{\overline{R}\}]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1333em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mop">max</span><span class="mopen">{</span><span class="mord underline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6833em;"><span style="top:-2.84em;"><span class="pstrut" style="height:3em;"></span><span class="underline-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2em;"><span></span></span></span></span></span><span class="mclose">}</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">min</span><span class="mopen">{</span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8833em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span><span style="top:-3.8033em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="mclose">}]</span></span></span></span></p><p><strong>维护上下界</strong></p><ul><li>令 <code>curr = P_i</code>，初始 <code>curr = 0</code>。</li><li>看到新的<code>curr</code>就把 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mi mathvariant="normal">h</mi><mi mathvariant="normal">i</mi><mi mathvariant="normal">d</mi><mi mathvariant="normal">d</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">n</mi></mrow><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo>≥</mo><mrow><mi mathvariant="normal">l</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">w</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">r</mi></mrow><mo>−</mo><mrow><mi mathvariant="normal">c</mi><mi mathvariant="normal">u</mi><mi mathvariant="normal">r</mi><mi mathvariant="normal">r</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">n</mi></mrow><msub><mi>t</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">\mathrm{hidden}[0]\geq\mathrm{lower}-\mathrm{curren}t_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathrm">hidden</span></span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathrm">lower</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7651em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathrm">curren</span></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 转化为下界 <code>L = lower - curr</code>并往上取最大，把 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mi mathvariant="normal">h</mi><mi mathvariant="normal">i</mi><mi mathvariant="normal">d</mi><mi mathvariant="normal">d</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">n</mi></mrow><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo>≤</mo><mrow><mi mathvariant="normal">u</mi><mi mathvariant="normal">p</mi><mi mathvariant="normal">p</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">r</mi></mrow><mo>−</mo><mrow><mi mathvariant="normal">c</mi><mi mathvariant="normal">u</mi><mi mathvariant="normal">r</mi><mi mathvariant="normal">r</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">n</mi></mrow><msub><mi>t</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">\mathrm{hidden}[0]\leq\mathrm{upper}-\mathrm{curren}t_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathrm">hidden</span></span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathrm">upper</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7651em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathrm">curren</span></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 转化为上界 <code>R = upper - curr</code>并往下取最小。</li><li>每步累加差分 <code>curr += d</code> 后</li></ul><p>若 <code>L &gt; R</code> 则 0，否则 <code>R - L + 1</code>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 遍历中直接收敛上下界</span></span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">List</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">numberOfArrays</span>(<span class="params">self, differences: <span class="type">List</span>[<span class="built_in">int</span>], lower: <span class="built_in">int</span>, upper: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        curr = <span class="number">0</span></span><br><span class="line">        L = lower      <span class="comment"># lower - 0</span></span><br><span class="line">        R = upper      <span class="comment"># upper - 0</span></span><br><span class="line">        <span class="keyword">for</span> d <span class="keyword">in</span> differences:</span><br><span class="line">            curr += d</span><br><span class="line">            candL = lower - curr</span><br><span class="line">            <span class="keyword">if</span> candL &gt; L:</span><br><span class="line">                L = candL</span><br><span class="line">            candR = upper - curr</span><br><span class="line">            <span class="keyword">if</span> candR &lt; R:</span><br><span class="line">                R = candR</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">max</span>(<span class="number">0</span>, R - L + <span class="number">1</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;a href=&quot;https://leetcode.cn/problems/count-the-hidden-sequences/&quot;&gt;2145. 统计隐藏数组数目&lt;/a&gt; M&lt;/h1&gt;
&lt;p&gt;给你一个下标从 &lt;strong&gt;0&lt;/strong&gt; 开始且长度为 &lt;code&gt;</summary>
      
    
    
    
    <category term="算法" scheme="https://blog.icjlu.eu.org/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="Algorithm" scheme="https://blog.icjlu.eu.org/tags/Algorithm/"/>
    
    <category term="组合数学" scheme="https://blog.icjlu.eu.org/tags/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/"/>
    
    <category term="中等" scheme="https://blog.icjlu.eu.org/tags/%E4%B8%AD%E7%AD%89/"/>
    
    <category term="数据结构" scheme="https://blog.icjlu.eu.org/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    <category term="前缀和" scheme="https://blog.icjlu.eu.org/tags/%E5%89%8D%E7%BC%80%E5%92%8C/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode每日一题2025-04-20</title>
    <link href="https://blog.icjlu.eu.org/post/rabbits-in-forest.html"/>
    <id>https://blog.icjlu.eu.org/post/rabbits-in-forest.html</id>
    <published>2025-04-20T03:11:18.000Z</published>
    <updated>2025-04-20T03:43:39.774Z</updated>
    
    <content type="html"><![CDATA[<h1><a href="https://leetcode.cn/problems/rabbits-in-forest/">781. 森林中的兔子</a> M</h1><p>森林中有未知数量的兔子。提问其中若干只兔子 <strong>“还有多少只兔子与你（指被提问的兔子）颜色相同?”</strong> ，将答案收集到一个整数数组 <code>answers</code> 中，其中 <code>answers[i]</code> 是第 <code>i</code> 只兔子的回答。</p><p>给你数组 <code>answers</code> ，返回森林中兔子的最少数量。</p><p><strong>示例 1：</strong></p><blockquote><p><strong>输入</strong>：answers = [1,1,2]<br><strong>输出</strong>：5<br><strong>解释</strong>：<br>两只回答了 “1” 的兔子可能有相同的颜色，设为红色。<br>之后回答了 “2” 的兔子不会是红色，否则他们的回答会相互矛盾。<br>设回答了 “2” 的兔子为蓝色。<br>此外，森林中还应有另外 2 只蓝色兔子的回答没有包含在数组中。<br>因此森林中兔子的最少数量是 5 只：3 只回答的和 2 只没有回答的。</p></blockquote><p><strong>示例 2：</strong></p><blockquote><p><strong>输入</strong>：answers = [10,10,10]<br><strong>输出</strong>：11</p></blockquote><p><strong>提示：</strong></p><ul><li><code>1 &lt;= answers.length &lt;= 1000</code></li><li><code>0 &lt;= answers[i] &lt; 1000</code></li></ul><h2 id="问题分析">问题分析</h2><p>我们需要根据兔子的回答 <code>answers</code> 数组计算森林中最少的兔子数量。每只回答为 <code>a</code> 的兔子表示其颜色族群中有 <code>a + 1</code> 只兔子（包括自己）。关键在于将相同答案的兔子尽可能分到同一族群，以最小化总数。</p><h2 id="算法思路">算法思路</h2><ol><li><p>遍历 <code>answers</code> 数组，使用哈希表 <code>count</code> 统计每个回答值 <code>x</code> 出现的频次 <code>c</code></p></li><li><p>对于每个不同的 <code>x</code>：</p><ul><li><p>每组最多能容纳 <code>x+1</code> 只兔子；</p></li><li><p>如果有 <code>c</code> 只兔子都回答了 <code>x</code>，则需要的组数为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>groups</mtext><mo>=</mo><mrow><mo fence="true">⌈</mo><mfrac><mi>c</mi><mrow><mi>x</mi><mo>+</mo><mn>1</mn></mrow></mfrac><mo fence="true">⌉</mo></mrow></mrow><annotation encoding="application/x-tex">\text{groups} = \left\lceil \frac{c}{x+1} \right\rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord text"><span class="mord">groups</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4em;vertical-align:-0.95em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">⌈</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1076em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">⌉</span></span></span></span></span></span></span></p></li><li><p>每个族群贡献 <code>x + 1</code> 只兔子，这些组中总兔子数为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>groups</mtext><mo>×</mo><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\text{groups} \times (x+1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord text"><span class="mord">groups</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span></p></li></ul></li><li><p>将所有不同回答值对应的最少兔子数累加，即可得到森林中兔子的最少数量。</p></li></ol><h2 id="时间复杂度">时间复杂度</h2><ul><li>统计频率的时间复杂度：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，其中数组长度 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>=</mo><mi>a</mi><mi>n</mi><mi>s</mi><mi>w</mi><mi>e</mi><mi>r</mi><mi>s</mi><mi mathvariant="normal">.</mi><mi>l</mi><mi>e</mi><mi>n</mi><mi>g</mi><mi>t</mi><mi>h</mi></mrow><annotation encoding="application/x-tex">n=answers.length</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">an</span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">ers</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span></span></span></span> ，因为仅需一次遍历统计，再对哈希表键值进行遍历。</li><li>分组计算的时间复杂度：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mclose">)</span></span></span></span>，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span></span></span></span> 是不同答案的个数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>m</mi><mo>≤</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(m ≤ n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>。因此总时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>。</li><li>空间复杂度：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mclose">)</span></span></span></span>，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span></span></span></span> 是不同回答值的数量，最坏情况 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mo>=</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">m = n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>。</li></ul><h2 id="代码分解">代码分解</h2><ol><li><strong>统计答案频率</strong>：使用 <code>collections.Counter</code> 记录每个回答的出现次数。</li><li><strong>分组计算</strong>：<ul><li>对于每个回答<code>x</code>和对应的计数<code>c</code>：<ul><li>分组数目为 <code>(c + x) // (x + 1)</code>（使用整数运算 <code>(c + group_size - 1) // group_size</code> 来替代向上取整）。</li><li>总兔子数累加 <code>groups * (x + 1)</code>。</li></ul></li></ul></li></ol><h2 id="代码实现">代码实现</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">List</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">numRabbits</span>(<span class="params">self, answers: <span class="type">List</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        count = Counter(answers)</span><br><span class="line">        total = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> x, c <span class="keyword">in</span> count.items():</span><br><span class="line">            <span class="comment"># 每组容量为 x+1</span></span><br><span class="line">            group_size = x + <span class="number">1</span></span><br><span class="line">            <span class="comment"># 计算需要的最少族群数量（ceil(c / group_size)向上取整）</span></span><br><span class="line">            groups = (c + group_size - <span class="number">1</span>) // group_size</span><br><span class="line">            <span class="comment"># 累加该回答值对应的最少兔子数</span></span><br><span class="line">            total += groups * group_size</span><br><span class="line">        <span class="keyword">return</span> total</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;a href=&quot;https://leetcode.cn/problems/rabbits-in-forest/&quot;&gt;781. 森林中的兔子&lt;/a&gt; M&lt;/h1&gt;
&lt;p&gt;森林中有未知数量的兔子。提问其中若干只兔子 &lt;strong&gt;“还有多少只兔子与你（指被提问的兔子）颜色相</summary>
      
    
    
    
    <category term="算法" scheme="https://blog.icjlu.eu.org/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="Algorithm" scheme="https://blog.icjlu.eu.org/tags/Algorithm/"/>
    
    <category term="组合数学" scheme="https://blog.icjlu.eu.org/tags/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/"/>
    
    <category term="中等" scheme="https://blog.icjlu.eu.org/tags/%E4%B8%AD%E7%AD%89/"/>
    
    <category term="哈希表" scheme="https://blog.icjlu.eu.org/tags/%E5%93%88%E5%B8%8C%E8%A1%A8/"/>
    
    <category term="贪心" scheme="https://blog.icjlu.eu.org/tags/%E8%B4%AA%E5%BF%83/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode每日一题2025-04-19</title>
    <link href="https://blog.icjlu.eu.org/post/count-the-number-of-fair-pairs.html"/>
    <id>https://blog.icjlu.eu.org/post/count-the-number-of-fair-pairs.html</id>
    <published>2025-04-19T04:20:06.000Z</published>
    <updated>2025-04-19T05:33:57.413Z</updated>
    
    <content type="html"><![CDATA[<h1><a href="https://leetcode.cn/problems/count-the-number-of-fair-pairs/">2563. 统计公平数对的数目</a> M</h1><p>给你一个下标从 <strong>0</strong> 开始、长度为 <code>n</code> 的整数数组 <code>nums</code> ，和两个整数 <code>lower</code> 和 <code>upper</code> ，返回 <strong>公平数对的数目</strong> 。</p><p>如果 <code>(i, j)</code> 数对满足以下情况，则认为它是一个 <strong>公平数对</strong> ：</p><ul><li><code>0 &lt;= i &lt; j &lt; n</code>，且</li><li><code>lower &lt;= nums[i] + nums[j] &lt;= upper</code></li></ul><p><strong>示例 1：</strong></p><blockquote><p><strong>输入</strong>：nums = [0,1,7,4,4,5], lower = 3, upper = 6<br><strong>输出</strong>：6<br><strong>解释</strong>：共计 6 个公平数对：(0,3)、(0,4)、(0,5)、(1,3)、(1,4) 和 (1,5) 。</p></blockquote><p><strong>示例 2：</strong></p><blockquote><p><strong>输入</strong>：nums = [1,7,9,2,5], lower = 11, upper = 11<br><strong>输出</strong>：1<br><strong>解释</strong>：只有单个公平数对：(2,3) 。</p></blockquote><p><strong>提示：</strong></p><ul><li>1 <code>&lt;= nums.length &lt;=</code> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>10</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span></li><li><code>nums.length == n</code></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><msup><mn>10</mn><mn>9</mn></msup></mrow><annotation encoding="application/x-tex">-10^9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">9</span></span></span></span></span></span></span></span></span></span></span> <code>&lt;= nums[i] &lt;=</code> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>10</mn><mn>9</mn></msup></mrow><annotation encoding="application/x-tex">10^9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">9</span></span></span></span></span></span></span></span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><msup><mn>10</mn><mn>9</mn></msup></mrow><annotation encoding="application/x-tex">-10^9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8974em;vertical-align:-0.0833em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">9</span></span></span></span></span></span></span></span></span></span></span> <code>&lt;= lower &lt;= upper &lt;=</code> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>10</mn><mn>9</mn></msup></mrow><annotation encoding="application/x-tex">10^9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">9</span></span></span></span></span></span></span></span></span></span></span></li></ul><h2 id="问题分析">问题分析</h2><p>问题本质上是寻找满足特定条件的数对 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(i, j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span>，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> 是数组的索引，且它们的和在给定的范围 <code>[lower, upper]</code> 内。这是一个典型的双指针或者排序后使用二分查找的问题，通过排序将问题转化为在有序数组中快速定位满足和的区间的边界。</p><h2 id="算法思路">算法思路</h2><ol><li><p><strong>排序数组</strong>：将输入的<code>nums</code>数组进行升序排列，便于后续操作。</p></li><li><p>方法一（<strong>双指针</strong>滑动窗口）</p><p><strong>可以将问题化简为两个「≤ 某值」的问题</strong></p><p>定义函数</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="normal">#</mi><mo stretchy="false">{</mo><mn>0</mn><mo>≤</mo><mi>i</mi><mo>&lt;</mo><mi>j</mi><mo>&lt;</mo><mi>n</mi><mo>∣</mo><mi>n</mi><mi>u</mi><mi>m</mi><mi>s</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo>+</mo><mi>n</mi><mi>u</mi><mi>m</mi><mi>s</mi><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>≤</mo><mi>k</mi><mo stretchy="false">}</mo><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">f(k)=\#\{0\leq i&lt;j&lt;n\mid nums[i]+nums[j]\leq k\}.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">#</span><span class="mopen">{</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6986em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mord mathnormal">s</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mord mathnormal">s</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">}</span><span class="mord">.</span></span></span></span></span></p><p>那么题目要的答案就是</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>u</mi><mi>p</mi><mi>p</mi><mi>e</mi><mi>r</mi><mo stretchy="false">)</mo><mo>−</mo><mi>f</mi><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><mi>w</mi><mi>e</mi><mi>r</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">f(upper)−f(lower−1).</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">u</span><span class="mord mathnormal">pp</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord">.</span></span></span></span></span></p><p>对于每个左端点 <code>i</code>（<code>0 ≤ i &lt; n-1</code>），我们维护两个指针 <code>l</code> 与 <code>r</code>：</p><ul><li><p>左指针 <code>l</code> 从头开始（0），右指针 <code>r</code> 从尾开始（n−1）；</p></li><li><p>如果 <code>nums[l] + nums[r] ≤ k</code>，那么对于固定的 <code>l</code>，所有 <code>(l, l+1),…,(l, r)</code> 都满足，因为排序保证 <code>nums[l] + nums[j] ≤ nums[l] + nums[r]</code>；可以一次性加上 <code>r−l</code> 个对，把 <code>l</code> 右移：<code>l += 1</code>。</p><p>否则（和太大）就让 <code>r</code> 左移：<code>r -= 1</code>。</p></li><li><p>直到 <code>l &gt;= r</code>，整个过程需 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span> 级的指针移动，配合排序总复杂度 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>log</mi><mo>⁡</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n \log n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>。</p></li></ul></li><li><p>方法二（<strong>二分查找</strong>）<br><strong>遍历每个元素作为固定点</strong>：对于每一个元素<code>nums[i]</code>（其中<code>i &lt; j</code>），直接对排序后的数组在区间 <code>(i+1, n-1]</code> 上执行两次二分查找：</p><p>计算目标和的上下界：<code>lower - nums[i]</code> 和 <code>upper - nums[i]</code>，即要求<code>nums[j]</code>必须落在这个范围内。</p><p><strong>二分查找边界</strong>：在有序数组中利用二分查找快速定位满足条件的<code>j</code>的位置区间：</p><p>枚举每个 <code>i</code>，目标是找满足</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>l</mi><mi>o</mi><mi>w</mi><mi>e</mi><mi>r</mi><mo>≤</mo><mi>n</mi><mi>u</mi><mi>m</mi><mi>s</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo>+</mo><mi>n</mi><mi>u</mi><mi>m</mi><mi>s</mi><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>≤</mo><mi>u</mi><mi>p</mi><mi>p</mi><mi>e</mi><mi>r</mi><mo separator="true">,</mo><mi>j</mi><mo>&gt;</mo><mi>i</mi></mrow><annotation encoding="application/x-tex">lower≤nums[i]+nums[j]≤upper,j&gt;i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8304em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mord mathnormal">s</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mord mathnormal">s</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">u</span><span class="mord mathnormal">pp</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span></span></p><p>等价于</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>l</mi><mi>o</mi><mi>w</mi><mi>e</mi><mi>r</mi><mo>−</mo><mi>n</mi><mi>u</mi><mi>m</mi><mi>s</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo>≤</mo><mi>n</mi><mi>u</mi><mi>m</mi><mi>s</mi><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>≤</mo><mi>u</mi><mi>p</mi><mi>p</mi><mi>e</mi><mi>r</mi><mo>−</mo><mi>n</mi><mi>u</mi><mi>m</mi><mi>s</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">lower−nums[i]≤nums[j]≤upper−nums[i].</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mord mathnormal">s</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mord mathnormal">s</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">u</span><span class="mord mathnormal">pp</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mord mathnormal">s</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mord">.</span></span></span></span></span></p><ul><li><code>left</code>：在排序数组的区间 <code>(i+1, n)</code> 上，第一个大于等于目标下界<code>lower - nums[i]</code>的元素位置<br><code>lo = lower - nums[i]</code>，查 <code>bisect_left(nums, lo, i+1)</code>；</li><li><code>right</code>：第一个大于目标上界<code>upper - nums[i]</code>的元素位置<br><code>hi = upper - nums[i]</code>，查 <code>bisect_right(nums, hi, i+1) - 1</code>；</li></ul><p><strong>统计有效数目</strong>：计算符合条件的索引区间长度，并累加到总数中</p><ul><li>二分查找各 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>log</mi><mo>⁡</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(\log n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，共 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>log</mi><mo>⁡</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n \log n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>。</li></ul></li></ol><h2 id="时间复杂度">时间复杂度</h2><ul><li>排序数组的时间为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>log</mi><mo>⁡</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n \log n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 是 <code>nums.length</code></li><li>双指针扫描需 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></li><li>遍历每个元素并进行两次二分查找的操作时间为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>log</mi><mo>⁡</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n \log n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></li><li>两种方法<strong>总时间复杂度</strong>都为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>log</mi><mo>⁡</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n \log n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></li><li><strong>空间复杂度</strong>：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>（排序需要复制或原地排序），<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span>（忽略排序所需栈或语言内部额外空间）</li></ul><h2 id="代码实现">代码实现</h2><p><strong>双指针法</strong>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">countFairPairs</span>(<span class="params">self, nums: <span class="built_in">list</span>[<span class="built_in">int</span>], lower: <span class="built_in">int</span>, upper: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        <span class="comment"># 排序</span></span><br><span class="line">        nums.sort()</span><br><span class="line">        <span class="comment"># 结果 = ≤upper 的对数 - ≤(lower-1) 的对数</span></span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>._count_leq(nums, upper) - <span class="variable language_">self</span>._count_leq(nums, lower - <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_count_leq</span>(<span class="params">self, nums: <span class="built_in">list</span>[<span class="built_in">int</span>], k: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        返回 排序后数组中 和 &lt;= k 的数对数量 f(k)。</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        l, r = <span class="number">0</span>, <span class="built_in">len</span>(nums) - <span class="number">1</span></span><br><span class="line">        cnt = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> l &lt; r:</span><br><span class="line">            <span class="keyword">if</span> nums[l] + nums[r] &lt;= k:</span><br><span class="line">                <span class="comment"># 对于当前 l，(l, l+1)...(l, r) 都是合法对</span></span><br><span class="line">                cnt += (r - l)</span><br><span class="line">                l += <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="comment"># 和太大，缩小右侧</span></span><br><span class="line">                r -= <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> cnt</span><br></pre></td></tr></table></figure><p><strong>二分法</strong>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">countFairPairs</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>], lower: <span class="built_in">int</span>, upper: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        nums.sort()</span><br><span class="line">        n = <span class="built_in">len</span>(nums)</span><br><span class="line">        count = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n - <span class="number">1</span>):</span><br><span class="line">            lo = lower - nums[i]</span><br><span class="line">            hi = upper - nums[i]</span><br><span class="line">            left = bisect_left(nums, lo, i + <span class="number">1</span>, n)</span><br><span class="line">            right = bisect_right(nums, hi, i + <span class="number">1</span>, n) - <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> left &lt; n <span class="keyword">and</span> left &lt;= right:</span><br><span class="line">                count += (right - left + <span class="number">1</span>)  <span class="comment"># 符合条件的元素数目</span></span><br><span class="line">        <span class="keyword">return</span> count</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;a href=&quot;https://leetcode.cn/problems/count-the-number-of-fair-pairs/&quot;&gt;2563. 统计公平数对的数目&lt;/a&gt; M&lt;/h1&gt;
&lt;p&gt;给你一个下标从 &lt;strong&gt;0&lt;/strong&gt; 开始、长度为 &lt;</summary>
      
    
    
    
    <category term="算法" scheme="https://blog.icjlu.eu.org/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="Algorithm" scheme="https://blog.icjlu.eu.org/tags/Algorithm/"/>
    
    <category term="枚举与剪枝" scheme="https://blog.icjlu.eu.org/tags/%E6%9E%9A%E4%B8%BE%E4%B8%8E%E5%89%AA%E6%9E%9D/"/>
    
    <category term="中等" scheme="https://blog.icjlu.eu.org/tags/%E4%B8%AD%E7%AD%89/"/>
    
    <category term="数据结构" scheme="https://blog.icjlu.eu.org/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    <category term="滑动窗口" scheme="https://blog.icjlu.eu.org/tags/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/"/>
    
    <category term="双指针" scheme="https://blog.icjlu.eu.org/tags/%E5%8F%8C%E6%8C%87%E9%92%88/"/>
    
    <category term="二分查找" scheme="https://blog.icjlu.eu.org/tags/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/"/>
    
    <category term="排序" scheme="https://blog.icjlu.eu.org/tags/%E6%8E%92%E5%BA%8F/"/>
    
    <category term="逆序对计数" scheme="https://blog.icjlu.eu.org/tags/%E9%80%86%E5%BA%8F%E5%AF%B9%E8%AE%A1%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode每日一题2025-04-18</title>
    <link href="https://blog.icjlu.eu.org/post/count-number-of-bad-pairs.html"/>
    <id>https://blog.icjlu.eu.org/post/count-number-of-bad-pairs.html</id>
    <published>2025-04-18T01:05:00.000Z</published>
    <updated>2025-04-18T01:49:07.749Z</updated>
    
    <content type="html"><![CDATA[<h1><a href="https://leetcode.cn/problems/count-number-of-bad-pairs/">2364. 统计坏数对的数目</a> M</h1><p>给你一个下标从 <strong>0</strong> 开始的整数数组 <code>nums</code> 。如果 <code>i &lt; j</code> 且 <code>j - i != nums[j] - nums[i]</code> ，那么我们称 <code>(i, j)</code> 是一个 <strong>坏数对</strong> 。</p><p>请你返回 <code>nums</code> 中 <strong>坏数对</strong> 的总数目。</p><p><strong>示例 1：</strong></p><blockquote><p><strong>输入</strong>：nums = [4,1,3,3]<br><strong>输出</strong>：5<br><strong>解释</strong>：数对 (0, 1) 是坏数对，因为 1 - 0 != 1 - 4 。<br>数对 (0, 2) 是坏数对，因为 2 - 0 != 3 - 4, 2 != -1 。<br>数对 (0, 3) 是坏数对，因为 3 - 0 != 3 - 4, 3 != -1 。<br>数对 (1, 2) 是坏数对，因为 2 - 1 != 3 - 1, 1 != 2 。<br>数对 (2, 3) 是坏数对，因为 3 - 2 != 3 - 3, 1 != 0 。<br>总共有 5 个坏数对，所以我们返回 5 。</p></blockquote><p><strong>示例 2：</strong></p><blockquote><p><strong>输入</strong>：nums = [1,2,3,4,5]<br><strong>输出</strong>：0<br><strong>解释</strong>：没有坏数对。</p></blockquote><p><strong>提示：</strong></p><ul><li>1 &lt;= <code>nums.length</code> &lt;= <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>10</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span></li><li>1 &lt;= <code>nums[i]</code> &lt;= <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>10</mn><mn>9</mn></msup></mrow><annotation encoding="application/x-tex">10^9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">9</span></span></span></span></span></span></span></span></span></span></span></li></ul><h2 id="问题分析">问题分析</h2><p>1.<strong>化简判定条件</strong></p><p>我们通过数学变换将条件转化为统计差值相等的数对数量，最终用总数减去好的数对得到答案：</p><p>对于一对索引 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>&lt;</mo><mi>j</mi></mrow><annotation encoding="application/x-tex">i&lt;j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6986em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span>，当且仅当</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>j</mi><mo>−</mo><mi>i</mi><mo>=</mo><mtext>nums</mtext><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>−</mo><mtext>nums</mtext><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">j - i = \text{nums}[j] - \text{nums}[i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">nums</span></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">nums</span></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span></span></span></span></span></p><p>时，这对 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(i,j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span> 不是坏数对；等价于</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>nums</mtext><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>−</mo><mi>j</mi><mo>=</mo><mtext>nums</mtext><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo>−</mo><mi>i</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">\text{nums}[j] - j = \text{nums}[i] - i.</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">nums</span></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">nums</span></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span><span class="mord">.</span></span></span></span></span></p><p>将所有元素映射为“调整值” <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mi>k</mi></msub><mo>=</mo><mtext>nums</mtext><mo stretchy="false">[</mo><mi>k</mi><mo stretchy="false">]</mo><mo>−</mo><mi>k</mi></mrow><annotation encoding="application/x-tex">A_k = \text{nums}[k] - k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">nums</span></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>，计算所有元素与索引的差值，统计相同差值出现次数，则“好数对”数目就是所有相同 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span> 值之间的组合对数。</p><p>2.<strong>总对数与好对数</strong></p><p>数组长度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 时，总对数为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><mi>n</mi><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">\tfrac{n(n-1)}2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.355em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>。</p><p>对于每个不同的调整值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span>，若出现次数为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>c</mi><mi>v</mi></msub></mrow><annotation encoding="application/x-tex">c_v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，则它内部的好对数为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><msub><mi>c</mi><mi>v</mi></msub><mo stretchy="false">(</mo><msub><mi>c</mi><mi>v</mi></msub><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">\tfrac{c_v(c_v-1)}2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.355em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>。</p><p>坏数对数 = 总对数 – <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle scriptlevel="0" displaystyle="true"><munder><mo>∑</mo><mi>v</mi></munder><mstyle displaystyle="false" scriptlevel="0"><mfrac><mrow><msub><mi>c</mi><mi>v</mi></msub><mo stretchy="false">(</mo><msub><mi>c</mi><mi>v</mi></msub><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><mn>2</mn></mfrac></mstyle></mstyle></mrow><annotation encoding="application/x-tex">\displaystyle\sum_v \tfrac{c_v(c_v-1)}2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.3em;vertical-align:-1.25em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>。</p><h2 id="算法思路">算法思路</h2><ol><li>遍历一次数组，使用哈希表统计每个 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mi>k</mi></msub><mo>=</mo><mtext>nums</mtext><mo stretchy="false">[</mo><mi>k</mi><mo stretchy="false">]</mo><mo>−</mo><mi>k</mi></mrow><annotation encoding="application/x-tex">A_k=\text{nums}[k]-k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">nums</span></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 出现的频次。</li><li>计算总对数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><mi>n</mi><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">\tfrac{n(n-1)}2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.355em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>。</li><li>对哈希表中每个频次 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">c</span></span></span></span>，累加 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><mi>c</mi><mo stretchy="false">(</mo><mi>c</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">\tfrac{c(c-1)}2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.355em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">c</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 得到“好对数”。</li><li>用总对数减去好对数，得到坏数对数。</li></ol><h2 id="时间复杂度">时间复杂度</h2><p>时间复杂度：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，只需一次遍历加上对哈希表的小量遍历。</p><p>空间复杂度：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，哈希表最坏存储 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 个不同键。</p><h2 id="代码实现">代码实现</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">countBadPairs</span>(<span class="params">self, nums: <span class="built_in">list</span>[<span class="built_in">int</span>]</span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        <span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line">        </span><br><span class="line">        n = <span class="built_in">len</span>(nums)</span><br><span class="line">        <span class="comment"># 1. 统计调整值频次</span></span><br><span class="line">        freq = Counter(nums[i] - i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n))</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 2. 总对数</span></span><br><span class="line">        total_pairs = n * (n - <span class="number">1</span>) // <span class="number">2</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 3. 累加所有“好对数”</span></span><br><span class="line">        good_pairs = <span class="built_in">sum</span>(c * (c - <span class="number">1</span>) // <span class="number">2</span> <span class="keyword">for</span> c <span class="keyword">in</span> freq.values())</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 4. 坏数对 = 总对数 - 好对数</span></span><br><span class="line">        <span class="keyword">return</span> total_pairs - good_pairs</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;a href=&quot;https://leetcode.cn/problems/count-number-of-bad-pairs/&quot;&gt;2364. 统计坏数对的数目&lt;/a&gt; M&lt;/h1&gt;
&lt;p&gt;给你一个下标从 &lt;strong&gt;0&lt;/strong&gt; 开始的整数数组 &lt;code&gt;</summary>
      
    
    
    
    <category term="算法" scheme="https://blog.icjlu.eu.org/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="Algorithm" scheme="https://blog.icjlu.eu.org/tags/Algorithm/"/>
    
    <category term="组合数学" scheme="https://blog.icjlu.eu.org/tags/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/"/>
    
    <category term="中等" scheme="https://blog.icjlu.eu.org/tags/%E4%B8%AD%E7%AD%89/"/>
    
    <category term="哈希表" scheme="https://blog.icjlu.eu.org/tags/%E5%93%88%E5%B8%8C%E8%A1%A8/"/>
    
    <category term="数据结构" scheme="https://blog.icjlu.eu.org/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode每日一题2025-04-17</title>
    <link href="https://blog.icjlu.eu.org/post/count-equal-and-divisible-pairs.html"/>
    <id>https://blog.icjlu.eu.org/post/count-equal-and-divisible-pairs.html</id>
    <published>2025-04-17T00:52:17.000Z</published>
    <updated>2025-04-18T01:44:18.108Z</updated>
    
    <content type="html"><![CDATA[<h1><a href="https://leetcode.cn/problems/count-equal-and-divisible-pairs-in-an-array/">2176. 统计数组中相等且可以被整除的数对</a> E</h1><p>给你一个下标从 <strong>0</strong> 开始长度为 <code>n</code> 的整数数组 <code>nums</code> 和一个整数 <code>k</code> ，请你返回满足 <code>0 &lt;= i &lt; j &lt; n</code> ，<code>nums[i] == nums[j]</code> 且 <code>(i * j)</code> 能被 <code>k</code> 整除的数对 <code>(i, j)</code> 的 <strong>数目</strong> 。</p><p><strong>示例 1：</strong></p><blockquote><p>输入：nums = [3,1,2,2,2,1,3], k = 2<br>输出：4<br><strong>解释</strong>：<br>总共有 4 对数符合所有要求：</p><ul><li>nums[0] == nums[6] 且 0 * 6 == 0 ，能被 2 整除。</li><li>nums[2] == nums[3] 且 2 * 3 == 6 ，能被 2 整除。</li><li>nums[2] == nums[4] 且 2 * 4 == 8 ，能被 2 整除。</li><li>nums[3] == nums[4] 且 3 * 4 == 12 ，能被 2 整除。</li></ul></blockquote><p><strong>示例 2：</strong></p><blockquote><p>输入：nums = [1,2,3,4], k = 1<br>输出：0<br>解释：由于数组中没有重复数值，所以没有数对 (i,j) 符合所有要求。</p></blockquote><p><strong>提示：</strong></p><ul><li><code>1 &lt;= nums.length &lt;= 100</code></li><li><code>1 &lt;= nums[i], k &lt;= 100</code></li></ul><h2 id="问题分析">问题分析</h2><p>统计所有满足</p><ol><li><strong>索引约束</strong>：<code>0 ≤ i &lt; j &lt; n</code></li><li><strong>数值相等</strong>：<code>nums[i] == nums[j]</code></li><li><strong>整除性</strong>：<code>(i * j) % k == 0</code></li></ol><p>的数对数量。</p><h2 id="算法思路">算法思路</h2><p>对数组<code>nums</code>中相同数值的下标进行分组（哈希表分组），然后在各组内部枚举下标对并检查乘积能否被 k 整除。</p><p>对于每个数值对应的索引列表：</p><ul><li>若长度小于2，则跳过（无有效对）。</li><li>否则，遍历所有可能的数对<code>(i, j)</code>（i &lt; j），检查<code>i * j % k == 0</code>是否成立，若成立则计数加1。</li></ul><h2 id="时间复杂度">时间复杂度</h2><ul><li><strong>预处理时间</strong>：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，遍历数组一次存储索引。</li><li>最坏情况下所有元素都相同(每个元素形成一组)，枚举组内所有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="true">(</mo><mfrac linethickness="0px"><mi>n</mi><mn>2</mn></mfrac><mo fence="true">)</mo></mrow><annotation encoding="application/x-tex">\binom{n}{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2em;vertical-align:-0.35em;"></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7454em;"><span style="top:-2.355em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.144em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span></span> 对，复杂度 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。由于n的最大为100，总计算量约为5000次，在可行范围内。</li><li><strong>空间复杂度</strong>：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，用于存储分组字典。</li></ul><h2 id="代码实现">代码实现</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> defaultdict</span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">List</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">countPairs</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>], k: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        返回满足 nums[i] == nums[j] 且 (i * j) 能被 k 整除的 (i, j) 对数。</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        num_indices = defaultdict(<span class="built_in">list</span>)</span><br><span class="line">        <span class="keyword">for</span> idx, num <span class="keyword">in</span> <span class="built_in">enumerate</span>(nums):</span><br><span class="line">            num_indices[num].append(idx)</span><br><span class="line">        </span><br><span class="line">        count = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> indices_list <span class="keyword">in</span> num_indices.values():</span><br><span class="line">            n = <span class="built_in">len</span>(indices_list)</span><br><span class="line">            <span class="keyword">if</span> n &lt; <span class="number">2</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="comment"># 遍历所有i&lt;j的组合</span></span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">                <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i + <span class="number">1</span>, n):</span><br><span class="line">                    a = indices_list[i]</span><br><span class="line">                    b = indices_list[j]</span><br><span class="line">                    product = a * b</span><br><span class="line">                    <span class="keyword">if</span> product % k == <span class="number">0</span>:</span><br><span class="line">                        count += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> count</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>用单次遍历 <code>+</code> 边加边算的方式可以稍微降低常数，只遍历一遍 <code>nums</code>，每遇到一个新下标就与之前同值下标配对判定，复杂度仍为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，但常数略优</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">countPairs</span>(<span class="params">self, nums: <span class="type">List</span>[<span class="built_in">int</span>], k: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        index_map = defaultdict(<span class="built_in">list</span>)</span><br><span class="line">        ans = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i, v <span class="keyword">in</span> <span class="built_in">enumerate</span>(nums):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> index_map[v]:</span><br><span class="line">                <span class="keyword">if</span> (i * j) % k == <span class="number">0</span>:</span><br><span class="line">                    ans += <span class="number">1</span></span><br><span class="line">            index_map[v].append(i)</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;a href=&quot;https://leetcode.cn/problems/count-equal-and-divisible-pairs-in-an-array/&quot;&gt;2176. 统计数组中相等且可以被整除的数对&lt;/a&gt; E&lt;/h1&gt;
&lt;p&gt;给你一个下标从 &lt;strong</summary>
      
    
    
    
    <category term="算法" scheme="https://blog.icjlu.eu.org/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="Algorithm" scheme="https://blog.icjlu.eu.org/tags/Algorithm/"/>
    
    <category term="枚举与剪枝" scheme="https://blog.icjlu.eu.org/tags/%E6%9E%9A%E4%B8%BE%E4%B8%8E%E5%89%AA%E6%9E%9D/"/>
    
    <category term="暴力搜索" scheme="https://blog.icjlu.eu.org/tags/%E6%9A%B4%E5%8A%9B%E6%90%9C%E7%B4%A2/"/>
    
    <category term="简单" scheme="https://blog.icjlu.eu.org/tags/%E7%AE%80%E5%8D%95/"/>
    
    <category term="哈希表" scheme="https://blog.icjlu.eu.org/tags/%E5%93%88%E5%B8%8C%E8%A1%A8/"/>
    
    <category term="数据结构" scheme="https://blog.icjlu.eu.org/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode每日一题2025-04-16</title>
    <link href="https://blog.icjlu.eu.org/post/countGoodsubarrays.html"/>
    <id>https://blog.icjlu.eu.org/post/countGoodsubarrays.html</id>
    <published>2025-04-16T00:58:07.000Z</published>
    <updated>2025-04-16T01:53:20.287Z</updated>
    
    <content type="html"><![CDATA[<h1><a href="https://leetcode.cn/problems/count-the-number-of-good-subarrays/">2537. 统计好子数组的数目</a> M</h1><p>给你一个整数数组 <code>nums</code> 和一个整数 <code>k</code> ，请你返回 <code>nums</code> 中 <strong>好</strong> 子数组的数目。</p><p>一个子数组 <code>arr</code> 如果有 <strong>至少</strong> <code>k</code> 对下标 <code>(i, j)</code> 满足 <code>i &lt; j</code> 且 <code>arr[i] == arr[j]</code> ，那么称它是一个 <strong>好</strong> 子数组。</p><p><strong>子数组</strong> 是原数组中一段连续 <strong>非空</strong> 的元素序列。</p><p><strong>示例 1：</strong></p><blockquote><p><strong>输入</strong>：nums = [1,1,1,1,1], k = 10<br><strong>输出</strong>：1<br><strong>解释</strong>：唯一的好子数组是这个数组本身。</p></blockquote><p><strong>示例 2：</strong></p><blockquote><p><strong>输入</strong>：nums = [3,1,4,3,2,2,4], k = 2<br><strong>输出</strong>：4<br><strong>解释</strong>：总共有 4 个不同的好子数组：</p><ul><li>[3,1,4,3,2,2] 有 2 对。</li><li>[3,1,4,3,2,2,4] 有 3 对。</li><li>[1,4,3,2,2,4] 有 2 对。</li><li>[4,3,2,2,4] 有 2 对。</li></ul></blockquote><p><strong>提示：</strong></p><ul><li>1 &lt;= <code>nums.length</code> &lt;= <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>10</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span></li><li>1 &lt;= <code>nums[i], k</code> &lt;= <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>10</mn><mn>9</mn></msup></mrow><annotation encoding="application/x-tex">10^9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">9</span></span></span></span></span></span></span></span></span></span></span></li></ul><h2 id="问题分析">问题分析</h2><p>给定一个整数数组 <code>nums</code> 和一个整数 <code>k</code>，要求返回数组中好子数组的数目。题目中“好子数组”的定义为：子数组中存在至少 <code>k</code> 对下标 <code>(i, j)</code> 满足 <code>i &lt; j</code> 且 <code>arr[i] == arr[j]</code>，也就是我们需要找出数组中所有满足至少有 <code>k</code> 对下标 <code>(i, j)</code>（其中 <code>i &lt; j</code> 且元素相同）的子数组的数量。</p><h2 id="算法思路">算法思路</h2><ol><li>当一个元素 <code>x</code> 在窗口中出现了 <code>c</code> 次时，它贡献的配对数量为组合数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mo stretchy="false">(</mo><mi>c</mi><mo separator="true">,</mo><mn>2</mn><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>c</mi><mo stretchy="false">(</mo><mi>c</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">C(c,2)=\frac{c(c−1)} 2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.355em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">c</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>，但动态调整更高效的方式是通过增量/减量来维护总数。</li><li>使用双指针（滑动窗口）技术来遍历所有连续子数组。</li><li>维护一个窗口 <code>[l, r]</code>，以及窗口中每个数字出现的频数 <code>freq</code>。</li><li>同时在每一步更新窗口内的成对数字数量 <code>count</code>。当我们向窗口中添加新元素 <code>x</code> 时，窗口中原先 <code>x</code> 出现的次数为 <code>freq[x]</code>，那么新增的对数为 <code>freq[x]</code>（每个已有的 <code>x</code> 和新加入的 <code>x</code> 都可以构成一对）。因此更新 <code>count += freq[x]</code>，然后 <code>freq[x]</code> 加 1。</li><li>对于每个左边界 <code>l</code>，利用右指针 <code>r</code> 尽可能扩展窗口，直到 <code>count &gt;= k</code>。设当窗口达到条件时，当前的 <code>r</code> 满足条件，则对于定左边界 <code>l</code>，所有右边界 <code>r'</code> 属于 <code>[r, n-1]</code> 的窗口均满足条件，因此可以直接将 <code>n - r</code> 加入答案。</li><li>随后移动左边界 <code>l</code>，同时更新 <code>count</code>。在移除窗口最左边元素时，假设其值为 <code>x</code>，此时删除该元素会导致窗口中 <code>x</code> 的出现次数减少，进而需要减少的对数为 <code>freq[x] - 1</code>（因为该 <code>x</code> 和其它 <code>x</code> 形成的对数就少了）。</li></ol><h2 id="时间复杂度">时间复杂度</h2><p>每个元素最多被右指针和左指针访问（加入和移除窗口）各一次，因此双指针方法整体时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，其中 n 是数组的长度。</p><h2 id="代码分解">代码分解</h2><p><strong>窗口扩展：</strong><br>对于每个窗口左边界 <code>l</code>，通过右指针 <code>r</code>向右扩展窗口，直到窗口内满足 <code>count &gt;= k</code>。在扩展过程中使用频次统计更新 <code>count</code>。</p><p><strong>直接计数：</strong><br>一旦找到最小的右边界 <code>r</code> 使得 <code>[l, r]</code> 满足条件，则所有 <code>[l, r]</code>, <code>[l, r+1]</code>, …, <code>[l, n-1]</code> 的子数组也均满足条件，因此可以直接加上 <code>n - r</code>。</p><p><strong>滑动窗口收缩：</strong><br>移动左边界 <code>l</code>时，需要将 <code>nums[l]</code> 从窗口中移除，同时调整 <code>freq</code> 和 <code>count</code>。移除时由于原先 <code>x</code> 出现次数为 <code>freq[x]</code>，其对对数贡献为 <code>freq[x] - 1</code>（移除后剩余的配对数为 <code>freq[x] - 1</code>，因此减少 <code>freq[x] - 1</code>）。</p><h2 id="代码实现">代码实现</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> defaultdict</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">countGood</span>(<span class="params">self, nums, k: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        n = <span class="built_in">len</span>(nums)</span><br><span class="line">        <span class="comment"># 字典存储每个数字的频次</span></span><br><span class="line">        freq = &#123;&#125;</span><br><span class="line">        count = <span class="number">0</span>  <span class="comment"># 当前窗口中满足条件的对数数量</span></span><br><span class="line">        res = <span class="number">0</span>    <span class="comment"># 结果计数</span></span><br><span class="line">        r = <span class="number">0</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 遍历左边界</span></span><br><span class="line">        <span class="keyword">for</span> l <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">            <span class="comment"># 不断扩展右边界，使窗口对数数量至少为 k</span></span><br><span class="line">            <span class="keyword">while</span> r &lt; n <span class="keyword">and</span> count &lt; k:</span><br><span class="line">                x = nums[r]</span><br><span class="line">                <span class="comment"># 在添加前，x已有 freq.get(x, 0) 次，新增的对数即为这个频次</span></span><br><span class="line">                count += freq.get(x, <span class="number">0</span>)</span><br><span class="line">                freq[x] = freq.get(x, <span class="number">0</span>) + <span class="number">1</span></span><br><span class="line">                r += <span class="number">1</span></span><br><span class="line">            </span><br><span class="line">            <span class="comment"># 如果当前窗口 [l, r-1] 的配对数量至少为 k，则右边所有扩展窗口都满足条件</span></span><br><span class="line">            <span class="keyword">if</span> count &gt;= k:</span><br><span class="line">                res += (n - r + <span class="number">1</span>)</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># 在将 l 右移前需要移除 nums[l] 对 count 的贡献</span></span><br><span class="line">            x = nums[l]</span><br><span class="line">            freq[x] -= <span class="number">1</span></span><br><span class="line">            <span class="comment"># 当移除一个 x 时，其对配对数的贡献为移除前该 x 与其它相同元素之间的对数数目，即 freq[x]（因为移除后，剩余的 x 数量为 freq[x]）</span></span><br><span class="line">            count -= freq[x]</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;a href=&quot;https://leetcode.cn/problems/count-the-number-of-good-subarrays/&quot;&gt;2537. 统计好子数组的数目&lt;/a&gt; M&lt;/h1&gt;
&lt;p&gt;给你一个整数数组 &lt;code&gt;nums&lt;/code&gt; 和一个整</summary>
      
    
    
    
    <category term="算法" scheme="https://blog.icjlu.eu.org/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="Algorithm" scheme="https://blog.icjlu.eu.org/tags/Algorithm/"/>
    
    <category term="组合数学" scheme="https://blog.icjlu.eu.org/tags/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/"/>
    
    <category term="中等" scheme="https://blog.icjlu.eu.org/tags/%E4%B8%AD%E7%AD%89/"/>
    
    <category term="数据结构" scheme="https://blog.icjlu.eu.org/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    <category term="滑动窗口" scheme="https://blog.icjlu.eu.org/tags/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode每日一题2025-04-15</title>
    <link href="https://blog.icjlu.eu.org/post/goodTriplets.html"/>
    <id>https://blog.icjlu.eu.org/post/goodTriplets.html</id>
    <published>2025-04-15T00:34:01.000Z</published>
    <updated>2025-04-18T02:53:49.168Z</updated>
    
    <content type="html"><![CDATA[<h1><a href="https://leetcode.cn/problems/count-good-triplets-in-an-array/">2179. 统计数组中好三元组数目</a> H</h1><p>给你两个下标从 <strong>0</strong> 开始且长度为 <code>n</code> 的整数数组 <code>nums1</code> 和 <code>nums2</code> ，两者都是 <code>[0, 1, ..., n - 1]</code> 的 <strong>排列</strong> 。</p><p><strong>好三元组</strong> 指的是 <code>3</code> 个 <strong>互不相同</strong> 的值，且它们在数组 <code>nums1</code> 和 <code>nums2</code> 中出现顺序保持一致。换句话说，如果我们将 pos<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mn>1</mn><mi>v</mi></msub></mrow><annotation encoding="application/x-tex">1_v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7944em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 记为值 <code>v</code> 在 <code>nums1</code> 中出现的位置，pos<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mn>2</mn><mi>v</mi></msub></mrow><annotation encoding="application/x-tex">2_v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7944em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 为值 <code>v</code> 在 <code>nums2</code> 中的位置，那么一个好三元组定义为 <code>0 &lt;= x, y, z &lt;= n - 1</code> ，且 pos<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mn>1</mn><mi>x</mi></msub></mrow><annotation encoding="application/x-tex">1_x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7944em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> &lt; pos<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mn>1</mn><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">1_y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9305em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> &lt; pos<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mn>1</mn><mi>z</mi></msub></mrow><annotation encoding="application/x-tex">1_z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7944em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 和 pos<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mn>2</mn><mi>x</mi></msub></mrow><annotation encoding="application/x-tex">2_x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7944em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> &lt; pos<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mn>2</mn><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">2_y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9305em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> &lt; pos<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mn>2</mn><mi>z</mi></msub></mrow><annotation encoding="application/x-tex">2_z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7944em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 都成立的 <code>(x, y, z)</code> 。</p><p>请你返回好三元组的 <strong>总数目</strong> 。</p><p><strong>示例 1：</strong></p><blockquote><p>输入：nums1 = [2,0,1,3], nums2 = [0,1,2,3]<br>输出：1<br>解释：<br>总共有 4 个三元组 (x,y,z) 满足 pos<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mn>1</mn><mi>x</mi></msub></mrow><annotation encoding="application/x-tex">1_x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7944em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> &lt; pos<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mn>1</mn><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">1_y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9305em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> &lt; pos<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mn>1</mn><mi>z</mi></msub></mrow><annotation encoding="application/x-tex">1_z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7944em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ，分别是 (2,0,1) ，(2,0,3) ，(2,1,3) 和 (0,1,3) 。<br>这些三元组中，只有 (0,1,3) 满足 pos<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mn>2</mn><mi>x</mi></msub></mrow><annotation encoding="application/x-tex">2_x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7944em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> &lt; pos<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mn>2</mn><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">2_y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9305em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span> &lt; pos<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mn>2</mn><mi>z</mi></msub></mrow><annotation encoding="application/x-tex">2_z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7944em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 。所以只有 1 个好三元组。</p></blockquote><p><strong>示例 2：</strong></p><blockquote><p>输入：nums1 = [4,0,1,3,2], nums2 = [4,1,0,2,3]<br>输出：4<br>解释：总共有 4 个好三元组 (4,0,3) ，(4,0,2) ，(4,1,3) 和 (4,1,2) 。</p></blockquote><p><strong>提示：</strong></p><ul><li><code>n == nums1.length == nums2.length</code></li><li>3 &lt;= n &lt;= <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>10</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span></li><li><code>0 &lt;= nums1[i], nums2[i] &lt;= n - 1</code></li><li><code>nums1</code> 和 <code>nums2</code> 是 <code>[0, 1, ..., n - 1]</code> 的排列。</li></ul><h2 id="问题分析">问题分析</h2><p>题目给定两个长度为<em>n</em>且下标从0开始的整数数组<code>nums1</code>和<code>nums2</code>，这两个数组都是<code>[0,1,...,n−1]</code>的排列。定义了好三元组为3个<u>互不相同</u>的值，且它们在数组<code>nums1</code>和<code>nums2</code>中出现<strong>顺序</strong>保持<strong>一致</strong>，<br>即若<code>pos1v</code>为值v在<code>nums1</code>中出现的位置，<code>pos2v</code>为值v在<code>nums2</code>中出现的位置，<br>好三元组需满足<code>0 &lt;= x, y, z &lt;= n−1</code>，且<code>pos1x &lt; pos1y &lt; pos1z</code>和<code>pos2x &lt; pos2y &lt; pos2z</code>都成立的<code>(x,y,z)</code> ，要求返回好三元组的总数目。</p><h2 id="算法思路">算法思路</h2><p>由于两个数组都是 0 到 n - 1 的排列，考虑以下转换：</p><ol><li><p><strong>构造新数组</strong><br>我们先建立一个数组 <code>p</code>，其中</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo>=</mo><mtext>pos2</mtext><mo stretchy="false">[</mo><mtext>nums1</mtext><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">p[i]=\text{pos2}[\text{nums1}[i]]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">pos2</span></span><span class="mopen">[</span><span class="mord text"><span class="mord">nums1</span></span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]]</span></span></span></span></span></p><p>这里的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>pos2</mtext><mo stretchy="false">[</mo><mi>v</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\text{pos2}[v]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">pos2</span></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">]</span></span></span></span> 表示值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span> 在 <code>nums2</code> 中的位置。<br>由于 <code>nums1</code> 本身已经按其在原数组中的顺序排序，因此原题中要求 “pos1<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span> &lt; pos1<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span> &lt; pos1<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi></mrow><annotation encoding="application/x-tex">z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span></span>” 已自动满足。问题就转化为：在数组 <code>p</code> 中计数满足</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo>&lt;</mo><mi>p</mi><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>&lt;</mo><mi>p</mi><mo stretchy="false">[</mo><mi>k</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">p[i]&lt;p[j]&lt;p[k]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">]</span></span></span></span></span></p><p>且满足 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>&lt;</mo><mi>j</mi><mo>&lt;</mo><mi>k</mi></mrow><annotation encoding="application/x-tex">i&lt;j&lt;k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6986em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 的三元组。</p></li><li><p><strong>双遍扫描计数</strong><br>对于数组中的每个中间元素 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">p[j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span></span></span></span>，设：</p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">L_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>：在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> 之前（即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>&lt;</mo><mi>j</mi></mrow><annotation encoding="application/x-tex">i&lt;j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6986em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span>）满足 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo>&lt;</mo><mi>p</mi><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">p[i] &lt; p[j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span></span></span></span> 的数量；</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">R_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>：在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> 之后（即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>&gt;</mo><mi>j</mi></mrow><annotation encoding="application/x-tex">k&gt;j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span>）满足 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">[</mo><mi>k</mi><mo stretchy="false">]</mo><mo>&gt;</mo><mi>p</mi><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">p[k] &gt; p[j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span></span></span></span> 的数量；</li></ul><p>则以 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">p[j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span></span></span></span> 为中间元素的有效三元组数量为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mi>j</mi></msub><mo>×</mo><msub><mi>R</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">L_j \times R_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>。整个三元组数量为所有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> 上的累加和。</p></li><li><p><strong>树状数组（Fenwick Tree）的作用</strong><br>由于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 可能达到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>10</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span> 级别，直接遍历统计 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">L_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>​ 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">R_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>​ 是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 的效率。借助树状数组，我们可以在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>log</mi><mo>⁡</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(\log n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span> 内查询某个前缀的值，从而：</p><ul><li>正向遍历计算每个位置 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> 的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">L_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>；</li><li>逆向遍历计算每个位置 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span></span></span></span> 的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">R_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>。</li></ul></li></ol><h2 id="时间复杂度">时间复杂度</h2><ul><li><p><strong>构造映射与数组转换</strong>：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></p></li><li><p><strong>正序与逆序遍历树状数组操作</strong>：使用两个树状数组分别进行两次扫描(每个元素需要正向逆向各一次)，每个查询和更新均为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>log</mi><mo>⁡</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">O(\log n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span></span></span></span>，共计 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>log</mi><mo>⁡</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n \log n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></p></li><li><p><strong>总体时间复杂度</strong>：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>log</mi><mo>⁡</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n \log n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></p></li><li><p><strong>空间复杂度</strong>：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>, 用于存储两个计数数组及树状数组的结构</p></li></ul><h2 id="代码分解">代码分解</h2><p><strong>FenwickTree 类</strong><br>负责单点更新和区间查询，从而在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>log</mi><mo>⁡</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(\log n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span> 时间内计算前缀和。</p><p><strong>构造映射与数组转换</strong><br>将 <code>nums2</code> 中每个数值映射到对应的位置，构造数组 <code>p</code> 后，数组 <code>p</code> 就是按照 <code>nums1</code> 顺序排列的 <code>nums2</code> 中的下标，即 <code>p[i]</code> 是 nums1 的第 i 个元素在 nums2 中的位置。</p><p><strong>左侧计数（L[j]）</strong><br>使用树状数组，从左到右扫描数组 <code>p</code>，对于每个位置 <code>j</code>，查询 <code>p[j]</code> 之前比它小的数字个数，并更新树状数组，通过遍历 <code>p</code> 数组并动态查询当前值之前的前缀和实现。</p><p><strong>右侧计数（R[j]）</strong><br>使用另一个树状数组，从右到左扫描数组 <code>p</code>，对于每个位置 <code>j</code>，查询已经处理的右侧元素中比 <code>p[j]</code> 大的数量，通过总已处理元素数减去小于等于 <code>p[j]</code> 的数目得到。</p><p><strong>三元组数量累加</strong><br>对每个中间位置 <code>j</code>，三元组数量为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo><mo>×</mo><mi>R</mi><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">L[j] \times R[j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span></span></span></span>，对所有可能的中间位置累加即为最终答案。</p><h2 id="代码实现">代码实现</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">FenwickTree</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, size: <span class="built_in">int</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.size = size</span><br><span class="line">        <span class="variable language_">self</span>.tree = [<span class="number">0</span>] * (size + <span class="number">1</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">update</span>(<span class="params">self, index: <span class="built_in">int</span>, delta: <span class="built_in">int</span></span>):</span><br><span class="line">        <span class="comment"># index 从 0 开始转换到 1-based</span></span><br><span class="line">        index += <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> index &lt;= <span class="variable language_">self</span>.size:</span><br><span class="line">            <span class="variable language_">self</span>.tree[index] += delta</span><br><span class="line">            index += index &amp; -index</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">query</span>(<span class="params">self, index: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        <span class="comment"># 查询前缀和 [0, index]，index 为 0-based</span></span><br><span class="line">        index += <span class="number">1</span></span><br><span class="line">        res = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> index:</span><br><span class="line">            res += <span class="variable language_">self</span>.tree[index]</span><br><span class="line">            index -= index &amp; -index</span><br><span class="line">        <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">goodTriplets</span>(<span class="params">nums1: <span class="built_in">list</span>, nums2: <span class="built_in">list</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        n = <span class="built_in">len</span>(nums1)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 建立 nums2 中值 -&gt; 位置 的映射</span></span><br><span class="line">        pos2 = [<span class="number">0</span>] * n</span><br><span class="line">        <span class="keyword">for</span> idx, num <span class="keyword">in</span> <span class="built_in">enumerate</span>(nums2):</span><br><span class="line">            pos2[num] = idx</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 构造数组 p，其中 p[i] = pos2[nums1[i]]</span></span><br><span class="line">        p = [pos2[num] <span class="keyword">for</span> num <span class="keyword">in</span> nums1]</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 第一步：正序遍历，计算每个 j 左侧比 p[j] 小的数量 L[j]</span></span><br><span class="line">        left_count = [<span class="number">0</span>] * n</span><br><span class="line">        fenwick_left = FenwickTree(n)</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">            <span class="comment"># p[j] 前有多少数比它小</span></span><br><span class="line">            left_count[j] = fenwick_left.query(p[j] - <span class="number">1</span>)</span><br><span class="line">            fenwick_left.update(p[j], <span class="number">1</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 第二步：逆序遍历，计算每个 j 右侧比 p[j] 大的数量 R[j]</span></span><br><span class="line">        right_count = [<span class="number">0</span>] * n</span><br><span class="line">        fenwick_right = FenwickTree(n)</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(n - <span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>):</span><br><span class="line">            <span class="comment"># 右侧比 p[j] 大的数量 = 当前已处理的个数中 p 值大于 p[j] 的数量</span></span><br><span class="line">            <span class="comment"># 先查询 p[j] 的前缀和，已加入的元素总数为 (n-1 - j)</span></span><br><span class="line">            right_count[j] = fenwick_right.query(n - <span class="number">1</span>) - fenwick_right.query(p[j])</span><br><span class="line">            fenwick_right.update(p[j], <span class="number">1</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 三元组数量：对每个 j 中间元素，累加 L[j] * R[j]</span></span><br><span class="line">        result = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">            result += left_count[j] * right_count[j]</span><br><span class="line">        <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;a href=&quot;https://leetcode.cn/problems/count-good-triplets-in-an-array/&quot;&gt;2179. 统计数组中好三元组数目&lt;/a&gt; H&lt;/h1&gt;
&lt;p&gt;给你两个下标从 &lt;strong&gt;0&lt;/strong&gt; 开始且长度</summary>
      
    
    
    
    <category term="算法" scheme="https://blog.icjlu.eu.org/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="Algorithm" scheme="https://blog.icjlu.eu.org/tags/Algorithm/"/>
    
    <category term="困难" scheme="https://blog.icjlu.eu.org/tags/%E5%9B%B0%E9%9A%BE/"/>
    
    <category term="组合数学" scheme="https://blog.icjlu.eu.org/tags/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/"/>
    
    <category term="数据结构" scheme="https://blog.icjlu.eu.org/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    <category term="逆序对计数" scheme="https://blog.icjlu.eu.org/tags/%E9%80%86%E5%BA%8F%E5%AF%B9%E8%AE%A1%E6%95%B0/"/>
    
    <category term="树状数组" scheme="https://blog.icjlu.eu.org/tags/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>Tableau分析与可视化看板</title>
    <link href="https://blog.icjlu.eu.org/post/Tableau.html"/>
    <id>https://blog.icjlu.eu.org/post/Tableau.html</id>
    <published>2025-04-14T05:39:04.000Z</published>
    <updated>2025-04-21T06:08:16.340Z</updated>
    
    <content type="html"><![CDATA[<h1>Tableau数据连接与可视化分析</h1><p>本文主要介绍 Tableau 的基础连接与使用，包括数据可视化的原理以及常用的图表制作，针对不同分析使用的图表类型，BI看板的搭建等内容。</p><h2 id="目录">目录</h2><ol><li><a href="#%E6%95%B0%E6%8D%AE%E8%BF%9E%E6%8E%A5">数据连接</a></li><li><a href="#%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E5%8E%9F%E7%90%86">数据可视化原理</a></li><li><a href="#%E5%9F%BA%E7%A1%80%E5%9B%BE%E8%A1%A8%E5%88%B6%E4%BD%9C">基础图表制作</a></li><li><a href="#%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E5%8E%9F%E5%88%99">数据可视化原则</a></li><li><a href="#bi%E4%BB%AA%E8%A1%A8%E7%9B%98%E6%90%AD%E5%BB%BA">BI仪表盘搭建</a></li></ol><hr><p><a href="https://public.tableau.com/zh-cn/gallery/?tab=viz-of-the-day&amp;type=viz-of-the-day">社区大佬可视化方案参考学习</a></p><p><strong>Tableau能做什么？</strong></p><ul><li><p>数据赋能</p><p><em>让业务一线也可以轻松使用最新数据</em></p><ul><li><p>分析师可以直接将数据看板发布到线上</p></li><li><p>自动更新看板</p></li><li><p>自由下载数据</p></li><li><p>线上修改图表</p></li><li><p>邮箱发送数据</p></li><li><p>设置数据预警</p></li></ul></li><li><p>数据探索</p><p><em>通过统计分析和数据可视化，从数据发现问题，用数据验证假设</em></p><ul><li><p>支持亿级数据的连接和处理</p></li><li><p>自由地对字段进行各种计算</p></li><li><p>拖拽就可以轻松制作图表</p></li><li><p>数据可以随意聚合下钻</p></li><li><p>图表类型可以灵活转换</p></li><li><p>内置算法智能建模</p></li></ul></li></ul><hr><h2 id="1-数据连接">1. 数据连接</h2><h3 id="1-1-连接类型">1.1 连接类型</h3><h4 id="1-1-1-本地文件">1.1.1 本地文件</h4><table><thead><tr><th>文件类型</th><th>连接方式</th></tr></thead><tbody><tr><td>CSV</td><td>文本连接</td></tr><tr><td>Excel (xls/xlsx)</td><td>Excel文件连接</td></tr><tr><td>JSON</td><td>直接连接JSON文件</td></tr></tbody></table><p><img src="https://s2.loli.net/2025/04/14/uqs9Rby5v7HIKz1.png" alt="Tableau 1"></p><p><img src="https://s2.loli.net/2025/04/14/utRx2ONTqLSlIa5.png" alt="Tableau 连接"></p><h4 id="1-1-2数据库">1.1.2数据库</h4><ol><li><strong>驱动配置</strong><br>下载对应数据库驱动后，配置地址、端口、认证等参数</li><li><strong>数据连接</strong><br>数据库连接方法与SQL相似</li></ol><p><img src="https://s2.loli.net/2025/04/14/HZVSOk8EFhKqnJC.png" alt="Tableau支持的数据库"></p><h3 id="1-2-连接方式">1.2 连接方式</h3><ol><li><strong>智能连接</strong>（默认）<ul><li>自动识别字段类型，只需选择连接字段</li><li>✅支持字段计算和编辑</li><li>✅支持排序、重命名、拆分等操作</li></ul></li><li><strong>字段计算</strong>：连接字段可通过函数进行计算和编辑（动态）</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 示例函数计算字段</span><br><span class="line">  DATE_TRUNC(&#x27;day&#x27;, &quot;下单日期&quot;) AS 订单日维度</span><br></pre></td></tr></table></figure><ol><li><strong>表格连接</strong>：表格之间的连接原理同SQL</li><li><strong>连接原理</strong><ul><li>多表连接机制同SQL</li><li>✅支持多条件组合连接</li></ul></li></ol><p><img src="https://s2.loli.net/2025/04/14/B7sdH3OvqjoG9zl.png" alt="Tableau表连接"></p><p><strong>操作示例</strong>：</p><ol><li>连接 <code>shop</code> 表 → 拖拽 <code>cpc</code> 表，设置连接条件：<ul><li>门店ID = 门店ID</li><li>日期 = 日期</li></ul></li><li>连接 <code>orders</code> 表→ 拖拽 <code>shop</code>表，设置连接条件：<ul><li>门店ID = 门店ID</li><li>日期 = 下单日期</li></ul></li></ol><p><img src="https://s2.loli.net/2025/04/14/ZxR3CoeU6bWiYcD.png" alt="Tableau多表连接"></p><h3 id="1-3-提取方式">1.3 提取方式</h3><table><thead><tr><th>方式</th><th>特点</th><th>适用场景</th></tr></thead><tbody><tr><td>实时查询</td><td>每次操作触发数据库查询（查询语言VizQL）</td><td>小数据量/频繁更新</td></tr><tr><td>数据提取</td><td>1.提取连接数据，保存为<code>.hyper</code>文件，支持增量刷新<br />2.<code>.twbx</code> 文件会将 <code>.hyper</code> 数据打包<br />3.修改数据源后需重新提取数据，实时连接则无此限制<br />4.一般大型数据推荐提取，除非频繁修改连接字段</td><td>大数据量/离线分析</td></tr></tbody></table><p><img src="https://s2.loli.net/2025/04/14/SGBk1gjnxI37AOy.png" alt="Tableau数据提取选项"></p><p><strong>注意事项</strong>：</p><ul><li><p>上传Tableau Server必须使用数据提取</p></li><li><p>提取数据后可进行预筛选，仅保留需要的数据用于视图操作</p></li><li><p>❌预筛选建议在连接阶段设置，而非视图层过滤</p><p><img src="https://s2.loli.net/2025/04/14/TIyzC5XuEMjNJnW.png" alt="Tableau数据筛选器"></p></li><li><p>提取选项支持增量刷新策略（基于字段/函数）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 示例：每日仅更新新增行</span></span><br><span class="line">EXTRACT_INCREMENTAL ON <span class="string">&quot;last_updated_date&quot;</span> &gt; DATEADD(<span class="string">&#x27;day&#x27;</span>, -<span class="number">1</span>, CURRENT_DATE())</span><br></pre></td></tr></table></figure></li><li><p><code>.twb</code>文件不包含数据仅保存连接与视图信息，<code>.twbx</code>打包数据，可打包共享<u>（Tableau Server发布<strong>必须使用</strong><code>.twbx</code>）</u></p></li><li><p>⚠️百万级数据建议使用增量刷新</p></li></ul><h3 id="1-4-数据处理">1.4 数据处理</h3><ul><li><p>查看、排序、重命名、拆分等操作</p><p><img src="https://s2.loli.net/2025/04/14/GYRPgVtKEU7IZo6.png" alt="Tableau描述与拆分"></p><p><img src="https://s2.loli.net/2025/04/14/p1O3gDjbYtK6MQs.png" alt="Tableau筛选显示行与排序查看日期"></p></li><li><p>图表界面也可完成大部分数据操作，包括预测，趋势线，描述性统计分析指标等</p></li></ul><hr><h2 id="2-数据可视化原理">2. 数据可视化原理</h2><h3 id="2-1-核心概念">2.1 核心概念</h3><ol><li><strong>为什么要可视化</strong></li></ol><ul><li>图表能让人更快理解最大/最小值等信息</li><li>人类具备视觉优势，图比字更易识别</li><li>文字源自象形，图形表达更直观</li></ul><p><img src="https://s2.loli.net/2025/04/14/lem8E7B5LJxt6vW.png" alt="Tableau视觉元素感知排序"></p><p><img src="https://s2.loli.net/2025/04/14/1vA2egZYFDdiGBu.jpg" alt="Tableau可视化辞典"></p><ol start="2"><li><strong>度量与维度</strong><ul><li><strong>度量（Measures）</strong>：数值型变量 → 图形面积/长度/颜色深浅 → 数轴</li><li><strong>维度（Dimensions）</strong>：类别型变量 → 图形颜色/位置/分类 → 标签</li></ul></li></ol><table><thead><tr><th>类型</th><th>特征描述</th><th>典型示例</th></tr></thead><tbody><tr><td><strong>度量</strong></td><td>数值型可计算变量</td><td>GMV总和, 订单数量</td></tr><tr><td><strong>维度</strong></td><td>非数值分类变量（如城市、性别）</td><td>用户ID, 源渠道</td></tr></tbody></table><blockquote><p>Tableau 自动识别变量类型，类型可互相转换</p></blockquote><p><img src="https://s2.loli.net/2025/04/14/XvD7u1aYMWbSeCR.png" alt="Tableau度量与维度"></p><h3 id="2-2-Tableau-可视化基础操作">2.2 Tableau 可视化基础操作</h3><ol><li><p><strong>拖拽操作</strong></p><ul><li><p>行/列：决定图表坐标轴</p></li><li><p>标记卡：控制图形颜色、大小、标签等</p><p><img src="https://s2.loli.net/2025/04/14/6o2ph1j7CJqMfyY.png" alt="Tableau标记卡与筛选器"></p></li><li><p>筛选器：设定可视条件</p><p><img src="https://s2.loli.net/2025/04/14/OgKIaeTutl5LkAY.png" alt="对应的筛选器"></p></li></ul></li><li><p><strong>五大可视化原理</strong></p><ol><li><p><em>度量默认聚合运算（SUM/AVG）</em></p><ul><li><p>拖动“消耗”到行 → 自动生成柱状图（求和）</p></li><li><p>Tableau 会自动聚合度量（默认总和）</p><p><img src="https://s2.loli.net/2025/04/14/7LIuidNJFCaPhxm.png" alt="Tableau条形图"></p></li></ul></li><li><p><em>图形标记自由切换</em></p><ul><li><p>标记卡中可选择不同图形（柱状图、饼图、折线图等）</p></li><li><p>一个度量只有一个值无法形成折线（需多个点）</p></li><li><p>拖拽度量至行/列形成<strong>图表</strong>，拖拽至标签区域形成<strong>表格</strong></p><p><img src="https://s2.loli.net/2025/04/14/fsq3QRO4lHFnDbr.png" alt="Tableau表格"></p><p><img src="https://s2.loli.net/2025/04/14/jIdGCVpLw7kREHl.png" alt="Tableau表格2"></p><p><img src="https://s2.loli.net/2025/04/14/m5npR8wQuqLHeJg.png" alt="等同于变换成离散放在行"></p></li></ul></li><li><p><em>维度增加信息密度（多层级对比）</em></p><ul><li><p>拖入维度字段 → 将一个点拆解为多个 → 可连成线</p></li><li><p>维度可拖至：颜色、标签、详细信息、行、列，会增强信息密度</p></li><li><p>示例：将日期字段转换为字符串 → 拖至列 → 形成折线图</p><p><img src="https://s2.loli.net/2025/04/14/OS84L5eEyHXs2bk.png" alt="Tableau折线图"></p></li><li><p>拖日期 → 标签、拖消耗 → 大小、选“文本” → 形成词云图、选“圆形” → 形成气泡图</p><p><img src="https://s2.loli.net/2025/04/14/HcgiSUYWdKXoLIb.png" alt="Tableau词云"></p><p><img src="https://s2.loli.net/2025/04/14/6ehfDbNLFyJwiS4.png" alt="Tableau气泡图"></p></li></ul></li><li><p><em>图表类型决定坐标轴形态（有轴图表 vs 无轴图表（极坐标图表））</em></p><ul><li><p>有轴：折线图、柱状图（需数轴）</p></li><li><p>无轴：饼图、树地图、词云、气泡图（极坐标）</p></li><li><p>示例饼图制作：将 GMV 拖到大小，门店拖到颜色 → 树地图(树地图是升级版的饼图，按照顺序展示大小，还能增加颜色等维度)；<br>更改标记类型为饼图 → 映射角度与面积</p><p><img src="https://s2.loli.net/2025/04/14/bVwOT7f6KrSDakI.png" alt="Tableau树地图"></p><p><img src="https://s2.loli.net/2025/04/14/K76QD1mVy8XJFrM.png" alt="Tableau饼图"></p></li></ul></li><li><p><em>连续变量生成<strong>坐标轴</strong>，离散变量生成<strong>标签</strong></em></p><ul><li>连续度量 → 数轴（逻辑连续参考系）</li><li>离散维度 → 标签（顺序可调的参考系）</li></ul><table><thead><tr><th>类型</th><th>作用</th></tr></thead><tbody><tr><td><strong>离散变量（维度）</strong></td><td>形成标签，构成表格</td></tr><tr><td><strong>连续变量（度量）</strong></td><td>形成数轴，构成图形</td></tr></tbody></table><ul><li>示例：拖维度构建表格（如日期、门店、品牌）<br>将度量字段设置为离散 → 变为维度<br>拖度量至列或行 → 生成图形（数轴）</li></ul></li></ol></li></ol><h3 id="2-3-视觉映射类型">2.3 视觉映射类型</h3><p><a href="https://github.com/Financial-Times/chart-doctor/tree/main/visual-vocabulary">可视化辞典Github仓库</a>与<a href="https://ft-interactive.github.io/visual-vocabulary/">Web</a></p><table><thead><tr><th>视觉元素</th><th>适用场景</th><th>示例</th><th>适用图表</th></tr></thead><tbody><tr><td>位置</td><td>x/y 轴呈现度量，分布趋势分析</td><td>人均收入与寿命关系</td><td>散点图</td></tr><tr><td>长度</td><td>长度反映数值对比</td><td>地区销售额对比</td><td>柱状图/条形</td></tr><tr><td>角度</td><td>用于表示部分与整体的占比关系</td><td>性别比例分析</td><td>饼图/玫瑰图/环形</td></tr><tr><td>颜色</td><td>分类/数值密度，饱和度/色调表现维度分类或度量高低</td><td>地理区域分布</td><td>热力图</td></tr><tr><td>面积 &amp; 体积</td><td>多维度占比，面积/体积与度量成正比</td><td>通过大小表示数值</td><td>树地图</td></tr><tr><td>方向</td><td>展示度量随维度（如时间）变化趋势</td><td>四季电力消耗趋势</td><td>折线图</td></tr></tbody></table><blockquote><p>形状可用于标记不同组别（维度），如散点图标记点形状</p></blockquote><hr><h2 id="3-基础图表制作">3. 基础图表制作</h2><h3 id="3-1-对比分析">3.1 对比分析</h3><table><thead><tr><th>图表类型</th><th>制作要点</th><th>适用场景</th></tr></thead><tbody><tr><td>柱状图</td><td>维度→列，度量→行</td><td>≤5个分类对比</td></tr><tr><td>条形图</td><td>维度→行，度量→列</td><td>≥5个分类对比</td></tr><tr><td>热力图</td><td>文本表+颜色映射，使用合计%</td><td>多维度交叉对比</td></tr><tr><td>气泡图/词云</td><td>度量→大小，维度→颜色/标签</td><td>百级分类对比</td></tr></tbody></table><ul><li><p>创建分层结构可以在拖动标签时将整个结构组都拖动，并根据需要点击+或-在工作表内展示数据的量</p><p><img src="https://s2.loli.net/2025/04/14/Kij1uzPnY9MAxGI.png" alt="Tableau分层结构"></p></li><li><p>筛选器选项可以自定义筛选器单项或多项的样式</p><p><img src="https://s2.loli.net/2025/04/14/S8eE2IK6TRPYtL9.png" alt="Tableau筛选器选项"></p></li><li><p>热力图设置标记为方形，适用于多【维度】下多变量的同时对比，并且需要同时查看对比效果和数值，如各组/商品类别之间的销售额、利润同时对比</p><p><img src="https://s2.loli.net/2025/04/14/vo5HaqX7ZLcduis.png" alt="Tableau热力图"></p></li></ul><h3 id="3-2-变化-趋势分析">3.2 变化/趋势分析</h3><table><thead><tr><th>图表类型</th><th>制作要点</th><th>适用场景</th></tr></thead><tbody><tr><td>折线图</td><td>时间→列（连续），度量→行<br />季节性调整需手动添加移动平均线</td><td>趋势分析</td></tr><tr><td>面积图</td><td>折线图→区域填充</td><td>累计值分析</td></tr></tbody></table><ul><li><p>给折线图添加趋势线可以增加内容的丰富程度，并提升专业性，还可以增加预测（实际应用中一般都是高维数据，R²低误差高，参考性不大）</p><p><img src="https://s2.loli.net/2025/04/14/7xWyXzjFalT8CKf.png" alt="Tableau折线图趋势线与预测"></p></li><li><p>将画折线图时的标记从线改为区域，即可形成面积图。适用于有内部累计关系的值，并会随时间变化，不强调趋势，强调绝对值</p><p><img src="https://s2.loli.net/2025/04/14/hzpao1I7xlK8sT3.png" alt="Tableau面积图"></p></li></ul><h3 id="3-3-构成-占比分析">3.3 构成/占比分析</h3><table><thead><tr><th>图表类型</th><th>制作要点</th><th>适用场景</th></tr></thead><tbody><tr><td>饼图</td><td>维度→颜色，度量→角度</td><td>≤3分类占比</td></tr><tr><td>树地图</td><td>维度→颜色/标签，度量→大小</td><td>多层级（维度）占比</td></tr><tr><td>堆积图</td><td>维度→颜色，主维度→轴</td><td>多维度累计占比</td></tr></tbody></table><ul><li><p>饼图需要设置合计百分比显示占比（百分比差异类似同比环比计算）</p><p><img src="https://s2.loli.net/2025/04/14/sTZo8P57fcyzpQC.png" alt="饼图合计百分比"></p><p><img src="https://s2.loli.net/2025/04/14/WXgMzQJ7BasPwf9.png" alt="饼图设置格式控制百分比小数位数"></p></li><li><p>堆积图适用于相同【度量】下，比较一个【维度】下另一个【维度】的占比。堆积图显示合计百分比需要在快速表计算后再编辑表计算并选择计算依据为&quot;表(向下)&quot;，否则会显示占整体数据的百分比，再按住<code>CTRL</code>将该计算字段拖动至’行’，即可看到占整体的比例（<u>只能看到占比，忽略绝对值大小</u>）</p><p><img src="https://s2.loli.net/2025/04/14/UiXBGmpI82Wu4tS.png" alt="Tableau堆积图设置"></p></li><li><p>因此一般需要同时查看值的大小和占比，在标记区域选择未使用快速计算的字段（没有Δ），然后将其中的标签移除并更换为原始字段</p><p><img src="https://s2.loli.net/2025/04/14/k1FhdRaJlbfy5m7.png" alt="Tableau堆积图设置2"></p></li></ul><h3 id="3-4-分布分析">3.4 分布分析</h3><table><thead><tr><th>图表类型</th><th>制作要点</th><th>适用场景</th></tr></thead><tbody><tr><td>散点图</td><td>X/Y轴→度量，维度→颜色</td><td>相关性分析</td></tr><tr><td>直方图</td><td>度量→自动分箱</td><td>单变量分布</td></tr><tr><td>地图</td><td>地理角色→详细信息，度量→大小/颜色</td><td>空间分布分析</td></tr></tbody></table><ul><li><p>散点图：将Cpc总费用拖入列，GMV拖入行，然后将字符串形式的日期放入<strong>标记</strong>的<strong>详细信息</strong>，门店名称放入颜色，即可看到各个店铺的投放效果（斜率越大投放效果越好）</p><p><img src="https://s2.loli.net/2025/04/14/ANPaJw2VteGyBFC.png" alt="Tableau散点图"></p></li><li><p>还可以对散点图进行聚类，，具有相同分布特征的变量会被分为一类，可选自动或手动设置聚类(Cluster)数 (K-means聚类算法，基于欧式距离计算)</p><p><img src="https://s2.loli.net/2025/04/14/CE8Fm2PGui5nXjZ.png" alt="Tableau散点图聚类"></p></li><li><p>直方图与数据桶：在数据型字段右键 → 创建 → 数据桶。数据桶本质是根据设定的数据桶大小作为间隔(箱宽度)，将离散的点分类并计数。用于查看单一度量下的数据分布</p></li><li><p>常见分布；2/8法则；马太效应；40-20-10（如果你想让你的APP保持增长势头，那么你的新用户次日留存率，7天留存率和30天留存率应该分别维持在40%、20%和10%左右）</p><p><img src="https://s2.loli.net/2025/04/14/uYtLPdMyCVJvnSo.png" alt="Tableau数据桶"></p></li><li><p>地图：对于数据中的城市，需要将字段的属性设置为地理角色中的某个值，然后双击即可在工作表中显示地图。</p><p><img src="https://s2.loli.net/2025/04/14/WJxS56yvGtHrwfM.png" alt="Tableau地图设置"></p><p>对于经纬度坐标，则需要将地理角色设置为经纬度，然后分别双击，即可在工作表显示地图</p><p><img src="https://s2.loli.net/2025/04/14/aHeLUIpo3xshvW1.png" alt="Tableau经纬度"></p><ul><li><p>由于多数情况下数据会经过脱敏处理，原来可表示唯一值的订单id等字段会有重复值出现，因此需要创建主键来自行计算出一个唯一值。左键点击创建计算字段，拖拽选择合适的字段进行计算，表达式需要确保计算的字段<strong>格式相同</strong>，因此对于数值型变量可以使用<code>STR()</code>函数将其转换为字符串进行计算</p><p><img src="https://s2.loli.net/2025/04/14/4HgrBnEuwDMKSVL.png" alt="Tableau创建主键"></p></li><li><p>使用计算出的&quot;主键&quot;作为详细信息，距离作为颜色，用户实付作为大小，即可在地图上画出大小、颜色均进行区分的散点地图</p><p><img src="https://s2.loli.net/2025/04/14/lUe2pcYZbjtR8aw.png" alt="Tableau配送距离与实付图"></p></li></ul></li></ul><blockquote><p>例：南丁格尔玫瑰图实现步骤（用色块圆饼展示战地死亡率，促进英国军方改善医疗条件）：</p><ul><li>将角度字段设置为度量值</li><li>在标记卡选择&quot;极坐标系&quot;</li><li>添加颜色区分分类变量（如月份）</li></ul></blockquote><hr><h2 id="4-数据可视化原则">4. 数据可视化原则</h2><ol><li><p><strong>用户导向</strong></p><ul><li><p>区分观众层级（执行/管理/决策）</p><p><img src="https://s2.loli.net/2025/04/14/rNBQHb58A2vaeOY.png" alt="Tableau用户区分"></p></li></ul></li><li><p><strong>信息层级</strong></p><ul><li>主指标放大，辅助指标弱化</li></ul></li><li><p><strong>视觉真实</strong></p><ul><li>坐标轴从0开始</li><li>避免3D变形</li></ul></li><li><p><strong>认知适配</strong></p><ul><li>使用行业通用图表类型(地理位置用地图、随时间变化用折线图等)</li></ul></li><li><p><strong>设计规范</strong></p><ul><li>颜色≤8种，简化设计，突出重点，少即是多</li><li>图表需在 5 秒内传达核心信息</li></ul></li><li><p><strong>辅助说明</strong></p><ul><li>添加标题/图例/数据标签/结论等(右键数据添加注释)</li></ul></li></ol><p>多到<a href="https://public.tableau.com/zh-cn/gallery/?tab=viz-of-the-day&amp;type=viz-of-the-day">Tableau社区</a>去学习好的方案</p><p><img src="https://s2.loli.net/2025/04/14/1psaqdOuXGTUvQi.png" alt="Tableau好的可视化方案"></p><hr><h2 id="5-BI仪表盘搭建">5. BI仪表盘搭建</h2><h3 id="5-1-设计流程">5.1 设计流程</h3><ol><li><p><strong>明确主题</strong></p><ul><li>受众是谁？关注点是什么？</li><li>例：每日营收监控 → GMV/转化率/订单分布</li></ul></li><li><p><strong>数据准备/拆解指标</strong></p><ul><li><p>营收数据：GMV、商家实收、用户实付、总订单数、cpc总费用、各平台数据对比</p></li><li><p>流量数据：曝光人数、进店人数、下单人数、进店转化率、下单转化率、新客数、老客数、复购率</p></li><li><p>关键指标：GMV、流量数据*（每日营收）<em>进店率、复购率</em>（用户行为）*</p></li><li><p>辅助指标：CPC费用、无效订单*（投放效果）*</p></li></ul><p><strong>先</strong>设计好要使用的元素，<strong>后</strong>进行可视化的调整，与Excel相同，下面是某店铺外卖的营收数据设计</p><ol><li>首先需要将筛选器设置为联动(使用相关数据源的所有项)，实现图表间的数据统一</li></ol><p><img src="https://s2.loli.net/2025/04/14/YOaodfxpQVDiTUu.png" alt="Tableau联动筛选"></p><ol start="2"><li><p>需要一个经营状况总览，拖动字段直至出现智能显示即可在数据的左右加入新的列，也可直接拖入度量值中，若出现其它图形，可以先尝试更改字段类型为离散</p><p><img src="https://s2.loli.net/2025/04/15/RNksrp6zx5H72KM.png" alt="Tableau智能显示"></p><p><img src="https://s2.loli.net/2025/04/15/SwcgoXtidHDuL4Q.png" alt="Tableau经营状况总览"></p></li><li><p>新建工作表，用同样的方式制作详情表，'行’中字段根据需要添加</p><p><img src="https://s2.loli.net/2025/04/15/ygUSfQEaPqb3vDn.png" alt="Tableau经营数据详情"></p></li><li><p>每日营收数据，需要多条曲线时，添加多个度量值将字段直接拖到纵轴上</p><p><img src="https://s2.loli.net/2025/04/15/q46A21Qe3uJlSHI.png" alt="Tableau每日营收数据"></p></li><li><p>并非所有有用的字段都会在业务数据中直接提供，因此有时需要添加计算字段</p><p><img src="https://s2.loli.net/2025/04/15/ZeG8hdrgTKsO1bN.png" alt="Tableau进店率与成交率计算"></p><p><img src="https://s2.loli.net/2025/04/15/F7egSsflDbX8kqU.png" alt="Tableau右键设置默认数字格式-百分比，减少重复修改"></p></li><li><p>多曲线的单位差异会导致在同一张图中显示时，某一或多条曲线因值过小而导致可视化效果差，不具备参考意义，这时可以设置双轴</p><p><img src="https://s2.loli.net/2025/04/15/CWFNEY452txsc6M.png" alt="Tableau双轴"></p></li><li><p>多曲线共同影响的字段可以作为背景展示，通过调整颜色、大小、不透明度等方式隐式的显示在曲线后（可选面积图或条形图）</p><p><img src="https://s2.loli.net/2025/04/15/TdaPi8yKuHDICro.png" alt="Tableau条形图调整大小和不透明度"></p><p><img src="https://s2.loli.net/2025/04/15/GN5jhylqC8HtJVY.png" alt="Tableau每日流量数据"></p></li><li><p>根据数据ORDER90，我们自定义90天内未下单的用户为新客，用于展示新老客对比</p><p><img src="https://s2.loli.net/2025/04/15/EXTPzol5a2kqjcS.png" alt="Tableau新老客字段计算"></p></li><li><p>Tableau没有内置的环形图，需要自己手动设置实现近似效果<br>环形图：双击行 → 输入0 → 右键双轴 → 将其中一个的视觉元素全部移除 → 颜色改为白色 → 调整两个饼图的大小 → 环形图 → 取消零值线和取消显示标题（调整完成后使用<code>CTRL</code>+<code>←</code>或<code>→</code>可以调整环形图<strong>整体的大小</strong>，此功能不局限于饼图）需要多个环形图时，为保证一致性，可以使用拷贝工作表，然后更改字段</p><p><img src="https://s2.loli.net/2025/04/15/kS2eOKbqUj1Lft3.png" alt="Tableau环形图"></p></li><li><p>有时业务数据的标签并不是想要展示的值，可以通过右键设置别名来更改为想要的值</p><p><img src="https://s2.loli.net/2025/04/15/5mnF4t6sj8pqk19.png" alt="Tableau别名设置"></p><p><img src="https://s2.loli.net/2025/04/15/pC6cy8YeEDROmZB.png" alt="Tableau门店占比"></p></li><li><p>纵轴设置为GMV，横轴设置cpc总费用，可以看到各门店的投放情况，斜率越高效果越好</p><p><img src="https://s2.loli.net/2025/04/15/JyuZz1q4TMBY7Vx.png" alt="Tableau投放情况"></p></li><li><p>面积图可以展示订单分布时间段（根据需要将下单日期格式设置为小时）与整体订单趋势</p><p><img src="https://s2.loli.net/2025/04/15/Ei4tPymVJUpak3A.png" alt="Tableau面积图订单分布"></p></li><li><p>分组设置：在想要分组的位置按住shift单击，并点击分组，即可选中以上的全部数据分为一组，同时可以给组进行命名，可以使用if函数实现相同效果</p><p><img src="https://s2.loli.net/2025/04/15/pm9qoesgyxXjuRh.png" alt="Tableau创建距离分组"></p><p><img src="https://s2.loli.net/2025/04/15/x9vqF6nz8sca54U.png" alt="Tableau配送分布"></p></li></ol></li><li><p><strong>布局设计</strong></p><ol><li>F型视线布局：关键指标置于左上区域</li><li>动态筛选器统一放置顶部中央</li><li>数据钻取深度不超过三级</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[仪表盘布局示例]</span><br><span class="line">| 经营总览 | 趋势分析 |</span><br><span class="line">|----------|----------|</span><br><span class="line">| 占比分析 | 分布地图 |</span><br></pre></td></tr></table></figure><p>经营总览-&gt;数据详情-&gt;趋势分析-&gt;占比分析-&gt;分布分析</p><ul><li>总览：文本突出显示</li><li>趋势：多轴折线图</li><li>分布：热力图 / 地图</li></ul><p>仪表盘大小可以选择通用桌面1366 * 768，然后手动调整高度，从左边的工作表区域拖动需要的表到仪表盘，手动调整位置和大小</p><p><img src="https://s2.loli.net/2025/04/15/Pj7GMtrUJZcvei9.png" alt="Tableau仪表盘对象选择"></p><p><img src="https://s2.loli.net/2025/04/15/E9Iy3VbQgMZTcvW.png" alt="Tableau仪表盘工作表区"></p></li><li><p><strong>交互优化</strong></p><ul><li><strong>逻辑顺序</strong>：从上到下 / 从主到次</li><li><strong>交互设计</strong>：主题明确 + 交互友好，纵/横布局，强制设置所有图表共享联动筛选器</li><li><strong>图表联动</strong>（通过筛选器）</li><li><strong>动态参数</strong>（通过筛选器）</li><li><strong>细节优化</strong>：统一字体、配色（参考<a href="https://public.tableau.com/zh-cn/gallery/">Tableau 社区</a>）</li><li><strong>图表选择</strong>：4 大金刚（<u>散点图、柱状图、饼图、折线图</u>），大多数数据可视化都可用这四种组合完成，人感知最强的可视化字典（位置、长度、角度/方向、面积/颜色）</li></ul><p><img src="https://s2.loli.net/2025/04/15/rogRAGQyfXmNquD.png" alt="Tableau仪表盘设置筛选器浮动，便于摆放"></p><p><img src="https://s2.loli.net/2025/04/15/I5nXPq9wDflSKjM.png" alt="Tableau仪表盘工作表点击用作筛选器实现联动"></p></li></ol><h3 id="5-2-开发规范">5.2 开发规范</h3><ol><li><strong>配色方案</strong><ul><li>主色≤3种，辅色≤2种，推荐组合：<code>#2A5E8F（深蓝）+ #FF6B35（橙红）+ #4ECDC4（青绿）</code></li><li>使用企业VI色系</li><li>参考：<a href="https://colorhunt.co/">Color Hunt</a></li></ul></li><li><strong>字体规范</strong><ul><li>中文：微软雅黑</li><li>英文：Arial</li><li>文字标注使用12pt的微软雅黑字体</li></ul></li><li><strong>性能优化</strong><ul><li>数据提取预处理</li><li>隐藏非必要细节</li></ul></li></ol><p><strong>细节优化过程</strong></p><ol><li><p>设置边框提升专业性</p><p><img src="https://s2.loli.net/2025/04/15/MWAi8TDgqYuxOpz.png" alt="Tableau仪表盘设置边框"></p></li><li><p>去掉一些数据表的行列分隔边线，提升美观度</p><p><img src="https://s2.loli.net/2025/04/15/N7SmH1payYG8lTo.png" alt="Tableau仪表盘去掉原边框"></p></li><li><p>更改地图背景，使其简洁，提升视觉效果，修改冲蚀更改背景透明度</p><p><img src="https://s2.loli.net/2025/04/15/tU1OgzDdNVvE7Gi.png" alt="Tableau仪表盘地图设置"></p></li><li><p>最后优化各工作表在仪表盘的标题、数据信息的格式，设置字体微软雅黑，颜色风格统一，如需更改标题的背景颜色，可以在布局中修改</p><p><img src="https://s2.loli.net/2025/04/15/AwbqvzVujasYUNd.png" alt="Tableau仪表盘字体颜色"></p><p><img src="https://s2.loli.net/2025/04/15/4Hgx3pqwR61TOLV.png" alt="Tableau仪表盘数据分行颜色"></p></li><li><p>优化各工作表的色调，使风格统一</p><p><img src="https://s2.loli.net/2025/04/15/yKrtqT5gQimuFeJ.png" alt="Tableau仪表盘地图点颜色"></p></li></ol><p><a href="https://public.tableau.com/zh-cn/gallery">Tableau社区案例参考</a></p><p><strong>最终效果：</strong></p><p><img src="https://s2.loli.net/2025/04/14/Dl3rBSGtINyE7nh.png" alt="BI看板"></p><p><a href="https://yrzu9y4st8.feishu.cn/mindnotes/bmncnQCbk8yr68s4eBikgB06Awd">参考文档</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;Tableau数据连接与可视化分析&lt;/h1&gt;
&lt;p&gt;本文主要介绍 Tableau 的基础连接与使用，包括数据可视化的原理以及常用的图表制作，针对不同分析使用的图表类型，BI看板的搭建等内容。&lt;/p&gt;
&lt;h2 id=&quot;目录&quot;&gt;目录&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href</summary>
      
    
    
    
    <category term="数据分析" scheme="https://blog.icjlu.eu.org/categories/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
    
    <category term="数据操作" scheme="https://blog.icjlu.eu.org/tags/%E6%95%B0%E6%8D%AE%E6%93%8D%E4%BD%9C/"/>
    
    <category term="可视化" scheme="https://blog.icjlu.eu.org/tags/%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    <category term="看板与报表" scheme="https://blog.icjlu.eu.org/tags/%E7%9C%8B%E6%9D%BF%E4%B8%8E%E6%8A%A5%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode每日一题2025-04-14</title>
    <link href="https://blog.icjlu.eu.org/post/countGoodTriplets.html"/>
    <id>https://blog.icjlu.eu.org/post/countGoodTriplets.html</id>
    <published>2025-04-14T01:00:05.000Z</published>
    <updated>2025-04-16T01:28:33.434Z</updated>
    
    <content type="html"><![CDATA[<h1><a href="https://leetcode.cn/problems/count-good-triplets/">1534. 统计好三元组</a> E</h1><p>给你一个整数数组 <code>arr</code> ，以及 <code>a</code>、<code>b</code> 、<code>c</code> 三个整数。请你统计其中好三元组的数量。</p><p>如果三元组 <code>(arr[i], arr[j], arr[k])</code> 满足下列全部条件，则认为它是一个 <strong>好三元组</strong> 。</p><ul><li><code>0 &lt;= i &lt; j &lt; k &lt; arr.length</code></li><li><code>|arr[i] - arr[j]| &lt;= a</code></li><li><code>|arr[j] - arr[k]| &lt;= b</code></li><li><code>|arr[i] - arr[k]| &lt;= c</code></li></ul><p>其中 <code>|x|</code> 表示 <code>x</code> 的绝对值。</p><p>返回 <strong>好三元组的数量</strong> 。</p><p><strong>示例 1：</strong></p><blockquote><p><strong>输入：</strong> arr = [3,0,1,1,9,7], a = 7, b = 2, c = 3<br><strong>输出：</strong> 4<br><strong>解释：</strong> 一共有 4 个好三元组：[(3,0,1), (3,0,1), (3,1,1), (0,1,1)] 。</p></blockquote><p><strong>示例 2：</strong></p><blockquote><p><strong>输入：</strong> arr = [1,1,2,2,3], a = 0, b = 0, c = 1<br><strong>输出：</strong> 0<br><strong>解释：</strong> 不存在满足所有条件的三元组。</p></blockquote><p><strong>提示：</strong></p><ul><li><code>3 &lt;= arr.length &lt;= 100</code></li><li><code>0 &lt;= arr[i] &lt;= 1000</code></li><li><code>0 &lt;= a, b, c &lt;= 1000</code></li></ul><h2 id="问题分析"><strong>问题分析</strong></h2><p>给定数组 arr，以及三个整数 a、b、c，需要统计满足以下三个条件的三元组 (arr[i], arr[j], arr[k]) 的数量（其中 0 &lt;= i &lt; j &lt; k &lt; len(arr)）：</p><ul><li><code>|arr[i] - arr[j]| &lt;= a</code></li><li><code>|arr[j] - arr[k]| &lt;= b</code></li><li><code>|arr[i] - arr[k]| &lt;= c</code></li></ul><h2 id="算法思路"><strong>算法思路</strong></h2><ul><li><strong>暴力枚举</strong>：直接使用三重循环枚举所有可能的三元组，然后检查是否满足条件。</li><li><strong>提前剪枝</strong>：在第二层循环中，若<code>abs(arr[i] - arr[j]) &gt; a</code>则直接跳过第三层循环（k），减少无效计算。</li></ul><h2 id="时间复杂度">时间复杂度</h2><ul><li><p>对于数组长度 n，每个三元组枚举的时间复杂度为 O(n³)。由于题目约束 3 &lt;= n &lt;= 100，当 n = 100 时，最多循环大约 161700 次，在可接受的范围内。</p></li><li><p>除了输入数组与常数级变量外，未使用额外数据结构，因此空间复杂度为 O(1)。</p></li></ul><h2 id="代码实现">代码实现</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> <span class="type">List</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">countGoodTriplets</span>(<span class="params">self, arr: <span class="type">List</span>[<span class="built_in">int</span>], a: <span class="built_in">int</span>, b: <span class="built_in">int</span>, c: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        count = <span class="number">0</span></span><br><span class="line">        n = <span class="built_in">len</span>(arr)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i + <span class="number">1</span>, n):</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">abs</span>(arr[i] - arr[j]) &gt; a:</span><br><span class="line">                    <span class="keyword">continue</span>  <span class="comment"># 提前剪枝，不满足a条件则跳过后续k的判断</span></span><br><span class="line">                <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(j + <span class="number">1</span>, n):</span><br><span class="line">                    <span class="comment"># 同时检查b和c的条件</span></span><br><span class="line">                    <span class="keyword">if</span> (<span class="built_in">abs</span>(arr[j] - arr[k]) &lt;= b) <span class="keyword">and</span> (<span class="built_in">abs</span>(arr[i] - arr[k]) &lt;= c):</span><br><span class="line">                        count += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> count</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;a href=&quot;https://leetcode.cn/problems/count-good-triplets/&quot;&gt;1534. 统计好三元组&lt;/a&gt; E&lt;/h1&gt;
&lt;p&gt;给你一个整数数组 &lt;code&gt;arr&lt;/code&gt; ，以及 &lt;code&gt;a&lt;/code&gt;、&lt;cod</summary>
      
    
    
    
    <category term="算法" scheme="https://blog.icjlu.eu.org/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="Algorithm" scheme="https://blog.icjlu.eu.org/tags/Algorithm/"/>
    
    <category term="枚举与剪枝" scheme="https://blog.icjlu.eu.org/tags/%E6%9E%9A%E4%B8%BE%E4%B8%8E%E5%89%AA%E6%9E%9D/"/>
    
    <category term="暴力搜索" scheme="https://blog.icjlu.eu.org/tags/%E6%9A%B4%E5%8A%9B%E6%90%9C%E7%B4%A2/"/>
    
    <category term="简单" scheme="https://blog.icjlu.eu.org/tags/%E7%AE%80%E5%8D%95/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode每日一题2025-04-13</title>
    <link href="https://blog.icjlu.eu.org/post/countGoodNumbers.html"/>
    <id>https://blog.icjlu.eu.org/post/countGoodNumbers.html</id>
    <published>2025-04-13T01:55:24.000Z</published>
    <updated>2025-04-13T02:36:31.244Z</updated>
    
    <content type="html"><![CDATA[<h1><a href="https://leetcode.cn/problems/count-good-numbers/">1922. 统计好数字的数目</a> M</h1><p>我们称一个数字字符串是 <strong>好数字</strong> 当它满足（下标从 <strong>0</strong> 开始）<strong>偶数</strong> 下标处的数字为 <strong>偶数</strong> 且 <strong>奇数</strong> 下标处的数字为 <strong>质数</strong> （<code>2</code>，<code>3</code>，<code>5</code> 或 <code>7</code>）。</p><ul><li>比方说，<code>&quot;2582&quot;</code> 是好数字，因为偶数下标处的数字（<code>2</code> 和 <code>8</code>）是偶数且奇数下标处的数字（<code>5</code> 和 <code>2</code>）为质数。但 <code>&quot;3245&quot;</code> <strong>不是</strong> 好数字，因为 <code>3</code> 在偶数下标处但不是偶数。</li></ul><p>给你一个整数 <code>n</code> ，请你返回长度为 <code>n</code> 且为好数字的数字字符串 <strong>总数</strong> 。由于答案可能会很大，请你将它对 <code>109 + 7</code> <strong>取余后返回</strong> 。</p><p>一个 <strong>数字字符串</strong> 是每一位都由 <code>0</code> 到 <code>9</code> 组成的字符串，且可能包含前导 0 。</p><p><strong>示例 1：</strong></p><blockquote><p>输入：n = 1<br>输出：5<br>解释：长度为 1 的好数字包括 “0”，“2”，“4”，“6”，“8” 。</p></blockquote><p><strong>示例 2：</strong></p><blockquote><p>输入：n = 4<br>输出：400</p></blockquote><p><strong>示例 3：</strong></p><blockquote><p>输入：n = 50<br>输出：564908303</p></blockquote><p><strong>提示：</strong></p><ul><li>1 &lt;= n &lt;= <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>10</mn><mn>15</mn></msup></mrow><annotation encoding="application/x-tex">10^{15}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">15</span></span></span></span></span></span></span></span></span></span></span></span></li></ul><h2 id="分析题意："><strong>分析题意：</strong></h2><ul><li>数字字符串为好数字需满足：偶数下标（0、2、4…）处的数字为偶数（0、2、4、6、8），共有 5 个选择；奇数下标（1、3、5…）处的数字为质数（只允许 2、3、5、7），共有 4 个选择。</li><li>偶数位的数量 <code>k</code> 为 <code>(n + 1) // 2</code>, 奇数位的数量为 <code>n - k</code></li><li>对于长度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 的数字字符串，偶数下标的数量为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌈</mo><mi>n</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">⌉</mo><mo>=</mo><mfrac><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">⌈n/2⌉ = \frac{n+1}{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord mathnormal">n</span><span class="mord">/2</span><span class="mclose">⌉</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 向下取整, 因此总共有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>5</mn><mi>k</mi></msup></mrow><annotation encoding="application/x-tex">5^k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8491em;"></span><span class="mord"><span class="mord">5</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span> 种可能，奇数下标的数量为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌊</mo><mi>n</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">⌋</mo></mrow><annotation encoding="application/x-tex">⌊n/2⌋</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌊</span><span class="mord mathnormal">n</span><span class="mord">/2</span><span class="mclose">⌋</span></span></span></span>（由于数组下标从 0 开始），因此总共有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>4</mn><mrow><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">4^{(n-k)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.888em;"></span><span class="mord"><span class="mord">4</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span> 种可能。</li></ul><h2 id="构造方案："><strong>构造方案：</strong></h2><p>因此，好数字的总数量可表示为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>ans</mtext><mo>=</mo><msup><mn>5</mn><mi>k</mi></msup><mo>×</mo><msup><mn>4</mn><mrow><mi>n</mi><mo>−</mo><mi>k</mi></mrow></msup><mspace></mspace><mspace width="1em"/><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mo stretchy="false">(</mo><msup><mn>10</mn><mn>9</mn></msup><mo>+</mo><mn>7</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\text{ans} = 5^{ k } \times 4^{ n-k } \mod (10^9+7)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord text"><span class="mord">ans</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9824em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">5</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8991em;"></span><span class="mord"><span class="mord">4</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">mod</span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">9</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">7</span><span class="mclose">)</span></span></span></span></span></p><p>给定 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 可能高达 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>10</mn><mn>15</mn></msup></mrow><annotation encoding="application/x-tex">10^{15}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">15</span></span></span></span></span></span></span></span></span></span></span></span>，直接计算大数幂需要使用快速幂算法（快速指数求幂），Python 内置的 <code>pow</code> 函数可以直接接受第三个参数来进行模运算并实现快速幂。</p><h2 id="时间复杂度："><strong>时间复杂度：</strong></h2><ul><li><p>使用快速幂算法对大指数进行求幂取模，保证运算效率且不溢出。利用指数二进制分解实现指数运算，快速幂算法的时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>log</mi><mo>⁡</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(\log n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，即使 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 高达 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>10</mn><mn>15</mn></msup></mrow><annotation encoding="application/x-tex">10^{15}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">15</span></span></span></span></span></span></span></span></span></span></span></span> 也可以在极短时间内求出结果。</p></li><li><p>使用乘法原理，将两个独立的选择相乘，即可得到所有可能性的乘积。</p></li></ul><h2 id="代码实现：">代码实现：</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">countGoodNumbers</span>(<span class="params">self, n: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        MOD = <span class="number">10</span>**<span class="number">9</span> + <span class="number">7</span></span><br><span class="line">        <span class="comment"># 计算偶数下标的数量：</span></span><br><span class="line">        k = (n + <span class="number">1</span>) // <span class="number">2</span></span><br><span class="line">        part5 = <span class="built_in">pow</span>(<span class="number">5</span>, k, MOD)    <span class="comment"># 偶数下标：0, 2, 4, ...，利用内置的 pow 函数进行快速幂取模计算</span></span><br><span class="line">        part4 = <span class="built_in">pow</span>(<span class="number">4</span>, n - k, MOD)<span class="comment"># 奇数下标：1, 3, 5, ...</span></span><br><span class="line">        <span class="keyword">return</span> (part5 * part4) % MOD</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;a href=&quot;https://leetcode.cn/problems/count-good-numbers/&quot;&gt;1922. 统计好数字的数目&lt;/a&gt; M&lt;/h1&gt;
&lt;p&gt;我们称一个数字字符串是 &lt;strong&gt;好数字&lt;/strong&gt; 当它满足（下标从 &lt;stron</summary>
      
    
    
    
    <category term="算法" scheme="https://blog.icjlu.eu.org/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="Algorithm" scheme="https://blog.icjlu.eu.org/tags/Algorithm/"/>
    
    <category term="组合数学" scheme="https://blog.icjlu.eu.org/tags/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/"/>
    
    <category term="快速幂" scheme="https://blog.icjlu.eu.org/tags/%E5%BF%AB%E9%80%9F%E5%B9%82/"/>
    
    <category term="乘法" scheme="https://blog.icjlu.eu.org/tags/%E4%B9%98%E6%B3%95/"/>
    
    <category term="中等" scheme="https://blog.icjlu.eu.org/tags/%E4%B8%AD%E7%AD%89/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode每日一题2025-04-12</title>
    <link href="https://blog.icjlu.eu.org/post/countGoodIntegers.html"/>
    <id>https://blog.icjlu.eu.org/post/countGoodIntegers.html</id>
    <published>2025-04-12T02:06:28.000Z</published>
    <updated>2025-04-12T09:02:18.467Z</updated>
    
    <content type="html"><![CDATA[<h1><a href="https://leetcode.cn/problems/find-the-count-of-good-integers/">3272. 统计好整数的数目</a> H</h1><p>给你两个 <strong>正</strong> 整数 <code>n</code> 和 <code>k</code> 。</p><p>如果一个整数 <code>x</code> 满足以下条件，那么它被称为 <strong>k</strong> <strong>回文</strong> 整数 。</p><ul><li><code>x</code> 是一个 回文整数 。</li><li><code>x</code> 能被 <code>k</code> 整除。</li></ul><p>如果一个整数的数位重新排列后能得到一个 <strong>k 回文整数</strong> ，那么我们称这个整数为 <strong>好</strong> 整数。比方说，<code>k = 2</code> ，那么 2020 可以重新排列得到 2002 ，2002 是一个 k 回文串，所以 2020 是一个好整数。而 1010 无法重新排列数位得到一个 k 回文整数。</p><p>请你返回 <code>n</code> 个数位的整数中，有多少个 <strong>好</strong> 整数。</p><p><strong>注意</strong> ，任何整数在重新排列数位之前或者之后 <strong>都不能</strong> 有前导 0 。比方说 1010 不能重排列得到 101 。</p><p><strong>示例 1：</strong></p><blockquote><p><strong>输入：</strong> n = 3, k = 5</p><p><strong>输出：</strong> 27</p><p><strong>解释：</strong></p><p>部分好整数如下：</p><ul><li>551 ，因为它可以重排列得到 515 。</li><li>525 ，因为它已经是一个 k 回文整数。</li></ul></blockquote><p><strong>示例 2：</strong></p><blockquote><p><strong>输入：</strong> n = 1, k = 4</p><p><strong>输出：</strong> 2</p><p><strong>解释：</strong></p><p>两个好整数分别是 4 和 8 。</p></blockquote><p><strong>示例 3：</strong></p><blockquote><p><strong>输入：</strong> n = 5, k = 6</p><p><strong>输出：</strong> 2468</p></blockquote><p><strong>提示：</strong></p><ul><li><code>1 &lt;= n &lt;= 10</code></li><li><code>1 &lt;= k &lt;= 9</code></li></ul><h2 id="分析思路">分析思路</h2><p>我们可以把问题拆分为两个部分：</p><ol><li><strong>判断数位集合是否有回文排列</strong><br>一个数的数位可以重新排列成回文数当且仅当：<ul><li>当 n 为偶数：所有数字出现次数均为偶数。</li><li>当 n 为奇数：最多只有一个数字出现次数为奇数，其余为偶数。</li></ul></li><li><strong>存在回文排列且该排列满足被 k 整除</strong><ul><li>由于我们要求构造的回文排列不能有前导 0，所以构造时需要保证最左位数字不为 0。</li><li>对于一个给定的符合“回文排列”条件的数位集合，若存在一种排列构成的回文数能被 k 整除，则我们将此多重集认为是合格的。</li><li>注意：一个 n 位整数只要其数位集合满足条件（存在至少一种排列构成合格的 k 回文数），那么所有拥有相同数位多重集的 n 位整数都是好整数。</li></ul></li></ol><h3 id="构造方案">构造方案</h3><p>由于 n 的范围最多为 10，因此直接枚举所有 n 位<strong>回文数</strong>来检查被 k 整除的条件是可行的。根据 n 的奇偶性，我们可以分为两种情况：</p><ul><li><p><strong>n 为偶数</strong>：<br>设 m = n/2，回文数为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">half + reverse(half)</span><br></pre></td></tr></table></figure><p>枚举长度为 m 的数字串，其中第一个字符（对应整体最高位）不为 0。</p></li><li><p><strong>n 为奇数</strong>：<br>设 m = n//2，则回文数为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">half + mid + reverse(half)</span><br></pre></td></tr></table></figure><p>其中 half 枚举同上（第一个字符非 0），mid 为 0～9 均可。</p></li></ul><p>对于每个构造出来的回文数，如果它满足能被 k 整除的条件，则提取其“数字多重集”（即各个数字出现的次数），并存入一个集合中，确保对于同一多重集只记录一次。</p><h3 id="计数方法">计数方法</h3><p>对于一个记录下来的数字多重集（长度为 n），所有的排列数为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>total</mtext><mo>=</mo><mfrac><mrow><mi>n</mi><mo stretchy="false">!</mo></mrow><mrow><munderover><mo>∏</mo><mrow><mi>d</mi><mo>=</mo><mn>0</mn></mrow><mn>9</mn></munderover><mo stretchy="false">(</mo><mtext>count</mtext><mo stretchy="false">[</mo><mi>d</mi><mo stretchy="false">]</mo><mo stretchy="false">!</mo><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">\text{total} = \frac{n!}{\prod_{d=0}^{9} (\text{count}[d]!)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord text"><span class="mord">total</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.5152em;vertical-align:-1.1437em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.156em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∏</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.954em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">9</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord text"><span class="mord">count</span></span><span class="mopen">[</span><span class="mord mathnormal">d</span><span class="mclose">]!)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="mclose">!</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1437em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>但由于存在前导 0 的问题，对于包含 0 的情况，我们需要剔除那些首位为 0 的排列。</p><ul><li>若多重集中 0 出现次数为 c0 &gt; 0，则固定首位为 0后，剩余排列数为</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>invalid</mtext><mo>=</mo><mfrac><mrow><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">!</mo></mrow><mrow><mo stretchy="false">(</mo><msub><mi>c</mi><mn>0</mn></msub><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">!</mo><munderover><mo>∏</mo><mrow><mi>d</mi><mo>=</mo><mn>1</mn></mrow><mn>9</mn></munderover><mo stretchy="false">(</mo><mtext>count</mtext><mo stretchy="false">[</mo><mi>d</mi><mo stretchy="false">]</mo><mo stretchy="false">!</mo><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">\text{invalid} = \frac{(n-1)!}{(c_0-1)! \prod_{d=1}^{9} (\text{count}[d]!)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord text"><span class="mord">invalid</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.5707em;vertical-align:-1.1437em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.156em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">)!</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∏</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.954em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">9</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord text"><span class="mord">count</span></span><span class="mopen">[</span><span class="mord mathnormal">d</span><span class="mclose">]!)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">)!</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1437em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><ul><li>故该多重集对应的合法 n 位数字数为<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>valid</mtext><mo>=</mo><mtext>total</mtext><mo>−</mo><mtext>invalid</mtext><mspace width="1em"/><mrow><mo fence="true">(</mo><mtext>当 </mtext><msub><mi>c</mi><mn>0</mn></msub><mo>&gt;</mo><mn>0</mn><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\text{valid} = \text{total} - \text{invalid} \quad \left( \text{当}\ c_0 &gt; 0 \right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord text"><span class="mord">valid</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord text"><span class="mord">total</span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">invalid</span></span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord text"><span class="mord cjk_fallback">当</span></span><span class="mspace"> </span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span></span></p>或者当 c0=0，则 valid = total。</li></ul><p>对所有满足条件的多重集，将其合法排列数累加即为答案。</p><h3 id="算法时间复杂度分析">算法时间复杂度分析</h3><ul><li><p><strong>枚举回文数</strong></p><ul><li>对于 n 为偶数：需要枚举 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>10</mn><mrow><mfrac><mi>n</mi><mn>2</mn></mfrac><mo>−</mo><mn>1</mn></mrow></msup><mo>∗</mo><mn>9</mn></mrow><annotation encoding="application/x-tex">10^{\frac{n}{2}-1} * 9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8471em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8471em;"><span style="top:-3.363em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6915em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.2255em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">9</span></span></span></span> 个数，最多约<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mn>10</mn><mfrac><mi>n</mi><mn>2</mn></mfrac></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(10^\frac{n}{2})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0971em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8471em;"><span style="top:-3.363em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6915em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.2255em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>；</li><li>对于 n 为奇数：乘上 10 种中间数字情况，依然是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mn>10</mn><mfrac><mi>n</mi><mn>2</mn></mfrac></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(10^\frac{n}2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0971em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8471em;"><span style="top:-3.363em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6915em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.2255em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。</li></ul><p>由于 n ≤ 10，最坏情形枚举数量不会超过 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>10</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span>，计算量是可接受的。</p></li><li><p><strong>多重集计数</strong><br>对于每个多重集，计算排列数的时间复杂度为 O(10)（数字个数恒定），因此总体时间复杂度主要取决于回文数枚举部分，为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mn>10</mn><mfrac><mi>n</mi><mn>2</mn></mfrac></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(10^\frac{n}2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0971em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8471em;"><span style="top:-3.363em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6915em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.2255em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。</p></li></ul><h3 id="总结">总结</h3><ol><li>枚举所有符合 n 位、无前导 0 的回文数；</li><li>检查该回文数能否被 k 整除；</li><li>对满足条件的回文数，提取其数字多重集，并保证每个多重集只计入一次；</li><li>对每个多重集，计算所有排列中首位不为 0 的排列数，并累加结果。</li></ol><h3 id="代码实现：">代码实现：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> factorial</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">countGoodIntegers</span>(<span class="params">self, n: <span class="built_in">int</span>, k: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        统计 n 位整数中好整数的数量。</span></span><br><span class="line"><span class="string">        好整数定义为：其数位重新排列后可以得到一个回文且能被 k 整除，</span></span><br><span class="line"><span class="string">        且排列后不能有前导 0。</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># 对 n==1 情况单独处理</span></span><br><span class="line">        <span class="keyword">if</span> n == <span class="number">1</span>:</span><br><span class="line">            count = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> d <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">10</span>):</span><br><span class="line">                <span class="keyword">if</span> d % k == <span class="number">0</span>:</span><br><span class="line">                    count += <span class="number">1</span></span><br><span class="line">            <span class="keyword">return</span> count</span><br><span class="line">        </span><br><span class="line">        good_multisets = <span class="built_in">set</span>()  <span class="comment"># 存储符合条件的多重集（以元组形式存储 0~9 的数字出现次数）</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> n % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">            <span class="comment"># n 为偶数，回文数由半边构造</span></span><br><span class="line">            half_len = n // <span class="number">2</span></span><br><span class="line">            start = <span class="number">10</span> ** (half_len - <span class="number">1</span>)</span><br><span class="line">            end = <span class="number">10</span> ** half_len</span><br><span class="line">            <span class="keyword">for</span> num <span class="keyword">in</span> <span class="built_in">range</span>(start, end):</span><br><span class="line">                half_str = <span class="built_in">str</span>(num)</span><br><span class="line">                pal_str = half_str + half_str[::-<span class="number">1</span>]  <span class="comment"># 构造回文数</span></span><br><span class="line">                <span class="comment"># 已经保证 half_str 的首位不为 &#x27;0&#x27;</span></span><br><span class="line">                pal_num = <span class="built_in">int</span>(pal_str)</span><br><span class="line">                <span class="keyword">if</span> pal_num % k == <span class="number">0</span>:</span><br><span class="line">                    counts = [<span class="number">0</span>] * <span class="number">10</span></span><br><span class="line">                    <span class="keyword">for</span> ch <span class="keyword">in</span> pal_str:</span><br><span class="line">                        counts[<span class="built_in">int</span>(ch)] += <span class="number">1</span></span><br><span class="line">                    good_multisets.add(<span class="built_in">tuple</span>(counts))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment"># n 为奇数，多一位中间数字</span></span><br><span class="line">            half_len = n // <span class="number">2</span></span><br><span class="line">            <span class="comment"># 当 n&gt;=3 时，half_len&gt;=1，此时可以按原逻辑构造</span></span><br><span class="line">            start = <span class="number">10</span> ** (half_len - <span class="number">1</span>)</span><br><span class="line">            end = <span class="number">10</span> ** half_len</span><br><span class="line">            <span class="keyword">for</span> num <span class="keyword">in</span> <span class="built_in">range</span>(start, end):</span><br><span class="line">                half_str = <span class="built_in">str</span>(num)</span><br><span class="line">                <span class="keyword">for</span> mid <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">                    pal_str = half_str + <span class="built_in">str</span>(mid) + half_str[::-<span class="number">1</span>]</span><br><span class="line">                    <span class="comment"># half_str 保证首位不为 &#x27;0&#x27;</span></span><br><span class="line">                    pal_num = <span class="built_in">int</span>(pal_str)</span><br><span class="line">                    <span class="keyword">if</span> pal_num % k == <span class="number">0</span>:</span><br><span class="line">                        counts = [<span class="number">0</span>] * <span class="number">10</span></span><br><span class="line">                        <span class="keyword">for</span> ch <span class="keyword">in</span> pal_str:</span><br><span class="line">                            counts[<span class="built_in">int</span>(ch)] += <span class="number">1</span></span><br><span class="line">                        good_multisets.add(<span class="built_in">tuple</span>(counts))</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 预计算阶乘</span></span><br><span class="line">        fact = [<span class="number">1</span>] * (n + <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, n + <span class="number">1</span>):</span><br><span class="line">            fact[i] = fact[i - <span class="number">1</span>] * i</span><br><span class="line">        </span><br><span class="line">        total_good = <span class="number">0</span></span><br><span class="line">        <span class="comment"># 对每个符合条件的数字多重集，计算满足无前导0限制的排列数</span></span><br><span class="line">        <span class="keyword">for</span> counts <span class="keyword">in</span> good_multisets:</span><br><span class="line">            <span class="comment"># 计算该多重集所有排列数： n! / (c0! * c1! * ... * c9!)</span></span><br><span class="line">            total_perm = fact[n]</span><br><span class="line">            <span class="keyword">for</span> c <span class="keyword">in</span> counts:</span><br><span class="line">                total_perm //= fact[c]</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># 如果该多重集中包含0，需要排除首位为0的排列</span></span><br><span class="line">            <span class="keyword">if</span> counts[<span class="number">0</span>] &gt; <span class="number">0</span>:</span><br><span class="line">                <span class="comment"># 固定首位为0，剩余的排列数为 (n-1)! / ((c0-1)! * (c1)! ... (c9)!)</span></span><br><span class="line">                prod_nonzero = <span class="number">1</span></span><br><span class="line">                <span class="keyword">for</span> d <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">10</span>):</span><br><span class="line">                    prod_nonzero *= fact[counts[d]]</span><br><span class="line">                invalid = fact[n - <span class="number">1</span>] // (fact[counts[<span class="number">0</span>] - <span class="number">1</span>] * prod_nonzero)</span><br><span class="line">                valid_perm = total_perm - invalid</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                valid_perm = total_perm</span><br><span class="line">            </span><br><span class="line">            total_good += valid_perm</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> total_good</span><br></pre></td></tr></table></figure><blockquote><p>注意：需要对 n==1 的情况进行单独处理。由于一位数的重排列只能为其本身，所以对于一位数，只需要统计 1 到 9 中能被 k 整除的数字即可。</p></blockquote><ol><li><p><strong>对 n==1 的处理</strong><br>直接遍历 1～9 的单个数字，检查每个数字是否能被 k 整除，若能则计数。</p></li><li><p><strong>回文数生成</strong></p></li></ol><ul><li><p>当 n 为偶数时，构造回文数格式为 <code>half + reverse(half)</code>。</p></li><li><p>当 n 为奇数时，遍历中间数字 <code>mid</code>，构造回文数格式为 <code>half + mid + reverse(half)</code>。</p><blockquote><p>注：此处保证 <code>half</code> 的首位非 0。</p></blockquote></li></ul><ol start="3"><li><strong>多重集记录与排列数计算</strong></li></ol><ul><li>将符合条件的回文数的数字多重集（各个数字出现的次数）存入集合避免重复计入。</li><li>利用阶乘及组合公式计算总排列数，再剔除那些首位为 0 的排列（当数字 0 存在时）。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;a href=&quot;https://leetcode.cn/problems/find-the-count-of-good-integers/&quot;&gt;3272. 统计好整数的数目&lt;/a&gt; H&lt;/h1&gt;
&lt;p&gt;给你两个 &lt;strong&gt;正&lt;/strong&gt; 整数 &lt;code&gt;n&lt;</summary>
      
    
    
    
    <category term="算法" scheme="https://blog.icjlu.eu.org/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="Algorithm" scheme="https://blog.icjlu.eu.org/tags/Algorithm/"/>
    
    <category term="排列组合" scheme="https://blog.icjlu.eu.org/tags/%E6%8E%92%E5%88%97%E7%BB%84%E5%90%88/"/>
    
    <category term="回文数构造" scheme="https://blog.icjlu.eu.org/tags/%E5%9B%9E%E6%96%87%E6%95%B0%E6%9E%84%E9%80%A0/"/>
    
    <category term="枚举与剪枝" scheme="https://blog.icjlu.eu.org/tags/%E6%9E%9A%E4%B8%BE%E4%B8%8E%E5%89%AA%E6%9E%9D/"/>
    
    <category term="困难" scheme="https://blog.icjlu.eu.org/tags/%E5%9B%B0%E9%9A%BE/"/>
    
  </entry>
  
  <entry>
    <title>Excel函数使用与周报开发</title>
    <link href="https://blog.icjlu.eu.org/post/excelfunc.html"/>
    <id>https://blog.icjlu.eu.org/post/excelfunc.html</id>
    <published>2025-04-11T13:15:25.000Z</published>
    <updated>2025-04-21T06:13:25.479Z</updated>
    
    <content type="html"><![CDATA[<h1>Excel 知识笔记</h1><p>本文主要介绍 Excel 中的一些高级知识和常用函数，重点涵盖数据透视表、常用函数（SUM、SUMIF、SUMIFS、SUBTOTAL、IF、VLOOKUP、XLOOKUP、INDEX、MATCH）以及周报开发的相关内容。</p><hr><h2 id="1-📊-数据透视表（Pivot-Table）">1. 📊 数据透视表（Pivot Table）</h2><h3 id="1-1-数据透视表简介">1.1. 数据透视表简介</h3><p>数据透视表是 Excel 中用于<em><strong>快速汇总、分析和展示</strong></em>大量数据的工具。它能够根据用户的需求动态调整数据的展示形式，例如按类别汇总、计算总和或平均值等。</p><h3 id="1-2-创建数据透视表">1.2. 创建数据透视表</h3><ol><li><p>选择数据区域（确保数据有表头）。</p></li><li><p>进入“插入”选项卡，点击“数据透视表”按钮。</p></li><li><p>在弹出的对话框中，选择新建工作表或现有工作表。</p><p><img src="https://s2.loli.net/2025/04/11/Gh6kwbrclpPS82o.png" alt="excel_pivot"></p></li><li><p>在数据透视表字段窗格中拖拽字段至行、列、数值和筛选区域。</p><p><img src="https://s2.loli.net/2025/04/11/ZHY3WJm5oLaj74A.png" alt="excel_pivot2"></p><blockquote><p>将文本型拖拽至行，数值型拖拽至值，可以实现sum+group by的效果</p></blockquote></li><li><p>双击字段可以对其进行重命名</p><p><img src="https://s2.loli.net/2025/04/11/LDnbkg3AVUR4EFr.png" alt="excel_pivot3"></p></li><li><p>在字段、项目和集中可以插入自定义计算字段，输入完成后修改名称点击修改即可添加，添加完成后会出现在数据透视表字段中，勾选后即可添加到数据透视表中</p></li></ol><p><img src="https://s2.loli.net/2025/04/11/lhR4vWUEztXDI1n.png" alt="excel_pivot4"></p><h3 id="1-3-数据透视表技巧">1.3. 数据透视表技巧</h3><ul><li><p><strong>字段筛选和排序</strong>：利用字段列表中的筛选按钮对数据进行快速筛选和排序。</p></li><li><p><strong>分组数据</strong>：右击行/列标签，选择“分组”，例如按日期分组按月或季度统计。</p></li><li><p><strong>数据格式化</strong>：右键单击数据区域，选择“值字段设置”，自定义数据汇总方式和数字格式。</p></li><li><p>拖拽字段到对应区域：</p><ul><li><p><strong>行/列</strong>：分组维度（时间等）</p></li><li><p><strong>值</strong>：计算指标（求和/计数/平均值/占比）</p></li><li><p><strong>筛选器</strong>：数据过滤，直接拖拽字段即可在数据透视表增加筛选项</p></li><li><p>插入切片器：可视化<strong>联动</strong>筛选，点击不同的筛选项，数据透视表会自动更新表内数值，同时，切片器处于<strong>当前工作表外</strong>的工作表时点击，同样可以筛选当前表的内容，而筛选器只能在当前数据透视表内使用</p><p><img src="https://s2.loli.net/2025/04/11/9pQjEZkbTftowRe.png" alt="excel_pivot5"></p></li><li><p>刷新数据：右键 → 刷新</p></li></ul></li><li><p>点击数据透视表，插入数据透视图，右键可以更改图表类型，可以插入多张数据透视图，图表也会根据切片器内容进行变换</p></li></ul><p><img src="https://s2.loli.net/2025/04/11/RVvXKolMzHcIrQd.png" alt="excel_pivot6"></p><p><img src="https://s2.loli.net/2025/04/11/yYMwi9xvP8BSabK.png" alt="excel_pivot7"></p><ul><li>插入组合图可以将多种图表混合展示</li></ul><p><img src="https://s2.loli.net/2025/04/11/DQKchpe7EJ9TIxH.png" alt="excel_pivot8"></p><hr><h2 id="2-📈-进阶数据透视表技巧">2.📈 进阶数据透视表技巧</h2><h3 id="1-计算字段与计算项">1. 计算字段与计算项</h3><ul><li><p><strong>计算字段</strong>：在值区域添加自定义公式<br><code>分析 → 字段、项目和集 → 计算字段</code><br>示例：<code>利润率 = (销售额 - 成本)/销售额</code></p></li><li><p><strong>时间智能计算</strong>（结合Power Pivot）</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MTD销售额 <span class="symbol">:</span>= TOTALMTD(<span class="built_in">SUM</span>(数据[销售额]), 数据[日期])</span><br></pre></td></tr></table></figure></li></ul><h3 id="2-动态数据源">2. 动态数据源</h3><ul><li><strong>超级表（Ctrl+T）</strong><br>将数据区域转换为表 → 透视表自动扩展范围</li><li><strong>连接Power Query</strong><br>通过ETL清洗后的数据自动更新透视表</li></ul><hr><h2 id="3-常用函数详解">3. 常用函数详解</h2><h3 id="2-1-SUM">2.1. SUM</h3><ul><li><p><strong>功能</strong>：对一组数值求和。</p></li><li><p><strong>语法</strong>： <code>=SUM(number1, [number2], …)</code></p></li><li><p><strong>示例</strong>：</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=<span class="built_in">SUM</span>(<span class="symbol">A1</span>:<span class="symbol">A10</span>)</span><br></pre></td></tr></table></figure></li></ul><h3 id="2-2-SUMIF">2.2. SUMIF</h3><ul><li><p><strong>功能</strong>：根据单一条件对范围内符合条件的数值求和。</p></li><li><p><strong>语法</strong>： <code>=SUMIF(range, criteria, [sum_range])</code></p></li><li><p><strong>示例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=SUMIF(B1:B10, &quot;&gt;100&quot;, C1:C10)</span><br></pre></td></tr></table></figure></li></ul><h3 id="2-3-SUMIFS">2.3. SUMIFS</h3><ul><li><p><strong>功能</strong>：根据多个条件对范围内符合条件的数值求和。</p></li><li><p><strong>语法</strong>： <code>=SUMIFS(sum_range, criteria_range1, criteria1, [criteria_range2, criteria2], …)</code></p></li><li><p>sumifs(要返回的值所在列, 查找条件1所在列, 查找限定条件1, 查找条件2所在列, 查找限定条件2……)</p></li><li><p><strong>示例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=SUMIFS(C1:C10, A1:A10, &quot;产品A&quot;, B1:B10, &quot;&gt;100&quot;)</span><br></pre></td></tr></table></figure></li><li><p>通常会设计计算月总和，环比等数值，因此需要计算上个月的这一天用来作为被减项用于筛选时间范围，Excel中，日期表示的是从1900.01.01到今天的天数，有以下几种方法可以计算上个月</p><ul><li><code>EDATE(start_date，months)</code>返回一串日期，指示起始日期之前/之后的月数，如<code>EDATE(A1，-1)</code>表示这天的前一个月，7月31日会返回6月30日</li><li><code>EOMONTH(start_date，months)</code>返回一串日期，表示指定月数之前或之后的月份的最后一天（只针对月份操作）如<code>EOMONTH(A1,-1)+1</code>表示这个时间月份的第一天，比如8月（无论几号）会返回8月1日，不+1则会返回7月31日</li><li><code>DATE(YEAR(A1),MONTH(A1),1)</code>返回本月的第一天，最直观的形式，在date函数外再-1即可返回上月的最后一天</li></ul></li></ul><h3 id="2-4-SUBTOTAL">2.4. SUBTOTAL</h3><ul><li><p><strong>功能</strong>：返回数据列表或数据库中的分类汇总。subtotal值会根据字段筛选而变化。</p></li><li><p><strong>语法</strong>： <code>=SUBTOTAL(function_num, ref1, [ref2], …)</code></p></li><li><p><strong>常用 function_num</strong>：</p><ul><li>9：求和</li><li>1：求平均值</li></ul></li><li><p><strong>示例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=SUBTOTAL(9, A1:A10)</span><br></pre></td></tr></table></figure></li></ul><h3 id="2-5-IF">2.5. IF</h3><ul><li><p><strong>功能</strong>：根据条件返回不同的结果，一般需要多层嵌套使用。</p></li><li><p><strong>语法</strong>： <code>=IF(logical_test, value_if_true, value_if_false)</code></p></li><li><p><strong>示例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=IF(A1&gt;100, &quot;大于100&quot;, &quot;小于等于100&quot;)</span><br></pre></td></tr></table></figure></li></ul><h3 id="2-6-VLOOKUP">2.6. VLOOKUP</h3><ul><li><p><strong>功能</strong>：在数据区域的首列中搜索指定值，并返回该值所在行中指定列的内容。</p></li><li><p><strong>语法</strong>： <code>=VLOOKUP(lookup_value, table_array, col_index_num, [range_lookup])</code></p></li><li><p>VLOOKUP(查找值, 查找区域(要查找的必须在第一列), 返回第几列, 0)</p></li><li><p><strong>示例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=VLOOKUP(&quot;产品A&quot;, A1:D10, 3, FALSE)</span><br></pre></td></tr></table></figure></li></ul><h3 id="2-7-XLOOKUP">2.7. XLOOKUP</h3><ul><li><p><strong>功能</strong>：现代化的查找函数，能够向任意方向查找数据，取代 VLOOKUP/HLOOKUP。</p></li><li><p><strong>语法</strong>： <code>=XLOOKUP(lookup_value, lookup_array, return_array, [if_not_found], [match_mode], [search_mode])</code></p></li><li><p>XLOOKUP(查找值, 查找值所在列, 返回列, 未找到返回值(可选), 匹配模式(可选), 搜索模式(可选))</p></li><li><p><strong>示例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=XLOOKUP(&quot;产品A&quot;, A1:A10, C1:C10, &quot;未找到&quot;)</span><br></pre></td></tr></table></figure></li></ul><h3 id="2-8-INDEX-和-MATCH">2.8. INDEX 和 MATCH</h3><ul><li><p><strong>INDEX</strong></p><ul><li><strong>功能</strong>：返回数组中指定位置的值。</li><li><strong>语法</strong>： <code>=INDEX(array, row_num, [column_num])</code></li><li>INDEX(区域, 行号, 列号)：根据行号从某列中返回对应的值</li></ul></li><li><p><strong>MATCH</strong></p><ul><li><strong>功能</strong>：返回指定值在一维数组中的相对位置。</li><li><strong>语法</strong>： <code>=MATCH(lookup_value, lookup_array, [match_type])</code></li><li>MATCH(查找值, 区域, 0)：在某行/列中查找指定的值，并返回其列/行号</li></ul></li><li><p><strong>组合使用示例</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">=INDEX(C1:C10, MATCH(&quot;产品A&quot;, A1:A10, 0))</span><br><span class="line"></span><br><span class="line">index(数据区域,match(行查找顶,index数据区域的相对区域,0),match(列查找项,indexB数据区域的相对区域,0))</span><br></pre></td></tr></table></figure></li></ul><p>同时使用xlookup和index+match实现的相同功能</p><p><img src="https://s2.loli.net/2025/04/11/tpAuPg7GJbKjSQF.png" alt="index_match"></p><p>当函数不清晰时，可以先把要实现的函数单独写好，再复制进完整的表达式，同时可以配合<code>ALT+ENTER</code>在函数中换行避免混淆</p><h2 id="4-🔢-常用函数总结">4.🔢 常用函数总结</h2><h3 id="基础聚合">基础聚合</h3><table><thead><tr><th>函数</th><th>语法</th><th>说明</th><th>周报应用示例</th></tr></thead><tbody><tr><td>SUM</td><td><code>=SUM(range)</code></td><td>基础求和</td><td><code>=SUM(C2:C100)</code> → 周总销售额</td></tr><tr><td>SUMIF</td><td><code>=SUMIF(range, criteria, [sum_range])</code></td><td>单条件求和</td><td><code>=SUMIF(A2:A100, &quot;华东&quot;, C2:C100)</code> → 华东区销售总额</td></tr><tr><td>SUMIFS</td><td><code>=SUMIFS(sum_range, criteria_range1, criteria1, ...)</code></td><td>多条件求和</td><td><code>=SUMIFS(C2:C100, A2:A100, &quot;华东&quot;, B2:B100, &quot;&gt;2023-01-01&quot;)</code></td></tr><tr><td>SUBTOTAL</td><td><code>=SUBTOTAL(function_num, range)</code></td><td>分类汇总（支持筛选）</td><td><code>=SUBTOTAL(9, C2:C100)</code> → 筛选后可见数据求和</td></tr></tbody></table><h3 id="逻辑判断">逻辑判断</h3><table><thead><tr><th>IF</th><th><code>=IF(logical_test, [value_if_true], [value_if_false])</code></th></tr></thead><tbody><tr><td>示例</td><td><code>=IF(C2&gt;10000, &quot;达标&quot;, &quot;未达标&quot;)</code> → 销售目标判断</td></tr></tbody></table><h3 id="查找匹配">查找匹配</h3><table><thead><tr><th>函数</th><th>语法</th><th>特点</th></tr></thead><tbody><tr><td>VLOOKUP</td><td><code>=VLOOKUP(lookup_value, table_array, col_index_num, [range_lookup])</code></td><td>纵向查找，需注意<strong>首列匹配</strong>和<strong>列索引号</strong></td></tr><tr><td>XLOOKUP</td><td><code>=XLOOKUP(lookup_value, lookup_array, return_array, [if_not_found], [match_mode], [search_mode])</code></td><td>支持双向查找、错误处理，更灵活</td></tr><tr><td>INDEX+MATCH</td><td><code>=INDEX(return_range, MATCH(lookup_value, lookup_range, 0))</code></td><td>灵活组合，支持多维度查找</td></tr></tbody></table><hr><ul><li></li></ul><hr><h2 id="5-🔍-高阶函数扩展">5.🔍 高阶函数扩展</h2><h3 id="动态数组函数（Excel-365-）">动态数组函数（Excel 365+）</h3><table><thead><tr><th>函数</th><th>作用</th><th>周报应用</th></tr></thead><tbody><tr><td>FILTER</td><td>条件筛选数据区域</td><td><code>=FILTER(订单表, (销售额&gt;10000)*(区域=&quot;华东&quot;))</code></td></tr><tr><td>SORT</td><td>动态排序</td><td><code>=SORT(UNIQUE(产品列表),,-1)</code></td></tr><tr><td>UNIQUE</td><td>去重提取</td><td><code>=UNIQUE(销售大区)</code></td></tr></tbody></table><h3 id="时间处理函数">时间处理函数</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">=WEEKNUM(A2)  // 返回日期所属周数（周报核心函数）</span><br><span class="line">=EDATE(A2,3)  // 计算3个月后的日期（常用于滚动预测）</span><br><span class="line">=TEXT(A2,&quot;YYYY-MMM&quot;)  // 日期转&quot;2023-Jul&quot;格式</span><br></pre></td></tr></table></figure><h3 id="错误处理">错误处理</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">=IFERROR(VLOOKUP(...), &quot;未找到&quot;)  // 屏蔽#N/A错误</span><br><span class="line">=AGGREGATE(9,6,C2:C100)  // 忽略隐藏行和错误值的求和</span><br></pre></td></tr></table></figure><h2 id="6-周报开发">6.周报开发</h2><ul><li>[ ] 掌握数据引用、公式填写和自动化拖拽等基本功能</li><li>[ ] 理解数据美化、数据计算与逻辑结构的构建</li></ul><p><strong>整体流程建议：</strong></p><ul><li><strong>先搭建框架：</strong> 建立好各区域结构及基本引用和公式</li><li><strong>再填数据：</strong> 在框架内填充各项指标数据和日期</li><li><strong>最后美化：</strong> 格式设置、风格统一等作为最后一步处理，避免中途美化造成数据修改的不便</li></ul><h3 id="6-1-周报框架搭建">6.1 周报框架搭建</h3><h4 id="1-周报结构">1. 周报结构</h4><ul><li><p><strong>四大区域</strong>：</p><ol><li>标题（包含时间范围）</li><li>目标看板（单独区域展示周报的目标内容，如累计值，环比，同比等，同时包含筛选器）</li><li>结果指标（GMV、商家实收、到手率等）</li><li>过程指标（曝光人数、转化率等）</li></ol><blockquote><p>小看板区域（3、4）显示关键指标的概览，通常包括目标、区域、过程指标和结果指标。</p></blockquote></li></ul><h4 id="2-基础设置">2. 基础设置</h4><ul><li><p><strong>标题</strong>：<code>A2</code>单元格填写<code>2020年8月第二周</code></p></li><li><p><strong>日期列</strong>：</p><ul><li>输入起始日期（如在<code>A13</code>输入<code>2020-08-10</code>）</li><li>后续日期使用公式<code>=A13+1</code>并拖动填充（需从第二个单元格开始拖动）向下拖动填充至 A19，生成 8 月 10 日 - 16 日的日期。</li></ul><p><img src="https://s2.loli.net/2025/04/11/JrDCv3qbeVa6XdM.png" alt="zhoubao1"></p></li><li><p><strong>星期列</strong>：</p><ul><li>右键单元格 → 设置单元格格式 → 数字 → 日期 → 选择 “周几” 格式（如 “周三”）</li></ul><p><img src="https://s2.loli.net/2025/04/11/xApZhg4wFU9Inke.png" alt="zhoubao2"></p></li><li><p><strong>日期联动</strong>：</p><ul><li>所有与日期相关的操作都建议使用引用方式，这样如果改变某个日期数据，其他依赖数据也会自动更新，极大地提升工作效率</li><li>使用公式动态引用日期，避免手动修改（选中 <code>A13:A19</code>，根据需要设置为 “短日期” 格式，如<code>=TEXT(A2, &quot;m月d日&quot;)</code>）</li></ul></li></ul><h4 id="3-指标体系构建">3.  指标体系构建</h4><ol><li>结果指标（核心数据）</li></ol><table><thead><tr><th>指标</th><th>说明</th><th>计算公式</th></tr></thead><tbody><tr><td>GMV</td><td>总成交额</td><td>直接引用原数据或通过 SUMIFS 计算</td></tr><tr><td>商家实收</td><td>商家实际收入</td><td>同上</td></tr><tr><td>到手率</td><td>实收 / GMV，反映收入转化率</td><td><code>=商家实收/GMV</code></td></tr><tr><td>有效订单</td><td>有效订单数</td><td>直接引用</td></tr><tr><td>无效订单</td><td>无效订单数</td><td>直接引用</td></tr><tr><td>客单价</td><td>GMV / 有效订单，反映平均消费金额</td><td><code>=GMV/有效订单</code></td></tr></tbody></table><ol start="2"><li>过程指标（流量漏斗）</li></ol><table><thead><tr><th>指标</th><th>说明</th><th>计算公式</th></tr></thead><tbody><tr><td>曝光人数</td><td>店铺曝光次数</td><td>直接引用</td></tr><tr><td>进店人数</td><td>点击进入店铺的人数</td><td>直接引用</td></tr><tr><td>进店转化率</td><td>进店人数 / 曝光人数，反映流量承接能力</td><td><code>=进店人数/曝光人数</code></td></tr><tr><td>下单人数</td><td>实际下单的人数</td><td>直接引用</td></tr><tr><td>下单转化率</td><td>下单人数 / 进店人数，反映转化效率</td><td><code>=下单人数/进店人数</code></td></tr><tr><td>营销占比</td><td>cpc总费用 / GMV，反映投放效果</td><td><code>=cpc总费用 / GMV</code></td></tr></tbody></table><hr><h3 id="6-2-核心函数与数据引用">6.2 核心函数与数据引用</h3><h4 id="1-数据验证（筛选器）">1. 数据验证（筛选器）</h4><ul><li><p><strong>步骤</strong>：</p><ol><li>选择目标单元格（如平台筛选器）</li><li>数据 → 数据验证 → 允许“序列”</li><li>输入选项：<code>全部,美团,饿了么</code>（英文逗号分隔）</li><li>点击确定，生成下拉菜单</li></ol><p><img src="https://s2.loli.net/2025/04/11/RVzQnEvb31qcoOw.png" alt="zhoubao3"></p><blockquote><p><strong>作用</strong>：通过选择平台（全部 / 美团 / 饿了么），动态筛选对应数据。</p></blockquote></li></ul><h4 id="2-动态条件求和（SUMIFS）">2. 动态条件求和（SUMIFS）</h4><ul><li><p><strong>配合筛选器的公式逻辑</strong>：</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">=<span class="built_in">IF</span>(</span><br><span class="line">  平台单元格=<span class="string">&quot;全部&quot;</span>,</span><br><span class="line">  <span class="built_in">SUMIF</span>(日期列, 当前日期, GMV列),</span><br><span class="line">  <span class="built_in">SUMIFS</span>(GMV列, 日期列, 当前日期, 平台列, 平台单元格)</span><br><span class="line">)</span><br></pre></td></tr></table></figure></li><li><p><strong>绝对引用与相对引用</strong>：</p><ul><li>固定不变的列或单元格使用绝对引用，例如: <code>H$5</code>, <code>A:A</code></li><li>需要随拖拽变化的行或列使用相对引用，例如: <code>A13</code></li><li>混合引用用于锁定列或行，例如: <code>A$13</code></li><li>锁定区域：<code>$A$2:$X$1000</code></li><li>锁定条件单元格：<code>$H$5</code>（平台筛选器）</li></ul></li></ul><h4 id="3-动态列引用（INDEX-MATCH）">3. 动态列引用（INDEX+MATCH）</h4><p><strong>目标</strong>：让函数自动识别表头列，提高灵活性（如 GMV 列、商家实收列可动态切换），因此需要先写出日期列，平台列（筛选器），求和列的公式</p><ul><li><p><strong>查找列名位置</strong>：</p><p>使用MATCH 找到目标列在表头中的位置，再使用INDEX 根据列位置提取数据</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=<span class="built_in">INDEX</span>(原表数据区域, <span class="number">0</span>, <span class="built_in">MATCH</span>(列名标题, 表头行, <span class="number">0</span>))</span><br></pre></td></tr></table></figure></li><li><p><strong>示例（日期列动态引用）</strong>：</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=<span class="built_in">INDEX</span>($<span class="symbol">A:</span>$X, <span class="number">0</span>, <span class="built_in">MATCH</span>(<span class="string">&quot;日期&quot;</span>, $A$<span class="symbol">1:</span>$X$<span class="number">1</span>, <span class="number">0</span>))</span><br></pre></td></tr></table></figure></li><li><p><strong>示例（动态求和 GMV 列）：</strong></p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=<span class="built_in">SUMIFS</span>(<span class="built_in">INDEX</span>(数据区域, , <span class="built_in">MATCH</span>(<span class="string">&quot;GMV&quot;</span>, 表头, <span class="number">0</span>)), 日期列, 当天日期, 平台列, <span class="symbol">H5</span>)</span><br></pre></td></tr></table></figure></li></ul><p><strong>拖拽填充：</strong></p><ul><li>从第二个有公式的单元格开始拖拽，确保公式自动更新。</li><li>如果直接从第一个单元格拖拽，可能会只是简单的序列填充，而没有公式。</li><li>例如，若第一个单元格手动修改为“9”，则后续单元格不会自动更新公式中的逻辑。</li></ul><blockquote><p><strong>注意</strong>:<br>使用INDEX和MATCH组合动态获取日期列、GMV列和平台列，替换SUMIF和SUMIFS公式中对应的部分<br>替换后的公式会变得很长，要仔细核对括号和参数。</p></blockquote><h3 id="6-3-关键指标计算">6.3 关键指标计算</h3><h4 id="1-计算型指标">1. 计算型指标</h4><ul><li><p><strong>到手率</strong>：<code>=商家实收/GMV</code></p><blockquote><p><em>注意</em>：结果设为百分比格式（保留 2 位小数）</p></blockquote><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">=<span class="built_in">IF</span>($H$<span class="number">5</span>=<span class="string">&quot;全部&quot;</span>,<span class="built_in">SUMIF</span>(<span class="built_in">INDEX</span>(&#x27;拌客源数据<span class="number">1</span>-<span class="number">8</span>月&#x27;!$<span class="symbol">A:</span>$X,<span class="number">0</span>,<span class="built_in">MATCH</span>($A$<span class="number">12</span>,&#x27;拌客源数据<span class="number">1</span>-<span class="number">8</span>月&#x27;!$A$<span class="symbol">1:</span>$X$<span class="number">1</span>,<span class="number">0</span>)),$<span class="symbol">A13</span>,</span><br><span class="line"><span class="built_in">INDEX</span>(&#x27;拌客源数据<span class="number">1</span>-<span class="number">8</span>月&#x27;!$<span class="symbol">A:</span>$X,<span class="number">0</span>,<span class="built_in">MATCH</span>(C$<span class="number">12</span>,&#x27;拌客源数据<span class="number">1</span>-<span class="number">8</span>月&#x27;!$A$<span class="symbol">1:</span>$X$<span class="number">1</span>,<span class="number">0</span>))),</span><br><span class="line"><span class="built_in">SUMIFS</span>(<span class="built_in">INDEX</span>(&#x27;拌客源数据<span class="number">1</span>-<span class="number">8</span>月&#x27;!$<span class="symbol">A:</span>$X,<span class="number">0</span>,<span class="built_in">MATCH</span>(C$<span class="number">12</span>,&#x27;拌客源数据<span class="number">1</span>-<span class="number">8</span>月&#x27;!$A$<span class="symbol">1:</span>$X$<span class="number">1</span>,<span class="number">0</span>)),</span><br><span class="line"><span class="built_in">INDEX</span>(&#x27;拌客源数据<span class="number">1</span>-<span class="number">8</span>月&#x27;!$<span class="symbol">A:</span>$X,<span class="number">0</span>,<span class="built_in">MATCH</span>($A$<span class="number">12</span>,&#x27;拌客源数据<span class="number">1</span>-<span class="number">8</span>月&#x27;!$A$<span class="symbol">1:</span>$X$<span class="number">1</span>,<span class="number">0</span>)),$<span class="symbol">A13</span>,</span><br><span class="line"><span class="built_in">INDEX</span>(&#x27;拌客源数据<span class="number">1</span>-<span class="number">8</span>月&#x27;!$<span class="symbol">A:</span>$X,<span class="number">0</span>,<span class="built_in">MATCH</span>(<span class="string">&quot;平台i&quot;</span>,&#x27;拌客源数据<span class="number">1</span>-<span class="number">8</span>月&#x27;!$A$<span class="symbol">1:</span>$X$<span class="number">1</span>,<span class="number">0</span>)),$H$<span class="number">5</span>))</span><br></pre></td></tr></table></figure><p>逻辑在2中已经陈述</p></li><li><p><strong>客单价</strong>：<code>=GMV/有效订单</code></p></li><li><p><strong>转化率（进店 / 下单）</strong>：</p><ul><li>进店转化率：<code>=进店人数/曝光人数</code></li><li>下单转化率：<code>=下单人数/进店人数</code></li></ul></li><li><p><strong>营销占比：</strong><code>=CPC总费用 / GMV</code></p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">=<span class="built_in">IF</span>($H$<span class="number">5</span>=<span class="string">&quot;全部&quot;</span>,<span class="built_in">SUMIF</span>(<span class="built_in">INDEX</span>(&#x27;拌客源数据<span class="number">1</span>-<span class="number">8</span>月&#x27;!$<span class="symbol">A:</span>$X,<span class="number">0</span>,<span class="built_in">MATCH</span>($A$<span class="number">12</span>,&#x27;拌客源数据<span class="number">1</span>-<span class="number">8</span>月&#x27;!$A$<span class="symbol">1:</span>$X$<span class="number">1</span>,<span class="number">0</span>)),$<span class="symbol">A13</span>,</span><br><span class="line"><span class="built_in">INDEX</span>(&#x27;拌客源数据<span class="number">1</span>-<span class="number">8</span>月&#x27;!$<span class="symbol">A:</span>$X,<span class="number">0</span>,<span class="built_in">MATCH</span>(<span class="string">&quot;cpc总费用&quot;</span>,&#x27;拌客源数据<span class="number">1</span>-<span class="number">8</span>月&#x27;!$A$<span class="symbol">1:</span>$X$<span class="number">1</span>,<span class="number">0</span>))),</span><br><span class="line"><span class="built_in">SUMIFS</span>(<span class="built_in">INDEX</span>(&#x27;拌客源数据<span class="number">1</span>-<span class="number">8</span>月&#x27;!$<span class="symbol">A:</span>$X,<span class="number">0</span>,<span class="built_in">MATCH</span>(<span class="string">&quot;cpc总费用&quot;</span>,&#x27;拌客源数据<span class="number">1</span>-<span class="number">8</span>月&#x27;!$A$<span class="symbol">1:</span>$X$<span class="number">1</span>,<span class="number">0</span>)),</span><br><span class="line"><span class="built_in">INDEX</span>(&#x27;拌客源数据<span class="number">1</span>-<span class="number">8</span>月&#x27;!$<span class="symbol">A:</span>$X,<span class="number">0</span>,<span class="built_in">MATCH</span>($A$<span class="number">12</span>,&#x27;拌客源数据<span class="number">1</span>-<span class="number">8</span>月&#x27;!$A$<span class="symbol">1:</span>$X$<span class="number">1</span>,<span class="number">0</span>)),$<span class="symbol">A13</span>,</span><br><span class="line"><span class="built_in">INDEX</span>(&#x27;拌客源数据<span class="number">1</span>-<span class="number">8</span>月&#x27;!$<span class="symbol">A:</span>$X,<span class="number">0</span>,<span class="built_in">MATCH</span>(<span class="string">&quot;平台i&quot;</span>,&#x27;拌客源数据<span class="number">1</span>-<span class="number">8</span>月&#x27;!$A$<span class="symbol">1:</span>$X$<span class="number">1</span>,<span class="number">0</span>)),$H$<span class="number">5</span>))/$<span class="symbol">C13</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="2-周累计与周环比（时间维度分析）">2. 周累计与周环比（时间维度分析）</h4><ol><li><p><strong>周累计（当周总和）</strong></p><ul><li><strong>方法</strong>：对当周 7 天的数据求和（使用<code>SUM</code>函数或快捷键<code>Alt+=</code>）<br><em>例：曝光人数周累计</em>：<code>=SUM(H13:H19)</code>（H13-H19 为每天曝光人数）</li></ul></li><li><p><strong>周环比（与上周对比）</strong></p><ul><li><strong>公式</strong>：<code>=(本周数据/上周数据)-1</code>（结果为百分比，正增长为绿色，负增长为红色）</li><li>将日期范围向前偏移 7 天（如本周第一天为 <code>A13</code>，上周第一天为<code>A13-7</code>）</li><li><strong>上周GMV数据公式</strong>：</li></ul><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">=<span class="built_in">SUMIFS</span>(</span><br><span class="line">  数值列,</span><br><span class="line">  日期列, <span class="string">&quot;&gt;=&quot;</span>&amp;起始日期-<span class="number">7</span>,</span><br><span class="line">  日期列, <span class="string">&quot;&lt;=&quot;</span>&amp;结束日期-<span class="number">7</span>(或&lt;当前日期),</span><br><span class="line">  平台列, 平台筛选器</span><br><span class="line">)</span><br></pre></td></tr></table></figure></li></ol><p><strong>例：有效订单周环比</strong></p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">=<span class="symbol">A9</span>/<span class="built_in">IF</span>($H$<span class="number">5</span>=<span class="string">&quot;全部&quot;</span>,<span class="built_in">SUMIFS</span>(<span class="built_in">INDEX</span>(&#x27;拌客源数据<span class="number">1</span>-<span class="number">8</span>月&#x27;!$<span class="symbol">A:</span>$X,<span class="number">0</span>,<span class="built_in">MATCH</span>(F$<span class="number">12</span>,&#x27;拌客源数据<span class="number">1</span>-<span class="number">8</span>月&#x27;!$A$<span class="symbol">1:</span>$X$<span class="number">1</span>,<span class="number">0</span>)),</span><br><span class="line"><span class="built_in">INDEX</span>(&#x27;拌客源数据<span class="number">1</span>-<span class="number">8</span>月&#x27;!$<span class="symbol">A:</span>$X,<span class="number">0</span>,<span class="built_in">MATCH</span>($A$<span class="number">12</span>,&#x27;拌客源数据<span class="number">1</span>-<span class="number">8</span>月&#x27;!$A$<span class="symbol">1:</span>$X$<span class="number">1</span>,<span class="number">0</span>)),<span class="string">&quot;&gt;=&quot;</span>&amp;$<span class="symbol">A13</span>-<span class="number">7</span>,</span><br><span class="line"><span class="built_in">INDEX</span>(&#x27;拌客源数据<span class="number">1</span>-<span class="number">8</span>月&#x27;!$<span class="symbol">A:</span>$X,<span class="number">0</span>,<span class="built_in">MATCH</span>($A$<span class="number">12</span>,&#x27;拌客源数据<span class="number">1</span>-<span class="number">8</span>月&#x27;!$A$<span class="symbol">1:</span>$X$<span class="number">1</span>,<span class="number">0</span>)),<span class="string">&quot;&lt;&quot;</span>&amp;$<span class="symbol">A13</span>),</span><br><span class="line"><span class="built_in">SUMIFS</span>(<span class="built_in">INDEX</span>(&#x27;拌客源数据<span class="number">1</span>-<span class="number">8</span>月&#x27;!$<span class="symbol">A:</span>$X,<span class="number">0</span>,<span class="built_in">MATCH</span>(F$<span class="number">12</span>,&#x27;拌客源数据<span class="number">1</span>-<span class="number">8</span>月&#x27;!$A$<span class="symbol">1:</span>$X$<span class="number">1</span>,<span class="number">0</span>)),</span><br><span class="line"><span class="built_in">INDEX</span>(&#x27;拌客源数据<span class="number">1</span>-<span class="number">8</span>月&#x27;!$<span class="symbol">A:</span>$X,<span class="number">0</span>,<span class="built_in">MATCH</span>($A$<span class="number">12</span>,&#x27;拌客源数据<span class="number">1</span>-<span class="number">8</span>月&#x27;!$A$<span class="symbol">1:</span>$X$<span class="number">1</span>,<span class="number">0</span>)),<span class="string">&quot;&gt;=&quot;</span>&amp;$<span class="symbol">A13</span>-<span class="number">7</span>,</span><br><span class="line"><span class="built_in">INDEX</span>(&#x27;拌客源数据<span class="number">1</span>-<span class="number">8</span>月&#x27;!$<span class="symbol">A:</span>$X,<span class="number">0</span>,<span class="built_in">MATCH</span>($A$<span class="number">12</span>,&#x27;拌客源数据<span class="number">1</span>-<span class="number">8</span>月&#x27;!$A$<span class="symbol">1:</span>$X$<span class="number">1</span>,<span class="number">0</span>)),<span class="string">&quot;&lt;&quot;</span>&amp;$<span class="symbol">A13</span>,</span><br><span class="line"><span class="built_in">INDEX</span>(&#x27;拌客源数据<span class="number">1</span>-<span class="number">8</span>月&#x27;!$<span class="symbol">A:</span>$X,<span class="number">0</span>,<span class="built_in">MATCH</span>(<span class="string">&quot;平台i&quot;</span>,&#x27;拌客源数据<span class="number">1</span>-<span class="number">8</span>月&#x27;!$A$<span class="symbol">1:</span>$X$<span class="number">1</span>,<span class="number">0</span>)),$H$<span class="number">5</span>))-<span class="number">1</span></span><br></pre></td></tr></table></figure><p>其中A9为本周有效订单</p><h4 id="3-业务进度计算">3. 业务进度计算</h4><ul><li><p><strong>当月GMV总和</strong>：日期条件为大于等于本月第一天（在SUMIFS中介绍了3种实现方式）</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=<span class="built_in">SUMIFS</span>(GMV列, 日期列, <span class="string">&quot;&gt;=&quot;</span>&amp;<span class="built_in">EOMONTH</span>(<span class="built_in">TODAY</span>(),-<span class="number">1</span>)+<span class="number">1</span>)</span><br></pre></td></tr></table></figure></li><li><p><strong>进度公式</strong>：<code>=当月累计GMV/目标值</code>目标值的设置使用IF嵌套，将在6.5中提到</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">=<span class="built_in">IF</span>($H$<span class="number">5</span>=<span class="string">&quot;全部&quot;</span>,<span class="built_in">SUMIFS</span>(<span class="built_in">INDEX</span>(&#x27;拌客源数据<span class="number">1</span>-<span class="number">8</span>月&#x27;!$<span class="symbol">A:</span>$X,<span class="number">0</span>,<span class="built_in">MATCH</span>(C$<span class="number">12</span>,&#x27;拌客源数据<span class="number">1</span>-<span class="number">8</span>月&#x27;!$A$<span class="symbol">1:</span>$X$<span class="number">1</span>,<span class="number">0</span>)),</span><br><span class="line"><span class="built_in">INDEX</span>(&#x27;拌客源数据<span class="number">1</span>-<span class="number">8</span>月&#x27;!$<span class="symbol">A:</span>$X,<span class="number">0</span>,<span class="built_in">MATCH</span>($A$<span class="number">12</span>,&#x27;拌客源数据<span class="number">1</span>-<span class="number">8</span>月&#x27;!$A$<span class="symbol">1:</span>$X$<span class="number">1</span>,<span class="number">0</span>)),<span class="string">&quot;&gt;=&quot;</span>&amp;<span class="built_in">EOMONTH</span>(<span class="symbol">A13</span>,-<span class="number">1</span>)+<span class="number">1</span>,</span><br><span class="line"><span class="built_in">INDEX</span>(&#x27;拌客源数据<span class="number">1</span>-<span class="number">8</span>月&#x27;!$<span class="symbol">A:</span>$X,<span class="number">0</span>,<span class="built_in">MATCH</span>($A$<span class="number">12</span>,&#x27;拌客源数据<span class="number">1</span>-<span class="number">8</span>月&#x27;!$A$<span class="symbol">1:</span>$X$<span class="number">1</span>,<span class="number">0</span>)),<span class="string">&quot;&lt;=&quot;</span>&amp;$<span class="symbol">A19</span>),</span><br><span class="line"><span class="built_in">SUMIFS</span>(<span class="built_in">INDEX</span>(&#x27;拌客源数据<span class="number">1</span>-<span class="number">8</span>月&#x27;!$<span class="symbol">A:</span>$X,<span class="number">0</span>,<span class="built_in">MATCH</span>(C$<span class="number">12</span>,&#x27;拌客源数据<span class="number">1</span>-<span class="number">8</span>月&#x27;!$A$<span class="symbol">1:</span>$X$<span class="number">1</span>,<span class="number">0</span>)),</span><br><span class="line"><span class="built_in">INDEX</span>(&#x27;拌客源数据<span class="number">1</span>-<span class="number">8</span>月&#x27;!$<span class="symbol">A:</span>$X,<span class="number">0</span>,<span class="built_in">MATCH</span>($A$<span class="number">12</span>,&#x27;拌客源数据<span class="number">1</span>-<span class="number">8</span>月&#x27;!$A$<span class="symbol">1:</span>$X$<span class="number">1</span>,<span class="number">0</span>)),<span class="string">&quot;&gt;=&quot;</span>&amp;<span class="built_in">DATE</span>(<span class="built_in">YEAR</span>(<span class="symbol">A13</span>),<span class="built_in">MONTH</span>(<span class="symbol">A13</span>),<span class="number">1</span>),</span><br><span class="line"><span class="built_in">INDEX</span>(&#x27;拌客源数据<span class="number">1</span>-<span class="number">8</span>月&#x27;!$<span class="symbol">A:</span>$X,<span class="number">0</span>,<span class="built_in">MATCH</span>($A$<span class="number">12</span>,&#x27;拌客源数据<span class="number">1</span>-<span class="number">8</span>月&#x27;!$A$<span class="symbol">1:</span>$X$<span class="number">1</span>,<span class="number">0</span>)),<span class="string">&quot;&lt;=&quot;</span>&amp;$<span class="symbol">A19</span>,</span><br><span class="line"><span class="built_in">INDEX</span>(&#x27;拌客源数据<span class="number">1</span>-<span class="number">8</span>月&#x27;!$<span class="symbol">A:</span>$X,<span class="number">0</span>,<span class="built_in">MATCH</span>(<span class="string">&quot;平台i&quot;</span>,&#x27;拌客源数据<span class="number">1</span>-<span class="number">8</span>月&#x27;!$A$<span class="symbol">1:</span>$X$<span class="number">1</span>,<span class="number">0</span>)),$H$<span class="number">5</span>))/$H$<span class="number">8</span></span><br></pre></td></tr></table></figure><p>逻辑：判断筛选器是否为全部，是则使用sumifs计算要求的值，条件设置大于本月第一天，小于本周的最后一天，否则多使用sumifs增加一个判断平台的条件，其余相同。</p></li></ul><h3 id="6-4-可视化与格式优化">6.4 可视化与格式优化</h3><h4 id="1-数值格式">1. 数值格式</h4><ul><li><p><strong>百分比</strong>：选中转化率、到手率等单元格，按<code>Ctrl+Shift+%</code>。</p></li><li><p><strong>保留小数</strong>：右键→设置单元格格式→数值→小数位数（如 2 位）/直接在开始菜单点击。</p><p><img src="https://s2.loli.net/2025/04/11/ORKnvWMy15TU3LX.png" alt="zhoubao4"></p></li></ul><h4 id="2-条件格式">2. 条件格式</h4><ul><li><p><strong>数据条</strong>：可视化进度（如业务进度）</p><p>操作：选中单元格 →【开始】→【条件格式】→【新建规则】→【基于各自值设置所有单元格的格式】→【格式样式：数据条】→【选择类型】<br>如：选中数值区域 → 条件格式 → 数据条 → 类型选择数字 → 最大值设置为1 → 设置颜色 → 渐变填充</p><p><img src="https://s2.loli.net/2025/04/11/Swokm5OgZEfPj89.png" alt="zhoubao5"></p></li><li><p><strong>颜色标记</strong>：标记正负值（如周环比）</p><p>操作：新建规则 → 只为包含以下内容的单元格设置格式 → “单元格值&gt; 0” 设为绿色，“≤0” 设为红色（设置两次）。</p><p><img src="https://s2.loli.net/2025/04/11/KClDevNhX5EzFGJ.png" alt="zhoubao6"></p></li><li><p><strong>图标集</strong>：显示趋势（上升 / 下降箭头）</p><p>操作：条件格式 → 新建规则 → 基于各自值设置所有单元格的格式 → 图标集 → 选择 “三向箭头”或自定义中间值（0）为横线 → 分别设置&gt;0, =0, &lt;0的图标 → 类型设置为<strong>数字</strong></p><ul><li>大于0：绿色字体 + ↑图标</li><li>等于0：红色字体 + -图标</li><li>小于0：红色字体 + ↓图标</li></ul><p><img src="https://s2.loli.net/2025/04/11/fdAN4vDgVOBFSQl.png" alt="zhoubao7"></p></li><li><p><strong>低于GMV平均值标记</strong>：(注意混合引用)</p><ul><li>标记低于周平均值的GMV数值</li><li>选中结果指标区域 →  条件格式 →  新建规则  →  使用公式确定要设置格式的单元格</li></ul><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">=$<span class="symbol">C13</span> &lt; <span class="built_in">AVERAGE</span>($C$<span class="symbol">13:</span>$C$<span class="number">19</span>)</span><br></pre></td></tr></table></figure><ul><li>格式 →  下划线 →  加粗</li></ul><p><img src="https://s2.loli.net/2025/04/11/MyVvPFasfj8xApt.png" alt="zhoubao8"></p></li><li><p><strong>格式刷</strong></p><ul><li>单击格式刷：复制格式到单个单元格</li><li>双击格式刷：复制格式到多个单元格</li></ul><p>点击管理自定义规则即可查看、修改设置的规则</p><p><img src="https://s2.loli.net/2025/04/11/bHoNGgAKUcVqwiv.png" alt="zhoubao9"></p></li></ul><h4 id="3-迷你图制作">3. 迷你图制作</h4><ul><li><p><strong>步骤</strong>：</p><ol><li><p>选中数据区域（如一周的曝光人数）</p></li><li><p>【插入】 → 【迷你图 】→ 折线图</p><p><img src="https://s2.loli.net/2025/04/11/a4FrJf2NR89Y6O1.png" alt="zhoubao10"></p></li><li><p>指定放置单元格，设置标记（显示数据点）和高点颜色</p><p><img src="https://s2.loli.net/2025/04/11/1an5bU8gNjm7T4M.png" alt="zhoubao11"></p></li></ol></li></ul><h4 id="4-美化技巧">4. 美化技巧</h4><ul><li><p><strong>格式优先</strong>：先确保数据计算正确，在数据与公式全部建立后，<strong>最后</strong>进行整体的美化设计</p></li><li><p>**隐藏网格线：**视图 → 取消勾选“网格线”</p></li><li><p><strong>合并单元格</strong>：合并标题单元格并居中，标题和列名加粗、放大</p></li><li><p>**添加主题色：**给结果指标和过程指标的表头（列名）添加主题色</p><p><img src="https://s2.loli.net/2025/04/11/PFvjyX1lKxcqrEe.png" alt="zhoubao12"></p></li><li><p><strong>边框与字体</strong>：给小看板、指标表格添加外边框，统一字体（推荐微软雅黑），调整字体、对齐方式等</p><p><img src="https://s2.loli.net/2025/04/11/P8bvOyEd2M4GrmU.png" alt="zhoubao13"></p></li></ul><h3 id="6-5-目标看板与业务进度">6.5 目标看板与业务进度</h3><h4 id="1-目标设置">1. 目标设置</h4><ul><li>按平台设定 GMV 目标（如全部 = 20 万，美团 = 15 万，饿了么 = 5 万）。<br><em>示例</em>：在 H8 单元格输入公式<br><code>=IF(H5=&quot;全部&quot;,200000,IF(H5=&quot;美团&quot;,150000,50000))</code>。</li></ul><h4 id="2-业务进度">2. 业务进度</h4><ul><li><p><strong>公式</strong>：<code>=截至目前GMV/目标</code>（如 <code>=SUMIFS(GMV列, 日期列, &quot;&gt;=&quot;&amp;DATE(YEAR(A13),MONTH(A13),1))</code>表示大于当月第一天）。</p><blockquote><p>已在6.3.3中做出陈述</p></blockquote></li><li><p><strong>进度条</strong>：通过条件格式→数据条可视化，最大值设为 1（100%）。</p><p><img src="https://s2.loli.net/2025/04/11/avTSQ9Vn3iJbsoG.png" alt="zhoubao14"></p></li></ul><h3 id="6-6-自动化维护">6.6 自动化维护</h3><ul><li><strong>日期联动</strong>：所有日期、星期、平台筛选均通过引用和公式实现，修改<code>A13</code>单元格日期（初始设置日期的单元格）后，所有关联数据自动更新</li><li><strong>数据扩展</strong>：新增数据时，调整公式引用范围（如<code>$A:$X</code>改为<code>$A:$Z</code>）</li><li><strong>模板复用</strong>：保存为模板文件（.xltx），每周复制使用</li></ul><blockquote><p><strong>提示</strong></p><ol><li>所有公式中的区域引用需根据实际表格调整（如<code>A:X</code>为示例列范围）</li><li>建议逐步测试每个函数模块，使用<code>F9</code>键分解验证公式逻辑</li><li>格式美化可最后进行，避免干扰数据处理</li></ol></blockquote><ul><li><p>最终效果</p><p><img src="https://s2.loli.net/2025/04/11/cWlSQYHTry19Z4D.png" alt="zhoubao15"></p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;Excel 知识笔记&lt;/h1&gt;
&lt;p&gt;本文主要介绍 Excel 中的一些高级知识和常用函数，重点涵盖数据透视表、常用函数（SUM、SUMIF、SUMIFS、SUBTOTAL、IF、VLOOKUP、XLOOKUP、INDEX、MATCH）以及周报开发的相关内容。&lt;/p&gt;
&lt;</summary>
      
    
    
    
    <category term="数据分析" scheme="https://blog.icjlu.eu.org/categories/%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
    
    
    <category term="数据操作" scheme="https://blog.icjlu.eu.org/tags/%E6%95%B0%E6%8D%AE%E6%93%8D%E4%BD%9C/"/>
    
    <category term="可视化" scheme="https://blog.icjlu.eu.org/tags/%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    <category term="看板与报表" scheme="https://blog.icjlu.eu.org/tags/%E7%9C%8B%E6%9D%BF%E4%B8%8E%E6%8A%A5%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode每日一题2025.04.11</title>
    <link href="https://blog.icjlu.eu.org/post/countSymmetricIntegers.html"/>
    <id>https://blog.icjlu.eu.org/post/countSymmetricIntegers.html</id>
    <published>2025-04-11T06:33:18.000Z</published>
    <updated>2025-04-11T06:45:29.666Z</updated>
    
    <content type="html"><![CDATA[<h2 id="2843-统计对称整数的数目-E"><a href="https://leetcode.cn/problems/count-symmetric-integers/">2843. 统计对称整数的数目</a> E</h2><p>给你两个正整数 <code>low</code> 和 <code>high</code> 。</p><p>对于一个由 <code>2 * n</code> 位数字组成的整数 <code>x</code> ，如果其前 <code>n</code> 位数字之和与后 <code>n</code> 位数字之和相等，则认为这个数字是一个对称整数。</p><p>返回在 <code>[low, high]</code> 范围内的 <strong>对称整数的数目</strong> 。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：low = 1, high = 100</span><br><span class="line">输出：9</span><br><span class="line">解释：在 1 到 100 范围内共有 9 个对称整数：11、22、33、44、55、66、77、88 和 99 。</span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：low = 1200, high = 1230</span><br><span class="line">输出：4</span><br><span class="line">解释：在 1200 到 1230 范围内共有 4 个对称整数：1203、1212、1221 和 1230 。</span><br></pre></td></tr></table></figure><ul><li><strong>提示：</strong><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>&lt;</mo><mo>=</mo><mi>l</mi><mi>o</mi><mi>w</mi><mo>&lt;</mo><mo>=</mo><mi>h</mi><mi>i</mi><mi>g</mi><mi>h</mi><mo>&lt;</mo><mo>=</mo><msup><mn>10</mn><mn>4</mn></msup></mrow><annotation encoding="application/x-tex">1 &lt;= low &lt;= high &lt;= 10^4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6835em;vertical-align:-0.0391em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">hi</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span></span></span></span></li></ul><p>题目需要找出在给定范围内满足特定数字对称条件的所有整数的数量。</p><ol><li><strong>检查位数是否为偶数</strong>：只有当数字的位数是偶数时才有可能成为对称整数，否则直接跳过。</li><li><strong>分割数字前后半部分</strong>：对于一个 2*n 位数字，将该数字转换为字符串，然后将其前 n 位数字和后 n 位数字分别累加求和，判断两部分是否相等。两者之和相等，则该数字符合条件。</li><li><strong>遍历范围</strong>： low 和 high 的范围较小（最高 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>10</mn><mn>4</mn></msup></mrow><annotation encoding="application/x-tex">10^4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span></span></span></span>），可以直接遍历 [low, high] 区间内的所有数字，对符合条件的数字进行计数。</li></ol><p>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">countSymmetricIntegers</span>(<span class="params">self, low: <span class="built_in">int</span>, high: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        count = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> num <span class="keyword">in</span> <span class="built_in">range</span>(low, high + <span class="number">1</span>):</span><br><span class="line">            num_str = <span class="built_in">str</span>(num)</span><br><span class="line">            <span class="comment"># 数字必须为偶数位，才能分成两部分比较</span></span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(num_str) % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">                half = <span class="built_in">len</span>(num_str) // <span class="number">2</span></span><br><span class="line">                <span class="comment"># 将前一半和后一半的各个数字相加</span></span><br><span class="line">                left_sum = <span class="built_in">sum</span>(<span class="built_in">int</span>(digit) <span class="keyword">for</span> digit <span class="keyword">in</span> num_str[:half])</span><br><span class="line">                right_sum = <span class="built_in">sum</span>(<span class="built_in">int</span>(digit) <span class="keyword">for</span> digit <span class="keyword">in</span> num_str[half:])</span><br><span class="line">                <span class="keyword">if</span> left_sum == right_sum:</span><br><span class="line">                    count += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> count</span><br></pre></td></tr></table></figure><ul><li>首先通过 <code>str(num)</code> 将整数转换为字符串，以便判断数字的位数是否为偶数。</li><li>如果是偶数位，则将字符串分为前后两部分，分别计算各自数字的和。</li><li>如果两部分的和相等，则计数器 <code>count</code> 累加。</li></ul><p>通过遍历 [𝑙𝑜𝑤,ℎ𝑖𝑔ℎ]范围内的每个整数，对于每个数字：</p><ol><li>将数字转换为字符串：复杂度 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>d</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(d)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">d</span><span class="mclose">)</span></span></span></span>（其中 ddd 为数字的位数）。</li><li>对前半部分和后半部分求和，各需要 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>d</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(d/2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">d</span><span class="mord">/2</span><span class="mclose">)</span></span></span></span>，加起来也是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>d</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(d)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">d</span><span class="mclose">)</span></span></span></span>。</li></ol><p>总体时间复杂度大致为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>N</mi><mo>×</mo><mi>d</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(N×d)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mclose">)</span></span></span></span>，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mo>=</mo><mi>h</mi><mi>i</mi><mi>g</mi><mi>h</mi><mo>−</mo><mi>l</mi><mi>o</mi><mi>w</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">N=high−low+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">hi</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">d</span></span></span></span>通常为常数</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;2843-统计对称整数的数目-E&quot;&gt;&lt;a href=&quot;https://leetcode.cn/problems/count-symmetric-integers/&quot;&gt;2843. 统计对称整数的数目&lt;/a&gt; E&lt;/h2&gt;
&lt;p&gt;给你两个正整数 &lt;code&gt;low&lt;/</summary>
      
    
    
    
    <category term="算法" scheme="https://blog.icjlu.eu.org/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="Algorithm" scheme="https://blog.icjlu.eu.org/tags/Algorithm/"/>
    
    <category term="暴力搜索" scheme="https://blog.icjlu.eu.org/tags/%E6%9A%B4%E5%8A%9B%E6%90%9C%E7%B4%A2/"/>
    
    <category term="数位处理" scheme="https://blog.icjlu.eu.org/tags/%E6%95%B0%E4%BD%8D%E5%A4%84%E7%90%86/"/>
    
    <category term="字符串处理" scheme="https://blog.icjlu.eu.org/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%84%E7%90%86/"/>
    
    <category term="简单" scheme="https://blog.icjlu.eu.org/tags/%E7%AE%80%E5%8D%95/"/>
    
  </entry>
  
  <entry>
    <title>SQL常用函数补充</title>
    <link href="https://blog.icjlu.eu.org/post/SQLfunc.html"/>
    <id>https://blog.icjlu.eu.org/post/SQLfunc.html</id>
    <published>2025-03-30T11:53:01.000Z</published>
    <updated>2025-04-21T06:14:34.083Z</updated>
    
    <content type="html"><![CDATA[<h1>SQL 执行顺序与常用函数</h1><h2 id="🔄-SQL-语句执行顺序">🔄 SQL 语句执行顺序</h2><ol><li><strong>FROM</strong><br>从数据库复制原始表（生成临时表）</li><li><strong>WHERE</strong><br>在临时表中筛选符合条件的<code>数据行</code></li><li><strong>GROUP BY</strong><br>按指定字段分组（类似Excel数据透视表的行标签）</li><li><strong>HAVING</strong><br>筛选满足条件的<code>分组</code></li><li><strong>ORDER BY</strong><br>对结果进行排序</li><li><strong>LIMIT</strong><br>限制显示行数</li><li><strong>SELECT</strong><br>最终提取显示的字段</li></ol><blockquote><p>📝 注意：SELECT *实际在最后阶段执行</p></blockquote><hr><h2 id="常用函数汇总">常用函数汇总</h2><h3 id="一、数学函数">一、数学函数</h3><p><strong><code>ROUND(x, y)</code></strong></p><ul><li><p>功能：四舍五入</p></li><li><p>参数：</p><ul><li><code>y&gt;0</code>：保留小数点后y位</li><li><code>y=0</code>：取整数</li><li><code>y&lt;0</code>：小数点左侧指定位变0</li></ul></li><li><p>示例：</p><table><thead><tr><th>表达式</th><th>结果</th></tr></thead><tbody><tr><td>ROUND(3.15, 1)</td><td>3.2</td></tr><tr><td>ROUND(14.15, -1)</td><td>10</td></tr></tbody></table></li></ul><hr><h3 id="二、字符串函数">二、字符串函数</h3><table><thead><tr><th>函数</th><th>功能说明</th><th>示例</th></tr></thead><tbody><tr><td><code>CONCAT(s1, s2,...)</code></td><td>连接字符串（含NULL则返回NULL）</td><td>CONCAT(‘My’,’ ',‘SQL’)→My SQL      CONCAT(‘My’, NULL, ‘SQL’) → NULL</td></tr><tr><td><code>REPLACE(s, s1, s2)</code></td><td>全量替换字符串</td><td>REPLACE(‘MySQL’,‘SQL’,‘sql’) → Mysql</td></tr><tr><td><code>LEFT(s,n)/RIGHT(s,n)</code></td><td>截取左/右侧n字符</td><td>LEFT(‘abcdefg’,3) → abc</td></tr><tr><td><code>SUBSTRING(s, n, len)</code></td><td>从位置n截取len长度（支持负数位置）</td><td>SUBSTRING(‘abcdefg’,-2,3) → fg SUBSTRING(‘abcdefg’,2)→bcdefg</td></tr><tr><td><code>LOWER()</code></td><td>将字母变为小写</td><td>LOWER(‘A’) → a</td></tr><tr><td><code>UPPER()</code></td><td>将字母变为大写</td><td>UPPER(‘a’) → A</td></tr><tr><td><code>LENGTH()/CHAR_LENGTH()</code></td><td>CHAR_LENGTH() 返回字符串的字符数，而 LENGTH() 返回字符串的字节数,对于 ASCII 字符，这两个函数的结果是相同的</td><td>char_length(‘数’) = 1(字符)， length(‘数’) = 3(字节)</td></tr></tbody></table><h4 id="补充：GROUP-CONCAT-函数"><strong>补充：GROUP_CONCAT 函数</strong></h4><p><strong>功能说明</strong><br>将分组内的多个字符串值<strong>合并为一个字符串</strong>，常用于多值拼接（需配合 <code>GROUP BY</code> 使用）。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">GROUP_CONCAT(</span><br><span class="line">    [<span class="keyword">DISTINCT</span>] 字段名 </span><br><span class="line">    [<span class="keyword">ORDER</span> <span class="keyword">BY</span> 排序字段 [<span class="keyword">ASC</span><span class="operator">|</span><span class="keyword">DESC</span>]] </span><br><span class="line">    [SEPARATOR <span class="string">&#x27;分隔符&#x27;</span>]</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><strong>示例数据</strong>（表 <code>students</code>）：</p><table><thead><tr><th>class</th><th>name</th></tr></thead><tbody><tr><td>A</td><td>张三</td></tr><tr><td>A</td><td>李四</td></tr><tr><td>B</td><td>王五</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    class,</span><br><span class="line">    GROUP_CONCAT(name) <span class="keyword">AS</span> members</span><br><span class="line"><span class="keyword">FROM</span> students</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> class;</span><br></pre></td></tr></table></figure><p><strong>结果</strong>：</p><table><thead><tr><th>class</th><th>members</th></tr></thead><tbody><tr><td>A</td><td>张三,李四</td></tr><tr><td>B</td><td>王五</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 去重 + 自定义分隔符 + 排序</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    class,</span><br><span class="line">    GROUP_CONCAT(</span><br><span class="line">        <span class="keyword">DISTINCT</span> name</span><br><span class="line">        <span class="keyword">ORDER</span> <span class="keyword">BY</span> name <span class="keyword">DESC</span></span><br><span class="line">        SEPARATOR <span class="string">&#x27;|&#x27;</span></span><br><span class="line">    ) <span class="keyword">AS</span> members</span><br><span class="line"><span class="keyword">FROM</span> students</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> class;</span><br></pre></td></tr></table></figure><blockquote><p><strong>注意事项</strong></p><ol><li><strong>长度限制</strong>：受 <code>group_concat_max_len</code> 参数限制（默认1024字节），超长部分被截断</li><li><strong>NULL处理</strong>：自动忽略 NULL 值</li><li><strong>跨数据库差异</strong>：<ul><li>MySQL：<code>GROUP_CONCAT</code></li><li>PostgreSQL：<code>STRING_AGG</code></li><li>SQL Server：<code>STRING_AGG</code>（2017+版本）</li></ul></li></ol></blockquote><p><strong>典型应用场景</strong></p><ol><li><p><strong>标签聚合</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 文章表+标签表联查，合并文章的所有标签</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    a.title,</span><br><span class="line">    GROUP_CONCAT(t.tag_name) <span class="keyword">AS</span> tags</span><br><span class="line"><span class="keyword">FROM</span> articles a</span><br><span class="line"><span class="keyword">JOIN</span> article_tags <span class="keyword">at</span> <span class="keyword">ON</span> a.id <span class="operator">=</span> at.article_id</span><br><span class="line"><span class="keyword">JOIN</span> tags t <span class="keyword">ON</span> at.tag_id <span class="operator">=</span> t.id</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> a.id;</span><br></pre></td></tr></table></figure></li><li><p><strong>路径生成</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 生成层级路径（部门树结构）</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    dept_id,</span><br><span class="line">    GROUP_CONCAT(parent_name SEPARATOR <span class="string">&#x27; &gt; &#x27;</span>) <span class="keyword">AS</span> full_path</span><br><span class="line"><span class="keyword">FROM</span> department_hierarchy</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> dept_id;</span><br></pre></td></tr></table></figure></li><li><p><strong>动态SQL拼接</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 生成批量更新语句（示例用途）</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    CONCAT(</span><br><span class="line">        <span class="string">&#x27;UPDATE users SET status=1 WHERE id IN (&#x27;</span>,</span><br><span class="line">        GROUP_CONCAT(id SEPARATOR <span class="string">&#x27;,&#x27;</span>),</span><br><span class="line">        <span class="string">&#x27;);&#x27;</span></span><br><span class="line">    ) <span class="keyword">AS</span> sql_statement</span><br><span class="line"><span class="keyword">FROM</span> temp_ids;</span><br></pre></td></tr></table></figure></li></ol><h4 id="补充：正则表达式函数"><strong>补充：正则表达式函数</strong></h4><h5 id="1-字符集（-内可用的符号）"><strong>1. 字符集（[] 内可用的符号）</strong></h5><table><thead><tr><th><strong>符号</strong></th><th><strong>含义</strong></th><th><strong>示例</strong></th><th><strong>匹配示例</strong></th></tr></thead><tbody><tr><td><code>a-z</code></td><td>任意小写字母</td><td><code>[a-z]</code></td><td><code>a</code>, <code>b</code>, …, <code>z</code></td></tr><tr><td><code>A-Z</code></td><td>任意大写字母</td><td><code>[A-Z]</code></td><td><code>A</code>, <code>B</code>, …, <code>Z</code></td></tr><tr><td><code>0-9</code></td><td>任意数字</td><td><code>[0-9]</code></td><td><code>0</code>, <code>1</code>, …, <code>9</code></td></tr><tr><td><code>.</code></td><td>字面量点（需转义 <code>\.</code>）</td><td><code>[a-z.]</code></td><td><code>a</code>, <code>b</code>, <code>.</code></td></tr><tr><td><code>_</code></td><td>下划线</td><td><code>[a-z_]</code></td><td><code>a</code>, <code>_</code></td></tr><tr><td><code>%</code></td><td>百分号</td><td><code>[a-z%]</code></td><td><code>a</code>, <code>%</code></td></tr><tr><td><code>+</code></td><td>加号（在 <code>[]</code> 内是普通字符）</td><td><code>[a-z+]</code></td><td><code>a</code>, <code>+</code></td></tr><tr><td><code>-</code></td><td>减号（需放在开头或结尾，否则表示范围如 <code>a-z</code>）</td><td><code>[-a-z]</code> 或 <code>[a-z-]</code></td><td><code>-</code>, <code>a</code></td></tr><tr><td><code>^</code></td><td>在 <code>[]</code> 内开头表示<strong>否定</strong>（如 <code>[^a-z]</code> 匹配非小写字母）</td><td><code>[^0-9]</code></td><td><code>A</code>, <code>!</code>（不匹配 <code>1</code>）</td></tr><tr><td><code>\w</code></td><td>等价于 <code>[a-zA-Z0-9_]</code>（单词字符）</td><td><code>[\w]</code></td><td><code>a</code>, <code>1</code>, <code>_</code></td></tr><tr><td><code>\d</code></td><td>等价于 <code>[0-9]</code>（数字）</td><td><code>[\d]</code></td><td><code>0</code>, <code>1</code></td></tr><tr><td><code>\s</code></td><td>空白字符（空格、制表符 <code>\t</code>、换行 <code>\n</code> 等）</td><td><code>[\s]</code></td><td>``, <code>\t</code></td></tr><tr><td><code>\b</code></td><td>匹配 <strong>单词和非单词字符之间的位置</strong>（如空格、标点符号、字符串开头/结尾等）</td><td><code>\\bword</code><br /><code>word\\b</code><br /><code>\\bword\\b</code></td><td>匹配单词开头、结尾和整个单词</td></tr></tbody></table><hr><h5 id="2-量词（控制出现次数，单个字符不用加）"><strong>2. 量词（控制出现次数，单个字符不用加）</strong></h5><table><thead><tr><th><strong>量词</strong></th><th><strong>含义</strong></th><th><strong>示例</strong></th><th><strong>匹配示例</strong></th></tr></thead><tbody><tr><td><code>*</code></td><td>零次或多次</td><td><code>a*</code></td><td><code>&quot;&quot;</code>, <code>a</code>, <code>aa</code>（允许空字符串）</td></tr><tr><td><code>+</code></td><td>一次或多次</td><td><code>a+</code></td><td><code>a</code>, <code>aa</code>（不匹配空字符串）</td></tr><tr><td><code>?</code></td><td>零次或一次（可选）</td><td><code>a?</code></td><td><code>&quot;&quot;</code>, <code>a</code></td></tr><tr><td><code>&#123;n&#125;</code></td><td>恰好 <code>n</code> 次</td><td><code>a&#123;2&#125;</code></td><td><code>aa</code></td></tr><tr><td><code>&#123;n,&#125;</code></td><td>至少 <code>n</code> 次</td><td><code>a&#123;2,&#125;</code></td><td><code>aa</code>, <code>aaa</code></td></tr><tr><td><code>&#123;n,m&#125;</code></td><td><code>n</code> 到 <code>m</code> 次</td><td><code>a&#123;2,4&#125;</code></td><td><code>aa</code>, <code>aaa</code>, <code>aaaa</code></td></tr></tbody></table><hr><h5 id="3-边界和转义"><strong>3. 边界和转义</strong></h5><table><thead><tr><th><strong>符号</strong></th><th><strong>含义</strong></th><th><strong>示例</strong></th><th><strong>作用</strong></th></tr></thead><tbody><tr><td><code>^</code></td><td>匹配字符串开头</td><td><code>^[a-z]</code></td><td>必须以小写字母开头</td></tr><tr><td><code>$</code></td><td>匹配字符串结尾</td><td><code>[a-z]$</code></td><td>必须以小写字母结尾</td></tr><tr><td><code>\</code></td><td>转义特殊字符（如 <code>\\.</code> 匹配点）</td><td><code>example\\.com</code></td><td>避免 <code>.</code> 被解释为&quot;任意字符&quot;</td></tr><tr><td>`</td><td>`</td><td>或逻辑（匹配左边或右边）</td><td>`cat</td></tr></tbody></table><hr><h5 id="4-组合用法示例"><strong>4. 组合用法示例</strong></h5><table><thead><tr><th><strong>正则表达式</strong></th><th><strong>含义</strong></th><th><strong>匹配示例</strong></th></tr></thead><tbody><tr><td><code>^[a-zA-Z0-9._%+-]+@</code></td><td>邮箱本地部分（字母/数字/._%±，至少1字符）</td><td><code>user</code>, <code>name+123</code></td></tr><tr><td><code>@[a-zA-Z0-9.-]+\\.[a-z]&#123;2,&#125;$</code></td><td>域名部分（含点和至少2字母TLD）</td><td><code>@example.com</code>, <code>@sub.domain.co</code></td></tr></tbody></table><hr><blockquote><p><strong>注意事项</strong></p><ol><li><strong>减号 -</strong>：在 <code>[]</code> 内如果不是开头/结尾，表示范围（如 <code>a-z</code>）。<ul><li>✅ 正确：<code>[a-z-]</code> 或 <code>[-a-z]</code></li><li>❌ 错误：<code>[a-z-0-9]</code>（会被解析为 <code>z</code> 到 <code>-</code> 的范围）</li></ul></li><li><strong>点 .</strong>：在 <code>[]</code> 外是通配符（匹配任意字符），需转义 <code>\.</code> 才能匹配字面量点。</li><li><strong>大小写敏感</strong>：默认区分大小写，添加 <code>i</code> 标志可忽略（如 <code>/^[a-z]+$/i</code>）。</li></ol></blockquote><p><strong>1. 正则匹配检测</strong></p><table><thead><tr><th>函数/操作符</th><th>功能说明</th><th>数据库支持</th><th>示例</th></tr></thead><tbody><tr><td><code>REGEXP_LIKE(str, pattern)</code></td><td>检查字符串是否匹配正则模式</td><td>Oracle, MySQL 8.0+,</td><td><code>SELECT * FROM users WHERE REGEXP_LIKE(email, '^[a-z0-9]+@[a-z]+\.com$')</code></td></tr><tr><td><code>str REGEXP pattern</code></td><td>简写匹配操作符</td><td>MySQL, MariaDB</td><td><code>SELECT 'abc123' REGEXP '^[a-z]+[0-9]+$' → 1 (匹配)</code></td></tr><tr><td><code>~</code></td><td>正则匹配操作符</td><td>PostgreSQL</td><td><code>SELECT 'abc' ~ '^a' → true</code></td></tr></tbody></table><p><strong>2. 正则替换</strong></p><table><thead><tr><th>函数</th><th>功能说明</th><th>示例</th></tr></thead><tbody><tr><td><code>REGEXP_REPLACE(str, pattern, replacement)</code></td><td>替换匹配正则的内容</td><td><code>REGEXP_REPLACE('Tel: 010-12345678', '[^0-9]', '') → '01012345678'</code></td></tr></tbody></table><p><strong>3. 子串提取</strong></p><table><thead><tr><th>函数</th><th>功能说明</th><th>示例</th></tr></thead><tbody><tr><td><code>REGEXP_SUBSTR(str, pattern)</code></td><td>提取第一个匹配的子串</td><td><code>REGEXP_SUBSTR('2023Q4 Report', '[0-9]+Q[1-4]') → '2023Q4'</code></td></tr></tbody></table><p><strong>4. 常用正则模式</strong></p><table><thead><tr><th>模式</th><th>说明</th><th>应用场景示例</th></tr></thead><tbody><tr><td><code>^abc</code></td><td>以&quot;abc&quot;开头</td><td>验证身份证号开头</td></tr><tr><td><code>xyz$</code></td><td>以&quot;xyz&quot;结尾</td><td>检测文件扩展名</td></tr><tr><td><code>[0-9]&#123;4&#125;</code></td><td>连续4位数字</td><td>提取年份信息</td></tr><tr><td><code>\d&#123;3&#125;-\d&#123;8&#125;</code></td><td>匹配电话号码格式</td><td>010-12345678</td></tr><tr><td><code>[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]&#123;2,&#125;</code></td><td>邮箱格式验证</td><td>过滤无效邮箱地址</td></tr></tbody></table><p><strong>5. 跨数据库语法对比</strong></p><table><thead><tr><th>操作</th><th>MySQL/MariaDB</th><th>PostgreSQL</th><th>Oracle</th><th>SQL Server</th></tr></thead><tbody><tr><td><strong>匹配检测</strong></td><td><code>REGEXP</code> / <code>RLIKE</code></td><td><code>~</code></td><td><code>REGEXP_LIKE</code></td><td><code>LIKE</code>（有限支持）</td></tr><tr><td><strong>替换</strong></td><td><code>REGEXP_REPLACE</code></td><td><code>REGEXP_REPLACE</code></td><td><code>REGEXP_REPLACE</code></td><td>无内置函数</td></tr><tr><td><strong>提取子串</strong></td><td><code>REGEXP_SUBSTR</code></td><td><code>SUBSTRING(str FROM pattern)</code></td><td><code>REGEXP_SUBSTR</code></td><td><code>PATINDEX</code>+<code>SUBSTRING</code></td></tr></tbody></table><p><strong>6. 使用示例</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 验证手机号格式（11位数字）</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> customers </span><br><span class="line"><span class="keyword">WHERE</span> phone REGEXP <span class="string">&#x27;^1[3-9][0-9]&#123;9&#125;$&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 提取带区号的电话号码</span></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">  REGEXP_SUBSTR(contact_info, <span class="string">&#x27;\([0-9]&#123;3&#125;\) [0-9]&#123;8&#125;&#x27;</span>) <span class="keyword">AS</span> phone </span><br><span class="line"><span class="keyword">FROM</span> contacts;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 清理混合文本中的字母</span></span><br><span class="line"><span class="keyword">SELECT</span> REGEXP_REPLACE(<span class="string">&#x27;a1b2c3&#x27;</span>, <span class="string">&#x27;[A-Za-z]&#x27;</span>, <span class="string">&#x27;&#x27;</span>) → <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查找包含价格的描述</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">FROM</span> products </span><br><span class="line"><span class="keyword">WHERE</span> description <span class="operator">~</span> <span class="string">&#x27;\$[0-9]+\.[0-9]&#123;2&#125;&#x27;</span>;</span><br></pre></td></tr></table></figure><blockquote><ol><li><strong>字符集敏感</strong>：注意数据库字符集设置（如中文匹配需用<code>[一-龥]</code>）</li><li><strong>特殊字符转义</strong>：需用<code>\\</code>转义（如匹配点号需写<code>\\.</code>）</li></ol></blockquote><hr><h3 id="三、日期函数">三、日期函数</h3><p><strong>时间计算</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">DATE_ADD(<span class="type">date</span>, <span class="type">INTERVAL</span> expr type)  <span class="comment">-- 时间加法</span></span><br><span class="line">DATE_SUB(<span class="type">date</span>, <span class="type">INTERVAL</span> expr type)  <span class="comment">-- 时间减法</span></span><br></pre></td></tr></table></figure><ul><li>示例：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> DATE_ADD(<span class="string">&#x27;2021-08-03 23:59:59&#x27;</span>, <span class="type">INTERVAL</span> <span class="number">1</span> <span class="keyword">SECOND</span>) → <span class="string">&#x27;2021-08-04 00:00:00&#x27;</span></span><br><span class="line"><span class="keyword">SELECT</span> DATE_SUB(<span class="string">&#x27;2021-08-03&#x27;</span>, <span class="type">INTERVAL</span> <span class="number">2</span> <span class="keyword">MONTH</span>) → <span class="string">&#x27;2021-06-03&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>时间差与格式化</strong></p><table><thead><tr><th>函数</th><th>功能说明</th><th>示例</th></tr></thead><tbody><tr><td><code>DATEDIFF(date1, date2)</code></td><td>计算日期差（忽略时间）</td><td>DATEDIFF(‘2021-06-08’,‘2021-06-01’) →7</td></tr><tr><td><code>DATE_FORMAT(date, format)</code></td><td>日期格式化</td><td>DATE_FORMAT(NOW(),‘%Y-%m’) → 2023-12</td></tr></tbody></table><h3 id="📅-DATE-FORMAT-格式符对照表">📅 DATE_FORMAT 格式符对照表</h3><table><thead><tr><th>格式符</th><th>描述</th><th>示例值</th></tr></thead><tbody><tr><td><strong>日期相关</strong></td><td></td><td></td></tr><tr><td><code>%Y</code></td><td>四位年份</td><td>2023</td></tr><tr><td><code>%y</code></td><td>两位年份</td><td>23</td></tr><tr><td><code>%m</code></td><td>两位月份（01-12）</td><td>07</td></tr><tr><td><code>%c</code></td><td>月份（1-12，无前导零）</td><td>7</td></tr><tr><td><code>%M</code></td><td>月份英文全称</td><td>January, December</td></tr><tr><td><code>%b</code></td><td>月份缩写</td><td>Jan, Dec</td></tr><tr><td><code>%d</code></td><td>两位日期（01-31）</td><td>09</td></tr><tr><td><code>%e</code></td><td>日期（1-31，无前导零）</td><td>9</td></tr><tr><td><code>%D</code></td><td>英文后缀日期（1st, 2nd…）</td><td>1st, 22nd</td></tr><tr><td><strong>时间相关</strong></td><td></td><td></td></tr><tr><td><code>%H</code></td><td>24小时制小时（00-23）</td><td>15</td></tr><tr><td><code>%h</code></td><td>12小时制小时（01-12）</td><td>03</td></tr><tr><td><code>%i</code></td><td>分钟（00-59）</td><td>08</td></tr><tr><td><code>%S</code></td><td>秒（00-59）</td><td>45</td></tr><tr><td><code>%p</code></td><td>AM/PM</td><td>AM, PM</td></tr><tr><td><strong>星期相关</strong></td><td></td><td></td></tr><tr><td><code>%W</code></td><td>星期全称</td><td>Monday, Sunday</td></tr><tr><td><code>%a</code></td><td>星期缩写</td><td>Mon, Sun</td></tr><tr><td><code>%w</code></td><td>数字星期（0=周日, 1=周一…）</td><td>1 (周一), 0 (周日)</td></tr><tr><td><strong>组合格式</strong></td><td></td><td></td></tr><tr><td><code>%T</code></td><td>时间（HH:mm:ss）</td><td>23:59:58</td></tr><tr><td><code>%r</code></td><td>带AM/PM的时间（hh:mm:ss AM）</td><td>11:59:58 PM</td></tr><tr><td><code>%x</code></td><td>年份周编号（年份部分）</td><td>2023 (用于周计算)</td></tr><tr><td><code>%v</code></td><td>周编号（周一为周起始）</td><td>52</td></tr></tbody></table><h4 id="使用示例">使用示例</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 原始时间：2023-07-25 14:30:45</span></span><br><span class="line">DATE_FORMAT(<span class="type">date</span>, <span class="string">&#x27;%Y/%m/%d %H:%i&#x27;</span>)    → <span class="number">2023</span><span class="operator">/</span><span class="number">07</span><span class="operator">/</span><span class="number">25</span> <span class="number">14</span>:<span class="number">30</span></span><br><span class="line">DATE_FORMAT(<span class="type">date</span>, <span class="string">&#x27;%b %D %Y %h:%i %p&#x27;</span>) → Jul <span class="number">25</span>th <span class="number">2023</span> <span class="number">02</span>:<span class="number">30</span> PM</span><br><span class="line">DATE_FORMAT(<span class="type">date</span>, <span class="string">&#x27;%W, %M %e&#x27;</span>)         → Tuesday, July <span class="number">25</span></span><br></pre></td></tr></table></figure><hr><h3 id="四、条件判断函数">四、条件判断函数</h3><p><strong>IF 函数</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IF(expr, v1, v2)  <span class="comment">-- expr为真返回v1，否则v2</span></span><br></pre></td></tr></table></figure><ul><li>示例：<code>IF(1&gt;2, 'Y', 'N') → N</code></li></ul><p><strong>CASE 表达式</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">-- 简单CASE</span><br><span class="line">CASE expr </span><br><span class="line">    WHEN v1 THEN r1 </span><br><span class="line">    WHEN v2 THEN r2 </span><br><span class="line">    ELSE rn </span><br><span class="line">END</span><br><span class="line"></span><br><span class="line">-- 搜索CASE</span><br><span class="line">CASE </span><br><span class="line">    WHEN condition1 THEN r1 </span><br><span class="line">    WHEN condition2 THEN r2 </span><br><span class="line">    ELSE rn </span><br><span class="line">END</span><br></pre></td></tr></table></figure><ul><li>示例：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CASE</span> <span class="keyword">WHEN</span> <span class="number">1</span><span class="operator">&lt;</span><span class="number">0</span> <span class="keyword">THEN</span> <span class="string">&#x27;T&#x27;</span> <span class="keyword">ELSE</span> <span class="string">&#x27;F&#x27;</span> <span class="keyword">END</span> → F</span><br></pre></td></tr></table></figure><p><em><strong>NULLIF vs. IFNULL</strong></em></p><table><thead><tr><th>特性</th><th><code>NULLIF</code></th><th><code>IFNULL</code></th></tr></thead><tbody><tr><td><strong>功能</strong></td><td>比较两个值，相等时返回 <code>NULL</code></td><td>检查一个值是否为 <code>NULL</code>，并提供替代值</td></tr><tr><td><strong>返回值</strong></td><td>返回 <code>NULL</code> 或 <code>expression1</code></td><td>返回 <code>expression1</code> 或 <code>expression2</code></td></tr><tr><td><strong>常见用途</strong></td><td>避免除零错误、处理重复值</td><td>提供默认值、数据清洗</td></tr><tr><td><strong>示例</strong></td><td><code>NULLIF(a, b)</code>：如果 <code>a = b</code>，返回 <code>NULL</code></td><td><code>IFNULL(a, b)</code>：如果 <code>a</code> 是 <code>NULL</code>，返回 <code>b</code></td></tr></tbody></table><p><strong>COALESCE 函数</strong></p><p><strong>功能说明</strong></p><p>返回参数列表中<strong>第一个非 NULL 的值</strong>，常用于处理缺失值替换。</p><p><strong>语法</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">COALESCE</span>(v1, v2, v3, ..., vn)</span><br></pre></td></tr></table></figure><p><strong>执行逻辑</strong></p><ol><li>从左到右依次检查参数</li><li>返回第一个不为 <code>NULL</code> 的值</li><li>如果所有参数均为 <code>NULL</code>，则返回 <code>NULL</code></li></ol><p><strong>示例</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 数据示例：name字段为NULL，nickname=&#x27;小张&#x27;，default_name=&#x27;匿名用户&#x27;</span></span><br><span class="line"><span class="built_in">COALESCE</span>(<span class="keyword">NULL</span>, <span class="string">&#x27;小张&#x27;</span>, <span class="string">&#x27;匿名用户&#x27;</span>) → <span class="string">&#x27;小张&#x27;</span></span><br><span class="line"><span class="built_in">COALESCE</span>(<span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;2023-01-01&#x27;</span>) → <span class="string">&#x27;2023-01-01&#x27;</span></span><br><span class="line"><span class="built_in">COALESCE</span>(<span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>) → <span class="keyword">NULL</span></span><br></pre></td></tr></table></figure><p><strong>与 IFNULL 的对比</strong></p><table><thead><tr><th>特性</th><th><code>COALESCE</code></th><th><code>IFNULL</code></th></tr></thead><tbody><tr><td><strong>参数数量</strong></td><td>支持多个参数</td><td>仅支持两个参数</td></tr><tr><td><strong>功能范围</strong></td><td>多条件NULL处理</td><td>简单双值替换</td></tr><tr><td><strong>可读性</strong></td><td>更适合多字段优先级选择</td><td>适合简单场景</td></tr></tbody></table><p><strong>等价写法</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">COALESCE</span>(a, b, c) </span><br><span class="line"><span class="comment">-- 等价于 </span></span><br><span class="line"><span class="keyword">CASE</span> </span><br><span class="line">    <span class="keyword">WHEN</span> a <span class="keyword">IS</span> <span class="keyword">NOT NULL</span> <span class="keyword">THEN</span> a </span><br><span class="line">    <span class="keyword">WHEN</span> b <span class="keyword">IS</span> <span class="keyword">NOT NULL</span> <span class="keyword">THEN</span> b </span><br><span class="line">    <span class="keyword">ELSE</span> c </span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure><p><strong>常见使用场景</strong></p><ol><li><p><strong>多级备用值选择</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 优先显示用户昵称，其次邮箱，最后显示&#x27;未知用户&#x27;</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COALESCE</span>(nickname, email, <span class="string">&#x27;未知用户&#x27;</span>) <span class="keyword">AS</span> display_name <span class="keyword">FROM</span> users;</span><br></pre></td></tr></table></figure></li><li><p><strong>NULL值数据清洗</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 将NULL金额转换为0计算总和</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">SUM</span>(<span class="built_in">COALESCE</span>(amount, <span class="number">0</span>)) <span class="keyword">AS</span> total <span class="keyword">FROM</span> orders;</span><br></pre></td></tr></table></figure></li><li><p><strong>多字段优先级合并</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 合并地址信息（优先使用详细地址，没有时使用区域地址）</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COALESCE</span>(detail_address, area_address) <span class="keyword">AS</span> full_address <span class="keyword">FROM</span> locations;</span><br></pre></td></tr></table></figure></li></ol><h3 id="五、类型转换函数">五、类型转换函数</h3><p><strong>CAST(x AS type)</strong></p><ul><li>支持类型：<code>CHAR(n)</code>, <code>DATE</code>, <code>TIME</code>,<code>DATETIME</code>,<code>DECIMAL</code>等</li><li>示例：<code>CAST('2023' AS DECIMAL) → 2023</code></li></ul><h3 id="六、表连接补充自连接">六、表连接补充自连接</h3><h4 id="自连接介绍">自连接介绍</h4><p>自连接是一种特殊的连接查询，指的是同一个表自己与自己进行连接。常用于处理具有层级关系的数据，例如员工与经理、分类的父类与子类等场景。自连接实际上是将同一个表视为两个不同的实例，通过别名进行区分，并根据关联条件进行连接。</p><h4 id="自连接语法">自连接语法</h4><p>自连接可以使用内连接或外连接语法，核心是为同一表赋予不同的别名：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 内自连接（查询匹配条件的记录）</span></span><br><span class="line"><span class="keyword">SELECT</span> 字段 </span><br><span class="line"><span class="keyword">FROM</span> 表 <span class="keyword">AS</span> 别名<span class="number">1</span> </span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> 表 <span class="keyword">AS</span> 别名<span class="number">2</span> </span><br><span class="line"><span class="keyword">ON</span> 别名<span class="number">1.</span>字段 <span class="operator">=</span> 别名<span class="number">2.</span>关联字段;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 左自连接（以左表为主，查询右表可能不存在的记录）</span></span><br><span class="line"><span class="keyword">SELECT</span> 字段 </span><br><span class="line"><span class="keyword">FROM</span> 表 <span class="keyword">AS</span> 别名<span class="number">1</span> </span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> 表 <span class="keyword">AS</span> 别名<span class="number">2</span> </span><br><span class="line"><span class="keyword">ON</span> 别名<span class="number">1.</span>字段 <span class="operator">=</span> 别名<span class="number">2.</span>关联字段;</span><br></pre></td></tr></table></figure><h4 id="自连接示例">自连接示例</h4><p><strong>场景</strong>：假设有员工表 <code>employees</code>，结构如下：</p><table><thead><tr><th>id</th><th>name</th><th>manager_id</th></tr></thead><tbody><tr><td>1</td><td>张三</td><td>NULL</td></tr><tr><td>2</td><td>李四</td><td>1</td></tr><tr><td>3</td><td>王五</td><td>1</td></tr><tr><td>4</td><td>赵六</td><td>2</td></tr></tbody></table><p><strong>需求</strong>：查询每个员工及其对应经理的名字（包括没有经理的员工）。</p><p><strong>SQL语句</strong>：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    e1.name <span class="keyword">AS</span> employee_name,</span><br><span class="line">    e2.name <span class="keyword">AS</span> manager_name</span><br><span class="line"><span class="keyword">FROM</span> employees e1</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> employees e2 </span><br><span class="line"><span class="keyword">ON</span> e1.manager_id <span class="operator">=</span> e2.id;</span><br></pre></td></tr></table></figure><p><strong>查询结果</strong>：</p><table><thead><tr><th>employee_name</th><th>manager_name</th></tr></thead><tbody><tr><td>张三</td><td>NULL</td></tr><tr><td>李四</td><td>张三</td></tr><tr><td>王五</td><td>张三</td></tr><tr><td>赵六</td><td>李四</td></tr></tbody></table><h4 id="自连接应用场景">自连接应用场景</h4><ol><li><strong>层级关系</strong>：如组织架构、分类层级（父类与子类）。</li><li><strong>数据对称性分析</strong>：如社交网络中的用户关系（用户A和用户B互为好友）。</li><li><strong>路径查询</strong>：如地铁站点之间的连接关系。</li></ol><h4 id="注意事项">注意事项</h4><ol><li><strong>别名必要性</strong>：必须为表指定不同的别名以区分左、右表。</li><li><strong>性能优化</strong>：自连接可能引发较大的计算开销，尤其是大表操作时，建议在关联字段上创建索引。</li><li><strong>连接类型选择</strong>：<ul><li>使用 <strong>内自连接</strong> 时，只返回满足条件的记录（如“有经理的员工”）。</li><li>使用 <strong>左自连接</strong> 时，会包含左表所有记录，右表无匹配则填充 <code>NULL</code>（如“包括无经理的员工”）。</li></ul></li></ol><h3 id="七、交叉连接-CROSS-JOIN">七、交叉连接 CROSS JOIN</h3><h4 id="功能说明">功能说明</h4><p>生成两个表的<strong>笛卡尔积</strong>（所有行的组合），无关联条件。<br>特点：</p><ul><li>结果集行数 = 表A行数 × 表B行数</li><li>不需要连接条件（无<code>ON</code>子句）</li><li>常用于生成组合数据、测试数据等场景</li></ul><h4 id="语法形式">语法形式</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 显式语法</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">FROM</span> table1 </span><br><span class="line"><span class="keyword">CROSS</span> <span class="keyword">JOIN</span> table2;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 隐式语法（等同于CROSS JOIN）</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">FROM</span> table1, table2;</span><br></pre></td></tr></table></figure><h4 id="典型应用场景">典型应用场景</h4><ol><li><strong>生成组合数据</strong><br>如：颜色与尺寸组合、日期与产品组合</li><li><strong>数据模拟测试</strong><br>快速生成大量测试数据</li><li><strong>全量关联分析</strong><br>计算所有可能的组合关系</li></ol><h4 id="与INNER-JOIN的区别">与INNER JOIN的区别</h4><table><thead><tr><th>特性</th><th><code>CROSS JOIN</code></th><th><code>INNER JOIN</code></th></tr></thead><tbody><tr><td><strong>连接条件</strong></td><td>无需<code>ON</code>子句</td><td>必须使用<code>ON</code>子句</td></tr><tr><td><strong>结果集逻辑</strong></td><td>强制所有行组合</td><td>仅匹配关联条件的行</td></tr><tr><td><strong>数据量</strong></td><td>可能极大（慎用）</td><td>通常较小</td></tr></tbody></table><h3 id="八、集合操作符-UNION-ALL">八、集合操作符 UNION ALL</h3><h4 id="功能说明-2">功能说明</h4><p>用于合并多个查询结果，<strong>保留所有记录</strong>（包括重复行）</p><h4 id="基本语法">基本语法</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> 字段列表 <span class="keyword">FROM</span> 表<span class="number">1</span></span><br><span class="line"><span class="keyword">UNION</span> <span class="keyword">ALL</span></span><br><span class="line"><span class="keyword">SELECT</span> 字段列表 <span class="keyword">FROM</span> 表<span class="number">2</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><h4 id="与UNION的区别">与UNION的区别</h4><table><thead><tr><th>特性</th><th><code>UNION ALL</code></th><th><code>UNION</code></th></tr></thead><tbody><tr><td><strong>去重处理</strong></td><td>保留所有记录，包括重复行</td><td>自动去重</td></tr><tr><td><strong>排序操作</strong></td><td>不排序</td><td>默认进行排序</td></tr><tr><td><strong>性能</strong></td><td>更高（无去重、排序开销）</td><td>较低</td></tr></tbody></table><h4 id="使用场景">使用场景</h4><ol><li>合并分表数据（如按年份拆分的订单表）</li><li>需要保留重复记录的统计场景</li><li>明确知道数据无重复时的性能优化选择</li></ol><h4 id="注意事项-2">注意事项</h4><ul><li>合并的SELECT语句必须包含<strong>相同数量</strong>的字段</li><li>对应字段的<strong>数据类型必须兼容</strong></li><li>最终结果集的字段名以第一个SELECT语句为准</li></ul><h4 id="使用示例-2">使用示例</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 合并两个季度的销售数据（保留重复）</span></span><br><span class="line"><span class="keyword">SELECT</span> product_id, sales <span class="keyword">FROM</span> Q1_sales</span><br><span class="line"><span class="keyword">UNION</span> <span class="keyword">ALL</span></span><br><span class="line"><span class="keyword">SELECT</span> product_id, sales <span class="keyword">FROM</span> Q2_sales;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 组合不同表结构数据（使用别名统一字段）</span></span><br><span class="line"><span class="keyword">SELECT</span> id, name, <span class="string">&#x27;employee&#x27;</span> <span class="keyword">AS</span> type <span class="keyword">FROM</span> employees</span><br><span class="line"><span class="keyword">UNION</span> <span class="keyword">ALL</span></span><br><span class="line"><span class="keyword">SELECT</span> customer_id, company_name, <span class="string">&#x27;customer&#x27;</span> <span class="keyword">FROM</span> customers;</span><br></pre></td></tr></table></figure><hr><h3 id="小结">小结</h3><ul><li><strong>自连接本质</strong>：同一表通过别名模拟两个表的连接操作，支持内连接或外连接语法。</li><li><strong>核心步骤</strong>：<ol><li>为同一表赋予不同别名（如 <code>e1</code>, <code>e2</code>）。</li><li>指定连接条件（如 <code>e1.manager_id = e2.id</code>）。</li></ol></li><li><strong>适用场景</strong>：处理数据内部的层级或对称关系。</li><li><strong>优化建议</strong>：合理使用索引，避免全表扫描带来的性能问题。</li></ul><h1>👀 窗口函数详解</h1><h2 id="一、什么是窗口函数？">一、什么是窗口函数？</h2><p>窗口函数（Window Function）是一种<strong>对查询结果集进行逐行计算</strong>的特殊函数，能够：</p><ul><li>在保留原始数据行的同时进行聚合/排序等操作</li><li>实现复杂的分组统计需求（如：累计值、移动平均值、排名等）</li><li>不会像<code>GROUP BY</code>那样合并结果集</li></ul><h2 id="二、标准语法">二、标准语法</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">函数名() <span class="keyword">OVER</span> (</span><br><span class="line">    [<span class="keyword">PARTITION</span> <span class="keyword">BY</span> 字段]  <span class="comment">-- 定义分组窗口</span></span><br><span class="line">    [<span class="keyword">ORDER</span> <span class="keyword">BY</span> 字段 [<span class="keyword">ASC</span><span class="operator">|</span><span class="keyword">DESC</span>]]  <span class="comment">-- 定义排序规则</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="三、核心组件">三、核心组件</h2><h3 id="1-PARTITION-BY">1. PARTITION BY</h3><ul><li>作用：将数据<strong>按指定字段分组</strong>，每组称为一个窗口</li><li>类似<code>GROUP BY</code>但<strong>不合并结果集</strong></li><li>示例：<code>PARTITION BY department</code> 按部门分组</li></ul><h3 id="2-ORDER-BY">2. ORDER BY</h3><ul><li>作用：在窗口内<strong>指定排序规则</strong></li><li>示例：<code>ORDER BY sales DESC</code> 按销售额降序排列</li></ul><h2 id="四、常用窗口函数">四、常用窗口函数</h2><h3 id="1-排序函数">1. 排序函数</h3><table><thead><tr><th>函数</th><th style="text-align:left">特点</th><th style="text-align:left">示例结果（相同值处理）</th></tr></thead><tbody><tr><td><code>RANK()</code></td><td style="text-align:left">出现并列时<strong>跳号</strong>（1,1,3）</td><td style="text-align:left">1,1,3,4</td></tr><tr><td><code>DENSE_RANK()</code></td><td style="text-align:left">出现并列时<strong>不跳号</strong>（1,1,2）</td><td style="text-align:left">1,1,2,3</td></tr><tr><td><code>ROW_NUMBER()</code></td><td style="text-align:left"><strong>强制生成唯一序号</strong></td><td style="text-align:left">1,2,3,4</td></tr></tbody></table><p>📝 示例数据（按成绩排序）：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    name,</span><br><span class="line">    score,</span><br><span class="line">    <span class="built_in">RANK</span>() <span class="keyword">OVER</span>(<span class="keyword">ORDER</span> <span class="keyword">BY</span> score <span class="keyword">DESC</span>) <span class="keyword">AS</span> rank,</span><br><span class="line">    <span class="built_in">DENSE_RANK</span>() <span class="keyword">OVER</span>(<span class="keyword">ORDER</span> <span class="keyword">BY</span> score <span class="keyword">DESC</span>) <span class="keyword">AS</span> dense_rank,</span><br><span class="line">    <span class="built_in">ROW_NUMBER</span>() <span class="keyword">OVER</span>(<span class="keyword">ORDER</span> <span class="keyword">BY</span> score <span class="keyword">DESC</span>) <span class="keyword">AS</span> row_num</span><br><span class="line"><span class="keyword">FROM</span> students;</span><br></pre></td></tr></table></figure><table><thead><tr><th>name</th><th>score</th><th>rank</th><th>dense_rank</th><th>row_num</th></tr></thead><tbody><tr><td>张三</td><td>95</td><td>1</td><td>1</td><td>1</td></tr><tr><td>李四</td><td>95</td><td>1</td><td>1</td><td>2</td></tr><tr><td>王五</td><td>90</td><td>3</td><td>2</td><td>3</td></tr></tbody></table><h3 id="2-偏移分析函数">2. 偏移分析函数</h3><table><thead><tr><th>函数</th><th>功能说明</th><th>参数说明</th></tr></thead><tbody><tr><td><code>LAG(字段, 偏移量[, 默认值])</code></td><td>获取<strong>当前行向上偏移</strong>的值</td><td>默认偏移量=1，默认值=NULL</td></tr><tr><td><code>LEAD(字段, 偏移量[, 默认值])</code></td><td>获取<strong>当前行向下偏移</strong>的值</td><td>默认偏移量=1，默认值=NULL</td></tr></tbody></table><p>📝 示例（查看相邻订单金额）：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    order_date,</span><br><span class="line">    amount,</span><br><span class="line">    <span class="built_in">LAG</span>(amount, <span class="number">1</span>) <span class="keyword">OVER</span>(<span class="keyword">ORDER</span> <span class="keyword">BY</span> order_date) <span class="keyword">AS</span> prev_amount,</span><br><span class="line">    <span class="built_in">LEAD</span>(amount, <span class="number">1</span>) <span class="keyword">OVER</span>(<span class="keyword">ORDER</span> <span class="keyword">BY</span> order_date) <span class="keyword">AS</span> next_amount</span><br><span class="line"><span class="keyword">FROM</span> orders;</span><br></pre></td></tr></table></figure><table><thead><tr><th>order_date</th><th>amount</th><th>prev_amount</th><th>next_amount</th></tr></thead><tbody><tr><td>2023-01-01</td><td>100</td><td>NULL</td><td>150</td></tr><tr><td>2023-01-02</td><td>150</td><td>100</td><td>200</td></tr><tr><td>2023-01-03</td><td>200</td><td>150</td><td>NULL</td></tr></tbody></table><h3 id="3-滑动窗口（窗口框架）">3.滑动窗口（窗口框架）</h3><h4 id="核心概念">核心概念</h4><p>通过定义窗口框架（Window Frame），<strong>动态控制计算范围</strong>。支持两种模式：</p><ul><li><strong>基于行数</strong>（<code>ROWS</code>）：物理行偏移</li><li><strong>基于数值范围</strong>（<code>RANGE</code>）：逻辑值偏移</li></ul><h4 id="标准语法">标准语法</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">函数() <span class="keyword">OVER</span> (</span><br><span class="line">    <span class="keyword">PARTITION</span> <span class="keyword">BY</span> ... </span><br><span class="line">    <span class="keyword">ORDER</span> <span class="keyword">BY</span> ...</span><br><span class="line">    [<span class="keyword">ROWS</span><span class="operator">|</span><span class="keyword">RANGE</span> <span class="keyword">BETWEEN</span> 起始点 <span class="keyword">AND</span> 结束点]</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h4 id="框架边界定义">框架边界定义</h4><table><thead><tr><th>关键词</th><th>说明</th></tr></thead><tbody><tr><td><code>UNBOUNDED PRECEDING</code></td><td>窗口起始位置（第一行/最小值）</td></tr><tr><td><code>UNBOUNDED FOLLOWING</code></td><td>窗口结束位置（最后一行/最大值）</td></tr><tr><td><code>CURRENT ROW</code></td><td>当前行</td></tr><tr><td><code>n PRECEDING</code></td><td>当前行向前n行/n值（包含当前行）</td></tr><tr><td><code>n FOLLOWING</code></td><td>当前行向后n行/n值（包含当前行）</td></tr></tbody></table><h4 id="常用模式示例">常用模式示例</h4><h5 id="1-累计计算（默认模式）">1. 累计计算（默认模式）</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">SUM</span>(sales) <span class="keyword">OVER</span> (</span><br><span class="line">    <span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="type">date</span> </span><br><span class="line">    <span class="keyword">ROWS</span> <span class="keyword">BETWEEN</span> UNBOUNDED PRECEDING <span class="keyword">AND</span> <span class="keyword">CURRENT</span> <span class="type">ROW</span></span><br><span class="line">) </span><br><span class="line"><span class="comment">-- 等价简写：</span></span><br><span class="line"><span class="built_in">SUM</span>(sales) <span class="keyword">OVER</span> (<span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="type">date</span>)</span><br></pre></td></tr></table></figure><h5 id="2-移动平均（近3天）">2. 移动平均（近3天）</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">AVG(temperature) OVER (</span><br><span class="line">    ORDER BY date </span><br><span class="line">    ROWS BETWEEN 2 PRECEDING AND CURRENT ROW</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h5 id="3-对称窗口（前后各1行）">3. 对称窗口（前后各1行）</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">MAX(score) OVER (</span><br><span class="line">    ORDER BY id </span><br><span class="line">    ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h4 id="ROWS-vs-RANGE-对比">ROWS vs RANGE 对比</h4><table><thead><tr><th>对比项</th><th><code>ROWS</code></th><th><code>RANGE</code></th></tr></thead><tbody><tr><td><strong>计算逻辑</strong></td><td>按物理行偏移</td><td>按ORDER BY字段的数值偏移</td></tr><tr><td><strong>适用场景</strong></td><td>明确行数移动（如近3行）</td><td>按数值区间计算（如3天范围）</td></tr><tr><td><strong>性能</strong></td><td>更高</td><td>较低（需排序计算）</td></tr><tr><td><strong>数据要求</strong></td><td>无特殊要求</td><td>ORDER BY字段需为数值/日期类型</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- ROWS模式（物理行）</span></span><br><span class="line"><span class="built_in">SUM</span>(amount) <span class="keyword">OVER</span> (</span><br><span class="line">    <span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="type">date</span> </span><br><span class="line">    <span class="keyword">ROWS</span> <span class="keyword">BETWEEN</span> <span class="number">1</span> PRECEDING <span class="keyword">AND</span> <span class="keyword">CURRENT</span> <span class="type">ROW</span></span><br><span class="line">) → 当前行<span class="operator">+</span>前<span class="number">1</span>行</span><br><span class="line"></span><br><span class="line"><span class="comment">-- RANGE模式（逻辑值）</span></span><br><span class="line"><span class="built_in">SUM</span>(amount) <span class="keyword">OVER</span> (</span><br><span class="line">    <span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="type">date</span> </span><br><span class="line">    <span class="keyword">RANGE</span> <span class="keyword">BETWEEN</span> <span class="type">INTERVAL</span> <span class="number">1</span> <span class="keyword">DAY</span> PRECEDING <span class="keyword">AND</span> <span class="keyword">CURRENT</span> <span class="type">ROW</span></span><br><span class="line">) → 当天<span class="operator">+</span>前一天的所有记录</span><br></pre></td></tr></table></figure><h4 id="典型应用场景-2">典型应用场景</h4><ol><li><strong>金融分析</strong><ul><li>7日移动平均线</li><li>滚动波动率计算</li></ul></li><li><strong>电商分析</strong><ul><li>近30天消费趋势</li><li>周环比增长率</li></ul></li><li><strong>运营监控</strong><ul><li>每小时累计UV</li><li>滑动窗口异常检测</li></ul></li></ol><h4 id="高级用法示例">高级用法示例</h4><p>动态最近N条记录统计</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    order_id,</span><br><span class="line">    order_time,</span><br><span class="line">    <span class="built_in">AVG</span>(amount) <span class="keyword">OVER</span> (</span><br><span class="line">        <span class="keyword">ORDER</span> <span class="keyword">BY</span> order_time </span><br><span class="line">        <span class="keyword">ROWS</span> <span class="keyword">BETWEEN</span> <span class="number">9</span> PRECEDING <span class="keyword">AND</span> <span class="keyword">CURRENT</span> <span class="type">ROW</span></span><br><span class="line">    ) <span class="keyword">AS</span> last_10_avg</span><br><span class="line"><span class="keyword">FROM</span> orders;</span><br></pre></td></tr></table></figure><h4 id="时间段累计（日期类型）">时间段累计（日期类型）</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    report_date,</span><br><span class="line">    <span class="built_in">SUM</span>(revenue) <span class="keyword">OVER</span> (</span><br><span class="line">        <span class="keyword">ORDER</span> <span class="keyword">BY</span> report_date </span><br><span class="line">        <span class="keyword">RANGE</span> <span class="keyword">BETWEEN</span> <span class="type">INTERVAL</span> <span class="number">6</span> <span class="keyword">DAY</span> PRECEDING <span class="keyword">AND</span> <span class="keyword">CURRENT</span> <span class="type">ROW</span></span><br><span class="line">    ) <span class="keyword">AS</span> <span class="number">7</span>day_revenue </span><br><span class="line"><span class="keyword">FROM</span> daily_stats;</span><br></pre></td></tr></table></figure><blockquote><h4 id="注意事项-3">注意事项</h4><ol><li><strong>性能优化</strong><ul><li>避免大范围窗口（如<code>UNBOUNDED</code>+大数据量表）</li><li>优先使用<code>ROWS</code>模式</li><li>配合合适的索引（ORDER BY字段）</li></ul></li><li><strong>边界处理</strong><ul><li>窗口起始前的行返回<code>NULL</code></li><li>使用<code>COALESCE</code>处理空值</li></ul></li><li><strong>框架限制</strong><ul><li><code>RANGE</code>模式不支持<code>n FOLLOWING</code>（MySQL限制）</li><li>不同数据库实现细节可能有差异</li></ul></li></ol></blockquote><h2 id="五、综合应用场景">五、综合应用场景</h2><h3 id="案例：部门薪资排名">案例：<strong>部门薪资排名</strong></h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    department,</span><br><span class="line">    name,</span><br><span class="line">    salary,</span><br><span class="line">    <span class="built_in">RANK</span>() <span class="keyword">OVER</span>(<span class="keyword">PARTITION</span> <span class="keyword">BY</span> department <span class="keyword">ORDER</span> <span class="keyword">BY</span> salary <span class="keyword">DESC</span>) <span class="keyword">AS</span> dept_rank</span><br><span class="line"><span class="keyword">FROM</span> employees;</span><br></pre></td></tr></table></figure><table><thead><tr><th>department</th><th>name</th><th>salary</th><th>dept_rank</th></tr></thead><tbody><tr><td>技术部</td><td>张三</td><td>15000</td><td>1</td></tr><tr><td>技术部</td><td>李四</td><td>12000</td><td>2</td></tr><tr><td>市场部</td><td>王五</td><td>13000</td><td>1</td></tr></tbody></table><h2 id="六、注意事项">六、注意事项</h2><ol><li>窗口函数执行顺序：在<code>WHERE</code>、<code>GROUP BY</code>之后，<code>ORDER BY</code>之前</li><li>可以组合使用多个窗口函数</li><li>不同数据库支持情况可能不同（MySQL 8.0+支持）</li><li>大数据量时注意性能优化</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;SQL 执行顺序与常用函数&lt;/h1&gt;
&lt;h2 id=&quot;🔄-SQL-语句执行顺序&quot;&gt;🔄 SQL 语句执行顺序&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;FROM&lt;/strong&gt;&lt;br&gt;
从数据库复制原始表（生成临时表）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;WHERE&lt;</summary>
      
    
    
    
    <category term="大数据" scheme="https://blog.icjlu.eu.org/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="数据操作" scheme="https://blog.icjlu.eu.org/tags/%E6%95%B0%E6%8D%AE%E6%93%8D%E4%BD%9C/"/>
    
    <category term="SQL" scheme="https://blog.icjlu.eu.org/tags/SQL/"/>
    
    <category term="数据库" scheme="https://blog.icjlu.eu.org/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>Linux基础</title>
    <link href="https://blog.icjlu.eu.org/post/linuxba.html"/>
    <id>https://blog.icjlu.eu.org/post/linuxba.html</id>
    <published>2023-04-13T10:13:29.000Z</published>
    <updated>2024-03-15T10:22:54.000Z</updated>
    
    <content type="html"><![CDATA[<h1>所需软件的安装和配置</h1><h2 id="1-VMware和远程连接软件（FinalShell、Xshell等）的安装">1.VMware和远程连接软件（FinalShell、Xshell等）的安装</h2><p>VMware软件安装简单，激活码查找也方便，FinalShell若不使用专业版内容也是直接安装即可。</p><p>下面是FinalShell3.9.5.7及之前版本的高级/专业版激活码获取方式。</p><p>打开FinalShell后点击激活，选择离线激活，随便输入账号密码，复制机器码，粘贴即可获取</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;k&#x27;</span>]))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;s&#x27;</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="variable">$a</span> = <span class="string">&#x27;激活码为：&#x27;</span>.<span class="title function_ invoke__">strtolower</span>(<span class="title function_ invoke__">substr</span>(<span class="title function_ invoke__">md5</span>(<span class="string">&#x27;2356&#x27;</span>.<span class="variable">$_POST</span>[<span class="string">&#x27;k&#x27;</span>].<span class="string">&#x27;13593&#x27;</span>),<span class="number">8</span>,<span class="number">16</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;s&#x27;</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="variable">$a</span> = <span class="string">&#x27;激活码为：&#x27;</span>.<span class="title function_ invoke__">strtolower</span>(<span class="title function_ invoke__">substr</span>(<span class="title function_ invoke__">md5</span>(<span class="string">&#x27;61305&#x27;</span>.<span class="variable">$_POST</span>[<span class="string">&#x27;k&#x27;</span>].<span class="string">&#x27;8552&#x27;</span>),<span class="number">8</span>,<span class="number">16</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>substr截取md5的一部分，从第八位开始往后面的16个字符，strtolower()将字符串全部转为小写</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;#&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;k&quot;</span> <span class="attr">id</span>=<span class="string">&quot;k&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;s&quot;</span> <span class="attr">id</span>=<span class="string">&quot;s&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span>专业版</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;s&quot;</span> <span class="attr">id</span>=<span class="string">&quot;s&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0&quot;</span>&gt;</span>高级版</span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>php文件内容应为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;FinalShell激活码计算&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;form action=&quot;#&quot; method=&quot;post&quot;&gt;</span><br><span class="line">    &lt;input type=&quot;text&quot; name=&quot;k&quot; id=&quot;k&quot;&gt;</span><br><span class="line">    &lt;input type=&quot;radio&quot; name=&quot;s&quot; id=&quot;s1&quot; value=&quot;1&quot;&gt;专业版</span><br><span class="line">    &lt;input type=&quot;radio&quot; name=&quot;s&quot; id=&quot;s2&quot; value=&quot;0&quot;&gt;高级版</span><br><span class="line">    &lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">    $a = &#x27;&#x27;;</span><br><span class="line">    if(!empty($_POST[&#x27;k&#x27;]))&#123;</span><br><span class="line">        if($_POST[&#x27;s&#x27;] == 1)&#123;</span><br><span class="line">            $a = &#x27;激活码为：&#x27;.strtolower(substr(md5(&#x27;2356&#x27;.$_POST[&#x27;k&#x27;].&#x27;13593&#x27;),8,16));</span><br><span class="line">        &#125;</span><br><span class="line">        if($_POST[&#x27;s&#x27;] == 0)&#123;</span><br><span class="line">            $a = &#x27;激活码为：&#x27;.strtolower(substr(md5(&#x27;61305&#x27;.$_POST[&#x27;k&#x27;].&#x27;8552&#x27;),8,16));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    echo $a;</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>Java代码 <a href="https://www.json.cn/runcode/run_java/">附在线运行网站</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.security.MessageDigest;</span><br><span class="line"><span class="keyword">import</span> java.security.NoSuchAlgorithmException;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> NoSuchAlgorithmException, IOException &#123;</span><br><span class="line">        System.out.print(<span class="string">&quot;请输入FinalShell的离线机器码：&quot;</span>);</span><br><span class="line">        <span class="meta">@SuppressWarnings(&quot;resource&quot;)</span></span><br><span class="line">        <span class="comment">//Scanner reader = new Scanner(System.in);</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">machineCode</span> <span class="operator">=</span> <span class="string">&quot;aa@6a6c73491cbe6c6e&quot;</span>; <span class="comment">// 在此处放置机器码</span></span><br><span class="line">        generateKey(machineCode);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">generateKey</span><span class="params">(String hardwareId)</span> <span class="keyword">throws</span> NoSuchAlgorithmException &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">proKey</span> <span class="operator">=</span> transform(<span class="number">61305</span> + hardwareId + <span class="number">8552</span>); <span class="comment">//高级版</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">pfKey</span> <span class="operator">=</span> transform(<span class="number">2356</span> + hardwareId + <span class="number">13593</span>); <span class="comment">//专业版</span></span><br><span class="line">        System.out.println(<span class="string">&quot;请将此行复制到离线激活中：&quot;</span> + pfKey);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">transform</span><span class="params">(String str)</span> <span class="keyword">throws</span> NoSuchAlgorithmException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@SuppressWarnings(&quot;unused&quot;)</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">md5</span> <span class="operator">=</span> hashMD5(str);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> hashMD5(str).substring(<span class="number">8</span>, <span class="number">24</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">hashMD5</span><span class="params">(String str)</span> <span class="keyword">throws</span> NoSuchAlgorithmException &#123;</span><br><span class="line">        <span class="type">MessageDigest</span> <span class="variable">digest</span> <span class="operator">=</span> MessageDigest.getInstance(<span class="string">&quot;MD5&quot;</span>);</span><br><span class="line">        <span class="type">byte</span>[] hashed = digest.digest(str.getBytes());</span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">byte</span> b : hashed) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> b &amp; <span class="number">0xFF</span>;</span><br><span class="line">            <span class="keyword">if</span> (len &lt; <span class="number">16</span>) &#123;</span><br><span class="line">                sb.append(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            sb.append(Integer.toHexString(len));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="虚拟网络配置">虚拟网络配置</h3><p>安装好本地虚拟机后，需要对网络进行配置，<s><em>使用vps可跳过这个步骤</em></s> 课程中使用的是CentOS7的系统，不同版本的具体配置可能不尽相同。在虚拟机设置中，将虚拟机的网络模式设置为NAT模式。</p><p>在终端界面输入<code>ifconfig</code> 查看ens33的ip地址，ip地址为192.168.88.100，然后打开虚拟网络编辑器，选中VMnet8更改配置</p><p><img src="https://s2.loli.net/2024/03/15/lPkyoLge326WTBd.png" alt="linux01.png"></p><p><img src="https://s2.loli.net/2024/03/15/LFHSh8DZvm3cKPo.png" alt="linux02.png"></p><p>子网IP更改为192.168.88.0，点击将主机虚拟适配器连接到此网络，点击NAT设置，将网关IP改为192.168.88.2，点击确定，保存。</p><p>修改配置文件，IP地址192.168.88.100和网关地址192.168.88.2、DNS192.168.88.2</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysconfig/network-scripts/ifcfg-ens33</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2024/03/15/atjAwCNBLsIOlWu.png" alt="linux03.png"></p><p>然后修改网络适配器</p><p><img src="https://s2.loli.net/2024/03/15/oAz421RPdbOt86q.png" alt="linux04.png"></p><p>删除<code>/etc/sysconfig/network-scripts/</code> 下的以ifcfg开头除ifcfg-ens33和ifcfg-lo以外的文件（ifcfg-配置_1， ifcfg-ens33.bak），重启网络<code>systemctl restart network</code> 此时虚拟机应能正常访问网络。</p><h2 id="2-Linux命令">2.Linux命令</h2><p>Linux是树状存储结构，在一个根节点下存放了系统的不同文件夹，Windows是森林结构</p><p>/bin：这个目录存放着最经常使用的命令,ls、cp、rm、chmod 等常用命令都在此目录</p><p>/boot 系统启动目录，保存与系统启动相关的文件，如内核文件和启动引导程序；</p><p>/dev 设备文件保存位置；</p><p>/etc：存放在配置文件</p><p>/home：用户的主目录</p><p>/lib：存放程序所需的动态库和静态库文件；</p><p>/root ：超级用户 home目录</p><h3 id="2-1-Linux基础命令">2.1.Linux基础命令</h3><h4 id="2-1-1-linux命令的构成">2.1.1.linux命令的构成</h4><p>linux指令=命令（做什么） +选项（怎么做） +参数（对谁做）</p><p>​-command ：命令名 ：使用英文单词的缩写或者英文单词</p><p>​-options：选项     ，可以对命令进行控制   但是 也可以省略</p><p>​-parameter：给命令传参数， 可以是一个 ，也可以是多个或者零个</p><p><strong>在使用命令时，可以使用man 命令名查看使用说明</strong></p><p>./ ：代表当前目录</p><p>…/：上一级目录</p><p>使用这两种方式可实现绝对路径和相对路径访问文件</p><p><strong>ctrl+r：历史记录中所搜命令（输入命令中的任意一个字符）；</strong></p><p><strong>ctrl+c：终止当前的命令</strong></p><h4 id="2-1-2-ls命令">2.1.2 ls命令</h4><p>ls命令：展示linux系统中指定位置的目录信息   -F 查看目录中的文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">-a ：查看所有文件，包括隐藏的文件，Linux下隐藏文件 隐藏目录 名称都是以.开头，图形界面下可以使用ctrl+h切换是否显示隐藏文件</span><br><span class="line"></span><br><span class="line">-l ：展示文件的详细信息，包括权限、归属、文件大小、创建修改时间、文件名称，linux内置了ll命令作为ls -l的别名</span><br><span class="line">ls -ld：显示目录和链接信息；</span><br><span class="line"></span><br><span class="line">-h ：人性化显示文件大小，赋予最恰当的单位 但是需要和 l一起使用  </span><br><span class="line"></span><br><span class="line">ls -R：递归显示子目录结构；</span><br><span class="line"></span><br><span class="line">ls [0-9] ：显示包含数字的文件名和目录名</span><br></pre></td></tr></table></figure><h4 id="2-1-3-cd命令">2.1.3 cd命令</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cd ../   返回上一级目录</span><br><span class="line">cd ../.. 返回上两级目录</span><br><span class="line"></span><br><span class="line">cd - 返回上一次操作的工作目录</span><br><span class="line"></span><br><span class="line">cd / 进入根目录</span><br><span class="line"></span><br><span class="line">cd ~ 返回家目录中   ~ 可以省略</span><br></pre></td></tr></table></figure><h4 id="2-1-4-pwd命令">2.1.4 pwd命令</h4><p>pwd命令：获取当前所在工作目录的绝对路径</p><h4 id="2-1-5-mkdir命令">2.1.5 mkdir命令</h4><p>mkdir命令用来创建空目录的命令，我们可以在指定的路径下厨房间一个空目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir 文件夹名字  ：在当前目录下创建一个文件夹</span><br><span class="line"></span><br><span class="line">mkdir -p 文件路径   指定路径下创建一个空目录，同时创建其父目录</span><br></pre></td></tr></table></figure><h4 id="2-1-6-touch命令">2.1.6 touch命令</h4><p>touch命令可以创建一个新的文件，文件的拓展名随意，甚至可以是一个不存在的拓展名，当文件存在的时候，修改文件的创建时间</p><p>touch 可以一次性创建多个文件，但是这个文件路径<strong>必须正确</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">touch -t 0712250000 file1 修改一个文件或目录的时间戳 - (YYMMDDhhmm)</span><br><span class="line">touch * ：将当前下的文件时间修改为系统的当前时间</span><br><span class="line"></span><br><span class="line">touch –d 20040210 test：将test文件的日期改为20040210</span><br><span class="line"></span><br><span class="line">touch abc　：若abc文件存在，则修改为系统的当前时间；若不存在，则生成一个为当前时间的空文件</span><br></pre></td></tr></table></figure><h4 id="2-1-7-rm命令">2.1.7 rm命令</h4><p>rm 是删除文件的指令，可以删除文件 ，也可以删除文件夹</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-r  递归删除，删除文件夹的时候使用</span><br><span class="line"></span><br><span class="line">-f  强制删除 ，不进行询问</span><br><span class="line"></span><br><span class="line">rm  可以删除任意文件，路径可以是相对/绝对的</span><br></pre></td></tr></table></figure><h4 id="2-1-8-mv命令">2.1.8 mv命令</h4><p>mv是一个移动文件的指令，将文件从一个位置移动到另一个位置，在移动的过程中可以修改文件或者目录的<strong>名称</strong>，格式：mv 源文件路径（相对/绝对）   目标路径。移动文件或者目录时，目标路径必须存在，改名只需输入相同的路径不同的文件名即可，可同时改名并移动文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv dir1 new_dir 重命名/移动 一个目录</span><br></pre></td></tr></table></figure><h4 id="2-1-9-cp命令">2.1.9 cp命令</h4><p>cp命令就是可以复制文件或者目录的命令，在复制的过程中，源文件不会被删除，复制完成后，文件可以修改名称，格式：cp 源文件路径  目标路径</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cp -r #复制目录时需要- r</span><br><span class="line"></span><br><span class="line">cp file1 file2 复制一个文件</span><br><span class="line">cp dir/* . 复制一个目录下的所有文件到当前工作目录</span><br><span class="line">cp -a /tmp/dir1 . 复制一个目录到当前工作目录</span><br><span class="line">cp -a dir1 dir2 复制一个目录</span><br></pre></td></tr></table></figure><p>mv和cp的使用方式基本一致，只有两个地方不一样：</p><p>1：mv移动目录时不需要使用-r，cp需要使用-r</p><p>2：cp不会删除源文件，而mv源文件会消失</p><h4 id="2-1-10-echo命令">2.1.10 echo命令</h4><p>功能：输出内容</p><p>语法：<code>echo 参数</code></p><ul><li>参数：被输出的内容</li><li>被两个反引号包围的内容，会作为命令执行，echo `pwd`，会输出当前工作目录</li></ul><h4 id="2-1-11-重定向符">2.1.11 重定向符</h4><p>功能：将符号左边的结果，输出到右边指定的文件中去</p><ul><li><code>&gt;</code>，表示覆盖输出</li><li><code>&gt;&gt;</code>，表示追加输出</li></ul><h3 id="2-2-进阶命令">2.2 进阶命令</h3><h4 id="2-2-1-cat命令">2.2.1 cat命令</h4><p>用于查看linux中<strong>小型的</strong>文本文件，cat 文件名</p><p>因为他会一次行将所有的文件内容加载终端中，终端显示的数据有限，大的文件会显示不全，且消耗内存</p><p>使用生产场景：   大数据框架的运行日志、大数据计算的运行日志</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat file1 从第一个字节开始正向查看文件的内容</span><br><span class="line">tac file1 从最后一行开始反向查看一个文件的内容</span><br></pre></td></tr></table></figure><h4 id="2-2-2-more命令">2.2.2 more命令</h4><p>用于查看linux中中型的文本文件</p><p>使用more进行文件的查看可以按页，手动翻页或者回滚，更灵活。但是统一也消耗内存</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> -回车   向下一行</span><br><span class="line"> -空格    向下一页</span><br><span class="line"> b   向上一页</span><br><span class="line"> q   退出查看</span><br><span class="line"> </span><br><span class="line">more file1 查看一个长文件的内容</span><br><span class="line">less file1 类似于 &#x27;more&#x27; 命令，但是它允许在文件中和正向操作一样的反向操作</span><br></pre></td></tr></table></figure><p>cat 和 more 都可用来查看文件内容。不同点在于：cat 指令查看完毕后会自动返回到正常模式而 more 指令则需要用户手动退出查看模式。cat 命令用于显示整个文件的内容，单独使用没有翻页功能。而 more 命令则可以分页显示文件内容，可以向前或向后翻页，可<strong>与cat配合使用</strong>。</p><h4 id="2-2-3-head，tail命令">2.2.3 head，tail命令</h4><p>head功能：查看文件头部内容</p><p>语法：<code>head [-n] 参数</code></p><ul><li>参数：被查看的文件</li><li>选项：-n，查看的行数</li></ul><p>tail默认查看该文件的最新10行（如果这个文件发生变动，有新的内容添加到文件的尾部，tail命令会把新添加的内容展示出来，<strong>实时查看</strong> ）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tail -f 文件名</span><br><span class="line">head -2 file1 查看一个文件的前两行</span><br><span class="line">tail -2 file1 查看一个文件的最后两行</span><br></pre></td></tr></table></figure><h4 id="2-2-4-ps命令">2.2.4 ps命令</h4><p>查看当前活跃的进程</p><p>ps -ef 作用：查看当前所有的进程，查看PID和了解进程cpu资源占比情况</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">UID：表示是哪个一个用户执行的</span><br><span class="line"></span><br><span class="line">PPID：进行的父进行标识号</span><br><span class="line"></span><br><span class="line">C：cpu使用资源的百分比</span><br><span class="line"></span><br><span class="line">Stime：进程开始执行的时间</span><br></pre></td></tr></table></figure><h4 id="2-2-5-kill命令">2.2.5 kill命令</h4><p>用于结束linux中的软件或者服务，格式： kill -9 进程编号</p><p>kill -9 可以快速的杀死进程，但是不安全，因为我们的服务在运行的过程中，可能会需要保存或者某执行完某一个任务在关闭。所以不轻易使用，一般都是用于杀死闲置进程或者不响应的进行。</p><h4 id="2-2-6-ifconfig命令">2.2.6 ifconfig命令</h4><p>作用：用于查看服务器网络信息</p><h4 id="2-2-7-free命令">2.2.7 free命令</h4><p>作用：查看内存的使用情况</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">total：表示总计的物理内存大小</span><br><span class="line"></span><br><span class="line">used：表示已经使用的多了</span><br><span class="line"></span><br><span class="line">free：表示还可以用多少</span><br><span class="line"></span><br><span class="line">shared：表示多个进行共享的内存总额</span><br><span class="line"></span><br><span class="line">buff：表示缓存的大小</span><br><span class="line"></span><br><span class="line">free -k：以kb为单位来显示内存（默认就是k）</span><br><span class="line"></span><br><span class="line">free -m：以m为单位来显示内存信息</span><br><span class="line"></span><br><span class="line">free -g ：以m为单位来显示内存信息</span><br><span class="line"></span><br><span class="line">free -h ：以用户适合的方式去显示内存</span><br><span class="line"></span><br><span class="line">free -t：显示linux全部的内存（total）</span><br><span class="line"></span><br><span class="line">free -s：表示每个N秒打印一次内存信息，直到使用crtl+c结束</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">free -hs  5：生产使用场景：提交大数据计算任务后，动态的查看内存变化情况</span><br></pre></td></tr></table></figure><h4 id="2-2-8-df命令">2.2.8 df命令</h4><p>作用：查看磁盘的使用情况</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df -h：以用户方便的单位进行显示</span><br><span class="line">df-Th：显示文件系统的类型</span><br></pre></td></tr></table></figure><h4 id="2-2-9-clear命令">2.2.9 clear命令</h4><p>清除终端窗口的信息=crlt+l</p><h4 id="2-2-10-关机-重启命令">2.2.10 关机&amp;重启命令</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">1：reboot命令</span><br><span class="line"></span><br><span class="line">重启计算机，reboot属于安全重启，不属于强制重启，可以放心的使用</span><br><span class="line"></span><br><span class="line">2：shutdown命令</span><br><span class="line"></span><br><span class="line">shutdown命令主要用于关机操作，关闭过程中，可以指定关机时间</span><br><span class="line"></span><br><span class="line">shutdown -h now 立即关机</span><br><span class="line"></span><br><span class="line">shutdown -h 1 一分钟后关机</span><br><span class="line">shutdown -h hours:minutes &amp; 按预定时间关闭系统</span><br><span class="line"></span><br><span class="line">shutdown -c 取消按预定时间关闭系统</span><br><span class="line"></span><br><span class="line">shutdown -r now 重启</span><br><span class="line"></span><br><span class="line">init 0    关闭系统</span><br><span class="line">telinit 0 关闭系统</span><br><span class="line">logout    注销</span><br></pre></td></tr></table></figure><h4 id="2-2-11-which命令">2.2.11 which命令</h4><p>查看脚本或者终端命令文件所在位置</p><p>一般情况下可以使用which命令找到<strong>终端指令</strong>的安装目录</p><h4 id="2-2-12-grep命令">2.2.12 grep命令</h4><p>grep就是根据一定的规则做全文检索，在文件中查询到满足规则的文本内容</p><p>grep是在文件中查询文本，指定的文件中查找特定的字符组合</p><p>用法: grep [选项]…</p><p>生产使用场景：从日志中找到错误信息，方便我们分析日志</p><p>​grep ERROR 文件名</p><p>​警告：grep INFO 文件名</p><h5 id="pgrep">pgrep</h5><p>用于列举进程ID，下面两条命令是等效的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pgrep -u hchen2244122444</span><br><span class="line">ps -ef | egrep &#x27;^hchen&#x27; | awk &#x27;&#123;print $2&#125;&#x27;</span><br></pre></td></tr></table></figure><h4 id="2-2-13-hostname命令">2.2.13 hostname命令</h4><p>查看主机名</p><h4 id="2-2-14-无名管道命令">2.2.14 | 无名管道命令</h4><p>管道指令，是连接两个命令的指令，前一个命令的输出，就是下一个命令的输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">查找文件：ls -l | grep 创建时间 |grep 文件名</span><br><span class="line"></span><br><span class="line">查找进程：ps -ef | grep 进程名 | grep 进程归属</span><br></pre></td></tr></table></figure><h4 id="2-2-14-1-mkfifo-命名管道">2.2.14.1 mkfifo 命名管道</h4><p>用法：mkfifo [选项] 文件名</p><p>命名管道是一种特殊的文件类型，可以用于实现进程间通信（IPC，Inter-Process Communication），允许不同进程之间通过读写同一个文件来传递数据</p><p>使用 <code>mkfifo</code> 命令创建的命名管道可以像普通文件一样被读取和写入。一个进程可以将数据写入命名管道，而另一个进程可以从同一个命名管道中读取这些数据，从而实现了进程间的通信。命名管道通常用于在不同的进程之间传递数据，例如在Shell脚本中用于管道操作、在不同的程序之间传递数据等</p><p>命名管道在使用时需要注意同步和阻塞的问题，因为命名管道是基于文件系统的，读写操作可能会阻塞，导致进程在没有数据可读或可写时被阻塞。此外，命名管道在使用完毕后需要手动删除，可以使用 <code>rm</code> 命令删除对应的文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># mkfifo /tmp/aapipe           创建命名管道</span><br><span class="line"># ls -l /tmp</span><br><span class="line">输出 prw-rw-r-- 1 aa  aa  0 05-10 18:58 aapipe</span><br><span class="line"># ls -al &gt; /tmp/aapipe         在一个shell中运行此命令，命令不会返回，除非有人从这个有名管道中把信息读走</span><br><span class="line"># head /tmp/aapipe             在另一命令窗口读取管道中的信息，同时上一命令会返回</span><br><span class="line">输出 drwx------ 8 aa aa    4096 05-10 18:27 .</span><br><span class="line">    drwxr-xr-x 7 root  root     4096 03-05 00:06 ..</span><br><span class="line">    drwxr-xr-x 3 aa aa    4096 03-01 18:13 backup</span><br><span class="line">    -rw------- 1 aa aa     721 05-05 22:12 .bash_history</span><br><span class="line">    -rw-r--r-- 1 aa aa      24 02-28 22:20 .bash_logout</span><br><span class="line">    -rw-r--r-- 1 aa aa     176 02-28 22:20 .bash_profile</span><br><span class="line">    -rw-r--r-- 1 aa aa     124 02-28 22:20 .bashrc</span><br><span class="line">    -rw-r--r-- 1 root  root    14002 03-07 00:29 index.htm</span><br><span class="line">    -rw-r--r-- 1 aa aa   31465 03-01 23:48 index.php</span><br></pre></td></tr></table></figure><h4 id="2-2-15-tar命令">2.2.15 tar命令</h4><p>tar命令是进行打包，解包，压缩和解压的命令</p><p>打包：将多个文件归档为一个文件，文件大小不会减少</p><p>解包（拆包）：将一个包文件分拆多个实体的文件</p><p>压缩：将文件按照一定的算法减少体积，但是文件的内容和信息不会发送改变</p><p>解压缩：将一个压缩文件还原到正常的状态</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">参数：</span><br><span class="line">c：打包选项</span><br><span class="line">x：解包选项</span><br><span class="line">z：压缩或者解压缩选项</span><br><span class="line">v：展示过程</span><br><span class="line">f：指定文件名</span><br><span class="line">一般情况tar -cxvf压缩 tar -zxvf解压</span><br></pre></td></tr></table></figure><p><strong>其它压缩指令</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">bunzip2 file1.bz2           解压一个叫做 &#x27;file1.bz2&#x27;的文件</span><br><span class="line">bzip2 file1                 压缩一个叫做 &#x27;file1&#x27; 的文件</span><br><span class="line">gunzip file1.gz             解压一个叫做 &#x27;file1.gz&#x27;的文件</span><br><span class="line">gzip file1                  压缩一个叫做 &#x27;file1&#x27;的文件</span><br><span class="line">gzip -9 file1               最大程度压缩</span><br><span class="line">rar a file1.rar test_file          创建一个叫做 &#x27;file1.rar&#x27; 的包</span><br><span class="line">rar a file1.rar file1 file2 dir1   同时压缩 &#x27;file1&#x27;, &#x27;file2&#x27; 以及目录 &#x27;dir1&#x27;</span><br><span class="line">rar x file1.rar     压缩rar包</span><br><span class="line">unrar x file1.rar   解压rar包</span><br><span class="line">tar -cvf archive.tar file1     创建一个非压缩的 tarball</span><br><span class="line">tar -tf archive.tar            显示一个包中的内容</span><br><span class="line">tar -xvf archive.tar           释放一个包</span><br><span class="line">tar -xvf archive.tar -C /tmp   将压缩包释放到 /tmp目录下</span><br><span class="line">tar -cvfj archive.tar.bz2 dir1 创建一个bzip2格式的压缩包</span><br><span class="line">tar -xvfj archive.tar.bz2      解压一个bzip2格式的压缩包</span><br><span class="line">tar -cvfz archive.tar.gz dir1  创建一个gzip格式的压缩包</span><br><span class="line">tar -xvfz archive.tar.gz       解压一个gzip格式的压缩包</span><br><span class="line">zip file1.zip file1            创建一个zip格式的压缩包</span><br><span class="line">zip -r file1.zip file1 file2 dir1   将几个文件和目录同时压缩成一个zip格式的压缩包</span><br><span class="line">unzip file1.zip                     解压一个zip格式压缩包</span><br></pre></td></tr></table></figure><h4 id="2-2-16-useradd，groupadd命令">2.2.16 useradd，groupadd命令</h4><p>useradd 可以添加一个linux用户，/home目录会创建一个该用户的家目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">groupmod -n new_group_name old_group_name                              重命名一个用户组</span><br><span class="line">useradd -c &quot;Name Surname &quot; -g admin -d /home/user1 -s /bin/bash user1  创建一个属于 &quot;admin&quot; 用户组的用户</span><br></pre></td></tr></table></figure><h4 id="2-2-17-userdel，groupdel命令">2.2.17 userdel，groupdel命令</h4><p>删除用户同时会删除用户的家目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">userdel -r user1              删除一个用户 ( &#x27;-r&#x27; 排除主目录)</span><br><span class="line">usermod -c &quot;User FTP&quot; -g system -d /ftp/user1 -s /bin/nologin user1   修改用户属性</span><br><span class="line">newgrp group_name             登陆进一个新的群组以改变新创建文件的预设群组</span><br></pre></td></tr></table></figure><h4 id="2-2-18-passwd命令">2.2.18 passwd命令</h4><p>格式：passwd 用户名 更改指定用户的密码，不可使用数字小键盘</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">passwd user1               修改一个用户的密码 (只允许root执行)</span><br><span class="line">chage -E 2023-04-10 user1  设置用户密码的失效期限</span><br><span class="line"></span><br><span class="line">pwck                       检查 &#x27;/etc/passwd&#x27; 的文件格式和语法修正以及存在的用户</span><br><span class="line">grpck                      检查 &#x27;/etc/passwd&#x27; 的文件格式和语法修正以及存在的群组</span><br></pre></td></tr></table></figure><h4 id="2-2-19-chmod，chown命令">2.2.19 chmod，chown命令</h4><p>inux的文件<strong>权限</strong></p><table><thead><tr><th></th><th></th><th>权值</th></tr></thead><tbody><tr><td>读：r</td><td>read</td><td>4</td></tr><tr><td>写：w</td><td>write</td><td>2</td></tr><tr><td>执行： x</td><td>excuter</td><td>1</td></tr><tr><td>无权限：-</td><td></td><td>0</td></tr></tbody></table><p>linux文件<strong>归属</strong></p><p>属主：文件拥有者，一般是创建者 u   –user</p><p>属组：文件拥有者所在的用户组   g    -group</p><p>其他用户： 除了 属主和数组的其他用户 o -other</p><p>ls -l 可以查看文件的详细信息，包含文件权限其中d ：代表目录，-：普通文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">chmod 777 文件名                #表示给当前用户，用户所在组，其他用户都给予全部权限</span><br><span class="line">chmod u+x,g+x,o+x 文件名        #增加权限，-则为删除权限</span><br><span class="line">chmod u=rwx, g=wx, o=r 文件名   #同时编辑多个权限</span><br><span class="line"></span><br><span class="line">chmod go-rwx directory1        删除群组(g)与其他人(o)对目录的读写执行权限</span><br><span class="line"></span><br><span class="line">chown [-R] [用户][:][用户组] 文件或文件夹</span><br><span class="line">chown -R user1 directory1      改变一个目录的所有人属性并同时改变改目录下所有文件的属性</span><br><span class="line">chgrp group1 file1             改变文件的群组</span><br><span class="line"></span><br><span class="line">chmod u+s /bin/file1       设置一个二进制文件的 SUID 位 - 运行该文件的用户也被赋予和所有者同样的权限</span><br><span class="line">chmod u-s /bin/file1       禁用一个二进制文件的 SUID位</span><br><span class="line">chmod g+s /home/public     设置一个目录的 SGID 位 - 类似SUID ，不过这是针对目录的</span><br><span class="line">chmod g-s /home/public     禁用一个目录的 SGID 位</span><br><span class="line">chmod o+t /home/public     设置一个文件的 STIKY 位 - 只允许合法所有人删除文件</span><br><span class="line">chmod o-t /home/public     禁用一个目录的 STIKY 位</span><br></pre></td></tr></table></figure><h4 id="2-2-20-tree命令（需安装）">2.2.20 tree命令（需安装）</h4><p>tree    显示文件和目录由根目录开始的树形结构<br>lstree 显示文件和目录由根目录开始的树形结构</p><h4 id="2-2-21-ln命令">2.2.21 ln命令</h4><p>功能：在文件和目录之间建立链接</p><p>格式：ln [参数] &lt;源文件或目录&gt; &lt;目标文件或目录&gt;</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ln -s file1 lnk1 创建一个指向文件或目录的软链接</span><br><span class="line">ln file1 lnk1    创建一个指向文件或目录的物理链接</span><br></pre></td></tr></table></figure><h4 id="2-2-22-chattr命令">2.2.22 chattr命令</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">chattr +a file1    只允许以追加方式读写文件</span><br><span class="line">chattr +c file1    允许这个文件能被内核自动压缩/解压</span><br><span class="line">chattr +d file1    在进行文件系统备份时，dump程序将忽略这个文件</span><br><span class="line">chattr +i file1    设置成不可变的文件，不能被删除、修改、重命名或者链接</span><br><span class="line">chattr +s file1    允许一个文件被安全地删除</span><br><span class="line">chattr +S file1    一旦应用程序对这个文件执行了写操作，使系统立刻把修改的结果写到磁盘</span><br><span class="line">chattr +u file1    若文件被删除，系统会允许你在以后恢复这个被删除的文件</span><br><span class="line">lsattr             显示特殊的属性</span><br></pre></td></tr></table></figure><h4 id="2-2-23-wc命令">2.2.23 wc命令</h4><p>功能：统计</p><p>语法：<code>wc [-c -m -l -w] 文件路径</code></p><ul><li>选项，-c，统计bytes数量</li><li>选项，-m，统计字符数量</li><li>选项，-l，统计行数</li><li>选项，-w，统计单词数量</li><li>参数，文件路径，被统计的文件，可作为内容输入端口</li></ul><h3 id="2-3-系统指令">2.3 系统指令</h3><h4 id="2-3-1-系统信息查看">2.3.1 系统信息查看</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">uname -m         显示机器的处理器架构</span><br><span class="line">uname -r         显示正在使用的内核版本</span><br><span class="line">hdparm -tT /dev/sda                在磁盘上执行测试性读取操作系统信息</span><br><span class="line">(SMBIOS / DMI) hdparm -i /dev/hda  罗列一个磁盘的架构特性</span><br><span class="line">hdparm -i /dev/hda   罗列一个磁盘的架构特性</span><br><span class="line">arch                 显示机器的处理器架构</span><br><span class="line">dmidecode -q         显示硬件系统部件 - (SMBIOS / DMI)</span><br><span class="line">cat /proc/cpuinfo    显示CPU info的信息</span><br><span class="line">cat /proc/interrupts 显示中断</span><br><span class="line">cat /proc/meminfo    校验内存使用</span><br><span class="line">cat /proc/swaps      显示哪些swap被使用</span><br><span class="line">cat /proc/version    显示内核的版本</span><br><span class="line">cat /proc/net/dev    显示网络适配器及统计</span><br><span class="line">cat /proc/mounts     显示已加载的文件系统</span><br><span class="line">lspci -tv            罗列 PCI 设备</span><br><span class="line">lsusb -tv            显示 USB 设备</span><br><span class="line">lsmod                查看加载的模块(驱动)</span><br><span class="line">date                 显示系统日期</span><br><span class="line">cal 2007             显示2007年的日历表</span><br><span class="line">date 041217002007.00 设置日期和时间 - 月日时分年.秒</span><br><span class="line">clock -w             将时间修改保存到 BIOS</span><br><span class="line">iconv -l             列出已知的编码</span><br></pre></td></tr></table></figure><h4 id="2-3-2-文件查找">2.3.2 文件查找</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">find / -name file1                          从 &#x27;/&#x27; 开始进入根文件系统搜索文件和目录</span><br><span class="line">find / -user user1                          搜索属于用户 &#x27;user1&#x27; 的文件和目录</span><br><span class="line">find /home/user1 -name \.bin                在目录 &#x27;/ home/user1&#x27; 中搜索带有&#x27;.bin&#x27; 结尾的文件</span><br><span class="line">find /usr/bin -type f -atime +100           搜索在过去100天内未被使用过的执行文件</span><br><span class="line">find /usr/bin -type f -mtime -10            搜索在10天内被创建或者修改过的文件</span><br><span class="line">find / -name \.rpm -exec chmod 755 &#x27;&#123;&#125;&#x27; \;  搜索以 &#x27;.rpm&#x27; 结尾的文件并定义其权限</span><br><span class="line">find / -xdev -name \.rpm                    搜索以 &#x27;.rpm&#x27; 结尾的文件，忽略光驱等可移动设备</span><br><span class="line">find / -perm -u+s                           罗列一个系统中所有使用了SUID控制的文件</span><br><span class="line">locate \.ps                                 寻找以 &#x27;.ps&#x27; 结尾的文件 - 先运行 &#x27;updatedb&#x27; 命令</span><br><span class="line">whereis halt                                显示一个二进制文件、源码或man的位置</span><br><span class="line">which halt                                  显示一个二进制文件或可执行文件的完整路径</span><br></pre></td></tr></table></figure><h4 id="2-3-3-文件系统挂载">2.3.3 文件系统挂载</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mount /dev/hda2 /mnt/hda2                挂载一个叫做hda2的盘 - 确定目录 &#x27;/ mnt/hda2&#x27; 已经存在</span><br><span class="line">umount /dev/hda2                         卸载一个叫做hda2的盘 - 先从挂载点 &#x27;/ mnt/hda2&#x27; 退出</span><br><span class="line">fuser -km /mnt/hda2                      当设备繁忙时强制卸载</span><br><span class="line">umount -n /mnt/hda2                      运行卸载操作而不写入 /etc/mtab 文件- 当文件为只读或当磁盘写满时非常有用</span><br><span class="line">mount /dev/fd0 /mnt/floppy               挂载一个软盘</span><br><span class="line">mount /dev/cdrom /mnt/cdrom              挂载一个cdrom或dvdrom</span><br><span class="line">mount /dev/hdb /mnt/cdrecorder           挂载一个cdrw或dvdrom</span><br><span class="line">mount -o loop file.iso /mnt/cdrom        挂载一个文件或ISO镜像文件</span><br><span class="line">mount -t vfat /dev/hda5 /mnt/hda5        挂载一个Windows FAT32文件系统</span><br><span class="line">mount /dev/sda1 /mnt/usbdisk             挂载一个usb 捷盘或闪存设备</span><br><span class="line">mount -t smbfs -o username=user,password=pass //WinClient/share /mnt/share 挂载一个windows网络共享</span><br></pre></td></tr></table></figure><h4 id="2-3-4-磁盘查看">2.3.4 磁盘查看</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">df -h                                               显示已经挂载的分区列表</span><br><span class="line">ls -lSr |more                                       以尺寸大小排列文件和目录</span><br><span class="line">du -sh dir1                                         估算目录 &#x27;dir1&#x27; 已经使用的磁盘空间&#x27;</span><br><span class="line">du -sk * | sort -rn                                 以容量大小为依据依次显示文件和目录的大小</span><br><span class="line">dmesg                                               显示系统诊断信息、操作系统版本号、物理内存的大小以及其它信息</span><br><span class="line">rpm -q -a --qf &#x27;%10&#123;SIZE&#125;t%&#123;NAME&#125;n&#x27; | sort -k1,1n   以大小为依据依次显示已安装的rpm包所使用的空间 (fedora, redhat类系统)</span><br><span class="line">dpkg-query -W -f=&#x27;$&#123;Installed-Size;10&#125;t$&#123;Package&#125;n&#x27; | sort -k1,1n   以大小为依据显示已安装的deb包所使用的空间 (ubuntu, debian类系统)</span><br></pre></td></tr></table></figure><h4 id="2-3-5-软件安装命令">2.3.5 软件安装命令</h4><h5 id="rpm">rpm</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh package.rpm             安装一个rpm包</span><br><span class="line">rpm -ivh --nodeeps package.rpm   安装一个rpm包而忽略依赖关系警告</span><br><span class="line">rpm -U package.rpm               更新一个rpm包但不改变其配置文件</span><br><span class="line">rpm -F package.rpm               更新一个确定已经安装的rpm包</span><br><span class="line">rpm -e package_name.rpm          删除一个rpm包</span><br><span class="line">rpm -qa                          显示系统中所有已经安装的rpm包</span><br><span class="line">rpm -qa | grep httpd             显示所有名称中包含 &quot;httpd&quot; 字样的rpm包</span><br><span class="line">rpm -qi package_name             获取一个已安装包的特殊信息</span><br><span class="line">rpm -qg &quot;System Environment/Daemons&quot;     显示一个组件的rpm包</span><br><span class="line">rpm -ql package_name                     显示一个已经安装的rpm包提供的文件列表</span><br><span class="line">rpm -qc package_name                     显示一个已经安装的rpm包提供的配置文件列表</span><br><span class="line">rpm -q package_name --whatrequires       显示与一个rpm包存在依赖关系的列表</span><br><span class="line">rpm -q package_name --whatprovides       显示一个rpm包所占的体积</span><br><span class="line">rpm -q package_name --scripts            显示在安装/删除期间所执行的脚本l</span><br><span class="line">rpm -q package_name --changelog          显示一个rpm包的修改历史</span><br><span class="line">rpm -qf /etc/httpd/conf/httpd.conf       确认所给的文件由哪个rpm包所提供</span><br><span class="line">rpm -qp package.rpm -l                   显示由一个尚未安装的rpm包提供的文件列表</span><br><span class="line">rpm --import /media/cdrom/RPM-GPG-KEY    导入公钥数字证书</span><br><span class="line">rpm --checksig package.rpm               确认一个rpm包的完整性</span><br><span class="line">rpm -qa gpg-pubkey                       确认已安装的所有rpm包的完整性</span><br><span class="line">rpm -V package_name                      检查文件尺寸、 许可、类型、所有者、群组、MD5检查以及最后修改时间</span><br><span class="line">rpm -Va                                  检查系统中所有已安装的rpm包- 小心使用</span><br><span class="line">rpm -Vp package.rpm                      确认一个rpm包还未安装</span><br><span class="line">rpm2cpio package.rpm | cpio --extract --make-directories *bin* 从一个rpm包运行可执行文件</span><br><span class="line">rpm -ivh /usr/src/redhat/RPMS/`arch`/package.rpm               从一个rpm源码安装一个构建好的包</span><br><span class="line">rpmbuild --rebuild package_name.src.rpm                        从一个rpm源码构建一个 rpm 包</span><br></pre></td></tr></table></figure><h5 id="yum-y-自动确认-install-remove-search-软件名称">yum[-y 自动确认] [install / remove / search] 软件名称</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">yum install package_name            下载并安装一个rpm包</span><br><span class="line">yum localinstall package_name.rpm   将安装一个rpm包，使用你自己的软件仓库为你解决所有依赖关系</span><br><span class="line">yum update package_name.rpm         更新当前系统中所有安装的rpm包</span><br><span class="line">yum update package_name             更新一个rpm包</span><br><span class="line">yum remove package_name             删除一个rpm包</span><br><span class="line">yum list                            列出当前系统中安装的所有包</span><br><span class="line">yum search package_name             在rpm仓库中搜寻软件包</span><br><span class="line">yum clean packages                  清理rpm缓存删除下载的包</span><br><span class="line">yum clean headers                   删除所有头文件</span><br><span class="line">yum clean all                       删除所有缓存的包和头文件</span><br></pre></td></tr></table></figure><h5 id="deb">deb</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">dpkg -i package.deb         安装/更新一个 deb 包</span><br><span class="line">dpkg -r package_name        从系统删除一个 deb 包</span><br><span class="line">dpkg -l                     显示系统中所有已经安装的 deb 包</span><br><span class="line">dpkg -l | grep httpd        显示所有名称中包含 &quot;httpd&quot; 字样的deb包</span><br><span class="line">dpkg -s package_name        获得已经安装在系统中一个特殊包的信息</span><br><span class="line">dpkg -L package_name        显示系统中已经安装的一个deb包所提供的文件列表</span><br><span class="line">dpkg --contents package.deb 显示尚未安装的一个包所提供的文件列表</span><br><span class="line">dpkg -S /bin/ping           确认所给的文件由哪个deb包提供</span><br></pre></td></tr></table></figure><h5 id="apt-用于Debian-Ubuntu-以及类似系统-y-自动确认-install-remove-search-软件名称">apt(用于Debian, Ubuntu 以及类似系统)[-y 自动确认] [install / remove / search] 软件名称</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">apt-get install package_name       安装/更新一个 deb 包</span><br><span class="line">apt-cdrom install package_name     从光盘安装/更新一个 deb 包</span><br><span class="line">apt-get update                     升级列表中的软件包</span><br><span class="line">apt-get upgrade                    升级所有已安装的软件</span><br><span class="line">apt-get remove package_name        从系统删除一个deb包</span><br><span class="line">apt-get check                      确认依赖的软件仓库正确</span><br><span class="line">apt-get clean                      从下载的软件包中清理缓存</span><br><span class="line">apt-cache search searched-package  返回包含所要搜索字符串的软件包名称</span><br></pre></td></tr></table></figure><h4 id="2-3-6-文本处理">2.3.6 文本处理</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">cat file1 file2 ... | command &lt;&gt; file1_in.txt_or_file1_out.txt general syntax for text manipulation using PIPE, STDIN and STDOUT</span><br><span class="line">cat file1 | command( sed, grep, awk, grep, etc...) &gt; result.txt  合并一个文件的详细说明文本，并将简介写入一个新文件中</span><br><span class="line">cat file1 | command( sed, grep, awk, grep, etc...) &gt;&gt; result.txt 合并一个文件的详细说明文本，并将简介写入一个已有的文件中</span><br><span class="line">grep Aug /var/log/messages    在文件 &#x27;/var/log/messages&#x27;中查找关键词&quot;Aug&quot;</span><br><span class="line">grep ^Aug /var/log/messages   在文件 &#x27;/var/log/messages&#x27;中查找以&quot;Aug&quot;开始的词汇</span><br><span class="line">grep [0-9] /var/log/messages  选择 &#x27;/var/log/messages&#x27; 文件中所有包含数字的行</span><br><span class="line">grep Aug -R /var/log/         在目录 &#x27;/var/log&#x27; 及随后的目录中搜索字符串&quot;Aug&quot;</span><br><span class="line">sed &#x27;s/stringa1/stringa2/g&#x27; example.txt     将example.txt文件中的 &quot;string1&quot; 替换成 &quot;string2&quot;</span><br><span class="line">sed &#x27;/^$/d&#x27; example.txt                     从example.txt文件中删除所有空白行</span><br><span class="line">sed &#x27;/ *#/d; /^$/d&#x27; example.txt             从example.txt文件中删除所有注释和空白行</span><br><span class="line">echo &#x27;esempio&#x27; | tr &#x27;[:lower:]&#x27; &#x27;[:upper:]&#x27; 合并上下单元格内容</span><br><span class="line">sed -e &#x27;1d&#x27; result.txt                      从文件example.txt 中排除第一行</span><br><span class="line">sed -n &#x27;/stringa1/p&#x27;                        查看只包含词汇 &quot;string1&quot;的行</span><br><span class="line">sed -e &#x27;s/ *$//&#x27; example.txt                删除每一行最后的空白字符</span><br><span class="line">sed -e &#x27;s/stringa1//g&#x27; example.txt          从文档中只删除词汇 &quot;string1&quot; 并保留剩余全部</span><br><span class="line">sed -n &#x27;1,5p;5q&#x27; example.txt                查看从第一行到第5行内容</span><br><span class="line">sed -n &#x27;5p;5q&#x27; example.txt                  查看第5行</span><br><span class="line">sed -e &#x27;s/00*/0/g&#x27; example.txt              用单个零替换多个零</span><br><span class="line">cat -n file1                                标示文件的行数</span><br><span class="line">cat example.txt | awk &#x27;NR%2==1&#x27;             删除example.txt文件中的所有偶数行</span><br><span class="line">echo a b c | awk &#x27;&#123;print $1&#125;&#x27;               查看一行第一栏</span><br><span class="line">echo a b c | awk &#x27;&#123;print $1,$3&#125;&#x27;            查看一行的第一和第三栏</span><br><span class="line">paste file1 file2                           合并两个文件或两栏的内容</span><br><span class="line">paste -d &#x27;+&#x27; file1 file2                    合并两个文件或两栏的内容，中间用&quot;+&quot;区分</span><br><span class="line">sort file1 file2                            排序两个文件的内容</span><br><span class="line">sort file1 file2 | uniq                     取出两个文件的并集(重复的行只保留一份)</span><br><span class="line">sort file1 file2 | uniq -u                  删除交集，留下其他的行</span><br><span class="line">sort file1 file2 | uniq -d                  取出两个文件的交集(只留下同时存在于两个文件中的文件)</span><br><span class="line">comm -1 file1 file2                         比较两个文件的内容只删除 &#x27;file1&#x27; 所包含的内容</span><br><span class="line">comm -2 file1 file2                         比较两个文件的内容只删除 &#x27;file2&#x27; 所包含的内容</span><br><span class="line">comm -3 file1 file2                         比较两个文件的内容只删除两个文件共有的部分</span><br></pre></td></tr></table></figure><h4 id="2-3-7-字符-文件格式转换">2.3.7 字符/文件格式转换</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">dos2unix filedos.txt fileunix.txt     将一个文本文件的格式从MSDOS转换成UNIX</span><br><span class="line">unix2dos fileunix.txt filedos.txt     将一个文本文件的格式从UNIX转换成MSDOS</span><br><span class="line">recode ..HTML &lt; page.txt &gt; page.html  将一个文本文件转换成html</span><br><span class="line">recode -l | more                      显示所有允许的转换格式</span><br></pre></td></tr></table></figure><h4 id="2-3-8-文件系统操作">2.3.8 文件系统操作</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">badblocks -v /dev/hda1    检查磁盘hda1上的坏磁块</span><br><span class="line">fsck /dev/hda1            修复/检查hda1磁盘上linux文件系统的完整性</span><br><span class="line">fsck.ext2 /dev/hda1       修复/检查hda1磁盘上ext2文件系统的完整性</span><br><span class="line">e2fsck /dev/hda1          修复/检查hda1磁盘上ext2文件系统的完整性</span><br><span class="line">e2fsck -j /dev/hda1       修复/检查hda1磁盘上ext3文件系统的完整性</span><br><span class="line">fsck.ext3 /dev/hda1       修复/检查hda1磁盘上ext3文件系统的完整性</span><br><span class="line">fsck.vfat /dev/hda1       修复/检查hda1磁盘上fat文件系统的完整性</span><br><span class="line">fsck.msdos /dev/hda1      修复/检查hda1磁盘上dos文件系统的完整性</span><br><span class="line">dosfsck /dev/hda1         修复/检查hda1磁盘上dos文件系统的完整性</span><br><span class="line"></span><br><span class="line">mkfs /dev/hda1         在hda1分区创建一个文件系统</span><br><span class="line">mke2fs /dev/hda1       在hda1分区创建一个linux ext2的文件系统</span><br><span class="line">mke2fs -j /dev/hda1    在hda1分区创建一个linux ext3(日志型)的文件系统</span><br><span class="line">mkfs -t vfat 32 -F /dev/hda1  创建一个 FAT32 文件系统</span><br><span class="line">fdformat -n /dev/fd0          格式化一个软盘</span><br><span class="line">mkswap /dev/hda3              创建一个swap文件系统</span><br><span class="line">swapon /dev/hda3              启用一个新的swap文件系统</span><br><span class="line">swapon /dev/hda2 /dev/hdb3    启用两个swap分区</span><br></pre></td></tr></table></figure><h4 id="2-3-9-备份">2.3.9 备份</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">dump -0aj -f /tmp/home0.bak /home    制作一个 &#x27;/home&#x27; 目录的完整备份</span><br><span class="line">dump -1aj -f /tmp/home0.bak /home    制作一个 &#x27;/home&#x27; 目录的交互式备份</span><br><span class="line">restore -if /tmp/home0.bak           还原一个交互式备份</span><br><span class="line">rsync -rogpav --delete /home /tmp    同步两边的目录</span><br><span class="line">rsync -rogpav -e ssh --delete /home ip_address:/tmp           通过SSH通道rsync</span><br><span class="line">rsync -az -e ssh --delete ip_addr:/home/public /home/local    通过ssh和压缩将一个远程目录同步到本地目录</span><br><span class="line">rsync -az -e ssh --delete /home/local ip_addr:/home/public    通过ssh和压缩将本地目录同步到远程目录</span><br><span class="line">dd bs=1M if=/dev/hda | gzip | ssh user@ip_addr &#x27;dd of=hda.gz&#x27; 通过ssh在远程主机上执行一次备份本地磁盘的操作</span><br><span class="line">dd if=/dev/sda of=/tmp/file1     备份磁盘内容到一个文件</span><br><span class="line">tar -Puf backup.tar /home/user   执行一次对 &#x27;/home/user&#x27; 目录的交互式备份操作</span><br><span class="line">( cd /tmp/local/ &amp;&amp; tar c . ) | ssh -C user@ip_addr &#x27;cd /home/share/ &amp;&amp; tar x -p&#x27;  通过ssh在远程目录中复制一个目录内容</span><br><span class="line">( tar c /home ) | ssh -C user@ip_addr &#x27;cd /home/backup-home &amp;&amp; tar x -p&#x27;           通过ssh在远程目录中复制一个本地目录</span><br><span class="line">tar cf - . | (cd /tmp/backup ; tar xf - )      本地将一个目录复制到另一个地方，保留原有权限及链接</span><br><span class="line">find /home/user1 -name &#x27;*.txt&#x27; | xargs cp -av --target-directory=/home/backup/ --parents 从一个目录查找并复制所有以 &#x27;.txt&#x27; 结尾的文件到另一个目录</span><br><span class="line">find /var/log -name &#x27;*.log&#x27; | tar cv --files-from=- | bzip2 &gt; log.tar.bz2          查找所有以 &#x27;.log&#x27; 结尾的文件并做成一个bzip包</span><br><span class="line">dd if=/dev/hda of=/dev/fd0 bs=512 count=1      做一个将 MBR (Master Boot Record)内容复制到软盘的动作</span><br><span class="line">dd if=/dev/fd0 of=/dev/hda bs=512 count=1 从已经保存到软盘的备份中恢复MBR内容</span><br></pre></td></tr></table></figure><h4 id="2-3-10-光盘">2.3.10 光盘</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">cdrecord -v gracetime=2 dev=/dev/cdrom -eject blank=fast -force 清空一个可复写的光盘内容</span><br><span class="line">mkisofs /dev/cdrom &gt; cd.iso            在磁盘上创建一个光盘的iso镜像文件</span><br><span class="line">mkisofs /dev/cdrom | gzip &gt; cd_iso.gz  在磁盘上创建一个压缩了的光盘iso镜像文件</span><br><span class="line">mkisofs -J -allow-leading-dots -R -V &quot;Label CD&quot; -iso-level 4 -o ./cd.iso data_cd 创建一个目录的iso镜像文件</span><br><span class="line">cdrecord -v dev=/dev/cdrom cd.iso  刻录一个ISO镜像文件</span><br><span class="line">gzip -dc cd_iso.gz | cdrecord dev=/dev/cdrom - 刻录一个压缩了的ISO镜像文件</span><br><span class="line">mount -o loop cd.iso /mnt/iso      挂载一个ISO镜像文件</span><br><span class="line">cd-paranoia -B           从一个CD光盘转录音轨到 wav 文件中</span><br><span class="line">cd-paranoia -- &quot;-3&quot;      从一个CD光盘转录音轨到 wav 文件中（参数-3）</span><br><span class="line">cdrecord --scanbus       扫描总线以识别scsi通道</span><br><span class="line">dd if=/dev/hdc | md5sum  校验一个设备的md5sum编码，例如一张 CD</span><br></pre></td></tr></table></figure><h4 id="2-3-11-网络">2.3.11 网络</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">ifconfig eth0：显示网络接口“eth0”的配置详细信息，例如IP地址、子网掩码和其他网络设置</span><br><span class="line"></span><br><span class="line">ifup eth0：    启动网络接口“eth0”，使其能够发送和接收网络流量</span><br><span class="line"></span><br><span class="line">ifdown eth0：  关闭网络接口“eth0”，禁止其发送或接收网络流量</span><br><span class="line"></span><br><span class="line">ifconfig eth0 192.168.1.1 netmask 255.255.255.0：将网络接口“eth0”的IP地址和子网掩码配置为分别为“192.168.1.1”和“255.255.255.0”</span><br><span class="line"></span><br><span class="line">ifconfig eth0 promisc：      将网络接口“eth0”设置为混杂模式，允许其捕获所有网络流量，包括不是发送到其MAC地址的数据包。</span><br><span class="line"></span><br><span class="line">dhclient eth0：              请求网络接口“eth0”从DHCP服务器获取IP地址租约。</span><br><span class="line"></span><br><span class="line">route -n show routing table：显示当前系统的路由表，显示当前的路由配置。</span><br><span class="line"></span><br><span class="line">route add -net 0/0 gw IP_Gateway：  为系统添加默认网关，其中网关IP地址设置为“IP_Gateway”。</span><br><span class="line"></span><br><span class="line">route add -net 192.168.0.0 netmask 255.255.0.0 gw 192.168.1.1：通过网关“192.168.1.1”添加静态路由，以便通过该网关访问网络“192.168.0.0/16”。</span><br><span class="line"></span><br><span class="line">route del 0/0 gw IP_gateway：删除之前添加的默认网关。</span><br><span class="line"></span><br><span class="line">echo &quot;1&quot; &gt; /proc/sys/net/ipv4/ip_forward：激活IP转发，允许系统在不同的网络接口之间进行IP数据包路由。</span><br><span class="line"></span><br><span class="line">hostname：显示系统的主机名，即在网络上标识系统的名称。</span><br><span class="line"></span><br><span class="line">host www.example.com：    执行DNS查找，将主机名“www.example.com”解析为IP地址，反之亦然。</span><br><span class="line"></span><br><span class="line">nslookup www.example.com：同样执行DNS查找，将主机名“www.example.com”解析为IP地址，反之亦然。</span><br><span class="line"></span><br><span class="line">ip link show： 显示所有网络接口的状态，包括其链路状态（已启用或已禁用）和其他信息。</span><br><span class="line"></span><br><span class="line">mii-tool eth0：使用Media Independent Interface（MII）工具显示网络接口“eth0”的链路状态。</span><br><span class="line"></span><br><span class="line">ethtool eth0： 显示网络卡“eth0”的统计信息和详细信息，例如速度、双工模式和错误计数器。</span><br><span class="line"></span><br><span class="line">netstat -tup： 显示使用TCP和UDP协议的所有活动网络连接及其关联的进程（通过PID标识）。</span><br><span class="line"></span><br><span class="line">netstat -tupl：显示系统上所有监听的网络服务及其关联的进程（通过PID标识）使用TCP和UDP协议。</span><br><span class="line"></span><br><span class="line">`tcpdump tcp port 80`：显示所有在端口80上使用TCP协议的网络流量，通常用于监控HTTP（超文本传输协议）流量。</span><br><span class="line"></span><br><span class="line">iwlist scan：  显示无线网络接口的扫描结果，列出可用的无线网络。</span><br><span class="line"></span><br><span class="line">iwconfig eth1：显示无线网络接口“eth1”的配置信息，包括SSID、信号强度和加密设置等。</span><br><span class="line"></span><br><span class="line">hostname：     显示系统的主机名，即在网络上标识系统的名称。</span><br><span class="line"></span><br><span class="line">host www.example.com：    执行DNS查找，将主机名“www.example.com”解析为IP地址，反之亦然。</span><br><span class="line"></span><br><span class="line">nslookup www.example.com：同样执行DNS查找，将主机名“www.example.com”解析为IP地址，反之亦然。</span><br><span class="line"></span><br><span class="line">whois www.example.com：   在Whois数据库中查找主机名“www.example.com”的注册信息，包括域名所有者、注册商、联系信息等。</span><br></pre></td></tr></table></figure><h4 id="2-3-12-其它命令">2.3.12 其它命令</h4><p><strong>bc</strong>  用于编写脚本进行高精度数学运算</p><p>编写如下sqrt脚本，可使用<code>./sqrt 数字</code> 进行平方根运算</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">if [ $# -ne 1 ]</span><br><span class="line">then</span><br><span class="line">    echo &#x27;Usage: sqrt number&#x27;</span><br><span class="line">    exit 1else</span><br><span class="line">    echo -e &quot;sqrt($1)\nquit\n&quot; | bc -q -i</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p><strong>split</strong> 用于分割大型文件</p><p>用法：split [选项] [输入文件] [输出文件前缀]</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-b：指定每个输出文件的大小，后面跟着的参数可以是以字节（B）、千字节（K）、兆字节（M）等为单位的数值。例如 </span><br><span class="line"></span><br><span class="line">-b 1M 表示每个输出文件的大小为1兆字节</span><br><span class="line"></span><br><span class="line">-l：指定每个输出文件的行数，后面跟着的参数为整数。例如 -l 1000 表示每个输出文件包含1000行</span><br><span class="line"></span><br><span class="line">-d：设置输出文件的后缀数字的长度，默认为2</span><br><span class="line"></span><br><span class="line">-a：设置输出文件的后缀字符，默认为字母 &quot;a&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># ls -l largefile.tar.gz</span><br><span class="line">输出-rw-r--r-- 1 aa aa 436774774 04-17 02:00 largefile.tar.gz</span><br><span class="line"># split -b 50m largefile.tar.gz LF_</span><br><span class="line"># ls -l LF_*-rw-r--r-- 1 aa aa 52428800 05-10 18:34 LF_aa</span><br><span class="line">输出-rw-r--r-- 1 aa aa 52428800 05-10 18:34 LF_ab</span><br><span class="line">   -rw-r--r-- 1 aa aa 52428800 05-10 18:34 LF_ac</span><br><span class="line">   -rw-r--r-- 1 aa aa 52428800 05-10 18:34 LF_ad</span><br><span class="line">   -rw-r--r-- 1 aa aa 52428800 05-10 18:34 LF_ae</span><br><span class="line">   -rw-r--r-- 1 aa aa 52428800 05-10 18:35 LF_af</span><br><span class="line">   -rw-r--r-- 1 aa aa 52428800 05-10 18:35 LF_ag</span><br><span class="line">   -rw-r--r-- 1 aa aa 52428800 05-10 18:35 LF_ah</span><br><span class="line">   -rw-r--r-- 1 aa aa 17344374 05-10 18:35 LF_ai</span><br></pre></td></tr></table></figure><p>拆分后合并</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat LF_* &gt;largefile.tar.gz</span><br></pre></td></tr></table></figure><p><strong>nl</strong> nl命令其它和cat命令很像，只不过它会打上行号</p><p><strong>ldd</strong> 查看一个可执行文件所使用的动态链接库 ldd+文件目录/文件名</p><p><strong>col</strong> 把man文件转成纯文本文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># PAGER=cat# man less | col -b &gt; less.txt</span><br></pre></td></tr></table></figure><p><strong>xmlwf</strong> 检查一个XML文档是否是所有的tag都是正常的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># curl &#x27;https://coolshell.cn/?feed=rss2&#x27; &gt; cocre.xml</span><br><span class="line">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span><br><span class="line">                                 Dload  Upload   Total   Spent    Left  Speed</span><br><span class="line">100 64882    0 64882    0     0  86455      0 --:--:-- --:--:-- --:--:-- 2073k</span><br><span class="line"># xmlwf cocre.xml</span><br><span class="line"># perl -i -pe &#x27;s@&lt;link&gt;@&lt;br&gt;@g&#x27; cocre.xml</span><br><span class="line"># xmlwf cocre.xmlcocre.xml:13:23: mismatched tag</span><br></pre></td></tr></table></figure><p><strong>lsof</strong> 可以列出打开了的文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># lsof | grep TCPhttpd       548    apache    4u     IPv6   14300967    TCP *:http (LISTEN)</span><br><span class="line">httpd       548    apache    6u     IPv6   14300972    TCP *:https (LISTEN)</span><br><span class="line">httpd       561    apache    4u     IPv6   14300967    TCP *:http (LISTEN)</span><br><span class="line">httpd       561    apache    6u     IPv6   14300972    TCP *:https (LISTEN)</span><br><span class="line">sshd       1764      root    3u     IPv6       4993    TCP *:ssh (LISTEN)</span><br><span class="line">tcpserver  8965      root    3u     IPv4  153795500    TCP *:pop3 (LISTEN)</span><br><span class="line">mysqld    10202     mysql   10u     IPv4   73819697    TCP *:mysql (LISTEN)</span><br><span class="line">sshd      10735      root    3u     IPv6  160731956    TCP 210.51.0.232:ssh-&gt;123.117.239.68:31810 (ESTABLISHED)</span><br><span class="line">sshd      10767     hchen    3u     IPv6  160731956    TCP 210.51.0.232:ssh-&gt;123.117.239.68:31810 (ESTABLISHED)</span><br><span class="line">vsftpd    11095      root    3u     IPv4  152157957    TCP *:ftp (LISTEN)</span><br></pre></td></tr></table></figure><h3 id="2-4-vim的使用">2.4 vim的使用</h3><p>vim有三种模式</p><p><img src="https://s2.loli.net/2024/03/15/OGYkAc25yVW4brl.png" alt="linux_vim3.png"></p><p>**<u>使用技巧</u>**帮助系统（内容收集于vimtutor）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">- 按下 &lt;HELP&gt; 键 (如果键盘上有的话)</span><br><span class="line">- 按下 &lt;F1&gt; 键 (如果键盘上有的话)</span><br><span class="line">- 输入 :help &lt;回车&gt;</span><br><span class="line">输入 CTRL-W CTRL-W   可以在窗口之间跳转。</span><br><span class="line">输入 :q &lt;回车&gt; 可以关闭帮助窗口</span><br><span class="line"></span><br><span class="line">Vim 的功能特性要比 Vi 多得多，但其中大部分都没有缺省启用，创建一个vimrc文件以启用更多特性</span><br><span class="line">1. 开始编辑 vimrc 文件</span><br><span class="line"> :edit ~/.vimrc这是 Unix 系统所使用的命令</span><br><span class="line"> :edit $VIM/_vimrc这是 MS-Windows 系统所使用的命令</span><br><span class="line">2. 接着读取 vimrc 示例文件的内容：</span><br><span class="line"> :r $VIMRUNTIME/vimrc_example.vim</span><br><span class="line"></span><br><span class="line">3. 保存文件，命令为：</span><br><span class="line"> :write</span><br><span class="line">  下次您启动 Vim 时，编辑器就会有了语法高亮的功能，要了解更多信息，添加设置请输入 :help vimrc-intro</span><br></pre></td></tr></table></figure><h4 id="2-4-1基本插入删除，保存退出">2.4.1基本插入删除，保存退出</h4><p>h、j、k、l 键分别对应光标键的左、下、上、右</p><p>按<ESC>键。然后输入<code>:q!</code> &lt;回车&gt;   表示不保存退出，使用 <code>:wq</code> 可以保存文件并退出</p><p>命令模式下按<code>x</code>即可删除字符</p><p>命令模式下按<code>i</code>即可进入插入模式，按<code>a</code>键可在光标之后插入文本</p><p>命令模式输入 <code>o</code> 将在光标的<strong>下方</strong>打开新的一行并进入插入模式</p><p>命令模式输入 <code>O</code> 将在光标的<strong>上方</strong>打开新的一行并进入插入模式</p><h4 id="2-4-2删除与撤销">2.4.2删除与撤销</h4><p>输入 <code>dw</code> 可以从光标处删除至一个单词的末尾</p><p>输入 <code>d$</code> 从当前光标删除到行末</p><p>输入 <code>dd</code> 可以删除整一个当前行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">d      - 删除操作符。</span><br><span class="line">motion - 操作符的操作对象。</span><br><span class="line"></span><br><span class="line">w - 从当前光标当前位置直到下一个单词起始处，不包括它的第一个字符。</span><br><span class="line">e - 从当前光标当前位置直到单词末尾，包括最后一个字符。</span><br><span class="line">$ - 从当前光标当前位置直到当前行末。</span><br><span class="line"></span><br><span class="line">在动作前输入数字会使它重复那么多次，如输入 2w 使光标向前移动两个单词，输入 3e 使光标向前移动到第三个单词的末尾，因此输入 d2w 可以删除两个大写字母单词，输入 2dd 可以删除两行</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">输入 u 来撤消最后执行的命令，输入 U 来撤消对整行的修改，输入 CTRL+R 可以重做被撤消的命令</span><br></pre></td></tr></table></figure><h4 id="2-4-3更改与替换">2.4.3更改与替换</h4><p>输入 <code>p</code> 可以将最后一次删除的内容置入光标之后</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入 dd 删除整行，这样会将该行保存到 Vim 的一个寄存器中</span><br><span class="line">接着将光标移动到 准备置入的位置的上方，然后在命令模式下输入 p 将该行粘贴置入</span><br></pre></td></tr></table></figure><p>输入 <code>r</code> 和<strong>一个字符</strong>替换光标所在位置的字符</p><p>输入 <code>R</code> 可连续替换多个字符</p><p>输入  <code>ce</code> 可以改变文本直到一个单词的末尾</p><p>改类操作符的工作方式跟删除类是一致的，动作参数（motion）也是相同的。</p><h4 id="2-4-4查找与定位">2.4.4查找与定位</h4><p>1.输入 <code>CTRL-G</code> 显示当前编辑文件中当前<strong>光标所在行</strong>位置以及文件状态信息</p><p>输入 <code>CTRL-O</code> 可以回到之前的位置</p><p><code>CTRL-I</code> 会跳转到较新的位置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入大写 G 可以使得当前光标直接跳转到文件最后一行，行号+G跳转到指定行</span><br><span class="line">输入 gg 可以使得当前光标直接跳转到文件第一行</span><br></pre></td></tr></table></figure><p>2.在命令模式下输入<code>/ 想查找的字符</code> 可以实现查找操作，按n键可以查找同上一次的字符串，N向相反方向查找同上一次的字符串<code>？ 想查找的字符</code> 可以逆向查找字符串</p><p>3.输入 <code>%</code> 可以查找配对的括号 )、]、}，当光标在括号上时按<code>%</code> 即可跳转到与之匹配的括号处，再按则返回原来位置，可用于程序调试</p><p>4.输入 :s/old/new 可以替换第一个匹配到的字符串 old 为 new</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">输入   :s/old/new/g      可以替换整行 old 为 new</span><br><span class="line">输入   :#,#s/old/new/g   其中 #,# 代表的是替换操作的若干行中首尾两行的行号。</span><br><span class="line">输入   :%s/old/new/g     则是替换整个文件中的每个匹配串。</span><br><span class="line">输入   :%s/old/new/gc    会找到整个文件中的每个匹配串，并且对每个匹配串提示是否进行替换。</span><br></pre></td></tr></table></figure><h4 id="2-4-5移动与批量操作">2.4.5移动与批量操作</h4><p>输入 <code>:!</code> 然后紧接着输入一个外部命令+&lt;回车&gt;即可执行该外部命令</p><p>输入 <code>:w FILENAME</code>可以把对当前文件的改动保存到FILENAME文件中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">部分保存：</span><br><span class="line">按 v 键，将光标从第一个想保存的字符移动至最后一个，这之间的文本被高亮了，按 : 字符。屏幕底部会出现 :&#x27;&lt;,&#x27;&gt; </span><br><span class="line">输入 w TEST， TEST 应是一个未被使用的文件名。在出现:&#x27;&lt;,&#x27;&gt;w TEST 之后按 &lt;回车&gt; 键</span><br></pre></td></tr></table></figure><p>插入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">输入 :r FILENAME向当前文件中插入另外的文件的内容，提取进来的文件将从光标所在位置处开始置入</span><br></pre></td></tr></table></figure><p>复制</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">按 v 键，将光标从第一个想保存的字符移动至最后一个，这之间的文本被高亮了，输入y复制，接着输入 p 粘贴。</span><br><span class="line">y 可以当作操作符来使用，如yw复制一个单词</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">输入 :set xxx 可以设置 xxx 选项。一些有用的选项如下：</span><br><span class="line">    &#x27;ic&#x27; &#x27;ignorecase&#x27;   查找时忽略字母大小写</span><br><span class="line">    &#x27;is&#x27; &#x27;incsearch&#x27;    查找短语时显示部分匹配</span><br><span class="line">    &#x27;hls&#x27; &#x27;hlsearch&#x27;    高亮显示所有的匹配短语</span><br><span class="line">    :set nu             显示行号</span><br><span class="line">    :set nonu           不显示行号</span><br><span class="line">     选项名可以用完整版本，也可以用缩略版本，在选项前加上 no 可以关闭选项：  :set noic</span><br></pre></td></tr></table></figure><h4 id="2-4-6补全功能">2.4.6补全功能</h4><p>使用 CTRL+D 和 <TAB> 可以进行命令行补全</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1. 确保 Vim 不是在以兼容模式运行： :set nocp</span><br><span class="line">2. 查看一下当前目录下已经存在哪些文件，输入： :!ls   或者  :!dir</span><br><span class="line">3. 现在输入一个目录的起始部分，例如输入： :e</span><br><span class="line">4. 接着按 CTRL+D 键，Vim 会显示以 e 开始的命令的列表。</span><br><span class="line">5. 然后按 &lt;TAB&gt; 键，Vim 会补全命令为 :edit 。</span><br><span class="line">6. 现在添加一个空格，以及一个已有文件的文件名的起始部分，例如： :edit FIL</span><br><span class="line">7. 接着按 &lt;TAB&gt; 键，Vim 会补全文件名(如果它是唯一匹配的)。</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;所需软件的安装和配置&lt;/h1&gt;
&lt;h2 id=&quot;1-VMware和远程连接软件（FinalShell、Xshell等）的安装&quot;&gt;1.VMware和远程连接软件（FinalShell、Xshell等）的安装&lt;/h2&gt;
&lt;p&gt;VMware软件安装简单，激活码查找也方便，Fin</summary>
      
    
    
    
    <category term="大数据" scheme="https://blog.icjlu.eu.org/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="vim" scheme="https://blog.icjlu.eu.org/tags/vim/"/>
    
    <category term="shell" scheme="https://blog.icjlu.eu.org/tags/shell/"/>
    
    <category term="linux" scheme="https://blog.icjlu.eu.org/tags/linux/"/>
    
  </entry>
  
</feed>
