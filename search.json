[{"title":"Tableau分析与可视化看板","url":"/post/Tableau.html","content":"Tableau数据连接与可视化分析\n本文主要介绍 Tableau 的基础连接与使用，包括数据可视化的原理以及常用的图表制作，针对不同分析使用的图表类型，BI看板的搭建等内容。\n目录\n\n数据连接\n数据可视化原理\n基础图表制作\n数据可视化原则\nBI仪表盘搭建\n\n\n社区大佬可视化方案参考学习\nTableau能做什么？\n\n\n数据赋能\n让业务一线也可以轻松使用最新数据\n\n\n分析师可以直接将数据看板发布到线上\n\n\n自动更新看板\n\n\n自由下载数据\n\n\n线上修改图表\n\n\n邮箱发送数据\n\n\n设置数据预警\n\n\n\n\n数据探索\n通过统计分析和数据可视化，从数据发现问题，用数据验证假设\n\n\n支持亿级数据的连接和处理\n\n\n自由地对字段进行各种计算\n\n\n拖拽就可以轻松制作图表\n\n\n数据可以随意聚合下钻\n\n\n图表类型可以灵活转换\n\n\n内置算法智能建模\n\n\n\n\n\n1. 数据连接\n1.1 连接类型\n1.1.1 本地文件\n\n\n\n文件类型\n连接方式\n\n\n\n\nCSV\n文本连接\n\n\nExcel (xls/xlsx)\nExcel文件连接\n\n\nJSON\n直接连接JSON文件\n\n\n\n\n\n1.1.2数据库\n\n驱动配置\n下载对应数据库驱动后，配置地址、端口、认证等参数\n数据连接\n数据库连接方法与SQL相似\n\n\n1.2 连接方式\n\n智能连接（默认）\n\n自动识别字段类型，只需选择连接字段\n✅支持字段计算和编辑\n✅支持排序、重命名、拆分等操作\n\n\n字段计算：连接字段可通过函数进行计算和编辑（动态）\n\n# 示例函数计算字段  DATE_TRUNC(&#x27;day&#x27;, &quot;下单日期&quot;) AS 订单日维度\n\n表格连接：表格之间的连接原理同SQL\n连接原理\n\n多表连接机制同SQL\n✅支持多条件组合连接\n\n\n\n\n操作示例：\n\n连接 shop 表 → 拖拽 cpc 表，设置连接条件：\n\n门店ID = 门店ID\n日期 = 日期\n\n\n连接 orders 表→ 拖拽 shop表，设置连接条件：\n\n门店ID = 门店ID\n日期 = 下单日期\n\n\n\n\n1.3 提取方式\n\n\n\n方式\n特点\n适用场景\n\n\n\n\n实时查询\n每次操作触发数据库查询（查询语言VizQL）\n小数据量/频繁更新\n\n\n数据提取\n1.提取连接数据，保存为.hyper文件，支持增量刷新2..twbx 文件会将 .hyper 数据打包3.修改数据源后需重新提取数据，实时连接则无此限制4.一般大型数据推荐提取，除非频繁修改连接字段\n大数据量/离线分析\n\n\n\n\n注意事项：\n\n\n上传Tableau Server必须使用数据提取\n\n\n提取数据后可进行预筛选，仅保留需要的数据用于视图操作\n\n\n❌预筛选建议在连接阶段设置，而非视图层过滤\n\n\n\n提取选项支持增量刷新策略（基于字段/函数）\n# 示例：每日仅更新新增行EXTRACT_INCREMENTAL ON &quot;last_updated_date&quot; &gt; DATEADD(&#x27;day&#x27;, -1, CURRENT_DATE())\n\n\n.twb文件不包含数据仅保存连接与视图信息，.twbx打包数据，可打包共享（Tableau Server发布必须使用.twbx）\n\n\n⚠️百万级数据建议使用增量刷新\n\n\n1.4 数据处理\n\n\n查看、排序、重命名、拆分等操作\n\n\n\n\n图表界面也可完成大部分数据操作，包括预测，趋势线，描述性统计分析指标等\n\n\n\n2. 数据可视化原理\n2.1 核心概念\n\n为什么要可视化\n\n\n图表能让人更快理解最大/最小值等信息\n人类具备视觉优势，图比字更易识别\n文字源自象形，图形表达更直观\n\n\n\n\n度量与维度\n\n度量（Measures）：数值型变量 → 图形面积/长度/颜色深浅 → 数轴\n维度（Dimensions）：类别型变量 → 图形颜色/位置/分类 → 标签\n\n\n\n\n\n\n类型\n特征描述\n典型示例\n\n\n\n\n度量\n数值型可计算变量\nGMV总和, 订单数量\n\n\n维度\n非数值分类变量（如城市、性别）\n用户ID, 源渠道\n\n\n\n\nTableau 自动识别变量类型，类型可互相转换\n\n\n2.2 Tableau 可视化基础操作\n\n\n拖拽操作\n\n\n行/列：决定图表坐标轴\n\n\n标记卡：控制图形颜色、大小、标签等\n\n\n\n筛选器：设定可视条件\n\n\n\n\n\n五大可视化原理\n\n\n度量默认聚合运算（SUM/AVG）\n\n\n拖动“消耗”到行 → 自动生成柱状图（求和）\n\n\nTableau 会自动聚合度量（默认总和）\n\n\n\n\n\n图形标记自由切换\n\n\n标记卡中可选择不同图形（柱状图、饼图、折线图等）\n\n\n一个度量只有一个值无法形成折线（需多个点）\n\n\n拖拽度量至行/列形成图表，拖拽至标签区域形成表格\n\n\n\n\n\n\n\n维度增加信息密度（多层级对比）\n\n\n拖入维度字段 → 将一个点拆解为多个 → 可连成线\n\n\n维度可拖至：颜色、标签、详细信息、行、列，会增强信息密度\n\n\n示例：将日期字段转换为字符串 → 拖至列 → 形成折线图\n\n\n\n拖日期 → 标签、拖消耗 → 大小、选“文本” → 形成词云图、选“圆形” → 形成气泡图\n\n\n\n\n\n\n图表类型决定坐标轴形态（有轴图表 vs 无轴图表（极坐标图表））\n\n\n有轴：折线图、柱状图（需数轴）\n\n\n无轴：饼图、树地图、词云、气泡图（极坐标）\n\n\n示例饼图制作：将 GMV 拖到大小，门店拖到颜色 → 树地图(树地图是升级版的饼图，按照顺序展示大小，还能增加颜色等维度)；\n更改标记类型为饼图 → 映射角度与面积\n\n\n\n\n\n\n连续变量生成坐标轴，离散变量生成标签\n\n连续度量 → 数轴（逻辑连续参考系）\n离散维度 → 标签（顺序可调的参考系）\n\n\n\n\n类型\n作用\n\n\n\n\n离散变量（维度）\n形成标签，构成表格\n\n\n连续变量（度量）\n形成数轴，构成图形\n\n\n\n\n示例：拖维度构建表格（如日期、门店、品牌）\n将度量字段设置为离散 → 变为维度\n拖度量至列或行 → 生成图形（数轴）\n\n\n\n\n\n2.3 视觉映射类型\n可视化辞典Github仓库与Web\n\n\n\n视觉元素\n适用场景\n示例\n适用图表\n\n\n\n\n位置\nx/y 轴呈现度量，分布趋势分析\n人均收入与寿命关系\n散点图\n\n\n长度\n长度反映数值对比\n地区销售额对比\n柱状图/条形\n\n\n角度\n用于表示部分与整体的占比关系\n性别比例分析\n饼图/玫瑰图/环形\n\n\n颜色\n分类/数值密度，饱和度/色调表现维度分类或度量高低\n地理区域分布\n热力图\n\n\n面积 &amp; 体积\n多维度占比，面积/体积与度量成正比\n通过大小表示数值\n树地图\n\n\n方向\n展示度量随维度（如时间）变化趋势\n四季电力消耗趋势\n折线图\n\n\n\n\n形状可用于标记不同组别（维度），如散点图标记点形状\n\n\n3. 基础图表制作\n3.1 对比分析\n\n\n\n图表类型\n制作要点\n适用场景\n\n\n\n\n柱状图\n维度→列，度量→行\n≤5个分类对比\n\n\n条形图\n维度→行，度量→列\n≥5个分类对比\n\n\n热力图\n文本表+颜色映射，使用合计%\n多维度交叉对比\n\n\n气泡图/词云\n度量→大小，维度→颜色/标签\n百级分类对比\n\n\n\n\n\n创建分层结构可以在拖动标签时将整个结构组都拖动，并根据需要点击+或-在工作表内展示数据的量\n\n\n\n筛选器选项可以自定义筛选器单项或多项的样式\n\n\n\n热力图设置标记为方形，适用于多【维度】下多变量的同时对比，并且需要同时查看对比效果和数值，如各组/商品类别之间的销售额、利润同时对比\n\n\n\n3.2 变化/趋势分析\n\n\n\n图表类型\n制作要点\n适用场景\n\n\n\n\n折线图\n时间→列（连续），度量→行季节性调整需手动添加移动平均线\n趋势分析\n\n\n面积图\n折线图→区域填充\n累计值分析\n\n\n\n\n\n给折线图添加趋势线可以增加内容的丰富程度，并提升专业性，还可以增加预测（实际应用中一般都是高维数据，R²低误差高，参考性不大）\n\n\n\n将画折线图时的标记从线改为区域，即可形成面积图。适用于有内部累计关系的值，并会随时间变化，不强调趋势，强调绝对值\n\n\n\n3.3 构成/占比分析\n\n\n\n图表类型\n制作要点\n适用场景\n\n\n\n\n饼图\n维度→颜色，度量→角度\n≤3分类占比\n\n\n树地图\n维度→颜色/标签，度量→大小\n多层级（维度）占比\n\n\n堆积图\n维度→颜色，主维度→轴\n多维度累计占比\n\n\n\n\n\n饼图需要设置合计百分比显示占比（百分比差异类似同比环比计算）\n\n\n\n\n堆积图适用于相同【度量】下，比较一个【维度】下另一个【维度】的占比。堆积图显示合计百分比需要在快速表计算后再编辑表计算并选择计算依据为&quot;表(向下)&quot;，否则会显示占整体数据的百分比，再按住CTRL将该计算字段拖动至’行’，即可看到占整体的比例（只能看到占比，忽略绝对值大小）\n\n\n\n因此一般需要同时查看值的大小和占比，在标记区域选择未使用快速计算的字段（没有Δ），然后将其中的标签移除并更换为原始字段\n\n\n\n3.4 分布分析\n\n\n\n图表类型\n制作要点\n适用场景\n\n\n\n\n散点图\nX/Y轴→度量，维度→颜色\n相关性分析\n\n\n直方图\n度量→自动分箱\n单变量分布\n\n\n地图\n地理角色→详细信息，度量→大小/颜色\n空间分布分析\n\n\n\n\n\n散点图：将Cpc总费用拖入列，GMV拖入行，然后将字符串形式的日期放入标记的详细信息，门店名称放入颜色，即可看到各个店铺的投放效果（斜率越大投放效果越好）\n\n\n\n还可以对散点图进行聚类，，具有相同分布特征的变量会被分为一类，可选自动或手动设置聚类(Cluster)数 (K-means聚类算法，基于欧式距离计算)\n\n\n\n直方图与数据桶：在数据型字段右键 → 创建 → 数据桶。数据桶本质是根据设定的数据桶大小作为间隔(箱宽度)，将离散的点分类并计数。用于查看单一度量下的数据分布\n\n\n常见分布；2/8法则；马太效应；40-20-10（如果你想让你的APP保持增长势头，那么你的新用户次日留存率，7天留存率和30天留存率应该分别维持在40%、20%和10%左右）\n\n\n\n地图：对于数据中的城市，需要将字段的属性设置为地理角色中的某个值，然后双击即可在工作表中显示地图。\n\n对于经纬度坐标，则需要将地理角色设置为经纬度，然后分别双击，即可在工作表显示地图\n\n\n\n由于多数情况下数据会经过脱敏处理，原来可表示唯一值的订单id等字段会有重复值出现，因此需要创建主键来自行计算出一个唯一值。左键点击创建计算字段，拖拽选择合适的字段进行计算，表达式需要确保计算的字段格式相同，因此对于数值型变量可以使用STR()函数将其转换为字符串进行计算\n\n\n\n使用计算出的&quot;主键&quot;作为详细信息，距离作为颜色，用户实付作为大小，即可在地图上画出大小、颜色均进行区分的散点地图\n\n\n\n\n\n\n例：南丁格尔玫瑰图实现步骤（用色块圆饼展示战地死亡率，促进英国军方改善医疗条件）：\n\n将角度字段设置为度量值\n在标记卡选择&quot;极坐标系&quot;\n添加颜色区分分类变量（如月份）\n\n\n\n4. 数据可视化原则\n\n\n用户导向\n\n\n区分观众层级（执行/管理/决策）\n\n\n\n\n\n信息层级\n\n主指标放大，辅助指标弱化\n\n\n\n视觉真实\n\n坐标轴从0开始\n避免3D变形\n\n\n\n认知适配\n\n使用行业通用图表类型(地理位置用地图、随时间变化用折线图等)\n\n\n\n设计规范\n\n颜色≤8种，简化设计，突出重点，少即是多\n图表需在 5 秒内传达核心信息\n\n\n\n辅助说明\n\n添加标题/图例/数据标签/结论等(右键数据添加注释)\n\n\n\n多到Tableau社区去学习好的方案\n\n\n5. BI仪表盘搭建\n5.1 设计流程\n\n\n明确主题\n\n受众是谁？关注点是什么？\n例：每日营收监控 → GMV/转化率/订单分布\n\n\n\n数据准备/拆解指标\n\n\n营收数据：GMV、商家实收、用户实付、总订单数、cpc总费用、各平台数据对比\n\n\n流量数据：曝光人数、进店人数、下单人数、进店转化率、下单转化率、新客数、老客数、复购率\n\n\n关键指标：GMV、流量数据*（每日营收）进店率、复购率（用户行为）*\n\n\n辅助指标：CPC费用、无效订单*（投放效果）*\n\n\n先设计好要使用的元素，后进行可视化的调整，与Excel相同，下面是某店铺外卖的营收数据设计\n\n首先需要将筛选器设置为联动(使用相关数据源的所有项)，实现图表间的数据统一\n\n\n\n\n需要一个经营状况总览，拖动字段直至出现智能显示即可在数据的左右加入新的列，也可直接拖入度量值中，若出现其它图形，可以先尝试更改字段类型为离散\n\n\n\n\n新建工作表，用同样的方式制作详情表，'行’中字段根据需要添加\n\n\n\n每日营收数据，需要多条曲线时，添加多个度量值将字段直接拖到纵轴上\n\n\n\n并非所有有用的字段都会在业务数据中直接提供，因此有时需要添加计算字段\n\n\n\n\n多曲线的单位差异会导致在同一张图中显示时，某一或多条曲线因值过小而导致可视化效果差，不具备参考意义，这时可以设置双轴\n\n\n\n多曲线共同影响的字段可以作为背景展示，通过调整颜色、大小、不透明度等方式隐式的显示在曲线后（可选面积图或条形图）\n\n\n\n\n根据数据ORDER90，我们自定义90天内未下单的用户为新客，用于展示新老客对比\n\n\n\nTableau没有内置的环形图，需要自己手动设置实现近似效果\n环形图：双击行 → 输入0 → 右键双轴 → 将其中一个的视觉元素全部移除 → 颜色改为白色 → 调整两个饼图的大小 → 环形图 → 取消零值线和取消显示标题（调整完成后使用CTRL+←或→可以调整环形图整体的大小，此功能不局限于饼图）需要多个环形图时，为保证一致性，可以使用拷贝工作表，然后更改字段\n\n\n\n有时业务数据的标签并不是想要展示的值，可以通过右键设置别名来更改为想要的值\n\n\n\n\n纵轴设置为GMV，横轴设置cpc总费用，可以看到各门店的投放情况，斜率越高效果越好\n\n\n\n面积图可以展示订单分布时间段（根据需要将下单日期格式设置为小时）与整体订单趋势\n\n\n\n分组设置：在想要分组的位置按住shift单击，并点击分组，即可选中以上的全部数据分为一组，同时可以给组进行命名，可以使用if函数实现相同效果\n\n\n\n\n\n\n布局设计\n\nF型视线布局：关键指标置于左上区域\n动态筛选器统一放置顶部中央\n数据钻取深度不超过三级\n\n[仪表盘布局示例]| 经营总览 | 趋势分析 ||----------|----------|| 占比分析 | 分布地图 |\n经营总览-&gt;数据详情-&gt;趋势分析-&gt;占比分析-&gt;分布分析\n\n总览：文本突出显示\n趋势：多轴折线图\n分布：热力图 / 地图\n\n仪表盘大小可以选择通用桌面1366 * 768，然后手动调整高度，从左边的工作表区域拖动需要的表到仪表盘，手动调整位置和大小\n\n\n\n\n交互优化\n\n逻辑顺序：从上到下 / 从主到次\n交互设计：主题明确 + 交互友好，纵/横布局，强制设置所有图表共享联动筛选器\n图表联动（通过筛选器）\n动态参数（通过筛选器）\n细节优化：统一字体、配色（参考Tableau 社区）\n图表选择：4 大金刚（散点图、柱状图、饼图、折线图），大多数数据可视化都可用这四种组合完成，人感知最强的可视化字典（位置、长度、角度/方向、面积/颜色）\n\n\n\n\n\n5.2 开发规范\n\n配色方案\n\n主色≤3种，辅色≤2种，推荐组合：#2A5E8F（深蓝）+ #FF6B35（橙红）+ #4ECDC4（青绿）\n使用企业VI色系\n参考：Color Hunt\n\n\n字体规范\n\n中文：微软雅黑\n英文：Arial\n文字标注使用12pt的微软雅黑字体\n\n\n性能优化\n\n数据提取预处理\n隐藏非必要细节\n\n\n\n细节优化过程\n\n\n设置边框提升专业性\n\n\n\n去掉一些数据表的行列分隔边线，提升美观度\n\n\n\n更改地图背景，使其简洁，提升视觉效果，修改冲蚀更改背景透明度\n\n\n\n最后优化各工作表在仪表盘的标题、数据信息的格式，设置字体微软雅黑，颜色风格统一，如需更改标题的背景颜色，可以在布局中修改\n\n\n\n\n优化各工作表的色调，使风格统一\n\n\n\nTableau社区案例参考\n最终效果：\n\n参考文档\n","categories":["数据分析"],"tags":["数据操作","可视化","看板与报表"]},{"title":"Excel函数使用与周报开发","url":"/post/excelfunc.html","content":"Excel 知识笔记\n本文主要介绍 Excel 中的一些高级知识和常用函数，重点涵盖数据透视表、常用函数（SUM、SUMIF、SUMIFS、SUBTOTAL、IF、VLOOKUP、XLOOKUP、INDEX、MATCH）以及周报开发的相关内容。\n\n1. 📊 数据透视表（Pivot Table）\n1.1. 数据透视表简介\n数据透视表是 Excel 中用于快速汇总、分析和展示大量数据的工具。它能够根据用户的需求动态调整数据的展示形式，例如按类别汇总、计算总和或平均值等。\n1.2. 创建数据透视表\n\n\n选择数据区域（确保数据有表头）。\n\n\n进入“插入”选项卡，点击“数据透视表”按钮。\n\n\n在弹出的对话框中，选择新建工作表或现有工作表。\n\n\n\n在数据透视表字段窗格中拖拽字段至行、列、数值和筛选区域。\n\n\n将文本型拖拽至行，数值型拖拽至值，可以实现sum+group by的效果\n\n\n\n双击字段可以对其进行重命名\n\n\n\n在字段、项目和集中可以插入自定义计算字段，输入完成后修改名称点击修改即可添加，添加完成后会出现在数据透视表字段中，勾选后即可添加到数据透视表中\n\n\n\n1.3. 数据透视表技巧\n\n\n字段筛选和排序：利用字段列表中的筛选按钮对数据进行快速筛选和排序。\n\n\n分组数据：右击行/列标签，选择“分组”，例如按日期分组按月或季度统计。\n\n\n数据格式化：右键单击数据区域，选择“值字段设置”，自定义数据汇总方式和数字格式。\n\n\n拖拽字段到对应区域：\n\n\n行/列：分组维度（时间等）\n\n\n值：计算指标（求和/计数/平均值/占比）\n\n\n筛选器：数据过滤，直接拖拽字段即可在数据透视表增加筛选项\n\n\n插入切片器：可视化联动筛选，点击不同的筛选项，数据透视表会自动更新表内数值，同时，切片器处于当前工作表外的工作表时点击，同样可以筛选当前表的内容，而筛选器只能在当前数据透视表内使用\n\n\n\n刷新数据：右键 → 刷新\n\n\n\n\n点击数据透视表，插入数据透视图，右键可以更改图表类型，可以插入多张数据透视图，图表也会根据切片器内容进行变换\n\n\n\n\n\n插入组合图可以将多种图表混合展示\n\n\n\n2.📈 进阶数据透视表技巧\n1. 计算字段与计算项\n\n\n计算字段：在值区域添加自定义公式\n分析 → 字段、项目和集 → 计算字段\n示例：利润率 = (销售额 - 成本)/销售额\n\n\n时间智能计算（结合Power Pivot）\nMTD销售额 := TOTALMTD(SUM(数据[销售额]), 数据[日期])\n\n\n2. 动态数据源\n\n超级表（Ctrl+T）\n将数据区域转换为表 → 透视表自动扩展范围\n连接Power Query\n通过ETL清洗后的数据自动更新透视表\n\n\n3. 常用函数详解\n2.1. SUM\n\n\n功能：对一组数值求和。\n\n\n语法： =SUM(number1, [number2], …)\n\n\n示例：\n=SUM(A1:A10)\n\n\n2.2. SUMIF\n\n\n功能：根据单一条件对范围内符合条件的数值求和。\n\n\n语法： =SUMIF(range, criteria, [sum_range])\n\n\n示例：\n=SUMIF(B1:B10, &quot;&gt;100&quot;, C1:C10)\n\n\n2.3. SUMIFS\n\n\n功能：根据多个条件对范围内符合条件的数值求和。\n\n\n语法： =SUMIFS(sum_range, criteria_range1, criteria1, [criteria_range2, criteria2], …)\n\n\nsumifs(要返回的值所在列, 查找条件1所在列, 查找限定条件1, 查找条件2所在列, 查找限定条件2……)\n\n\n示例：\n=SUMIFS(C1:C10, A1:A10, &quot;产品A&quot;, B1:B10, &quot;&gt;100&quot;)\n\n\n通常会设计计算月总和，环比等数值，因此需要计算上个月的这一天用来作为被减项用于筛选时间范围，Excel中，日期表示的是从1900.01.01到今天的天数，有以下几种方法可以计算上个月\n\nEDATE(start_date，months)返回一串日期，指示起始日期之前/之后的月数，如EDATE(A1，-1)表示这天的前一个月，7月31日会返回6月30日\nEOMONTH(start_date，months)返回一串日期，表示指定月数之前或之后的月份的最后一天（只针对月份操作）如EOMONTH(A1,-1)+1表示这个时间月份的第一天，比如8月（无论几号）会返回8月1日，不+1则会返回7月31日\nDATE(YEAR(A1),MONTH(A1),1)返回本月的第一天，最直观的形式，在date函数外再-1即可返回上月的最后一天\n\n\n\n2.4. SUBTOTAL\n\n\n功能：返回数据列表或数据库中的分类汇总。subtotal值会根据字段筛选而变化。\n\n\n语法： =SUBTOTAL(function_num, ref1, [ref2], …)\n\n\n常用 function_num：\n\n9：求和\n1：求平均值\n\n\n\n示例：\n=SUBTOTAL(9, A1:A10)\n\n\n2.5. IF\n\n\n功能：根据条件返回不同的结果，一般需要多层嵌套使用。\n\n\n语法： =IF(logical_test, value_if_true, value_if_false)\n\n\n示例：\n=IF(A1&gt;100, &quot;大于100&quot;, &quot;小于等于100&quot;)\n\n\n2.6. VLOOKUP\n\n\n功能：在数据区域的首列中搜索指定值，并返回该值所在行中指定列的内容。\n\n\n语法： =VLOOKUP(lookup_value, table_array, col_index_num, [range_lookup])\n\n\nVLOOKUP(查找值, 查找区域(要查找的必须在第一列), 返回第几列, 0)\n\n\n示例：\n=VLOOKUP(&quot;产品A&quot;, A1:D10, 3, FALSE)\n\n\n2.7. XLOOKUP\n\n\n功能：现代化的查找函数，能够向任意方向查找数据，取代 VLOOKUP/HLOOKUP。\n\n\n语法： =XLOOKUP(lookup_value, lookup_array, return_array, [if_not_found], [match_mode], [search_mode])\n\n\nXLOOKUP(查找值, 查找值所在列, 返回列, 未找到返回值(可选), 匹配模式(可选), 搜索模式(可选))\n\n\n示例：\n=XLOOKUP(&quot;产品A&quot;, A1:A10, C1:C10, &quot;未找到&quot;)\n\n\n2.8. INDEX 和 MATCH\n\n\nINDEX\n\n功能：返回数组中指定位置的值。\n语法： =INDEX(array, row_num, [column_num])\nINDEX(区域, 行号, 列号)：根据行号从某列中返回对应的值\n\n\n\nMATCH\n\n功能：返回指定值在一维数组中的相对位置。\n语法： =MATCH(lookup_value, lookup_array, [match_type])\nMATCH(查找值, 区域, 0)：在某行/列中查找指定的值，并返回其列/行号\n\n\n\n组合使用示例：\n=INDEX(C1:C10, MATCH(&quot;产品A&quot;, A1:A10, 0))index(数据区域,match(行查找顶,index数据区域的相对区域,0),match(列查找项,indexB数据区域的相对区域,0))\n\n\n同时使用xlookup和index+match实现的相同功能\n\n当函数不清晰时，可以先把要实现的函数单独写好，再复制进完整的表达式，同时可以配合ALT+ENTER在函数中换行避免混淆\n4.🔢 常用函数总结\n基础聚合\n\n\n\n函数\n语法\n说明\n周报应用示例\n\n\n\n\nSUM\n=SUM(range)\n基础求和\n=SUM(C2:C100) → 周总销售额\n\n\nSUMIF\n=SUMIF(range, criteria, [sum_range])\n单条件求和\n=SUMIF(A2:A100, &quot;华东&quot;, C2:C100) → 华东区销售总额\n\n\nSUMIFS\n=SUMIFS(sum_range, criteria_range1, criteria1, ...)\n多条件求和\n=SUMIFS(C2:C100, A2:A100, &quot;华东&quot;, B2:B100, &quot;&gt;2023-01-01&quot;)\n\n\nSUBTOTAL\n=SUBTOTAL(function_num, range)\n分类汇总（支持筛选）\n=SUBTOTAL(9, C2:C100) → 筛选后可见数据求和\n\n\n\n逻辑判断\n\n\n\nIF\n=IF(logical_test, [value_if_true], [value_if_false])\n\n\n\n\n示例\n=IF(C2&gt;10000, &quot;达标&quot;, &quot;未达标&quot;) → 销售目标判断\n\n\n\n查找匹配\n\n\n\n函数\n语法\n特点\n\n\n\n\nVLOOKUP\n=VLOOKUP(lookup_value, table_array, col_index_num, [range_lookup])\n纵向查找，需注意首列匹配和列索引号\n\n\nXLOOKUP\n=XLOOKUP(lookup_value, lookup_array, return_array, [if_not_found], [match_mode], [search_mode])\n支持双向查找、错误处理，更灵活\n\n\nINDEX+MATCH\n=INDEX(return_range, MATCH(lookup_value, lookup_range, 0))\n灵活组合，支持多维度查找\n\n\n\n\n\n\n\n\n5.🔍 高阶函数扩展\n动态数组函数（Excel 365+）\n\n\n\n函数\n作用\n周报应用\n\n\n\n\nFILTER\n条件筛选数据区域\n=FILTER(订单表, (销售额&gt;10000)*(区域=&quot;华东&quot;))\n\n\nSORT\n动态排序\n=SORT(UNIQUE(产品列表),,-1)\n\n\nUNIQUE\n去重提取\n=UNIQUE(销售大区)\n\n\n\n时间处理函数\n=WEEKNUM(A2)  // 返回日期所属周数（周报核心函数）=EDATE(A2,3)  // 计算3个月后的日期（常用于滚动预测）=TEXT(A2,&quot;YYYY-MMM&quot;)  // 日期转&quot;2023-Jul&quot;格式\n错误处理\n=IFERROR(VLOOKUP(...), &quot;未找到&quot;)  // 屏蔽#N/A错误=AGGREGATE(9,6,C2:C100)  // 忽略隐藏行和错误值的求和\n6.周报开发\n\n[ ] 掌握数据引用、公式填写和自动化拖拽等基本功能\n[ ] 理解数据美化、数据计算与逻辑结构的构建\n\n整体流程建议：\n\n先搭建框架： 建立好各区域结构及基本引用和公式\n再填数据： 在框架内填充各项指标数据和日期\n最后美化： 格式设置、风格统一等作为最后一步处理，避免中途美化造成数据修改的不便\n\n6.1 周报框架搭建\n1. 周报结构\n\n\n四大区域：\n\n标题（包含时间范围）\n目标看板（单独区域展示周报的目标内容，如累计值，环比，同比等，同时包含筛选器）\n结果指标（GMV、商家实收、到手率等）\n过程指标（曝光人数、转化率等）\n\n\n小看板区域（3、4）显示关键指标的概览，通常包括目标、区域、过程指标和结果指标。\n\n\n\n2. 基础设置\n\n\n标题：A2单元格填写2020年8月第二周\n\n\n日期列：\n\n输入起始日期（如在A13输入2020-08-10）\n后续日期使用公式=A13+1并拖动填充（需从第二个单元格开始拖动）向下拖动填充至 A19，生成 8 月 10 日 - 16 日的日期。\n\n\n\n\n星期列：\n\n右键单元格 → 设置单元格格式 → 数字 → 日期 → 选择 “周几” 格式（如 “周三”）\n\n\n\n\n日期联动：\n\n所有与日期相关的操作都建议使用引用方式，这样如果改变某个日期数据，其他依赖数据也会自动更新，极大地提升工作效率\n使用公式动态引用日期，避免手动修改（选中 A13:A19，根据需要设置为 “短日期” 格式，如=TEXT(A2, &quot;m月d日&quot;)）\n\n\n\n3.  指标体系构建\n\n结果指标（核心数据）\n\n\n\n\n指标\n说明\n计算公式\n\n\n\n\nGMV\n总成交额\n直接引用原数据或通过 SUMIFS 计算\n\n\n商家实收\n商家实际收入\n同上\n\n\n到手率\n实收 / GMV，反映收入转化率\n=商家实收/GMV\n\n\n有效订单\n有效订单数\n直接引用\n\n\n无效订单\n无效订单数\n直接引用\n\n\n客单价\nGMV / 有效订单，反映平均消费金额\n=GMV/有效订单\n\n\n\n\n过程指标（流量漏斗）\n\n\n\n\n指标\n说明\n计算公式\n\n\n\n\n曝光人数\n店铺曝光次数\n直接引用\n\n\n进店人数\n点击进入店铺的人数\n直接引用\n\n\n进店转化率\n进店人数 / 曝光人数，反映流量承接能力\n=进店人数/曝光人数\n\n\n下单人数\n实际下单的人数\n直接引用\n\n\n下单转化率\n下单人数 / 进店人数，反映转化效率\n=下单人数/进店人数\n\n\n营销占比\ncpc总费用 / GMV，反映投放效果\n=cpc总费用 / GMV\n\n\n\n\n6.2 核心函数与数据引用\n1. 数据验证（筛选器）\n\n\n步骤：\n\n选择目标单元格（如平台筛选器）\n数据 → 数据验证 → 允许“序列”\n输入选项：全部,美团,饿了么（英文逗号分隔）\n点击确定，生成下拉菜单\n\n\n\n作用：通过选择平台（全部 / 美团 / 饿了么），动态筛选对应数据。\n\n\n\n2. 动态条件求和（SUMIFS）\n\n\n配合筛选器的公式逻辑：\n=IF(  平台单元格=&quot;全部&quot;,  SUMIF(日期列, 当前日期, GMV列),  SUMIFS(GMV列, 日期列, 当前日期, 平台列, 平台单元格))\n\n\n绝对引用与相对引用：\n\n固定不变的列或单元格使用绝对引用，例如: H$5, A:A\n需要随拖拽变化的行或列使用相对引用，例如: A13\n混合引用用于锁定列或行，例如: A$13\n锁定区域：$A$2:$X$1000\n锁定条件单元格：$H$5（平台筛选器）\n\n\n\n3. 动态列引用（INDEX+MATCH）\n目标：让函数自动识别表头列，提高灵活性（如 GMV 列、商家实收列可动态切换），因此需要先写出日期列，平台列（筛选器），求和列的公式\n\n\n查找列名位置：\n使用MATCH 找到目标列在表头中的位置，再使用INDEX 根据列位置提取数据\n=INDEX(原表数据区域, 0, MATCH(列名标题, 表头行, 0))\n\n\n示例（日期列动态引用）：\n=INDEX($A:$X, 0, MATCH(&quot;日期&quot;, $A$1:$X$1, 0))\n\n\n示例（动态求和 GMV 列）：\n=SUMIFS(INDEX(数据区域, , MATCH(&quot;GMV&quot;, 表头, 0)), 日期列, 当天日期, 平台列, H5)\n\n\n拖拽填充：\n\n从第二个有公式的单元格开始拖拽，确保公式自动更新。\n如果直接从第一个单元格拖拽，可能会只是简单的序列填充，而没有公式。\n例如，若第一个单元格手动修改为“9”，则后续单元格不会自动更新公式中的逻辑。\n\n\n注意:\n使用INDEX和MATCH组合动态获取日期列、GMV列和平台列，替换SUMIF和SUMIFS公式中对应的部分\n替换后的公式会变得很长，要仔细核对括号和参数。\n\n6.3 关键指标计算\n1. 计算型指标\n\n\n到手率：=商家实收/GMV\n\n注意：结果设为百分比格式（保留 2 位小数）\n\n=IF($H$5=&quot;全部&quot;,SUMIF(INDEX(&#x27;拌客源数据1-8月&#x27;!$A:$X,0,MATCH($A$12,&#x27;拌客源数据1-8月&#x27;!$A$1:$X$1,0)),$A13,INDEX(&#x27;拌客源数据1-8月&#x27;!$A:$X,0,MATCH(C$12,&#x27;拌客源数据1-8月&#x27;!$A$1:$X$1,0))),SUMIFS(INDEX(&#x27;拌客源数据1-8月&#x27;!$A:$X,0,MATCH(C$12,&#x27;拌客源数据1-8月&#x27;!$A$1:$X$1,0)),INDEX(&#x27;拌客源数据1-8月&#x27;!$A:$X,0,MATCH($A$12,&#x27;拌客源数据1-8月&#x27;!$A$1:$X$1,0)),$A13,INDEX(&#x27;拌客源数据1-8月&#x27;!$A:$X,0,MATCH(&quot;平台i&quot;,&#x27;拌客源数据1-8月&#x27;!$A$1:$X$1,0)),$H$5))\n逻辑在2中已经陈述\n\n\n客单价：=GMV/有效订单\n\n\n转化率（进店 / 下单）：\n\n进店转化率：=进店人数/曝光人数\n下单转化率：=下单人数/进店人数\n\n\n\n营销占比：=CPC总费用 / GMV\n=IF($H$5=&quot;全部&quot;,SUMIF(INDEX(&#x27;拌客源数据1-8月&#x27;!$A:$X,0,MATCH($A$12,&#x27;拌客源数据1-8月&#x27;!$A$1:$X$1,0)),$A13,INDEX(&#x27;拌客源数据1-8月&#x27;!$A:$X,0,MATCH(&quot;cpc总费用&quot;,&#x27;拌客源数据1-8月&#x27;!$A$1:$X$1,0))),SUMIFS(INDEX(&#x27;拌客源数据1-8月&#x27;!$A:$X,0,MATCH(&quot;cpc总费用&quot;,&#x27;拌客源数据1-8月&#x27;!$A$1:$X$1,0)),INDEX(&#x27;拌客源数据1-8月&#x27;!$A:$X,0,MATCH($A$12,&#x27;拌客源数据1-8月&#x27;!$A$1:$X$1,0)),$A13,INDEX(&#x27;拌客源数据1-8月&#x27;!$A:$X,0,MATCH(&quot;平台i&quot;,&#x27;拌客源数据1-8月&#x27;!$A$1:$X$1,0)),$H$5))/$C13\n\n\n2. 周累计与周环比（时间维度分析）\n\n\n周累计（当周总和）\n\n方法：对当周 7 天的数据求和（使用SUM函数或快捷键Alt+=）\n例：曝光人数周累计：=SUM(H13:H19)（H13-H19 为每天曝光人数）\n\n\n\n周环比（与上周对比）\n\n公式：=(本周数据/上周数据)-1（结果为百分比，正增长为绿色，负增长为红色）\n将日期范围向前偏移 7 天（如本周第一天为 A13，上周第一天为A13-7）\n上周GMV数据公式：\n\n=SUMIFS(  数值列,  日期列, &quot;&gt;=&quot;&amp;起始日期-7,  日期列, &quot;&lt;=&quot;&amp;结束日期-7(或&lt;当前日期),  平台列, 平台筛选器)\n\n\n例：有效订单周环比\n=A9/IF($H$5=&quot;全部&quot;,SUMIFS(INDEX(&#x27;拌客源数据1-8月&#x27;!$A:$X,0,MATCH(F$12,&#x27;拌客源数据1-8月&#x27;!$A$1:$X$1,0)),INDEX(&#x27;拌客源数据1-8月&#x27;!$A:$X,0,MATCH($A$12,&#x27;拌客源数据1-8月&#x27;!$A$1:$X$1,0)),&quot;&gt;=&quot;&amp;$A13-7,INDEX(&#x27;拌客源数据1-8月&#x27;!$A:$X,0,MATCH($A$12,&#x27;拌客源数据1-8月&#x27;!$A$1:$X$1,0)),&quot;&lt;&quot;&amp;$A13),SUMIFS(INDEX(&#x27;拌客源数据1-8月&#x27;!$A:$X,0,MATCH(F$12,&#x27;拌客源数据1-8月&#x27;!$A$1:$X$1,0)),INDEX(&#x27;拌客源数据1-8月&#x27;!$A:$X,0,MATCH($A$12,&#x27;拌客源数据1-8月&#x27;!$A$1:$X$1,0)),&quot;&gt;=&quot;&amp;$A13-7,INDEX(&#x27;拌客源数据1-8月&#x27;!$A:$X,0,MATCH($A$12,&#x27;拌客源数据1-8月&#x27;!$A$1:$X$1,0)),&quot;&lt;&quot;&amp;$A13,INDEX(&#x27;拌客源数据1-8月&#x27;!$A:$X,0,MATCH(&quot;平台i&quot;,&#x27;拌客源数据1-8月&#x27;!$A$1:$X$1,0)),$H$5))-1\n其中A9为本周有效订单\n3. 业务进度计算\n\n\n当月GMV总和：日期条件为大于等于本月第一天（在SUMIFS中介绍了3种实现方式）\n=SUMIFS(GMV列, 日期列, &quot;&gt;=&quot;&amp;EOMONTH(TODAY(),-1)+1)\n\n\n进度公式：=当月累计GMV/目标值目标值的设置使用IF嵌套，将在6.5中提到\n=IF($H$5=&quot;全部&quot;,SUMIFS(INDEX(&#x27;拌客源数据1-8月&#x27;!$A:$X,0,MATCH(C$12,&#x27;拌客源数据1-8月&#x27;!$A$1:$X$1,0)),INDEX(&#x27;拌客源数据1-8月&#x27;!$A:$X,0,MATCH($A$12,&#x27;拌客源数据1-8月&#x27;!$A$1:$X$1,0)),&quot;&gt;=&quot;&amp;EOMONTH(A13,-1)+1,INDEX(&#x27;拌客源数据1-8月&#x27;!$A:$X,0,MATCH($A$12,&#x27;拌客源数据1-8月&#x27;!$A$1:$X$1,0)),&quot;&lt;=&quot;&amp;$A19),SUMIFS(INDEX(&#x27;拌客源数据1-8月&#x27;!$A:$X,0,MATCH(C$12,&#x27;拌客源数据1-8月&#x27;!$A$1:$X$1,0)),INDEX(&#x27;拌客源数据1-8月&#x27;!$A:$X,0,MATCH($A$12,&#x27;拌客源数据1-8月&#x27;!$A$1:$X$1,0)),&quot;&gt;=&quot;&amp;DATE(YEAR(A13),MONTH(A13),1),INDEX(&#x27;拌客源数据1-8月&#x27;!$A:$X,0,MATCH($A$12,&#x27;拌客源数据1-8月&#x27;!$A$1:$X$1,0)),&quot;&lt;=&quot;&amp;$A19,INDEX(&#x27;拌客源数据1-8月&#x27;!$A:$X,0,MATCH(&quot;平台i&quot;,&#x27;拌客源数据1-8月&#x27;!$A$1:$X$1,0)),$H$5))/$H$8\n逻辑：判断筛选器是否为全部，是则使用sumifs计算要求的值，条件设置大于本月第一天，小于本周的最后一天，否则多使用sumifs增加一个判断平台的条件，其余相同。\n\n\n6.4 可视化与格式优化\n1. 数值格式\n\n\n百分比：选中转化率、到手率等单元格，按Ctrl+Shift+%。\n\n\n保留小数：右键→设置单元格格式→数值→小数位数（如 2 位）/直接在开始菜单点击。\n\n\n\n2. 条件格式\n\n\n数据条：可视化进度（如业务进度）\n操作：选中单元格 →【开始】→【条件格式】→【新建规则】→【基于各自值设置所有单元格的格式】→【格式样式：数据条】→【选择类型】\n如：选中数值区域 → 条件格式 → 数据条 → 类型选择数字 → 最大值设置为1 → 设置颜色 → 渐变填充\n\n\n\n颜色标记：标记正负值（如周环比）\n操作：新建规则 → 只为包含以下内容的单元格设置格式 → “单元格值&gt; 0” 设为绿色，“≤0” 设为红色（设置两次）。\n\n\n\n图标集：显示趋势（上升 / 下降箭头）\n操作：条件格式 → 新建规则 → 基于各自值设置所有单元格的格式 → 图标集 → 选择 “三向箭头”或自定义中间值（0）为横线 → 分别设置&gt;0, =0, &lt;0的图标 → 类型设置为数字\n\n大于0：绿色字体 + ↑图标\n等于0：红色字体 + -图标\n小于0：红色字体 + ↓图标\n\n\n\n\n低于GMV平均值标记：(注意混合引用)\n\n标记低于周平均值的GMV数值\n选中结果指标区域 →  条件格式 →  新建规则  →  使用公式确定要设置格式的单元格\n\n=$C13 &lt; AVERAGE($C$13:$C$19)\n\n格式 →  下划线 →  加粗\n\n\n\n\n格式刷\n\n单击格式刷：复制格式到单个单元格\n双击格式刷：复制格式到多个单元格\n\n点击管理自定义规则即可查看、修改设置的规则\n\n\n\n3. 迷你图制作\n\n\n步骤：\n\n\n选中数据区域（如一周的曝光人数）\n\n\n【插入】 → 【迷你图 】→ 折线图\n\n\n\n指定放置单元格，设置标记（显示数据点）和高点颜色\n\n\n\n\n\n4. 美化技巧\n\n\n格式优先：先确保数据计算正确，在数据与公式全部建立后，最后进行整体的美化设计\n\n\n**隐藏网格线：**视图 → 取消勾选“网格线”\n\n\n合并单元格：合并标题单元格并居中，标题和列名加粗、放大\n\n\n**添加主题色：**给结果指标和过程指标的表头（列名）添加主题色\n\n\n\n边框与字体：给小看板、指标表格添加外边框，统一字体（推荐微软雅黑），调整字体、对齐方式等\n\n\n\n6.5 目标看板与业务进度\n1. 目标设置\n\n按平台设定 GMV 目标（如全部 = 20 万，美团 = 15 万，饿了么 = 5 万）。\n示例：在 H8 单元格输入公式\n=IF(H5=&quot;全部&quot;,200000,IF(H5=&quot;美团&quot;,150000,50000))。\n\n2. 业务进度\n\n\n公式：=截至目前GMV/目标（如 =SUMIFS(GMV列, 日期列, &quot;&gt;=&quot;&amp;DATE(YEAR(A13),MONTH(A13),1))表示大于当月第一天）。\n\n已在6.3.3中做出陈述\n\n\n\n进度条：通过条件格式→数据条可视化，最大值设为 1（100%）。\n\n\n\n6.6 自动化维护\n\n日期联动：所有日期、星期、平台筛选均通过引用和公式实现，修改A13单元格日期（初始设置日期的单元格）后，所有关联数据自动更新\n数据扩展：新增数据时，调整公式引用范围（如$A:$X改为$A:$Z）\n模板复用：保存为模板文件（.xltx），每周复制使用\n\n\n提示\n\n所有公式中的区域引用需根据实际表格调整（如A:X为示例列范围）\n建议逐步测试每个函数模块，使用F9键分解验证公式逻辑\n格式美化可最后进行，避免干扰数据处理\n\n\n\n\n最终效果\n\n\n\n","categories":["数据分析"],"tags":["数据操作","可视化","看板与报表"]},{"title":"SQL常用函数补充","url":"/post/SQLfunc.html","content":"SQL 执行顺序与常用函数\n🔄 SQL 语句执行顺序\n\nFROM\n从数据库复制原始表（生成临时表）\nWHERE\n在临时表中筛选符合条件的数据行\nGROUP BY\n按指定字段分组（类似Excel数据透视表的行标签）\nHAVING\n筛选满足条件的分组\nORDER BY\n对结果进行排序\nLIMIT\n限制显示行数\nSELECT\n最终提取显示的字段\n\n\n📝 注意：SELECT *实际在最后阶段执行\n\n\n常用函数汇总\n一、数学函数\nROUND(x, y)\n\n\n功能：四舍五入\n\n\n参数：\n\ny&gt;0：保留小数点后y位\ny=0：取整数\ny&lt;0：小数点左侧指定位变0\n\n\n\n示例：\n\n\n\n表达式\n结果\n\n\n\n\nROUND(3.15, 1)\n3.2\n\n\nROUND(14.15, -1)\n10\n\n\n\n\n\n\n二、字符串函数\n\n\n\n函数\n功能说明\n示例\n\n\n\n\nCONCAT(s1, s2,...)\n连接字符串（含NULL则返回NULL）\nCONCAT(‘My’,’ ',‘SQL’)→My SQL      CONCAT(‘My’, NULL, ‘SQL’) → NULL\n\n\nREPLACE(s, s1, s2)\n全量替换字符串\nREPLACE(‘MySQL’,‘SQL’,‘sql’) → Mysql\n\n\nLEFT(s,n)/RIGHT(s,n)\n截取左/右侧n字符\nLEFT(‘abcdefg’,3) → abc\n\n\nSUBSTRING(s, n, len)\n从位置n截取len长度（支持负数位置）\nSUBSTRING(‘abcdefg’,-2,3) → fg SUBSTRING(‘abcdefg’,2)→bcdefg\n\n\nLOWER()\n将字母变为小写\nLOWER(‘A’) → a\n\n\nUPPER()\n将字母变为大写\nUPPER(‘a’) → A\n\n\nLENGTH()/CHAR_LENGTH()\nCHAR_LENGTH() 返回字符串的字符数，而 LENGTH() 返回字符串的字节数,对于 ASCII 字符，这两个函数的结果是相同的\nchar_length(‘数’) = 1(字符)， length(‘数’) = 3(字节)\n\n\n\n补充：GROUP_CONCAT 函数\n功能说明\n将分组内的多个字符串值合并为一个字符串，常用于多值拼接（需配合 GROUP BY 使用）。\nGROUP_CONCAT(    [DISTINCT] 字段名     [ORDER BY 排序字段 [ASC|DESC]]     [SEPARATOR &#x27;分隔符&#x27;])\n示例数据（表 students）：\n\n\n\nclass\nname\n\n\n\n\nA\n张三\n\n\nA\n李四\n\n\nB\n王五\n\n\n\nSELECT     class,    GROUP_CONCAT(name) AS membersFROM studentsGROUP BY class;\n结果：\n\n\n\nclass\nmembers\n\n\n\n\nA\n张三,李四\n\n\nB\n王五\n\n\n\n-- 去重 + 自定义分隔符 + 排序SELECT     class,    GROUP_CONCAT(        DISTINCT name        ORDER BY name DESC        SEPARATOR &#x27;|&#x27;    ) AS membersFROM studentsGROUP BY class;\n\n注意事项\n\n长度限制：受 group_concat_max_len 参数限制（默认1024字节），超长部分被截断\nNULL处理：自动忽略 NULL 值\n跨数据库差异：\n\nMySQL：GROUP_CONCAT\nPostgreSQL：STRING_AGG\nSQL Server：STRING_AGG（2017+版本）\n\n\n\n\n典型应用场景\n\n\n标签聚合\n-- 文章表+标签表联查，合并文章的所有标签SELECT     a.title,    GROUP_CONCAT(t.tag_name) AS tagsFROM articles aJOIN article_tags at ON a.id = at.article_idJOIN tags t ON at.tag_id = t.idGROUP BY a.id;\n\n\n路径生成\n-- 生成层级路径（部门树结构）SELECT     dept_id,    GROUP_CONCAT(parent_name SEPARATOR &#x27; &gt; &#x27;) AS full_pathFROM department_hierarchyGROUP BY dept_id;\n\n\n动态SQL拼接\n-- 生成批量更新语句（示例用途）SELECT     CONCAT(        &#x27;UPDATE users SET status=1 WHERE id IN (&#x27;,        GROUP_CONCAT(id SEPARATOR &#x27;,&#x27;),        &#x27;);&#x27;    ) AS sql_statementFROM temp_ids;\n\n\n补充：正则表达式函数\n1. 字符集（[] 内可用的符号）\n\n\n\n符号\n含义\n示例\n匹配示例\n\n\n\n\na-z\n任意小写字母\n[a-z]\na, b, …, z\n\n\nA-Z\n任意大写字母\n[A-Z]\nA, B, …, Z\n\n\n0-9\n任意数字\n[0-9]\n0, 1, …, 9\n\n\n.\n字面量点（需转义 \\.）\n[a-z.]\na, b, .\n\n\n_\n下划线\n[a-z_]\na, _\n\n\n%\n百分号\n[a-z%]\na, %\n\n\n+\n加号（在 [] 内是普通字符）\n[a-z+]\na, +\n\n\n-\n减号（需放在开头或结尾，否则表示范围如 a-z）\n[-a-z] 或 [a-z-]\n-, a\n\n\n^\n在 [] 内开头表示否定（如 [^a-z] 匹配非小写字母）\n[^0-9]\nA, !（不匹配 1）\n\n\n\\w\n等价于 [a-zA-Z0-9_]（单词字符）\n[\\w]\na, 1, _\n\n\n\\d\n等价于 [0-9]（数字）\n[\\d]\n0, 1\n\n\n\\s\n空白字符（空格、制表符 \\t、换行 \\n 等）\n[\\s]\n``, \\t\n\n\n\\b\n匹配 单词和非单词字符之间的位置（如空格、标点符号、字符串开头/结尾等）\n\\\\bwordword\\\\b\\\\bword\\\\b\n匹配单词开头、结尾和整个单词\n\n\n\n\n2. 量词（控制出现次数，单个字符不用加）\n\n\n\n量词\n含义\n示例\n匹配示例\n\n\n\n\n*\n零次或多次\na*\n&quot;&quot;, a, aa（允许空字符串）\n\n\n+\n一次或多次\na+\na, aa（不匹配空字符串）\n\n\n?\n零次或一次（可选）\na?\n&quot;&quot;, a\n\n\n&#123;n&#125;\n恰好 n 次\na&#123;2&#125;\naa\n\n\n&#123;n,&#125;\n至少 n 次\na&#123;2,&#125;\naa, aaa\n\n\n&#123;n,m&#125;\nn 到 m 次\na&#123;2,4&#125;\naa, aaa, aaaa\n\n\n\n\n3. 边界和转义\n\n\n\n符号\n含义\n示例\n作用\n\n\n\n\n^\n匹配字符串开头\n^[a-z]\n必须以小写字母开头\n\n\n$\n匹配字符串结尾\n[a-z]$\n必须以小写字母结尾\n\n\n\\\n转义特殊字符（如 \\\\. 匹配点）\nexample\\\\.com\n避免 . 被解释为&quot;任意字符&quot;\n\n\n`\n`\n或逻辑（匹配左边或右边）\n`cat\n\n\n\n\n4. 组合用法示例\n\n\n\n正则表达式\n含义\n匹配示例\n\n\n\n\n^[a-zA-Z0-9._%+-]+@\n邮箱本地部分（字母/数字/._%±，至少1字符）\nuser, name+123\n\n\n@[a-zA-Z0-9.-]+\\\\.[a-z]&#123;2,&#125;$\n域名部分（含点和至少2字母TLD）\n@example.com, @sub.domain.co\n\n\n\n\n\n注意事项\n\n减号 -：在 [] 内如果不是开头/结尾，表示范围（如 a-z）。\n\n✅ 正确：[a-z-] 或 [-a-z]\n❌ 错误：[a-z-0-9]（会被解析为 z 到 - 的范围）\n\n\n点 .：在 [] 外是通配符（匹配任意字符），需转义 \\. 才能匹配字面量点。\n大小写敏感：默认区分大小写，添加 i 标志可忽略（如 /^[a-z]+$/i）。\n\n\n1. 正则匹配检测\n\n\n\n函数/操作符\n功能说明\n数据库支持\n示例\n\n\n\n\nREGEXP_LIKE(str, pattern)\n检查字符串是否匹配正则模式\nOracle, MySQL 8.0+,\nSELECT * FROM users WHERE REGEXP_LIKE(email, '^[a-z0-9]+@[a-z]+\\.com$')\n\n\nstr REGEXP pattern\n简写匹配操作符\nMySQL, MariaDB\nSELECT 'abc123' REGEXP '^[a-z]+[0-9]+$' → 1 (匹配)\n\n\n~\n正则匹配操作符\nPostgreSQL\nSELECT 'abc' ~ '^a' → true\n\n\n\n2. 正则替换\n\n\n\n函数\n功能说明\n示例\n\n\n\n\nREGEXP_REPLACE(str, pattern, replacement)\n替换匹配正则的内容\nREGEXP_REPLACE('Tel: 010-12345678', '[^0-9]', '') → '01012345678'\n\n\n\n3. 子串提取\n\n\n\n函数\n功能说明\n示例\n\n\n\n\nREGEXP_SUBSTR(str, pattern)\n提取第一个匹配的子串\nREGEXP_SUBSTR('2023Q4 Report', '[0-9]+Q[1-4]') → '2023Q4'\n\n\n\n4. 常用正则模式\n\n\n\n模式\n说明\n应用场景示例\n\n\n\n\n^abc\n以&quot;abc&quot;开头\n验证身份证号开头\n\n\nxyz$\n以&quot;xyz&quot;结尾\n检测文件扩展名\n\n\n[0-9]&#123;4&#125;\n连续4位数字\n提取年份信息\n\n\n\\d&#123;3&#125;-\\d&#123;8&#125;\n匹配电话号码格式\n010-12345678\n\n\n[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]&#123;2,&#125;\n邮箱格式验证\n过滤无效邮箱地址\n\n\n\n5. 跨数据库语法对比\n\n\n\n操作\nMySQL/MariaDB\nPostgreSQL\nOracle\nSQL Server\n\n\n\n\n匹配检测\nREGEXP / RLIKE\n~\nREGEXP_LIKE\nLIKE（有限支持）\n\n\n替换\nREGEXP_REPLACE\nREGEXP_REPLACE\nREGEXP_REPLACE\n无内置函数\n\n\n提取子串\nREGEXP_SUBSTR\nSUBSTRING(str FROM pattern)\nREGEXP_SUBSTR\nPATINDEX+SUBSTRING\n\n\n\n6. 使用示例\n-- 验证手机号格式（11位数字）SELECT *FROM customers WHERE phone REGEXP &#x27;^1[3-9][0-9]&#123;9&#125;$&#x27;;-- 提取带区号的电话号码SELECT   REGEXP_SUBSTR(contact_info, &#x27;\\([0-9]&#123;3&#125;\\) [0-9]&#123;8&#125;&#x27;) AS phone FROM contacts;-- 清理混合文本中的字母SELECT REGEXP_REPLACE(&#x27;a1b2c3&#x27;, &#x27;[A-Za-z]&#x27;, &#x27;&#x27;) → &#x27;123&#x27;;-- 查找包含价格的描述SELECT * FROM products WHERE description ~ &#x27;\\$[0-9]+\\.[0-9]&#123;2&#125;&#x27;;\n\n\n字符集敏感：注意数据库字符集设置（如中文匹配需用[一-龥]）\n特殊字符转义：需用\\\\转义（如匹配点号需写\\\\.）\n\n\n\n三、日期函数\n时间计算\nDATE_ADD(date, INTERVAL expr type)  -- 时间加法DATE_SUB(date, INTERVAL expr type)  -- 时间减法\n\n示例：\n\nSELECT DATE_ADD(&#x27;2021-08-03 23:59:59&#x27;, INTERVAL 1 SECOND) → &#x27;2021-08-04 00:00:00&#x27;SELECT DATE_SUB(&#x27;2021-08-03&#x27;, INTERVAL 2 MONTH) → &#x27;2021-06-03&#x27;\n时间差与格式化\n\n\n\n函数\n功能说明\n示例\n\n\n\n\nDATEDIFF(date1, date2)\n计算日期差（忽略时间）\nDATEDIFF(‘2021-06-08’,‘2021-06-01’) →7\n\n\nDATE_FORMAT(date, format)\n日期格式化\nDATE_FORMAT(NOW(),‘%Y-%m’) → 2023-12\n\n\n\n📅 DATE_FORMAT 格式符对照表\n\n\n\n格式符\n描述\n示例值\n\n\n\n\n日期相关\n\n\n\n\n%Y\n四位年份\n2023\n\n\n%y\n两位年份\n23\n\n\n%m\n两位月份（01-12）\n07\n\n\n%c\n月份（1-12，无前导零）\n7\n\n\n%M\n月份英文全称\nJanuary, December\n\n\n%b\n月份缩写\nJan, Dec\n\n\n%d\n两位日期（01-31）\n09\n\n\n%e\n日期（1-31，无前导零）\n9\n\n\n%D\n英文后缀日期（1st, 2nd…）\n1st, 22nd\n\n\n时间相关\n\n\n\n\n%H\n24小时制小时（00-23）\n15\n\n\n%h\n12小时制小时（01-12）\n03\n\n\n%i\n分钟（00-59）\n08\n\n\n%S\n秒（00-59）\n45\n\n\n%p\nAM/PM\nAM, PM\n\n\n星期相关\n\n\n\n\n%W\n星期全称\nMonday, Sunday\n\n\n%a\n星期缩写\nMon, Sun\n\n\n%w\n数字星期（0=周日, 1=周一…）\n1 (周一), 0 (周日)\n\n\n组合格式\n\n\n\n\n%T\n时间（HH:mm:ss）\n23:59:58\n\n\n%r\n带AM/PM的时间（hh:mm:ss AM）\n11:59:58 PM\n\n\n%x\n年份周编号（年份部分）\n2023 (用于周计算)\n\n\n%v\n周编号（周一为周起始）\n52\n\n\n\n使用示例\n-- 原始时间：2023-07-25 14:30:45DATE_FORMAT(date, &#x27;%Y/%m/%d %H:%i&#x27;)    → 2023/07/25 14:30DATE_FORMAT(date, &#x27;%b %D %Y %h:%i %p&#x27;) → Jul 25th 2023 02:30 PMDATE_FORMAT(date, &#x27;%W, %M %e&#x27;)         → Tuesday, July 25\n\n四、条件判断函数\nIF 函数\nIF(expr, v1, v2)  -- expr为真返回v1，否则v2\n\n示例：IF(1&gt;2, 'Y', 'N') → N\n\nCASE 表达式\n-- 简单CASECASE expr     WHEN v1 THEN r1     WHEN v2 THEN r2     ELSE rn END-- 搜索CASECASE     WHEN condition1 THEN r1     WHEN condition2 THEN r2     ELSE rn END\n\n示例：\n\nCASE WHEN 1&lt;0 THEN &#x27;T&#x27; ELSE &#x27;F&#x27; END → F\nNULLIF vs. IFNULL\n\n\n\n特性\nNULLIF\nIFNULL\n\n\n\n\n功能\n比较两个值，相等时返回 NULL\n检查一个值是否为 NULL，并提供替代值\n\n\n返回值\n返回 NULL 或 expression1\n返回 expression1 或 expression2\n\n\n常见用途\n避免除零错误、处理重复值\n提供默认值、数据清洗\n\n\n示例\nNULLIF(a, b)：如果 a = b，返回 NULL\nIFNULL(a, b)：如果 a 是 NULL，返回 b\n\n\n\nCOALESCE 函数\n功能说明\n返回参数列表中第一个非 NULL 的值，常用于处理缺失值替换。\n语法\nCOALESCE(v1, v2, v3, ..., vn)\n执行逻辑\n\n从左到右依次检查参数\n返回第一个不为 NULL 的值\n如果所有参数均为 NULL，则返回 NULL\n\n示例\n-- 数据示例：name字段为NULL，nickname=&#x27;小张&#x27;，default_name=&#x27;匿名用户&#x27;COALESCE(NULL, &#x27;小张&#x27;, &#x27;匿名用户&#x27;) → &#x27;小张&#x27;COALESCE(NULL, NULL, &#x27;2023-01-01&#x27;) → &#x27;2023-01-01&#x27;COALESCE(NULL, NULL, NULL) → NULL\n与 IFNULL 的对比\n\n\n\n特性\nCOALESCE\nIFNULL\n\n\n\n\n参数数量\n支持多个参数\n仅支持两个参数\n\n\n功能范围\n多条件NULL处理\n简单双值替换\n\n\n可读性\n更适合多字段优先级选择\n适合简单场景\n\n\n\n等价写法\nCOALESCE(a, b, c) -- 等价于 CASE     WHEN a IS NOT NULL THEN a     WHEN b IS NOT NULL THEN b     ELSE c END\n常见使用场景\n\n\n多级备用值选择\n-- 优先显示用户昵称，其次邮箱，最后显示&#x27;未知用户&#x27;SELECT COALESCE(nickname, email, &#x27;未知用户&#x27;) AS display_name FROM users;\n\n\nNULL值数据清洗\n-- 将NULL金额转换为0计算总和SELECT SUM(COALESCE(amount, 0)) AS total FROM orders;\n\n\n多字段优先级合并\n-- 合并地址信息（优先使用详细地址，没有时使用区域地址）SELECT COALESCE(detail_address, area_address) AS full_address FROM locations;\n\n\n五、类型转换函数\nCAST(x AS type)\n\n支持类型：CHAR(n), DATE, TIME,DATETIME,DECIMAL等\n示例：CAST('2023' AS DECIMAL) → 2023\n\n六、表连接补充自连接\n自连接介绍\n自连接是一种特殊的连接查询，指的是同一个表自己与自己进行连接。常用于处理具有层级关系的数据，例如员工与经理、分类的父类与子类等场景。自连接实际上是将同一个表视为两个不同的实例，通过别名进行区分，并根据关联条件进行连接。\n自连接语法\n自连接可以使用内连接或外连接语法，核心是为同一表赋予不同的别名：\n-- 内自连接（查询匹配条件的记录）SELECT 字段 FROM 表 AS 别名1 INNER JOIN 表 AS 别名2 ON 别名1.字段 = 别名2.关联字段;-- 左自连接（以左表为主，查询右表可能不存在的记录）SELECT 字段 FROM 表 AS 别名1 LEFT JOIN 表 AS 别名2 ON 别名1.字段 = 别名2.关联字段;\n自连接示例\n场景：假设有员工表 employees，结构如下：\n\n\n\nid\nname\nmanager_id\n\n\n\n\n1\n张三\nNULL\n\n\n2\n李四\n1\n\n\n3\n王五\n1\n\n\n4\n赵六\n2\n\n\n\n需求：查询每个员工及其对应经理的名字（包括没有经理的员工）。\nSQL语句：\nSELECT     e1.name AS employee_name,    e2.name AS manager_nameFROM employees e1LEFT JOIN employees e2 ON e1.manager_id = e2.id;\n查询结果：\n\n\n\nemployee_name\nmanager_name\n\n\n\n\n张三\nNULL\n\n\n李四\n张三\n\n\n王五\n张三\n\n\n赵六\n李四\n\n\n\n自连接应用场景\n\n层级关系：如组织架构、分类层级（父类与子类）。\n数据对称性分析：如社交网络中的用户关系（用户A和用户B互为好友）。\n路径查询：如地铁站点之间的连接关系。\n\n注意事项\n\n别名必要性：必须为表指定不同的别名以区分左、右表。\n性能优化：自连接可能引发较大的计算开销，尤其是大表操作时，建议在关联字段上创建索引。\n连接类型选择：\n\n使用 内自连接 时，只返回满足条件的记录（如“有经理的员工”）。\n使用 左自连接 时，会包含左表所有记录，右表无匹配则填充 NULL（如“包括无经理的员工”）。\n\n\n\n七、交叉连接 CROSS JOIN\n功能说明\n生成两个表的笛卡尔积（所有行的组合），无关联条件。\n特点：\n\n结果集行数 = 表A行数 × 表B行数\n不需要连接条件（无ON子句）\n常用于生成组合数据、测试数据等场景\n\n语法形式\n-- 显式语法SELECT * FROM table1 CROSS JOIN table2;-- 隐式语法（等同于CROSS JOIN）SELECT * FROM table1, table2;\n典型应用场景\n\n生成组合数据\n如：颜色与尺寸组合、日期与产品组合\n数据模拟测试\n快速生成大量测试数据\n全量关联分析\n计算所有可能的组合关系\n\n与INNER JOIN的区别\n\n\n\n特性\nCROSS JOIN\nINNER JOIN\n\n\n\n\n连接条件\n无需ON子句\n必须使用ON子句\n\n\n结果集逻辑\n强制所有行组合\n仅匹配关联条件的行\n\n\n数据量\n可能极大（慎用）\n通常较小\n\n\n\n八、集合操作符 UNION ALL\n功能说明\n用于合并多个查询结果，保留所有记录（包括重复行）\n基本语法\nSELECT 字段列表 FROM 表1UNION ALLSELECT 字段列表 FROM 表2...\n与UNION的区别\n\n\n\n特性\nUNION ALL\nUNION\n\n\n\n\n去重处理\n保留所有记录，包括重复行\n自动去重\n\n\n排序操作\n不排序\n默认进行排序\n\n\n性能\n更高（无去重、排序开销）\n较低\n\n\n\n使用场景\n\n合并分表数据（如按年份拆分的订单表）\n需要保留重复记录的统计场景\n明确知道数据无重复时的性能优化选择\n\n注意事项\n\n合并的SELECT语句必须包含相同数量的字段\n对应字段的数据类型必须兼容\n最终结果集的字段名以第一个SELECT语句为准\n\n使用示例\n-- 合并两个季度的销售数据（保留重复）SELECT product_id, sales FROM Q1_salesUNION ALLSELECT product_id, sales FROM Q2_sales;-- 组合不同表结构数据（使用别名统一字段）SELECT id, name, &#x27;employee&#x27; AS type FROM employeesUNION ALLSELECT customer_id, company_name, &#x27;customer&#x27; FROM customers;\n\n小结\n\n自连接本质：同一表通过别名模拟两个表的连接操作，支持内连接或外连接语法。\n核心步骤：\n\n为同一表赋予不同别名（如 e1, e2）。\n指定连接条件（如 e1.manager_id = e2.id）。\n\n\n适用场景：处理数据内部的层级或对称关系。\n优化建议：合理使用索引，避免全表扫描带来的性能问题。\n\n👀 窗口函数详解\n一、什么是窗口函数？\n窗口函数（Window Function）是一种对查询结果集进行逐行计算的特殊函数，能够：\n\n在保留原始数据行的同时进行聚合/排序等操作\n实现复杂的分组统计需求（如：累计值、移动平均值、排名等）\n不会像GROUP BY那样合并结果集\n\n二、标准语法\n函数名() OVER (    [PARTITION BY 字段]  -- 定义分组窗口    [ORDER BY 字段 [ASC|DESC]]  -- 定义排序规则)\n三、核心组件\n1. PARTITION BY\n\n作用：将数据按指定字段分组，每组称为一个窗口\n类似GROUP BY但不合并结果集\n示例：PARTITION BY department 按部门分组\n\n2. ORDER BY\n\n作用：在窗口内指定排序规则\n示例：ORDER BY sales DESC 按销售额降序排列\n\n四、常用窗口函数\n1. 排序函数\n\n\n\n函数\n特点\n示例结果（相同值处理）\n\n\n\n\nRANK()\n出现并列时跳号（1,1,3）\n1,1,3,4\n\n\nDENSE_RANK()\n出现并列时不跳号（1,1,2）\n1,1,2,3\n\n\nROW_NUMBER()\n强制生成唯一序号\n1,2,3,4\n\n\n\n📝 示例数据（按成绩排序）：\nSELECT     name,    score,    RANK() OVER(ORDER BY score DESC) AS rank,    DENSE_RANK() OVER(ORDER BY score DESC) AS dense_rank,    ROW_NUMBER() OVER(ORDER BY score DESC) AS row_numFROM students;\n\n\n\nname\nscore\nrank\ndense_rank\nrow_num\n\n\n\n\n张三\n95\n1\n1\n1\n\n\n李四\n95\n1\n1\n2\n\n\n王五\n90\n3\n2\n3\n\n\n\n2. 偏移分析函数\n\n\n\n函数\n功能说明\n参数说明\n\n\n\n\nLAG(字段, 偏移量[, 默认值])\n获取当前行向上偏移的值\n默认偏移量=1，默认值=NULL\n\n\nLEAD(字段, 偏移量[, 默认值])\n获取当前行向下偏移的值\n默认偏移量=1，默认值=NULL\n\n\n\n📝 示例（查看相邻订单金额）：\nSELECT     order_date,    amount,    LAG(amount, 1) OVER(ORDER BY order_date) AS prev_amount,    LEAD(amount, 1) OVER(ORDER BY order_date) AS next_amountFROM orders;\n\n\n\norder_date\namount\nprev_amount\nnext_amount\n\n\n\n\n2023-01-01\n100\nNULL\n150\n\n\n2023-01-02\n150\n100\n200\n\n\n2023-01-03\n200\n150\nNULL\n\n\n\n3.滑动窗口（窗口框架）\n核心概念\n通过定义窗口框架（Window Frame），动态控制计算范围。支持两种模式：\n\n基于行数（ROWS）：物理行偏移\n基于数值范围（RANGE）：逻辑值偏移\n\n标准语法\n函数() OVER (    PARTITION BY ...     ORDER BY ...    [ROWS|RANGE BETWEEN 起始点 AND 结束点])\n框架边界定义\n\n\n\n关键词\n说明\n\n\n\n\nUNBOUNDED PRECEDING\n窗口起始位置（第一行/最小值）\n\n\nUNBOUNDED FOLLOWING\n窗口结束位置（最后一行/最大值）\n\n\nCURRENT ROW\n当前行\n\n\nn PRECEDING\n当前行向前n行/n值（包含当前行）\n\n\nn FOLLOWING\n当前行向后n行/n值（包含当前行）\n\n\n\n常用模式示例\n1. 累计计算（默认模式）\nSUM(sales) OVER (    ORDER BY date     ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) -- 等价简写：SUM(sales) OVER (ORDER BY date)\n2. 移动平均（近3天）\nAVG(temperature) OVER (    ORDER BY date     ROWS BETWEEN 2 PRECEDING AND CURRENT ROW)\n3. 对称窗口（前后各1行）\nMAX(score) OVER (    ORDER BY id     ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING)\nROWS vs RANGE 对比\n\n\n\n对比项\nROWS\nRANGE\n\n\n\n\n计算逻辑\n按物理行偏移\n按ORDER BY字段的数值偏移\n\n\n适用场景\n明确行数移动（如近3行）\n按数值区间计算（如3天范围）\n\n\n性能\n更高\n较低（需排序计算）\n\n\n数据要求\n无特殊要求\nORDER BY字段需为数值/日期类型\n\n\n\n-- ROWS模式（物理行）SUM(amount) OVER (    ORDER BY date     ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) → 当前行+前1行-- RANGE模式（逻辑值）SUM(amount) OVER (    ORDER BY date     RANGE BETWEEN INTERVAL 1 DAY PRECEDING AND CURRENT ROW) → 当天+前一天的所有记录\n典型应用场景\n\n金融分析\n\n7日移动平均线\n滚动波动率计算\n\n\n电商分析\n\n近30天消费趋势\n周环比增长率\n\n\n运营监控\n\n每小时累计UV\n滑动窗口异常检测\n\n\n\n高级用法示例\n动态最近N条记录统计\nSELECT     order_id,    order_time,    AVG(amount) OVER (        ORDER BY order_time         ROWS BETWEEN 9 PRECEDING AND CURRENT ROW    ) AS last_10_avgFROM orders;\n时间段累计（日期类型）\nSELECT     report_date,    SUM(revenue) OVER (        ORDER BY report_date         RANGE BETWEEN INTERVAL 6 DAY PRECEDING AND CURRENT ROW    ) AS 7day_revenue FROM daily_stats;\n\n注意事项\n\n性能优化\n\n避免大范围窗口（如UNBOUNDED+大数据量表）\n优先使用ROWS模式\n配合合适的索引（ORDER BY字段）\n\n\n边界处理\n\n窗口起始前的行返回NULL\n使用COALESCE处理空值\n\n\n框架限制\n\nRANGE模式不支持n FOLLOWING（MySQL限制）\n不同数据库实现细节可能有差异\n\n\n\n\n五、综合应用场景\n案例：部门薪资排名\nSELECT     department,    name,    salary,    RANK() OVER(PARTITION BY department ORDER BY salary DESC) AS dept_rankFROM employees;\n\n\n\ndepartment\nname\nsalary\ndept_rank\n\n\n\n\n技术部\n张三\n15000\n1\n\n\n技术部\n李四\n12000\n2\n\n\n市场部\n王五\n13000\n1\n\n\n\n六、注意事项\n\n窗口函数执行顺序：在WHERE、GROUP BY之后，ORDER BY之前\n可以组合使用多个窗口函数\n不同数据库支持情况可能不同（MySQL 8.0+支持）\n大数据量时注意性能优化\n\n","categories":["大数据"],"tags":["数据操作","SQL","数据库"]},{"title":"LeetCode每日一题2025-05-13","url":"/post/total-characters-in-string-after-transformations-i.html","content":"3335. 字符串转换后的长度 I M\n给你一个字符串 s 和一个整数 t，表示要执行的 转换 次数。每次 转换 需要根据以下规则替换字符串 s 中的每个字符：\n\n如果字符是 'z'，则将其替换为字符串 &quot;ab&quot;。\n否则，将其替换为字母表中的下一个字符。例如，'a' 替换为 'b'，'b' 替换为 'c'，依此类推。\n\n返回 恰好 执行 t 次转换后得到的字符串的 长度。\n由于答案可能非常大，返回其对 109 + 7 取余的结果。\n示例 1：\n输入： s = “abcyy”, t = 2\n输出： 7\n解释：\n\n第一次转换 (t = 1)\n\n'a' 变为 'b'\n'b' 变为 'c'\n'c' 变为 'd'\n'y' 变为 'z'\n'y' 变为 'z'\n第一次转换后的字符串为：&quot;bcdzz&quot;\n\n\n第二次转换 (t = 2)\n\n'b' 变为 'c'\n'c' 变为 'd'\n'd' 变为 'e'\n'z' 变为 &quot;ab&quot;\n'z' 变为 &quot;ab&quot;\n第二次转换后的字符串为：&quot;cdeabab&quot;\n\n\n最终字符串长度：字符串为 &quot;cdeabab&quot;，长度为 7 个字符。\n\n示例 2：\n输入： s = “azbk”, t = 1\n输出： 5\n解释：\n\n第一次转换 (t = 1)\n\n'a' 变为 'b'\n'z' 变为 &quot;ab&quot;\n'b' 变为 'c'\n'k' 变为 'l'\n第一次转换后的字符串为：&quot;babcl&quot;\n\n\n最终字符串长度：字符串为 &quot;babcl&quot;，长度为 5 个字符。\n\n提示：\n\n1 &lt;= s.length &lt;= 10⁵\ns 仅由小写英文字母组成。\n1 &lt;= t &lt;= 10⁵\n\n问题分析\n对于任意单个字符 c，定义函数\nf(c,t)=在执行 t 次转换后，字符 c 所对应的最终长度f(c, t) = \\text{在执行 }t\\text{ 次转换后，字符 }c\\text{ 所对应的最终长度}\nf(c,t)=在执行 t 次转换后，字符 c 所对应的最终长度\n那么对整个字符串 s，最终答案就是\n∑c∈sf(c,t) mod (109+7).\\sum_{c\\in s} f(c, t)\\bmod(10^9+7).\nc∈s∑​f(c,t)mod(109+7).\n算法思路\n状态转移\n边界：f(c,0)=1f(c,0)=1f(c,0)=1（不变长度为 1）\n若 c≠’z’c\\ne \\text{&#x27;z&#x27;}c=’z’，则每次转换就是下一个字母\nf(c,t)=f(next(c), t−1).f(c,t) = f(\\text{next}(c),\\,t-1).\nf(c,t)=f(next(c),t−1).\n若 c=’z’c=\\text{&#x27;z&#x27;}c=’z’，则“ z ”展开为 “ab”，对应长度之和\nf(’z’,t)=f(’a’, t−1)+f(’b’, t−1).f(\\text{&#x27;z&#x27;},t) = f(\\text{&#x27;a&#x27;},\\,t-1) + f(\\text{&#x27;b&#x27;},\\,t-1).\nf(’z’,t)=f(’a’,t−1)+f(’b’,t−1).\n我们可以对所有 26 个字母维护一个长度-26 的数组 dp，其中\ndp[i] 表示在当前步剩余转换次数 kkk 时，字母 char('a'+i) 对应的最终长度。\n初始化：dp[i]=1（即 f(c,0)=1f(c,0)=1f(c,0)=1）。\n对每一次转换 k=1k=1k=1 到 ttt：\n\n对 i=0…24（即 a…y），新的 dp_new[i] = dp[i+1]；\n对 i=25（即 z），dp_new[25] = (dp[0] + dp[1]) % MOD。\n然后将 dp_new 赋回 dp。\n\n最后，对字符串 s 中每个字符累加对应的 dp[index] 并取模即为答案。\n时间复杂度\n时间：每步更新 O(26)O(26)O(26)，共做 ttt 步，外加对长度 ∣s∣|s|∣s∣ 的一次遍历，故整体 O(26 t+∣s∣)O(26\\,t + |s|)O(26t+∣s∣)。\n空间：只使用常数大小的长度 26 数组，故 O(1)O(1)O(1)。\n代码实现\nclass Solution:    MOD = 10**9 + 7    def lengthAfterTransformations(self, s: str, t: int) -&gt; int:        # dp[i] 表示当前剩余转换次数 k 时，        # 字符 chr(ord(&#x27;a&#x27;)+i) 的最终长度        dp = [1] * 26        # 执行 t 次转换        for _ in range(t):            dp_new = [0] * 26            # a..y 直接继承下一个字母            for i in range(25):                dp_new[i] = dp[i+1]            # z -&gt; &quot;ab&quot;            dp_new[25] = (dp[0] + dp[1]) % self.MOD            dp = dp_new        # 累加 s 中每一个字符的贡献        ans = 0        base = ord(&#x27;a&#x27;)        for ch in s:            idx = ord(ch) - base            ans = (ans + dp[idx]) % self.MOD        return ans\n另看到题解：预处理 + 动态规划（DP） :\n状态定义\n数组 f 长度为 26+MX26 + \\text{MX}26+MX，其中前 0∼250\\sim250∼25 位初始化为 1（表示任何字母在 0 步转换时长度为 1），后面用来存储更大步数下的长度。\n状态转移\n对于下标 i≥0i\\ge0i≥0，f[i+26] = (f[i] + f[i+1]) % \\text&#123;MOD&#125;，恰好对应了：\n\n当你对 'z'（在前 26 中的最后一个）做一次转换，它会变成 &quot;ab&quot;，长度就是前面两个状态的和。\n而对非 'z' 的字母，其实就是“下一个字母”的长度，也可以映射到同样的数组偏移关系里。\n\n预处理好所有可能的值\n因为 t≤105t\\le10^5t≤105，预先把 f[26] 到 f[26 + 10^5] 都算好，这样每次调用 lengthAfterTransformations(s, t) 时，只要对串中每个字符 ccc 取 f[t + (ord(c)-ord('a'))]，再累加取模即可。\n当 ttt 接近上限 10510^5105 时，26*t 约为 2.6×1062.6\\times10^62.6×106 次小操作；而打表只做 10510^5105 次，常数更小，大约快 20× 以上。\n且打表后，不管用户输入的 ttt 是多少（只要 $\\le MX），都能直接 O(1)O(1)O(1) 拿到每个字符的长度贡献。\nMOD = 1_000_000_007ORD_A = ord(&#x27;a&#x27;)MX = 100_000  # t 的最大可能值# 预处理：f[i] 表示“从某字母出发，剩余 i 步转换后”的长度增量# 前 26 位对应步数 0，初始化为 1；后面 MX 位存储更大步数时的结果f = [1] * 26 + [0] * MXfor i in range(MX):    # 对应状态转移：非 &#x27;z&#x27; 的字符通过偏移 i+1；&#x27;z&#x27; 则合并 a、b 两个状态    f[i + 26] = (f[i] + f[i + 1]) % MODclass Solution:    def lengthAfterTransformations(self, s: str, t: int) -&gt; int:        # 对于每个字符 c，直接通过 f[t + (ord(c)-ORD_A)] 获取剩余 t 步后的长度        total = 0        for c in s:            idx = ord(c) - ORD_A            total = (total + f[t + idx]) % MOD        return total\n","categories":["算法"],"tags":["Algorithm","字符串处理","中等","动态规划"]},{"title":"LeetCode每日一题2025-05-12","url":"/post/finding-3-digit-even-numbers.html","content":"2094. 找出 3 位偶数 E\n给你一个整数数组 digits ，其中每个元素是一个数字（0 - 9）。数组中可能存在重复元素。\n你需要找出 所有 满足下述条件且 互不相同 的整数：\n\n该整数由 digits 中的三个元素按 任意 顺序 依次连接 组成。\n该整数不含 前导零\n该整数是一个 偶数\n\n例如，给定的 digits 是 [1, 2, 3] ，整数 132 和 312 满足上面列出的全部条件。\n将找出的所有互不相同的整数按 递增顺序 排列，并以数组形式返回*。*\n示例 1：\n\n输入：digits = [2,1,3,0]\n输出：[102,120,130,132,210,230,302,310,312,320]\n解释：\n所有满足题目条件的整数都在输出数组中列出。\n注意，答案数组中不含有 奇数 或带 前导零 的整数。\n\n示例 2：\n\n输入：digits = [2,2,8,8,2]\n输出：[222,228,282,288,822,828,882]\n解释：\n同样的数字（0 - 9）在构造整数时可以重复多次，重复次数最多与其在 digits 中出现的次数一样。\n在这个例子中，数字 8 在构造 288、828 和 882 时都重复了两次。\n\n示例 3：\n\n输入：digits = [3,7,5]\n输出：[]\n解释：\n使用给定的 digits 无法构造偶数。\n\n提示：\n\n3 &lt;= digits.length &lt;= 100\n0 &lt;= digits[i] &lt;= 9\n\n问题分析\n目标：从给定的整数数组 digits 中选出恰好 3 个元素，按任意顺序拼接成一个三位数，且该数不能有前导零，并且是偶数。所有满足条件且互不相同的数，按升序返回。\n\n要考虑数字出现的次数限制——同一数字最多使用它在 digits 中出现的次数。\n排除前导零（三位数的百位不能为 0）。\n只保留偶数（个位为偶数）。\n去重并按升序输出。\n\n算法思路\n\n\n统计频次\n先用一个长度为 10 的数组 cnt 记录每个数字在 digits 中出现的次数，以便在选位时快速判断是否还有剩余。\n\n\n三重枚举＋剪枝\n\n枚举百位 h：只枚举 [1..9]，并且 cnt[h] &gt; 0。\n枚举十位 t：在剩余的数字中选（使用完百位后对应 cnt[h] 临时减 1），可以为 0–9，但要保证 cnt[t] &gt; 0。\n枚举个位 u：同理，在剩余中选，且 u 必须是偶数（0,2,4,6,8），并且 cnt[u] &gt; 0。\n每构造一个合法三位数 num = 100*h + 10*t + u，加入结果集合。\n\n\n\n去重与排序\n我们借助 Python 的 set 去重，最后将结果转为列表并排序。\n\n\n时间复杂度\n\n最坏情况三重枚举固定为 10 × 10 × 5 = 500 次尝试。\n统计频次：O(n)O(n)O(n)。\n总体：O(n+1)O(n + 1)O(n+1)，常数级别的三重循环 ⇒ 近似 O(n)O(n)O(n)。\n\n代码实现\nclass Solution:    def findEvenNumbers(self, digits: list[int]) -&gt; list[int]:        # 1. 统计每个数字的出现次数        cnt = [0] * 10        for d in digits:            cnt[d] += 1        res = set()        # 2. 枚举三位数的各个位        for h in range(1, 10):  # 百位不能为 0            if cnt[h] == 0:                continue            cnt[h] -= 1            for t in range(0, 10):  # 十位可以为 0                if cnt[t] == 0:                    continue                cnt[t] -= 1                for u in (0, 2, 4, 6, 8):  # 个位必须是偶数                    if cnt[u] &gt; 0:                        num = 100 * h + 10 * t + u                        res.add(num)                cnt[t] += 1            cnt[h] += 1        # 3. 排序并返回        return sorted(res)\n","categories":["算法"],"tags":["Algorithm","排列组合","枚举与剪枝","暴力搜索","数位处理","简单","哈希表"]},{"title":"AI是“万知之知”吗？","url":"/post/is-AI-Omniscience.html","content":"看了罗翔老师的最新视频，从苏格拉底哲学的角度反思AI的“认知边界”，我们会发现一个有趣的悖论——AI越是“无所不知”（基于数据堆叠的知识库）时，越凸显出它根本不是“万知之知”（Omniscience）。它揭示了机器智能与人类智慧的本质差异，也印证了苏格拉底“自知无知”的永恒价值。\n\n一、知识的边界\n罗翔老师指出，《卡尔米德篇》中苏格拉底与三位年轻人的对话层层推进，从追问“名字是否包含美德”到质疑“关于知识的知识是否存在”，最终指向一个困境：\n\nAI看似掌握“万知之知”，实则被困在数据洞穴中：它通过模式匹配“学习”的《理想国》，永远无法理解洞穴寓言背后的哲学叩问——“我们是否也活在更大的洞穴中？”。\n正如苏格拉底通过辩证法揭示“名字的美德不等于美德本身”，AI对“正义”“善”的理解仅停留在文本表层，无法追问“正义的本质是否需要超越法律条文”，这与文科教育培养的批判性思维形成鲜明对比。\n\n\nAI像《卡尔米德》中自信能定义“节制”的年轻人，用精准词汇掩盖认知的虚空；而文科教育教会我们像苏格拉底一样，承认“知道何为节制远比说出节制的定义更难”。\n\n\n二、“知无知”\n苏格拉底通过《申辩篇》中“我唯一知道的就是我一无所知”，颠覆了古希腊人对“智慧”的朴素认知。他否定智者派（Sophists）宣称的“知识权威”，强调：\n\n认知的谦逊：承认有限性是求知的前提；\n对话的开放性：真理需通过辩证过程不断逼近；\n无知的认知价值：自省与质疑比确定性答案更重要。\n\n这种智慧观本质上是一种元认知能力——对自身知识状态的监控与批判。在《美诺篇》中，苏格拉底通过助产术（Maieutics）引导奴隶男孩发现几何定理，揭示真正的知识需要通过内在觉醒而非外部灌输。\n\n三、AI的“知识幻觉”与认知盲区\n现代AI（如大语言模型）的“知识”具有三个根本局限，苏格拉底在《卡尔米德》中强调的“明智”（σωφροσύνη），恰是AI最难企及的智慧：\n1. 训练数据的“已知黑箱”\n\nAI的知识完全来自人类输入的文本数据，其“知识库”本质是人类已有认知的统计压缩（如维基百科、学术论文的集合）。\n例：当AI回答量子物理问题时，它实际上是在重复训练数据中出现的表述模式，而非理解波函数坍缩的哲学意义。\n苏格拉底式诘问：如果AI不能超越数据提出根本性问题（如“芝诺悖论是否真的被数学解决？”），它的知识只是“正确的话语”而非“真理的探求”。\n\n2. 无法意识“无知”状态\n\nAI没有元认知能力，无法像苏格拉底那样说出“我不知道”。它对错误答案的自信程度与正确答案无异，甚至会编造合理话语掩盖无知。\n讽刺实验：当询问LLM“如何用五维几何体解决黎曼假设？”时，它会构造出符合语法但逻辑牵强的伪推理——这恰好印证了苏格拉底的警言：“自以为知道实际上不知道的事，是灵魂的毒药。”\n\n3. 辩证思维的缺席\n\n苏格拉底在《理想国》中用洞穴比喻说明认知需要挣脱枷锁、转身看见火光乃至走出洞穴。而AI始终被困在由人类预设的“数据洞穴”中：\n\n它能复述柏拉图和康德对正义的定义，但无法像苏格拉底那样追问：“我们为何需要正义？”\n它可以解析康德伦理学公式，但无法像苏格拉底在《格里底亚篇》中追问：“如果‘善’是知识，为何人类依旧作恶？”。\n它能生成关于存在主义的文本，却无法像克尔凯郭尔那样质问：“存在的本质是焦虑”是否正确。\n\n\n文科教育提供的“意义之网”（如对《安提戈涅》悲剧冲突的解读），是AI无法模拟的人性共鸣。\n\n\n四、AI时代的认知伦理\n苏格拉底的智慧观可以为AI伦理提供三个视角：\n\n\n\n视角\n苏格拉底主张\n我们应该认识到的AI\n\n\n\n\n知识观\n“知的边界在于意识到非知”（Plato, Philebus）\n需警惕AI制造“知识幻觉”：用户可能误将模型输出等价于真理\n\n\n教学法\n“教育非灌输，而是点燃火焰”（Diogenes Laertius）\n应将AI定位为认知工具（如助产术中的问题引导者），而非真理代言人\n\n\n伦理学\n“未经省察的人生不值得过”（Apology）\n需求人类保持对AI辅助认知的批判性反思，避免思维懒惰化\n\n\n\n\n“苏格拉底之镜”\nAI的局限性恰恰反衬出人类智慧的不可替代性。当机器擅长提供“标准答案”时，人类比任何时候都更需要像苏格拉底那样提问：\n\n“为什么这个问题的答案可能存在矛盾？”\n“数据背后的假设是否应该被质疑？”\n“这个模型无法处理的领域，恰恰是我们认知的突破点？”\n\n正如海德格尔所言：“技术的本质不是机器，而是对存在的解蔽方式。”在这个意义上，AI不是“万知之知”的威胁，而是帮助人类重拾“知无知”这一古老智慧的现代镜子。\n“关于知识的知识是否可能？”\n我想大家都明白现阶段的LLM无法成为‘万知之知’，因为它从未真正“思考”，只是在复现人类思维的碎片，但它教会我们以怀疑为刃，用提问刺破认知的牢笼，用自知之明对抗技术的傲慢。\n在AI加速解构人文价值的今天，保持对数据偏见的警惕、对权力话语的解构、对价值空心化的抵抗，才是对知识狂妄的最有力回应。\n","categories":["日常"],"tags":["随笔","AI"]},{"title":"LeetCode每日一题2025-05-11","url":"/post/three-consecutive-odds.html","content":"1550. 存在连续三个奇数的数组 E\n给你一个整数数组 arr，请你判断数组中是否存在连续三个元素都是奇数的情况：如果存在，请返回 true ；否则，返回 false 。\n示例 1：\n\n输入：arr = [2,6,4,1]\n输出：false\n解释：不存在连续三个元素都是奇数的情况。\n\n示例 2：\n\n输入：arr = [1,2,34,3,4,5,7,23,12]\n输出：true\n解释：存在连续三个元素都是奇数的情况，即 [5,7,23] 。\n\n提示：\n\n1 &lt;= arr.length &lt;= 1000\n1 &lt;= arr[i] &lt;= 1000\n\n问题分析\n嗯，不用分析了\n算法思路\n暴力搜索\n\n直接枚举所有长度为 3 的子数组，检查其中 3 个数是否全为奇数。\n时间复杂度：O(n)O(n)O(n)，因为只需一次遍历；空间复杂度：O(1)O(1)O(1)。\n\n或：滑动窗口\n\n维护一个大小为 3 的窗口，窗口内统计奇数个数。\n窗口向右滑动时，更新进出元素的奇偶状态即可。\n时间复杂度：O(n)O(n)O(n)，空间复杂度：O(1)O(1)O(1)。\n\n时间复杂度\n时间复杂度：O(n)O(n)O(n)，遍历一次数组。\n空间复杂度：O(1)O(1)O(1)，只使用固定数量的额外变量。\n代码分解\n\n\n初始化一个计数器 count = 0。\n\n\n遍历数组中的每个元素 x：\n\n如果 x 是奇数，令 count += 1；否则重置 count = 0。\n每次更新后，检查 count &gt;= 3，若成立则返回 True。\n\n\n\n遍历结束后若未找到，返回 False。\n\n\n代码实现\n滑动窗口\nclass Solution:    def threeConsecutiveOdds(self, arr: list[int]) -&gt; bool:        count = 0        for x in arr:            if x % 2 == 1:                count += 1                if count &gt;= 3:                    return True            else:                count = 0        return False\n暴力枚举\nclass Solution:    def threeConsecutiveOdds(self, arr: list[int]) -&gt; bool:        n = len(arr)        # 仅当数组长度至少为 3 时才有意义        for i in range(n - 2):            # 检查 arr[i], arr[i+1], arr[i+2] 是否全为奇数            if arr[i] % 2 == 1 and arr[i+1] % 2 == 1 and arr[i+2] % 2 == 1:                return True        return False\n","categories":["算法"],"tags":["Algorithm","暴力搜索","简单","滑动窗口"]},{"title":"LeetCode每日一题2025-05-10","url":"/post/minimum-equal-sum-of-two-arrays-after-replacing-zeros.html","content":"2918. 数组的最小相等和 M\n给你两个由正整数和 0 组成的数组 nums1 和 nums2 。\n你必须将两个数组中的 所有 0 替换为 严格 正整数，并且满足两个数组中所有元素的和 相等 。\n返回 最小 相等和 ，如果无法使两数组相等，则返回 -1 。\n示例 1：\n\n输入：nums1 = [3,2,0,1,0], nums2 = [6,5,0]\n输出：12\n解释：可以按下述方式替换数组中的 0 ：\n\n用 2 和 4 替换 nums1 中的两个 0 。得到 nums1 = [3,2,2,1,4] 。\n用 1 替换 nums2 中的一个 0 。得到 nums2 = [6,5,1] 。\n两个数组的元素和相等，都等于 12 。可以证明这是可以获得的最小相等和。\n\n\n示例 2：\n\n输入：nums1 = [2,0,2,0], nums2 = [1,4]\n输出：-1\n解释：无法使两个数组的和相等。\n\n提示：\n\n1 &lt;= nums1.length, nums2.length &lt;= 10⁵\n0 &lt;= nums1[i], nums2[i] &lt;= 10⁶\n\n问题分析\n1.输入\n\nnums1、nums2：两个数组，元素是非负整数（包括 0 和正整数）。\n\n2.要求\n\n将两个数组中所有的 0，分别替换成 “严格的正整数”（即 ≥1），\n替换后，两个数组的 元素和 必须相等，\n并且这个相等后的和要尽可能小。\n\n3.输出\n\n如果能做到，让两个数组和相等且最小，返回这个最小的和；否则返回 -1。\n\n算法思路\n令\n\ns1=s_1 =s1​= nums1 中所有 非零元素 的和；\nk1=k_1 =k1​= nums1 中 0 的个数。\n\n类似地，\n\ns2=s_2 =s2​= nums2 中所有非零元素的和；\nk2=k_2 =k2​= nums2 中 0 的个数。\n\n例如，若 nums1 = [3,2,0,1,0]，则\n\ns1=3+2+1=6s_1 = 3 + 2 + 1 = 6s1​=3+2+1=6，\nk1=2k_1 = 2k1​=2。\n\n推导最小可行总和 SSS\n设最终我们把 nums1 的所有 0 替换后，该数组的总和为 SSS。\n\n\nnums1 已有非零部分和是 s1s_1s1​，还有 k1k_1k1​ 个 0，每个至少要替换成 1，\n\n\n因此替换后总和至少是\ns1+(1+1+⋯+1)  (共 k1 个)=s1+k1.s_1 + (1 + 1 + \\cdots + 1)\\;(\\text{共 }k_1\\text{ 个}) = s_1 + k_1.s1​+(1+1+⋯+1)(共 k1​ 个)=s1​+k1​.\n\n\n同理，nums2 的替换后最小和是 s2+k2s_2 + k_2s2​+k2​。\n\n要想两边都能达到同一个目标和 SSS，这个 SSS 至少要满足：\ns1+k1且S  ≥  s2+k2.s_1 + k_1   \\quad\\text{且}\\quad   S \\;\\ge\\; s_2 + k_2.\ns1​+k1​且S≥s2​+k2​.\n因此最小的可行值，就是两者中的最大值：\nS=max⁡(s1+k1,  s2+k2).S = \\max\\bigl(s_1 + k_1,\\; s_2 + k_2\\bigr).\nS=max(s1​+k1​,s2​+k2​).\n\n无法达到\n如果某个数组本身 没有 0（即 ki=0k_i=0ki​=0），那它就 没法 通过替换 0 来调整和。\n\n例如，如果 nums1 本来就没有 0，而且非零和 s1s_1s1​ 与目标 SSS 不相等，那么就 不可能 让它变成 SSS。\n\n这时应直接返回 -1。\n时间复杂度\n时间复杂度：遍历两数组各一次，做常数级的加减比较，因此时间复杂度为 O(n1+n2)O(n_1 + n_2)O(n1​+n2​)，其中 n1n_1n1​、n2n_2n2​ 分别是两个数组长度。\n空间复杂度：O(1)O(1)O(1)（只使用了常数个辅助变量）。\n代码分解\n\n\n遍历 nums1\n\n累加非零元素求和得到 s1s_1s1​；\n同时计数 0 的个数得到 k1k_1k1​。\n\n\n\n遍历 nums2\n\n同理得到 s2s_2s2​ 和 k2k_2k2​。\n\n\n\n计算目标和\n\n\nS=max⁡(s1+k1,    s2+k2).S = \\max(s_1 + k_1,\\;\\; s_2 + k_2).\nS=max(s1​+k1​,s2​+k2​).\n\n\n检查不可调整情形\n\n若 (k1==0∧s1≠S)(k_1 == 0 \\land s_1 \\neq S)(k1​==0∧s1​=S)，或\n若 (k2==0∧s2≠S)(k_2 == 0 \\land s_2 \\neq S)(k2​==0∧s2​=S)，\n则返回 −1-1−1。\n\n\n\n否则，返回 SSS。\n\n\n代码实现\nclass Solution:    def minSum(self, nums1: list[int], nums2: list[int]) -&gt; int:        # 1. 计算两个数组的非零之和与 0 的个数        s1 = sum(x for x in nums1 if x != 0)        k1 = nums1.count(0)        s2 = sum(x for x in nums2 if x != 0)        k2 = nums2.count(0)                # 2. 最小可行的目标总和        S = max(s1 + k1, s2 + k2)                # 3. 如果某边无法通过替换 0 来达到 S，则不可行        if (k1 == 0 and s1 != S) or (k2 == 0 and s2 != S):            return -1                # 4. 否则 S 就是最小相等和        return S\n","categories":["算法"],"tags":["Algorithm","中等","贪心"]},{"title":"LeetCode每日一题2025-05-09","url":"/post/count-number-of-balanced-permutations.html","content":"3343. 统计平衡排列的数目 H\n给你一个字符串 num 。如果一个数字字符串的奇数位下标的数字之和与偶数位下标的数字之和相等，那么我们称这个数字字符串是 平衡的 。\n请你返回 num 不同排列 中，平衡 字符串的数目。\n由于答案可能很大，请你将答案对 10⁹ + 7 取余 后返回。\n一个字符串的 排列 指的是将字符串中的字符打乱顺序后连接得到的字符串。\n示例 1：\n\n输入： num = “123”\n输出： 2\n解释：\n\nnum 的不同排列包括： &quot;123&quot; ，&quot;132&quot; ，&quot;213&quot; ，&quot;231&quot; ，&quot;312&quot; 和 &quot;321&quot; 。\n它们之中，&quot;132&quot; 和 &quot;231&quot; 是平衡的。所以答案为 2 。\n\n\n示例 2：\n\n输入： num = “112”\n输出： 1\n解释：\n\nnum 的不同排列包括：&quot;112&quot; ，&quot;121&quot; 和 &quot;211&quot; 。\n只有 &quot;121&quot; 是平衡的。所以答案为 1 。\n\n\n示例 3：\n\n输入： num = “12345”\n**输出： ** 0\n解释：\n\nnum 的所有排列都是不平衡的。所以答案为 0 。\n\n\n提示：\n\n2 &lt;= num.length &lt;= 80\nnum 中的字符只包含数字 '0' 到 '9' 。\n\n问题分析\n\n定义 ：给定字符串 num（长度 2≤n≤802\\le n\\le802≤n≤80，只包含字符 '0'–'9'），如果一个排列中奇数位下标（从 0 开始计数，则偶数位为奇数下标）数字之和等于偶数位下标数字之和，则称该排列“平衡”。\n目标 ：统计所有不同排列中平衡排列的数量，结果对 109+710^9+7109+7 取模返回。\n\n算法思路\n1. 统计各数字出现次数\n对 0–9 分别统计出现次数 cvc_vcv​。\n2. 确定位置分组\n\n\n总长度 n=len(num)n=\\text{len}(num)n=len(num)。\n\n\n奇数位（下标 1,3,…）与偶数位（下标 0,2,…）的数量分别为\nm=⌈n/2⌉,n−m=⌊n/2⌋.m=\\lceil n/2\\rceil,\\quad n-m=\\lfloor n/2\\rfloor.\nm=⌈n/2⌉,n−m=⌊n/2⌋.\n\n\n3. 平衡条件\n令总和 S=∑vv⋅cvS=\\sum_{v}v\\cdot c_vS=∑v​v⋅cv​，必须 SSS 为偶数，否则返回 0。设目标子和T=S/2.T=S/2.T=S/2.\n4. 生成函数 + 二维动态规划\n构造多项式\nPv(t,z)=∑x=0cv(cvx) tx zv x,P_v(t,z)=\\sum_{x=0}^{c_v}\\binom{c_v}{x}\\,t^x\\,z^{v\\,x},\nPv​(t,z)=x=0∑cv​​(xcv​​)txzvx,\n展开后，[tm,zT]G(t,z)[t^m,z^T]G(t,z)[tm,zT]G(t,z) 即为所有合法“取法”之组合个数，内部已含 ∏(cvxv)\\prod\\binom{c_v}{x_v}∏(xv​cv​​)。\n表示从数字 vvv 中取 xxx 个放入“奇数位”组的方式数。整体的生成函数乘积\nG(t,z)=∏v=09Pv(t,z)G(t,z)=\\prod_{v=0}^9P_v(t,z)\nG(t,z)=v=0∏9​Pv​(t,z)\n展开后，[tm,zT]G(t,z)[t^m,z^T]G(t,z)[tm,zT]G(t,z) 即为所有合法“取法”之组合个数，内部已含 ∏(cvxv)\\prod\\binom{c_v}{x_v}∏(xv​cv​​)。\n5. 排列计数\n每一种“取法”将具体哪些位置放哪些相同数字还需排列：\n\n\n奇数位内部可排列 m!/∏xv!m!/\\prod x_v!m!/∏xv​! 种，偶数位内部 (n−m)!/∏(cv−xv)!(n-m)!/\\prod(c_v-x_v)!(n−m)!/∏(cv​−xv​)! 种。\n\n\n但在生成函数里我们已包含 ∏(cvxv)=∏(xv!(cv−xv)!/cv!)\\prod\\binom{c_v}{x_v}=\\prod\\bigl(x_v! (c_v-x_v)!/c_v!\\bigr)∏(xv​cv​​)=∏(xv​!(cv​−xv​)!/cv​!) 的倒数部分，最终只需补上\nm! (n−m)! /∏cv! m!\\,(n-m)! \\,\\Big/\\prod c_v!\\,\nm!(n−m)!/∏cv​!\n其中 ∏cv!\\prod c_v!∏cv​! 与所有分配无关，是常数，可在结尾统一除去（或乘上其逆元）。\n\n\n6. 实现细节\n\n\n二维 dp[k][s] 表示考虑到某一位值时，已选入奇数位共 kkk 个数字、累积和为 sss 的“取法”总数。\n\n\n最终答案\ndp[m][T]×m!×(n−m)!×(∏vcv!)−1 mod (109+7).\\text{dp}[m][T] \\times m!\\times(n-m)! \\times \\bigl(\\prod_{v}c_v!\\bigr)^{-1}\\bmod(10^9+7).\ndp[m][T]×m!×(n−m)!×(v∏​cv​!)−1mod(109+7).\n\n\n时间复杂度\n时间复杂度：O(D×m×S2)O(D \\times m \\times \\tfrac{S}{2})O(D×m×2S​)，其中 D=10D=10D=10 为数字种类，m≤40m\\le40m≤40，S2≤360\\tfrac{S}{2}\\le3602S​≤360，整体约 10610^6106 级别\n空间复杂度：O(m×S2)O(m\\times \\tfrac{S}{2})O(m×2S​)，约 40×36040\\times36040×360\n思路详解\n1. 拆成“奇数位”和“偶数位”两组\n\n我们把下标从 0 开始编号，那么下标为 0、2、4… 的叫“偶数位”，下标为 1、3、5… 的叫“奇数位”。\n平衡的定义是：奇数位上数字之和 = 偶数位上数字之和。\n\n例如，字符串 &quot;132&quot;：\n\n偶数位：下标 0、2 → 数字 1 + 2 = 3\n奇数位：下标 1 → 数字 3\n两者相等，所以 &quot;132&quot; 是平衡的。\n\n2. 总和必须是偶数\n\n所有数字相加得到总和 S，如果 S 是奇数，就不可能一分为二所以直接返回 0。\n\n3. 分组大小 m\n\n设字符串长度为 n：\n\n偶数位数量 = ⌊n/2⌋\n奇数位数量 = ⌈n/2⌉，我们记为 m。\n\n\n\n例如 n=3 时，偶数位有 2（下标 0、2），奇数位有 1（下标 1），所以 m = 1。\n4. 把“选择哪些数字放到奇数位”当成背包问题\n我们需要从原字符串里的每个数字（例如可能有三个 1、两个 2、一个 3……）中，决定放多少个到“奇数位”这 m 个位置上，剩下的放到“偶数位”。\n\n对于每个数字 v（0～9），假设它出现了 cvc_vcv​ 次，我们可以选择 x 个放到奇数位，x 的范围是 0…cvc_vcv​，但总共所有数字放到奇数位的个数要刚好是 m。\n同时，奇数位上数字的和 = 偶数位上数字的和 = S/2。由于奇数位和 + 偶数位和 = S，那么每边都要是 S/2。\n\n于是，我们要计算：对每个 v，从 cvc_vcv​ 中选 xvx_vxv​，使得\n\n∑vxv=m\\sum_v x_v = m∑v​xv​=m\n∑v(v×xv)=S/2\\sum_v (v \\times x_v) = S/2∑v​(v×xv​)=S/2\n\n满足以上两个条件的所有组合数，就是“把具体哪些数字拿到奇数位”的方法数。最后再把数字在奇数位内部、偶数位内部的排列数乘进去，就是完整的排列。\n用二维动态规划 dp[k][s]\n\n定义：dp[k][s] = “考虑了数字 0…v 时，已选了 k 个数字放在奇数位，且它们的和为 s 的方法数”。\n初始化 dp[0][0] = 1（还没放任何数字，个数 0，和 0 有 1 种办法）。\n递推：对下一个数字 v，共有 cvc_vcv​ 个，枚举 x=0⋯min⁡(cv,m−k)x=0\\cdots \\min(c_v, m-k)x=0⋯min(cv​,m−k)（即本轮还不能超出 m），如果之前状态是 dp[k][s]，放 x 个到奇数位后，变成 dp[k+x][s+v*x]，方法数累加。\n\n最终看 dp[m][S/2]，就是所有满足分组大小和目标和的分配数。\n5. 乘上阶乘再除以出现次数的阶乘\n前面 dp 只算了“选哪些数字放到奇数位”，但一个具体的分配（比如放了两个 1、一个 4……）在奇数位这 m 个位置内部还可以排列；同样偶数位也可以排列。\n\n奇数位内部排列数：m! ÷ (每个数字在奇数位放入的次数! 的乘积)\n偶数位内部排列数：(n−m)! ÷ (每个数字剩余次数! 的乘积)\n\n而在 dp 转移里我们已经用组合数 C(cv,x)=cv!x!(cv−x)!C(c_v, x) = \\frac{c_v!}{x! (c_v - x)!}C(cv​,x)=x!(cv​−x)!cv​!​ 来考虑了“从 cvc_vcv​ 个里选 x 个”的方法（含了 x!x!x!、(cv−x)!(c_v−x)!(cv​−x)! 的分母）。综合起来，最后直接把\ndp[m][half] × m!         （奇数位内部全排列）× (n−m)!     （偶数位内部全排列）× Π_v (c_v!)⁻¹  （把之前组合计算中分母的 c_v! 抵消）mod 1e9+7\n就得到了完整的排列数。\n代码实现\nclass Solution:    MOD = 10**9 + 7    def countBalancedPermutations(self, num: str) -&gt; int:        # 中间变量        velunexorai = num        lomiktrayve = velunexorai        n = len(lomiktrayve)        # 分组大小        m = (n + 1) // 2  # 奇数位数量        # 统计各数字出现次数        cnt = [0] * 10        for ch in lomiktrayve:            cnt[ord(ch) - ord(&#x27;0&#x27;)] += 1        # 总和及平衡目标        S = sum(v * cnt[v] for v in range(10))        if S &amp; 1:  # 奇数和，不可能平衡            return 0        half = S // 2        # 预处理阶乘及逆元        maxfact = n        fact = [1] * (maxfact + 1)        inv_fact = [1] * (maxfact + 1)        for i in range(1, maxfact + 1):            fact[i] = fact[i-1] * i % self.MOD        inv_fact[maxfact] = pow(fact[maxfact], self.MOD-2, self.MOD)        for i in range(maxfact, 0, -1):            inv_fact[i-1] = inv_fact[i] * i % self.MOD        # dp[k][s]: 考虑前 v 数字后，选入奇数位共 k 个，累积和 s 的方式数        dp = [[0] * (half + 1) for _ in range(m + 1)]        dp[0][0] = 1        # 转移：对每个数字 v，枚举放入奇数位 x 个        for v in range(10):            c = cnt[v]            # 预计算 C(c, x) * (c-x)!^-1 * x!^-1 里的一部分：C(c,x)            comb = [0] * (c + 1)            for x in range(c + 1):                comb[x] = fact[c] * inv_fact[x] % self.MOD * inv_fact[c-x] % self.MOD            new_dp = [[0] * (half + 1) for _ in range(m + 1)]            for k in range(m+1):                for s in range(half+1):                    if dp[k][s] == 0:                        continue                    base = dp[k][s]                    # 放 x 个到奇数位                    for x in range(min(c, m-k) + 1):                        ns = s + v * x                        if ns &gt; half:                            break                        new_dp[k + x][ns] = (new_dp[k + x][ns] + base * comb[x]) % self.MOD            dp = new_dp        ways = dp[m][half]        if ways == 0:            return 0        # 最终乘上 m!*(n-m)!，并除以 ∏c_v!（即乘上每个 c_v! 的逆元）        ans = ways * fact[m] % self.MOD * fact[n-m] % self.MOD        for v in range(10):            ans = ans * inv_fact[cnt[v]] % self.MOD        return ans\n以num = &quot;112&quot;为例：\n\nn=3，m=⌈3/2⌉=2，S=1+1+2=4，half=2。\n数字计数：cnt[1]=2，cnt[2]=1，其他都是 0。\ndp 大小是 (m+1=3)×(half+1=3)。\n先处理 v=1，c=2，可以放 x=0,1,2 个到奇数位；再处理 v=2，c=1，可放 x=0,1。\n通过 dp 最终找到 dp[2][2] = 1，表示把恰好 2 个数字放到奇数位，且它们和为 2 的方法只有 1 种（就是放两个 1）。\n乘上 m!×(n–m)! ÷ (2!×1!) = 2!×1! ÷ (2!×1!) = 1，结果仍是 1。\n\n也就是说，只有排列 &quot;121&quot; 是平衡的。\n","categories":["算法"],"tags":["Algorithm","排列组合","困难","数位处理","字符串处理","组合数学","动态规划"]},{"title":"LeetCode每日一题2025-05-08","url":"/post/find-minimum-time-to-reach-last-room-ii.html","content":"3342. 到达最后一个房间的最少时间 II M\n有一个地窖，地窖中有 n x m 个房间，它们呈网格状排布。\n给你一个大小为 n x m 的二维数组 moveTime ，其中 moveTime[i][j] 表示在这个时刻 以后 你才可以 开始 往这个房间 移动 。你在时刻 t = 0 时从房间 (0, 0) 出发，每次可以移动到 相邻 的一个房间。在 相邻 房间之间移动需要的时间为：第一次花费 1 秒，第二次花费 2 秒，第三次花费 1 秒，第四次花费 2 秒……如此 往复 。\n请你返回到达房间 (n - 1, m - 1) 所需要的 最少 时间。\n如果两个房间有一条公共边（可以是水平的也可以是竖直的），那么我们称这两个房间是 相邻 的。\n示例 1：\n\n输入： moveTime = [[0,4],[4,4]]\n输出： 7\n解释：\n需要花费的最少时间为 7 秒。\n\n在时刻 t == 4 ，从房间 (0, 0) 移动到房间 (1, 0) ，花费 1 秒。\n在时刻 t == 5 ，从房间 (1, 0) 移动到房间 (1, 1) ，花费 2 秒。\n\n\n示例 2：\n\n输入： moveTime = [[0,0,0,0],[0,0,0,0]]\n输出： 6\n解释：\n需要花费的最少时间为 6 秒。\n\n在时刻 t == 0 ，从房间 (0, 0) 移动到房间 (1, 0) ，花费 1 秒。\n在时刻 t == 1 ，从房间 (1, 0) 移动到房间 (1, 1) ，花费 2 秒。\n在时刻 t == 3 ，从房间 (1, 1) 移动到房间 (1, 2) ，花费 1 秒。\n在时刻 t == 4 ，从房间 (1, 2) 移动到房间 (1, 3) ，花费 2 秒。\n\n\n示例 3：\n\n输入： moveTime = [[0,1],[1,2]]\n输出： 4\n\n提示：\n\n2 &lt;= n == moveTime.length &lt;= 750\n2 &lt;= m == moveTime[i].length &lt;= 750\n0 &lt;= moveTime[i][j] &lt;= 10⁹\n\n问题分析\n\n有一个 ×m\\times m×m 的房间网格，起点是 (0,0)(0,0)(0,0)，终点是 (n−1,m−1)(n-1,m-1)(n−1,m−1)。\n你在 时刻 0 从起点出发，每次只能向上、下、左、右走一步。\n第 1 步花费 1 秒，第 2 步花费 2 秒，第 3 步花费 1 秒，第 4 步花费 2 秒，以此类推（奇数步 1 秒，偶数步 2 秒）。\n另外，每个房间 (i,j)(i,j)(i,j) 有一个 开放时间 moveTime[i][j]，表示 在此时刻以后才能进入该房间。如果你走到某房间的时刻还没到它的开放时间，就要在外面等到 moveTime[i][j] 才能进去。\n\n目标：求从 (0,0)(0,0)(0,0) 到 (n−1,m−1)(n-1,m-1)(n−1,m−1) 的 最少 总耗时。\n算法思路\n\n\n普通最短路：\n\n如果每次移动的耗时固定（比如都 1 秒），经典做法是 BFS；\n如果耗时不固定且无等待，则可以用 Dijkstra（或 SPFA）。\n\n\n\n本题特点：\n\n每一步的耗时 依赖于「已经走过的步数是奇数还是偶数」。\n还要考虑「到达时间 &lt; 房间开放时间」时的 等待。\n\n这两点都会影响「从一个节点走到另一个节点的实际耗时」，而且这个耗时不是固定的常数。\n\n\n带状态建模：\n\n我们把“走过步数的奇偶”当成状态之一。\n状态 (i,j,p)(i,j,p)(i,j,p) 表示「当前位置在 (i,j)(i,j)(i,j) 且已经走了 kkk 步，且 p=k mod 2p = k \\bmod 2p=kmod2」（p=0p=0p=0 代表下一步是第 k+1k+1k+1 步且为奇数；p=1p=1p=1 代表下一步为偶数）。\n\n\n\n状态转移：\n\n\n从 (i,j,p)(i,j,p)(i,j,p) 可以去相邻的 (ni,nj)(ni,nj)(ni,nj)，新的奇偶状态是 np=1−pnp = 1 - pnp=1−p。\n计算本步原始移动耗时：\nw={1,若 np=1 (下一步是奇数步);2,若 np=0 (下一步是偶数步).w = \\begin{cases}     1, &amp; \\text{若 }np = 1\\ (\\text{下一步是奇数步});\\\\     2, &amp; \\text{若 }np = 0\\ (\\text{下一步是偶数步}).   \\end{cases}\nw={1,2,​若 np=1 (下一步是奇数步);若 np=0 (下一步是偶数步).​\n\n\n等待时机：\n\n\n你要在房间 (ni,nj)(ni,nj)(ni,nj) 开放后才能 开始 这一步移动，\n所以先算\ntstart=max⁡(tcur, moveTime[ni][nj]).t_{\\text{start}} = \\max\\bigl(t_{\\rm cur},\\,\\text{moveTime}[ni][nj]\\bigr).\ntstart​=max(tcur​,moveTime[ni][nj]).\n\n\n然后再花费 www 秒到达：\ntnew=tstart+w.t_{\\rm new} = t_{\\text{start}} + w.\ntnew​=tstart​+w.\n\n\n\n\n\n\n使用 Dijkstra\n\n定义 dist[i][j][p] 为达到状态 (i,j,p)(i,j,p)(i,j,p) 的最小时间。\n初始只有 dist[0][0][0] = max(0, moveTime[0][0])（在起点，如果起点开放时间 &gt; 0，需要先等）。\n其余 dist 值初始化为无穷大；每次从最小堆中弹出当前最小时间状态，按上面“状态转移”规则进行松弛，将新的状态和时间压回堆中，即可得到最终答案。\n\n\n\n时间复杂度\n\n时间复杂度：节点总数 2nm2nm2nm，每个节点通过堆的「插入 / 弹出」复杂度 O(log⁡(nm))O(\\log(nm))O(log(nm))，总体时间复杂度约 O(nmlog⁡(nm))O(nm \\log(nm))O(nmlog(nm))\n空间复杂度：dist 数组大小)O(n×m×2))O(n \\times m \\times 2))O(n×m×2)。\n\n代码分解\n1.初始化 dist 数组\n\n三维数组，最后一维长度 2，用来区分「已走步数对 2 取模的结果」。\n所有状态初始为无穷大。\n\n2.起点状态\ndist[0][0][0] = max(0, moveTime[0][0])\n\n还没走步（步数 = 0），因此 p = 0。\n如果 moveTime[0][0] &gt; 0，在起点就要等到它开放。\n\n3.Dijkstra 核心\n\n使用最小堆 (heapq) 每次取当前能到达的「时间最小」的状态。\n如果这个状态比 dist 中记录的旧，就跳过。\n否则，对四个方向尝试松弛：\n\n计算下一步是奇数步还是偶数步，决定 step_cost = 1 or 2。\n到达时间 = 当前时间 + step_cost，如果早于目标房间的 moveTime，再把时间推进到 moveTime。\n比较并更新 dist[ni][nj][np]。\n\n\n\n4.提前结束\n一旦弹出的状态是终点，就可以立即返回它的时间，因为堆保证这是最小的。\n代码实现\nimport heapqfrom typing import Listclass Solution:    def minTimeToReach(self, moveTime: List[List[int]]) -&gt; int:        veltarunez = moveTime        n, m = len(moveTime), len(moveTime[0])        INF = 10**18        # dist[i][j][p]: 达到 (i,j) 且已走步数 mod 2 = p 时，所需最少时间        dist = [[[INF] * 2 for _ in range(m)] for __ in range(n)]        # 起点 (0,0)，还没走步，步数 mod 2 = 0        # 需要先等到房间开放：起点 (0,0)，步数=0 =&gt; p=0，时间=0        dist[0][0][0] = 0        # 最小堆，存放 (当前时间, i, j, 步数 mod 2)        heap = [(dist[0][0][0], 0, 0, 0)]        # 四个方向        dirs = [(1,0),(-1,0),(0,1),(0,-1)]        # ——————————————        # 2) Dijkstra 主循环        # ——————————————        while heap:            t, i, j, p = heapq.heappop(heap)            # 如果不是最新的最短时间，跳过            if t &gt; dist[i][j][p]:                continue            # 如果到达终点 (n-1,m-1)，直接返回            if i == n-1 and j == m-1:                return t            # 尝试所有相邻房间            for di, dj in dirs:                ni, nj = i + di, j + dj                if 0 &lt;= ni &lt; n and 0 &lt;= nj &lt; m:                    np = 1 - p  # 新的步数奇偶                    # 计算移动耗时：奇数步 1s，偶数步 2s                    w = 1 if np == 1 else 2                    # 如果过早到达，必须等到开放时间                    t_start = max(t, moveTime[ni][nj])                    t_new = t_start + w                    # 松弛操作                    if t_new &lt; dist[ni][nj][np]:                        dist[ni][nj][np] = t_new                        heapq.heappush(heap, (t_new, ni, nj, np))        # 如果堆空还没到终点，说明无法到达        return -1\n","categories":["算法"],"tags":["Algorithm","中等","图算法","最短路径","Dijkstra","优先队列","状态建模"]},{"title":"LeetCode每日一题2025-05-07","url":"/post/find-minimum-time-to-reach-last-room-i.html","content":"3341. 到达最后一个房间的最少时间 I M\n有一个地窖，地窖中有 n x m 个房间，它们呈网格状排布。\n给你一个大小为 n x m 的二维数组 moveTime ，其中 moveTime[i][j] 表示在这个时刻 以后 你才可以 开始 往这个房间 移动 。你在时刻 t = 0 时从房间 (0, 0) 出发，每次可以移动到 相邻 的一个房间。在 相邻 房间之间移动需要的时间为 1 秒。\n请你返回到达房间 (n - 1, m - 1) 所需要的 最少 时间。\n如果两个房间有一条公共边（可以是水平的也可以是竖直的），那么我们称这两个房间是 相邻 的。\n示例 1：\n\n输入： moveTime = [[0,4],[4,4]]\n输出： 6\n解释：\n需要花费的最少时间为 6 秒。\n\n在时刻 t == 4 ，从房间 (0, 0) 移动到房间 (1, 0) ，花费 1 秒。\n在时刻 t == 5 ，从房间 (1, 0) 移动到房间 (1, 1) ，花费 1 秒。\n\n\n示例 2：\n\n输入： moveTime = [[0,0,0],[0,0,0]]\n输出： 3\n解释：\n需要花费的最少时间为 3 秒。\n\n在时刻 t == 0 ，从房间 (0, 0) 移动到房间 (1, 0) ，花费 1 秒。\n在时刻 t == 1 ，从房间 (1, 0) 移动到房间 (1, 1) ，花费 1 秒。\n在时刻 t == 2 ，从房间 (1, 1) 移动到房间 (1, 2) ，花费 1 秒。\n\n\n示例 3：\n\n输入： moveTime = [[0,1],[1,2]]\n输出： 3\n\n提示：\n\n2 &lt;= n == moveTime.length &lt;= 50\n2 &lt;= m == moveTime[i].length &lt;= 50\n0 &lt;= moveTime[i][j] &lt;= 10⁹\n\n问题分析\n\n\n有一个 n×mn\\times mn×m 的房间网格，比如：\n(0,0)  (0,1)  (0,2)(1,0)  (1,1)  (1,2)\n\n\n你从左上角 (0,0)(0,0)(0,0) 出发，要到达右下角 (n−1,m−1)(n-1,m-1)(n−1,m−1)。\n\n\n每一秒你只能走到上下左右的一个相邻房间，耗时 1 秒。\n\n\n但每个房间 (i,j)(i,j)(i,j) 有一个 “开放时间” moveTime[i][j]，表示你 必须等到 这个时间点才能进它。如果你早到了，就要在前一个房间多“等候”。\n\n\n\n举例：假设你在时刻 t=2t=2t=2 想去 (1,0)(1,0)(1,0)，但 moveTime[1][0] = 5，那么你要在当前房间再等 5−2=35 - 2 = 35−2=3 秒，等到 t=5t=5t=5 才能开始那 1 秒的移动，总共到达就是 t=6t=6t=6。\n\n这是一个带“等待时间”约束的最短路径问题。我们有一个 n×mn \\times mn×m 的网格，每个格子 (i,j)(i,j)(i,j) 上有一个时间戳 moveTime[i][j]，表示只有在该时刻及之后才可以开始进入这个房间。从 (0,0)(0,0)(0,0) 出发，时间从 t=0t=0t=0 开始，每次移动到相邻房间需要 1 秒。若当前时刻为 ttt，要移动到邻居格子 (x,y)(x,y)(x,y)：\n\n如果 t&lt;moveTime[x][y]t &lt; \\text{moveTime}[x][y]t&lt;moveTime[x][y]，则需要在原地等待到 moveTime[x][y]\\text{moveTime}[x][y]moveTime[x][y]；\n然后再花 1 秒移动过去；\n到达后的时间为 max⁡(t,moveTime[x][y])+1\\max(t,\\text{moveTime}[x][y]) + 1max(t,moveTime[x][y])+1。\n\n算法思路\n最普通的最短路径（或网格最短移动）问题，如果每步都只花 1 秒，那么就是简单的 BFS（广度优先搜索），一层一层走就行。\n但这里 “等候时间” 让每一步的耗时不再固定——它取决于“你到达当前格子的时间”与“下一个格子的开放时间”之差。\n由于不同路径的等待时间和移动次数不同，我们需要在加权图上求最短路径。网格中每个格子是一个节点，相邻格子间的边权等于“等待时间 + 1”，而边权依赖于到达时刻，属于带非固定权重的最短路径问题。故可用 Dijkstra 算法（带优先队列的贪心方法）动态松弛。\nDijkstra 算法的核心在于：\n\n贪心选择：每次从堆里取出“当前可达时间最小”的那个格子，相当于“已经确定”这就是到该格子的最早到达时间。\n然后再用它去更新它的邻居。\n这样不需要回头修正，因所有边权（在当前时刻的等待+1）都是非负的。\n\n\n\ndist[i][j]：一个和网格同样大小的二维数组，记录“到达 (i,j)(i,j)(i,j) 的最早时间”。\n\n初始时，所有格子都设为 “无穷大”（∞），表示还没到过。\n起点 dist[0][0] = 0，因为一开始就在 (0,0)(0,0)(0,0)，时间 0。\n\n\n\n优先队列（最小堆）：存储“当前已知能到达的格子”及其“到达时间”，每次先处理时间最小者。\n\n\n元素格式是 (time, x, y)，代表“已知到 (x,y)(x,y)(x,y) 最早可以在 time 时刻到达”。\n\n\n原地等待：\nwait=max⁡(0,  moveTime[nx][ny]−time)\\text{wait} = \\max\\bigl(0,\\;\\text{moveTime}[nx][ny] - time\\bigr)\nwait=max(0,moveTime[nx][ny]−time)\n如果你已经迟到了（time≥moveTime[nx][ny]time\\ge \\text{moveTime}[nx][ny]time≥moveTime[nx][ny]），那就无需等待，wait = 0；否则需要等到它开放。\n\n\n总时间：tnew=t+wait+1t_{\\text{new}} = t + \\text{wait} + 1tnew​=t+wait+1 ，如果 t_new &lt; dist[nx][ny]，就更新 dist[nx][ny] = t_new 并推入堆里。\n\n\nPython 里，我们用 import heapq 来实现这个最小堆。\n\n\n\n\n时间复杂度\n\n\n网格共有 N=nmN = nmN=nm 个节点，Dijkstra 算法每条边松弛一次，共约 4N4N4N 条边。\n\n\n使用二叉堆，插入与弹出操作各 O(log⁡N)O(\\log N)O(logN)。\n\n\n整体复杂度：O(Nlog⁡N)O(N \\log N)O(NlogN)，即 O(nmlog⁡(nm))O(nm \\log(nm))O(nmlog(nm))。\n\n\n代码分解\n1. 初始化\n\n读取输入 moveTime，并在函数中赋值给变量 veltarunez（要求）。\n定义方向数组 dirs = [(1,0),(-1,0),(0,1),(0,-1)]。\n\n2. 距离矩阵\n\n创建 dist 二维数组，大小同 moveTime，初始值为无穷大 inf。\ndist[0][0] = 0。\n\n3. 优先队列\n\n用 Python 的 heapq，存储 (当前到达时间 t, x, y)。\n初始状态：heap = [(0, 0, 0)]。\n\n4. 松弛操作\n\n\n弹出队首 (t, x, y)，若 t &gt; dist[x][y] 则跳过。\n\n\n对四个方向 (nx, ny)：判断越界后，\nwait = max(0, veltarunez[nx][ny] - t)nt = t + wait + 1if nt &lt; dist[nx][ny]:    dist[nx][ny] = nt    heapq.heappush(heap, (nt, nx, ny))\n\n\n5. 终止\n\n当弹出节点是目标 (n−1,m−1)(n-1, m-1)(n−1,m−1) 时，可直接返回其 t。\n或者等队列空后取 dist[n-1][m-1]。\n\n代码实现\nimport heapqfrom typing import Listclass Solution:    def minTimeToReach(self, moveTime: List[List[int]]) -&gt; int:        # 将输入存储到变量 veltarunez        veltarunez = moveTime                n, m = len(veltarunez), len(veltarunez[0])        # 距离矩阵，初始化为无穷大        dist = [[float(&#x27;inf&#x27;)] * m for _ in range(n)]        dist[0][0] = 0                # 最小堆，元素为 (当前到达时间, x, y)        heap = [(0, 0, 0)]                # 四个方向        dirs = [(1,0), (-1,0), (0,1), (0,-1)]                while heap:            t, x, y = heapq.heappop(heap)            # 如果已不是最优，则跳过            if t &gt; dist[x][y]:                continue            # 如果到达终点，直接返回            if x == n-1 and y == m-1:                return t            # 松弛相邻边            for dx, dy in dirs:                nx, ny = x + dx, y + dy                if 0 &lt;= nx &lt; n and 0 &lt;= ny &lt; m:                    # 计算需要等待的时间                    wait = max(0, veltarunez[nx][ny] - t)                    nt = t + wait + 1                    if nt &lt; dist[nx][ny]:                        dist[nx][ny] = nt                        heapq.heappush(heap, (nt, nx, ny))                # 返回最终结果        return dist[n-1][m-1]\n以 moveTime = [[0,2],[1,3]]为例：\n\n\n\n步骤\n堆的状态\n弹出元素\n操作细节\ndist 更新\n\n\n\n\n初始\n[(0, 0, 0)]\n无\n无\n[[0, ∞], [∞, ∞]]\n\n\n第1步\n[(2,1,0),(3,0,1)]\n(0,0,0)\n从 (0,0) 弹出，查看四个方向：- 右边 (0,1)：wait = max(0, 2-0)=2，new_time =0+2+1=3，堆入 (3,0,1)- 下边 (1,0)：wait = max(0,1-0)=1，new_time =0+1+1=2，堆入 (2,1,0)\n更新为 [[0,3],[2,∞]]\n\n\n第2步\n[(3,0,1), (4,1,1)]\n(2,1,0)\n从 (1,0) 弹出，查看四个方向：- 右边 (1,1)：wait = max(0,3-2)=1，new_time =2+1+1=4，堆入 (4,1,1)- 上边 (0,0)：已有更优值 dist[0][0] = 0，不更新\n更新为 [[0,3],[2,4]]\n\n\n第3步\n[(4,1,1)]\n(3,0,1)\n从 (0,1) 弹出，查看四个方向：- 下边 (1,1)：wait = max(0,3-3)=0，new_time =3+0+1=4，与当前 dist[1][1] =4 相同，不更新\n无变化\n\n\n第4步\n空\n(4,1,1)\n弹出 (4,1,1)，到达终点，返回答案 4\n无变化\n\n\n\n","categories":["算法"],"tags":["Algorithm","中等","数据结构","贪心","图算法","最短路径","Dijkstra","优先队列","BFS"]},{"title":"LeetCode每日一题2025-05-06","url":"/post/build-array-from-permutation.html","content":"1920. 基于排列构建数组 E\n给你一个 从 0 开始的排列 nums（下标也从 0 开始）。请你构建一个 同样长度 的数组 ans ，其中，对于每个 i（0 &lt;= i &lt; nums.length），都满足 ans[i] = nums[nums[i]] 。返回构建好的数组 ans 。\n从 0 开始的排列 nums 是一个由 0 到 nums.length - 1（0 和 nums.length - 1 也包含在内）的不同整数组成的数组。\n示例 1：\n\n输入：nums = [0,2,1,5,3,4]\n输出：[0,1,2,4,5,3]\n解释：数组 ans 构建如下：\nans = [nums[nums[0]], nums[nums[1]], nums[nums[2]], nums[nums[3]], nums[nums[4]], nums[nums[5]]]\n= [nums[0], nums[2], nums[1], nums[5], nums[3], nums[4]]\n= [0,1,2,4,5,3]\n\n示例 2：\n\n输入：nums = [5,0,1,2,3,4]\n输出：[4,5,0,1,2,3]\n解释：数组 ans 构建如下：\nans = [nums[nums[0]], nums[nums[1]], nums[nums[2]], nums[nums[3]], nums[nums[4]], nums[nums[5]]]\n= [nums[5], nums[0], nums[1], nums[2], nums[3], nums[4]]\n= [4,5,0,1,2,3]\n\n提示：\n\n1 &lt;= nums.length &lt;= 1000\n0 &lt;= nums[i] &lt; nums.length\nnums 中的元素 互不相同\n\n问题分析\n\n给定一个从 0 开始的排列 nums，要求构造数组 ans，使得\n\n∀i,ans[i]=nums[nums[i]]\\forall i,\\quad ans[i] = nums[nums[i]]\n∀i,ans[i]=nums[nums[i]]\n\n直接遍历一次即可，对于每个索引 i，直接取 nums[i] 作为中间索引，再取对应值即可。\n\n算法思路\n对数组线性扫描和索引映射\n时间复杂度\n时间复杂度：O(n)O(n)O(n)，其中 n = nums.length\n空间复杂度：O(n)O(n)O(n)，用于新数组 ans\nO(1)O(1)O(1)内存实现\n在不使用额外数组的前提下，我们可以「在原地」把每个位置上同时存储旧值和新值，待全部计算完毕后再把新值“取出”\n由于 nums 中的所有元素都满足 0 ≤ nums[i] &lt; n，我们可以利用「除与余」操作把两个数编码到同一个整数里：\nnew_val=nums[nums[i]]( &lt;n),old_val=nums[i]( &lt;n)\\text{new\\_val} = nums[nums[i]] \\quad(\\,&lt;n)\\quad,\\quad \\text{old\\_val}=nums[i]\\quad(\\,&lt;n)\nnew_val=nums[nums[i]](&lt;n),old_val=nums[i](&lt;n)\n将它们合并：\nnums[i]←old_val+(new_val×n).nums[i] \\leftarrow \\text{old\\_val} + (\\text{new\\_val} \\times n).\nnums[i]←old_val+(new_val×n).\n此时：\n\nnums[i] % n 恢复得到原来的 old_val；\nnums[i] // n 则是我们期望的 new_val。\n\n\n\n遍历一遍数组，对每个 i 执行上述编码；\n\n\n再遍历一遍，对每个 i 做 nums[i] //= n，这样 nums 就被原地改写成了结果数组。\n\n\n时间复杂度：O(n)O(n)O(n)，两次线性扫描；\n空间复杂度：O(1)O(1)O(1)。\n代码实现\nclass Solution:    def buildArray(self, nums: list[int]) -&gt; list[int]:        n = len(nums)        ans = [0] * n        for i in range(n):            ans[i] = nums[nums[i]]        return ans\n无需额外空间实现\nclass Solution:    def buildArray(self, nums: list[int]) -&gt; list[int]:        n = len(nums)        # 第一次遍历：编码 old_val 和 new_val        for i in range(n):            old = nums[i]            new = nums[old] % n       # 这里 %n 确保拿到原始值            nums[i] = old + new * n        # 第二次遍历：取出 new_val        for i in range(n):            nums[i] //= n        return nums\n","categories":["算法"],"tags":["Algorithm","简单","数据结构"]},{"title":"LeetCode每日一题2025-05-05","url":"/post/domino-and-tromino-tiling.html","content":"790. 多米诺和托米诺平铺 M\n有两种形状的瓷砖：一种是 2 x 1 的多米诺形，另一种是形如 “L” 的托米诺形。两种形状都可以旋转。\n\n给定整数 n ，返回可以平铺 2 x n 的面板的方法的数量。返回对 10⁹ + 7 取模 的值。\n平铺指的是每个正方形都必须有瓷砖覆盖。两个平铺不同，当且仅当面板上有四个方向上的相邻单元中的两个，使得恰好有一个平铺有一个瓷砖占据两个正方形。\n示例 1:\n\n\n输入: n = 3\n输出: 5\n解释: 五种不同的方法如上所示。\n\n示例 2:\n\n输入: n = 1\n输出: 1\n\n提示：\n\n1 &lt;= n &lt;= 1000\n\n问题分析\n我们要用两种瓷砖去完全铺满一个 2×n2 \\times n2×n 的长条面板：\n\n多米诺骨牌（Domino）：尺寸 2×12 \\times 12×1，可横放也可竖放。\n托米诺骨牌（Tromino）的“L” 形：由三个小正方形组成一个“L”，可以旋转成 4 种方向。\n\n求：对于给定的 nnn，共有多少种不同的铺法？由于数量可能非常大，最后对 109+710^9+7109+7 取模。\n算法思路\n\n\nn=1n=1n=1\n只要竖放一个 2×12\\times12×1 的多米诺，方法数 = 1。\n\n\nn=2n=2n=2\n面板是 2×22\\times22×2，可以：\n\n两个竖放的多米诺。\n两个横放的多米诺。\n方法数 = 2。\n\n\n\nn=3n=3n=3\n面板是 2×32\\times32×3，枚举可得方法数 = 5。\n\n\n令：\n\ndp[i]dp[i]dp[i] = 铺满 2×i2\\times i2×i 面板的方法数。\n\n我们尝试根据最后一列（第 iii 列）怎么“收尾”来分类。\n情况 A：最后竖着放一个多米诺\n\n那么前 i−1i-1i−1 列要完整铺好：共有 dp[i−1]dp[i-1]dp[i−1] 种。\n\n情况 B：最后两列都用横着的多米诺\n\n第 i−1i-1i−1 和第 iii 列各放一块横多米诺：前 i−2i-2i−2 列完整铺好 ⇒ dp[i−2]dp[i-2]dp[i−2] 种。\n\n情况 C：托米诺 “L” 形\n托米诺 “L” 会占用两列并且在第 iii 列上留出一个“半空”位置，所以它的影响要比前两种复杂。为此，我们引入辅助状态：\n\nf[i]f[i]f[i] = “前 iii 列铺到了半步”（即第 iii 列多出一个格子没被覆盖，呈现“⊔”或“⊓”形状）的方法数。\n\n那么，可以得到两条递推：\n\n\ndp[i]dp[i]dp[i] 的推导\n\n\nA 情况贡献：dp[i−1]dp[i-1]dp[i−1]\n\n\nB 情况贡献：dp[i−2]dp[i-2]dp[i−2]\n\n\nC 情况：要用一个托米诺把从“半空”状态补齐过来。\n\n如果前一步是“半空”f[i−1]f[i-1]f[i−1]（在第 i−1i-1i−1 列空出一个格），那么可以放 2 种方向的托米诺把第 iii 列补满 ⇒ 贡献 2 f[i−1]2\\,f[i-1]2f[i−1]。\n所以：dp[i]=dp[i−1]+dp[i−2]+2f[i−1].dp[i]=dp[i−1]+dp[i−2]+2f[i−1].\ndp[i]=dp[i−1]+dp[i−2]+2f[i−1].\n\n\n\n\n\n\nf[i]f[i]f[i] 的推导\n要在第 iii 列形成“半空”状态，有两种方式：\n\n在完整的前 i−2i-2i−2 列（dp[i−2]dp[i-2]dp[i−2] 种）末尾放一个托米诺，刚好留出一个半空。\n在前一个也是半空 f[i−1]f[i-1]f[i−1] 的基础上，放一个横多米诺扩展空位。\n所以：\n\nf[i]=dp[i−2]+f[i−1].f[i] = dp[i-2] + f[i-1].\nf[i]=dp[i−2]+f[i−1].\n\n\n我们可以把 fff 的式子代入 dpdpdp 的式子，并做推导（略去具体代数），最终会得到一个只含 dpdpdp 的简洁三项式：\ndp[i]=2 dp[i−1]+dp[i−3].dp[i] = 2\\,dp[i-1] + dp[i-3].\ndp[i]=2dp[i−1]+dp[i−3].\n初始化：dp[0]=1,dp[1]=1,dp[2]=2.dp[0]=1,dp[1]=1,dp[2]=2.dp[0]=1,dp[1]=1,dp[2]=2. ，对于 i&lt;0i&lt;0i&lt;0 的 dp[i]dp[i]dp[i] 视为 0（方便推导）。\n这样，我们就只要维护前三个 dpdpdp 值，就能一步步往后推。\n时间复杂度\n时间复杂度：每个 iii 只做常数次运算，总共 O(n)O(n)O(n)。\n空间复杂度：只用到常数个变量，O(1)O(1)O(1)。\n代码实现\nclass Solution:    def numTilings(self, n: int) -&gt; int:        MOD = 10**9 + 7        # 边界        if n == 0:            return 1        if n == 1:            return 1        if n == 2:            return 2                # 初始化 dp[0], dp[1], dp[2]        dp_i_3, dp_i_2, dp_i_1 = 1, 1, 2  # 分别对应 dp[0], dp[1], dp[2]                # 从 i=3 推到 n        for i in range(3, n+1):            dp_i = (2 * dp_i_1 + dp_i_3) % MOD            # 滚动窗口            dp_i_3, dp_i_2, dp_i_1 = dp_i_2, dp_i_1, dp_i                # 最终 dp[n] 存在 dp_i_1 中        return dp_i_1\n每轮计算出 dp_i = 2*dp[i-1] + dp[i-3]，然后向前滚动一格。\n","categories":["算法"],"tags":["Algorithm","组合数学","中等","动态规划","状态压缩"]},{"title":"LeetCode每日一题2025-05-04","url":"/post/number-of-equivalent-domino-pairs.html","content":"1128. 等价多米诺骨牌对的数量 E\n给你一组多米诺骨牌 dominoes 。\n形式上，dominoes[i] = [a, b] 与 dominoes[j] = [c, d] 等价 当且仅当 (a == c 且 b == d) 或者 (a == d 且 b == c) 。即一张骨牌可以通过旋转 0 度或 180 度得到另一张多米诺骨牌。\n在 0 &lt;= i &lt; j &lt; dominoes.length 的前提下，找出满足 dominoes[i] 和 dominoes[j] 等价的骨牌对 (i, j) 的数量。\n示例 1：\n输入：dominoes = [[1,2],[2,1],[3,4],[5,6]]输出：1\n示例 2：\n输入：dominoes = [[1,2],[1,2],[1,1],[1,2],[2,2]]输出：3\n提示：\n\n1 &lt;= dominoes.length &lt;= 4 * 10⁴\ndominoes[i].length == 2\n1 &lt;= dominoes[i][j] &lt;= 9\n\n问题分析\n\n给你一个多米诺骨牌列表 dominoes，每个骨牌是一个长度为 2 的数组 [a, b]。\n如果两张骨牌旋转后能完全一致，就称它们等价。\n例如 [1,2] 与 [2,1] 等价。我们要统计所有满足等价关系的骨牌对 (i, j) (i&lt;j)(i &lt; j)(i&lt;j) 的总数。\n\n算法思路\n\n\n规范化（标准化）表示\n\n每张骨牌 [a, b]，将它变成有序对 (min(a,b), max(a,b))。\n这样无论原来是 [1,2] 还是 [2,1]，都统一映射为为 (1,2)。\n\n\n\n哈希表计数\n\n用一个字典（或 Python 的 Counter）记录每种“规范化后”的骨牌出现了多少次。\n键（key）就是那个二元组，值（value）就是出现次数。\n\n\n\n组合数学计算对数\n\n\n如果某种骨牌规范后出现了 kkk 次，那么这 kkk 张骨牌两两之间都能组成等价对，共有组合数\n(k2)  =  k×(k−1)2\\binom{k}{2} \\;=\\;\\frac{k\\times (k-1)}{2}\n(2k​)=2k×(k−1)​\n\n\n把所有不同骨牌规范的组合数累加，就是答案。\n\n\n\n\n时间复杂度\n\n时间复杂度：遍历一次骨牌列表 O(n)O(n)O(n)，再遍历一次哈希表（最坏也是 O(n)O(n)O(n)），总体 O(n)O(n)O(n)。\n空间复杂度：哈希表存储规范后骨牌的计数，最坏情况键值对有 O(n)O(n)O(n) 个。\n\n代码分解\n\n\n初始化计数字典\nfrom collections import Countercount = Counter()\n\n\n标准化并计数\nfor a, b in dominoes:    key = (a, b) if a &lt;= b else (b, a) # 保证顺序    count[key] += 1\n\n\n组合数学求配对数\nfor k in count.values():    if k &gt; 1:        result += k*(k-1)//2\n(k2)\\binom{k}{2}(2k​) 的计算公式直接用整数运算实现\n\n\n代码实现\nclass Solution:    def numEquivDominoPairs(self, dominoes: list[list[int]]) -&gt; int:        # 1. 用 Counter 创建一个空的哈希表        count = Counter()                # 2. 遍历每一张骨牌        for a, b in dominoes:            # 2.1 规范化：用元组(key)表示，保证先小后大            if a &lt;= b:                key = (a, b)            else:                key = (b, a)            # 2.2 对该 key 的出现次数 +1            count[key] += 1                # 3. 统计所有规范对的组合数之和        result = 0        # 3.1 对哈希表中每一种规范对        for k in count.values():            # 只有 k&gt;=2 时才会有配对            if k &gt; 1:                # 组合数 C(k,2) = k*(k-1)//2                result += k * (k - 1) // 2                # 4. 返回结果        return result\n以 [[1,2], [2,1], [3,4], [5,6]] 为例：\n\n\n\n原始骨牌\n规范化后\n累计到哈希表中\n\n\n\n\n[1,2]\n(1,2)\ncount[(1,2)] = 1\n\n\n[2,1]\n(1,2)\ncount[(1,2)] = 2\n\n\n[3,4]\n(3,4)\ncount[(3,4)] = 1\n\n\n[5,6]\n(5,6)\ncount[(5,6)] = 1\n\n\n\n最终哈希表 count 为：\n&#123;  (1,2): 2,  (3,4): 1,  (5,6): 1&#125;\n接下来计算组合数：\n\n对 (1,2)，出现次数 k=2k=2k=2，组合数 (22)=1\\binom{2}{2} = 1(22​)=1\n(3,4) 与 (5,6) 都只出现过 1 次，不会贡献配对（因为 (12)=0\\binom{1}{2}=0(21​)=0 ）\n\n所以总对数 = 1。\n","categories":["算法"],"tags":["Algorithm","简单","组合数学","哈希表"]},{"title":"LeetCode每日一题2025-05-03","url":"/post/minimum-domino-rotations-for-equal-row.html","content":"1007. 行相等的最少多米诺旋转 M\n在一排多米诺骨牌中，tops[i] 和 bottoms[i] 分别代表第 i 个多米诺骨牌的上半部分和下半部分。（一个多米诺是两个从 1 到 6 的数字同列平铺形成的 —— 该平铺的每一半上都有一个数字。）\n我们可以旋转第 i 张多米诺，使得 tops[i] 和 bottoms[i] 的值交换。\n返回能使 tops 中所有值或者 bottoms 中所有值都相同的最小旋转次数。\n如果无法做到，返回 -1.\n示例 1：\n\n\n输入：tops = [2,1,2,4,2,2], bottoms = [5,2,6,2,3,2]\n输出：2\n解释：\n图一表示：在我们旋转之前， tops 和 bottoms 给出的多米诺牌。\n如果我们旋转第二个和第四个多米诺骨牌，我们可以使上面一行中的每个值都等于 2，如图所示。\n\n示例 2：\n\n输入：tops = [3,5,1,2,3], bottoms = [3,6,3,3,4]\n输出：-1\n解释： 在这种情况下，不可能旋转多米诺牌使一行的值相等。\n\n提示：\n\n2 &lt;= tops.length &lt;= 2 * 10⁴\nbottoms.length == tops.length\n1 &lt;= tops[i], bottoms[i] &lt;= 6\n\n问题分析\n给定两条长度相同的数组 tops 和 bottoms，表示一排多米诺骨牌的上下数字。你可以对任意一张牌做“旋转”操作（即上下数字交换位置）。目标是让 整条“上行” 或 整条“下行” 的数字都相同，求所需的最少旋转次数；如果做不到，则返回 -1。\n算法思路\n假设最终我们要把上行全部变成某个数字 x。那么对于第 1 张牌，它转前在上行是 tops[0]，转后可能是拿下面的 bottoms[0] 过来。\n\n如果最终目标行全是 x，第 1 张牌要么原本上面就是 x（即 tops[0] == x），要么通过旋转后上面成为 bottoms[0] == x。\n因此，唯一可能的候选 x 就是 &#123; tops[0], bottoms[0] &#125; 两个值之一。\n其它任何值作为目标，都不可能同时兼顾第 1 张牌。\n\n时间复杂度\n时间复杂度：O(n)O(n)O(n)，其中 nnn 是多米诺数量。至多对两个候选各做一次「线性遍历」。\n空间复杂度：O(1)O(1)O(1)，只用了常数级额外变量（两个计数器和一个候选集合）。\n代码分解\n\n\n确定候选目标值\n只可能让最终整行相同的值是第一张牌上或下的数字，记为 x1 = tops[0]、x2 = bottoms[0]。\n\n\n对每个候选值 x，遍历整排牌\n\n用两个计数器 rot_top 和 rot_bot 分别记录：\n\nrot_top：若想让 上行tops 全部变为 x，需要旋转的次数；\nrot_bot：若想让 下行bottoms 全部变为 x，需要旋转的次数。\n\n\n遍历索引 i，对每一张牌：\n\n若 tops[i]≠x 且 bottoms[i]≠x，说明这张牌无论如何（原地或旋转）都无法在上行或下行出现 x，立即返回不可行（记为无穷大，最后结果取最小会被过滤）。\n否则：\n\n想让上行变成 x：如果 tops[i]≠x，则必须旋转这一张，令 rot_top++。\n想让下行变成 x：如果 bottoms[i]≠x，则必须旋转这一张，令 rot_bot++。\n\n\n\n\n\n\n\n取两条方案中的最小值\n\n对候选 x1、x2 分别计算后（要么把上行全换成 x，需要 rot_top 次旋转；\n要么把下行全换成 x，需要 rot_bot 次旋转），\n答案为其中较小的旋转次数；\n若都是无穷大，则返回 -1。\n\n\n\n小结\n\n从 &#123; tops[0], bottoms[0] &#125; 中拿到至多两个候选 x。\n对每个候选值调用上面“检查并计数”逻辑，得到一个旋转次数（或“无解”标记）。\n在这两个结果中取最小，若都是“无解”，则返回 -1，否则返回该最小值。\n\n\n\n代码实现\nfrom typing import Listclass Solution:    def minDominoRotations(self, tops: List[int], bottoms: List[int]) -&gt; int:        # 内部函数：给定目标 x，返回让上行或下行全为 x 的最少旋转次数        # 如果无解，则返回 float(&#x27;inf&#x27;)        def check(x: int) -&gt; int:            rot_top = 0   # 让 tops 全为 x，需要的旋转次数            rot_bot = 0   # 让 bottoms 全为 x，需要的旋转次数            for t, b in zip(tops, bottoms):                # 如果这张牌两面都不是 x，就不可能通过任何旋转获得 x                if t != x and b != x:                    return float(&#x27;inf&#x27;)  # 无解                # 若上面不是 x，则必须旋转一次                if t != x:                    rot_top += 1                # 若下面不是 x，则必须旋转一次                if b != x:                    rot_bot += 1            # 返回两种方案的较小旋转次数            return min(rot_top, rot_bot)        # 仅需检查前第一张牌的两个面        candidates = &#123;tops[0], bottoms[0]&#125;        ans = float(&#x27;inf&#x27;)        # 分别试每个候选值        for x in candidates:            ans = min(ans, check(x))        # 若仍是无穷，说明两个候选都无解        return -1 if ans == float(&#x27;inf&#x27;) else ans\n以 tops = [2,1,2,4,2,2]，bottoms = [5,2,6,2,3,2] 为例：\n\n候选集合：&#123; 2, 5 &#125;\n\n试 x = 2\n\n\n\ni\ntops[i]\nbottoms[i]\ntops[i]==2?\nbottoms[i]==2?\nrot_top 增量\nrot_bot 增量\n\n\n\n\n0\n2\n5\n是\n否\n0\n1\n\n\n1\n1\n2\n否\n是\n1\n0\n\n\n2\n2\n6\n是\n否\n0\n1\n\n\n3\n4\n2\n否\n是\n1\n0\n\n\n4\n2\n3\n是\n否\n0\n1\n\n\n5\n2\n2\n是\n是\n0\n0\n\n\n\n\n\n\n合计\n2\n3\n\n\n\n试 x = 5\n检查到 tops[1]=1 且 bottoms[1]=2 都不是 5，立即判定无解（记作 ∞）。\n最终在 &#123;2, ∞&#125; 中取最小，就是 2。\n","categories":["算法"],"tags":["Algorithm","枚举与剪枝","中等","贪心"]},{"title":"LeetCode每日一题2025-05-02","url":"/post/push-dominoes.html","content":"838. 推多米诺 M\nn 张多米诺骨牌排成一行，将每张多米诺骨牌垂直竖立。在开始时，同时把一些多米诺骨牌向左或向右推。\n每过一秒，倒向左边的多米诺骨牌会推动其左侧相邻的多米诺骨牌。同样地，倒向右边的多米诺骨牌也会推动竖立在其右侧的相邻多米诺骨牌。\n如果一张垂直竖立的多米诺骨牌的两侧同时有多米诺骨牌倒下时，由于受力平衡， 该骨牌仍然保持不变。\n就这个问题而言，我们会认为一张正在倒下的多米诺骨牌不会对其它正在倒下或已经倒下的多米诺骨牌施加额外的力。\n给你一个字符串 dominoes 表示这一行多米诺骨牌的初始状态，其中：\n\ndominoes[i] = 'L'，表示第 i 张多米诺骨牌被推向左侧，\ndominoes[i] = 'R'，表示第 i 张多米诺骨牌被推向右侧，\ndominoes[i] = '.'，表示没有推动第 i 张多米诺骨牌。\n\n返回表示最终状态的字符串。\n示例 1：\n\n输入：dominoes = “RR.L”\n输出：“RR.L”\n解释：第一张多米诺骨牌没有给第二张施加额外的力。\n\n示例 2：\n\n\n输入：dominoes = “.L.R…LR…L…”\n输出：“LL.RR.LLRRLL…”\n\n提示：\n\nn == dominoes.length\n1 &lt;= n &lt;= 10510^5105\ndominoes[i] 为 'L'、'R' 或 '.'\n\n问题分析\n有n张多米诺骨牌排成一行。\n\n当推动一些骨牌向左或向右后，每秒倒向左边的骨牌会推倒其左侧相邻骨牌，\n倒向右边的骨牌会推倒其右侧相邻骨牌。\n如果竖立骨牌的左右两侧同时有骨牌倒下，则它保持竖立。\n\n求最后的骨牌倒向状态。\n算法思路\n1. 加入哨兵（Sentinel）\n\n我们在原串 dominoes 的最左端加入一个虚拟的 'L'，下标记为 0；\n在最右端加入一个虚拟的 'R'，下标记为 n+1。\n原字符串字符对应到新数组 s 的位置是 1 到 n。\n\n这样做的好处是：无论最左或最右一侧最初如何受力，都能统一用同一套逻辑处理，无需额外分支。\n\n原：   .  L  .  R  . . .  L  R  . .  L  . .\n索引： 1  2  3  4  5 6 7  8  9 10 11 12 13 14\ns：   [L] .  L  .  R  . . .  L  R  . .  L  . . [R]\n索引：  0   1  2  3  4  5 6 7  8  9 10 11 12 13 14 15\n\n\nprev 和 prevChar 初始为 0、'L'，对应哨兵左侧。\n我们的目标是，每当遇到一个非点字符（'L' 或 'R'）时，就处理上一次非点到当前之间的区间。\n\n2. 区间类型与对应填充策略\n设当前指针 i（范围 1…n+1）指向一个非点字符 currChar = s[i]，上一次非点在 prev、字符为 prevChar。区间 (prev, i)（不含端点）即是待处理段。共有三种情况：\n\n\n\nprevChar\ncurrChar\n说明\n区间填充方式\n\n\n\n\nL\nR\n左侧向左，右侧向右——中间没人受力\n保持全部 . 不变\n\n\nL\nL\n两侧都向左——向左的力传导\n整段填充为 L\n\n\nR\nR\n两侧都向右——向右的力传导\n整段填充为 R\n\n\nR\nL\n左右相向——中间骨牌两端受力，向中央倒；中间正中如果恰好在平衡点，则不倒\n从两端向中间：左半段填 R，右半段填 L；如果区间长度为奇数，中点保留 .\n\n\n\n特别地，R...L 的中点保持直立是因为左右对等力量平衡。\n时间复杂度\nO(n)O(n)O(n) ：一次从 1 扫描到 n+1，区间内填充合计仅做每个位置不超过一次写操作\n空间复杂度：O(n)O(n)O(n)，使用大小为 n+2 的辅助字符数组。\n代码分解\n\n\n线性扫描 + 两个指针\n我们在字符串两端分别加上虚拟的多米诺骨牌，以简化边界处理：\n\n在最左端加一个假想的 L（下标 -1），\n在最右端加一个假想的 R（下标 n）。\n\n\n\n记录上一次非点状态的位置和方向\n\n用 prev 存储上一个非点（'L' 或 'R'）的下标，\n用 prevChar 存储对应的字符。\n\n\n\n遍历\n\n当遇到下一个非点字符 currChar（下标 i）时，考察区间 (prev, i)：\n\n如果 prevChar == currChar，则这一段内所有骨牌都倒向同一方向；\n如果 prevChar=='R' 且 currChar=='L'，则中间部分向两端倒：左半段倒 R，右半段倒 L；\n如果 prevChar=='L' 且 currChar=='R'，中间保持直立不动。\n更新 prev = i, prevChar = currChar，继续扫描。\n\n\n\n\n\n代码实现\nclass Solution:    def pushDominoes(self, dominoes: str) -&gt; str:        n = len(dominoes)        # 在头尾各加一个哨兵，简化边界        s = [&#x27;L&#x27;] + list(dominoes) + [&#x27;R&#x27;]        prev = 0        prevChar = &#x27;L&#x27;                for i in range(1, n + 2):            currChar = s[i]            if currChar == &#x27;.&#x27;:                continue                        # 区间 (prev, i)            if prevChar == currChar:                # 同向全填充                for k in range(prev + 1, i):                    s[k] = currChar            elif prevChar == &#x27;R&#x27; and currChar == &#x27;L&#x27;:                # 两侧相向，中间向两端                left, right = prev + 1, i - 1                while left &lt; right:                    s[left] = &#x27;R&#x27;                    s[right] = &#x27;L&#x27;                    left += 1                    right -= 1                # 如果 left == right，保持 &#x27;.&#x27;（平衡力）            # 如果是 L...R，保持不变                        prev = i            prevChar = currChar                # 拼回原始长度        return &#x27;&#x27;.join(s[1:-1])\n以 &quot;.L.R...LR..L..&quot; 为例（原长 14），在数组 s 上的区间索引是 1…14，我们实际扫描到 i=15 才遇到最后的 'R' 哨兵。\n\n\n\n索引 i\ns[i] 内容\n操作及说明\n更新后 prev 值\n更新后 prevChar\n\n\n\n\n初始化\n-\ns = ['L', '.', 'L', '.', 'R', '.', '.', '.', 'L', 'R', '.', '.', 'L', '.', '.', 'R']，prev = 0，prevChar = 'L'\n0\nL\n\n\ni=1\n.\n跳过\n0\nL\n\n\ni=2\nL\n区间 (0, 2)，只有下标 1，prevChar = 'L'，currChar = 'L'，属于 L...L → 将 s[1] 填为 L\n2\nL\n\n\ni=3\n.\n跳过\n2\nL\n\n\ni=4\nR\n区间 (2,4)，下标 3，prevChar = 'L'，currChar = 'R'，属于 L...R → 保持 s[3]='.'\n4\nR\n\n\ni=5 - i=8\n全为 .\n跳过\n4\nR\n\n\ni=9\nL\n区间 (4,9)，下标 5,6,7,8，prevChar = 'R'，currChar = 'L'，属于 R...L，长度 4，左右对称 → s[5] = R，s[8] = L；s[6] = R，s[7] = L\n9\nL\n\n\ni=10\nR\n区间 (9,10)，只有 s[9.5?] 无点 → 跳过。更新 prev = 10，prevChar = 'R'\n10\nR\n\n\ni=11 - i=12\n.\n跳过\n10\nR\n\n\ni=13\nL\n区间 (10,13)，下标 11,12，R...L，长度 2 → s[11] = R，s[12] = L\n13\nL\n\n\ni=14\n.\n跳过\n13\nL\n\n\ni=15\nR\n区间 (13,15)，下标 14，L...R → 保持 '.'\n15\nR\n\n\n\n最终去掉两端哨兵，拼回结果就是 &quot;LL.RR.LLRRLL..&quot;\n","categories":["算法"],"tags":["Algorithm","字符串处理","中等","双指针","贪心"]},{"title":"LeetCode每日一题2025-05-01","url":"/post/maximum-number-of-tasks-you-can-assign.html","content":"2071. 你可以安排的最多任务数目 H\n给你 n 个任务和 m 个工人。每个任务需要一定的力量值才能完成，需要的力量值保存在下标从 0 开始的整数数组 tasks 中，第 i 个任务需要 tasks[i] 的力量才能完成。每个工人的力量值保存在下标从 0 开始的整数数组 workers 中，第 j 个工人的力量值为 workers[j] 。每个工人只能完成 一个 任务，且力量值需要 大于等于 该任务的力量要求值（即 workers[j] &gt;= tasks[i] ）。\n除此以外，你还有 pills 个神奇药丸，可以给 一个工人的力量值 增加 strength 。你可以决定给哪些工人使用药丸，但每个工人 最多 只能使用 一片 药丸。\n给你下标从 0 开始的整数数组tasks 和 workers 以及两个整数 pills 和 strength ，请你返回 最多 有多少个任务可以被完成。\n示例 1：\n\n输入：tasks = [3,2,1], workers = [0,3,3], pills = 1, strength = 1\n输出：3\n解释：\n我们可以按照如下方案安排药丸：\n\n给 0 号工人药丸。\n0 号工人完成任务 2（0 + 1 &gt;= 1）\n1 号工人完成任务 1（3 &gt;= 2）\n2 号工人完成任务 0（3 &gt;= 3）\n\n\n示例 2：\n\n输入：tasks = [5,4], workers = [0,0,0], pills = 1, strength = 5\n输出：1\n解释：\n我们可以按照如下方案安排药丸：\n\n给 0 号工人药丸。\n0 号工人完成任务 0（0 + 5 &gt;= 5）\n\n\n示例 3：\n\n输入：tasks = [10,15,30], workers = [0,10,10,10,10], pills = 3, strength = 10\n输出：2\n解释：\n我们可以按照如下方案安排药丸：\n\n给 0 号和 1 号工人药丸。\n0 号工人完成任务 0（0 + 10 &gt;= 10）\n1 号工人完成任务 1（10 + 10 &gt;= 15）\n\n\n示例 4：\n\n输入：tasks = [5,9,8,5,9], workers = [1,6,4,2,6], pills = 1, strength = 5\n输出：3\n解释：\n我们可以按照如下方案安排药丸：\n\n给 2 号工人药丸。\n1 号工人完成任务 0（6 &gt;= 5）\n2 号工人完成任务 2（4 + 5 &gt;= 8）\n4 号工人完成任务 3（6 &gt;= 5）\n\n\n提示：\n\nn == tasks.length\nm == workers.length\n1 &lt;= n, m &lt;= 5∗1045 * 10^45∗104\n0 &lt;= pills &lt;= m\n0 &lt;= tasks[i], workers[j], strength &lt;= 10910^9109\n\n问题分析\n\n\n任务：有 nnn 个任务，任务力量需求数组为 tasks；有 mmm 名工人，力量数组为 workers。\n\n\n药丸：你有 pills 颗药，每颗可以让一个工人的力量增加 strength，且每个工人最多只能吃一颗。\n\n\n目标：在最优分配下，最多能完成多少个任务。\n\n\n算法思路\n\n排序\n\n将 tasks 从小到大排序，编号后更容易按难度取子区间；\n将 workers 从小到大排序，方便挑最强和二分查找。\n\n\n二分答案 kkk\n\n答案 kkk 最多不会超过 min⁡(n,m)\\min(n, m)min(n,m)。\n我们在区间 [0,min⁡(n,m)][0, \\min(n,m)][0,min(n,m)] 上二分查找最大的可行 kkk。\n\n\n可行性验证 can_do(k)\n\n取子集：对尝试完成的前 kkk 个最小任务 tasks[0..k-1]，对应后 kkk 个最强工人 workers[m-k..m-1]。\n维护有序容器：把这 kkk 名工人放入一个支持「删最大」「按需求二分查找最小满足」操作的有序结构（如 Python bisect+list 或者 sortedcontainers.SortedList）。\n从 hardest 到 easiest：为了节省药丸，我们先处理需求最高的任务。对每个任务 ttt：\n\n如果容器中最大力量 ≥t\\ge t≥t，直接分配该工人（弹出最大），不消耗药丸。\n否则，需要用药：找容器中最小的工人 www 满足 w+strength≥tw + strength \\ge tw+strength≥t（用二分查找找第一个 ≥t−strength\\ge t - strength≥t−strength），若找不到或药丸已用完，则失败；否则分配、药丸减一。\n\n\n如果所有 kkk 个任务都能分配完，can_do(k)=True，如果在分配过程中药丸数超过 pills，或找不到可用工人，则 can_do(k) 返回 False。\n\n\n\n时间复杂度\n\n\n时间复杂度\n\n\n排序：O(nlog⁡n+mlog⁡m)O(n\\log n + m\\log m)O(nlogn+mlogm)\n\n\n二分：O(log⁡min⁡(n,m))O(\\log \\min(n,m))O(logmin(n,m)) 次可行性验证\n\n\n每次验证：最多 kkk 次删除/查找，每次 O(log⁡k)O(\\log k)O(logk)，所以 O(klog⁡k)O(k\\log k)O(klogk)\n\n\n总计：\nO((n+m)log⁡(n+m)  +  log⁡min⁡(n,m)×min⁡(n,m)log⁡m).O\\bigl((n+m)\\log(n+m)\\;+\\;\\log\\min(n,m)\\times\\min(n,m)\\log m\\bigr).\nO((n+m)log(n+m)+logmin(n,m)×min(n,m)logm).\n\n\n\n\n空间复杂度 : 排序原地排序外，额外使用 O(m) 存储可用工人列表。\n\n\n代码分解\n先解决最难的任务，这样能保证弱工人和药丸优先用于最“吃力”的配对，若连最难的都配不上，k 肯定不可行。\n使用 sortedcontainers.SortedList，支持 sl.pop(-1)、sl.bisect_left()、sl.pop(idx) 都是 O(log⁡k)O(\\log k)O(logk)\n用「上取整」的 mid 方案：\nlo, hi = 0, min(n, m)while lo &lt; hi:    mid = (lo + hi + 1) // 2    if can_do(mid):        lo = mid    else:        hi = mid - 1return lo\n代码实现\nfrom sortedcontainers import SortedListfrom bisect import bisect_leftclass Solution:    def maxTaskAssign(self, tasks, workers, pills, strength):        tasks.sort()        workers.sort()        def can_do(k):            # 取最强 k 工人，放入可排序列表            avail = SortedList(workers[-k:])            pills_left = pills            # 从最难任务到最简单            for t in reversed(tasks[:k]):                # 如果最强工人够力                if avail and avail[-1] &gt;= t:                    avail.pop(-1)                else:                    # 用药分配                    if pills_left == 0:                        return False                    # 找最弱且加药后能胜任的工人,需要 w &gt;= t - strength                    need = t - strength                    idx = avail.bisect_left(need)                    if idx == len(avail):                        return False                    # 分配并消耗                    avail.pop(idx)                    pills_left -= 1            return True        # 二分最大 k        lo, hi = 0, min(len(tasks), len(workers))        while lo &lt; hi:            mid = (lo + hi + 1) // 2            if can_do(mid):                lo = mid            else:                hi = mid - 1        return lo\n以tasks = [3,2,1], workers = [0,3,3], pills = 1, strength = 1为例：\n\n\n\n二分过程\n任务子集\n工人子集\n药丸使用情况\n分配过程\n结果判断\n\n\n\n\n初始状态(排序后)\n[1,2,3]\n[0,3,3]\n1\n-\n-\n\n\n尝试 mid=2\n[1,2]\n[0,3,3]\n1\n1. 较大任务 2 分配给最大工人 3 ≥ 2 → 不用药，弹出 3。2. 任务 1 分配给最大工人 3 ≥ 1 → 不用药，弹出 3。\n成功 → can_do(2)=True，二分上界提升到 2\n\n\n尝试 mid=3\n[1,2,3]\n[0,3,3]\n1\n1. 任务 3 分配给最大工人 3 ≥ 3 → 不用药，弹出 3，剩 [0,3]。2. 任务 2 分配给最大工人 3 ≥ 2 → 不用药，弹出 3，剩 [0]。3. 任务 1 分配给唯一工人 0 &lt; 1 → 需要用药，查找最小 w≥1−1=0w\\ge 1-1=0w≥1−1=0，找到 0，用药后分配成功。\n成功 → can_do(3)=True，最终答案 3\n\n\n\n","categories":["算法"],"tags":["Algorithm","困难","二分查找","排序","贪心","有序集合"]},{"title":"LeetCode每日一题2025-04-30","url":"/post/find-numbers-with-even-number-of-digits.html","content":"1295. 统计位数为偶数的数字 E\n给你一个整数数组 nums，请你返回其中包含 偶数 个数位的数字的个数。\n示例 1：\n\n输入：nums = [12,345,2,6,7896]\n输出：2\n解释：\n12 是 2 位数字（位数为偶数）\n345 是 3 位数字（位数为奇数）\n2 是 1 位数字（位数为奇数）\n6 是 1 位数字 位数为奇数）\n7896 是 4 位数字（位数为偶数）\n因此只有 12 和 7896 是位数为偶数的数字\n\n示例 2：\n\n输入：nums = [555,901,482,1771]\n输出：1\n解释：\n只有 1771 是位数为偶数的数字。\n\n提示：\n\n1 &lt;= nums.length &lt;= 500\n1 &lt;= nums[i] &lt;= 10510^5105\n\n算法思路\n\n遍历：对输入数组 nums 中的每个数字 num 进行遍历（共 n 个）。\n计数位数：\n\n方法 A（数学方式）：不断除以 10 直至 num 为 0，统计除法次数。\n方法 B（字符串方式）：将 num 转为字符串 s = str(num)，直接用 len(s) 获取位数。\n\n\n判断奇偶：如果位数 digit_count % 2 == 0，则计数器加 1。\n返回结果：遍历结束后输出计数器的值。\n\n时间复杂度\n方法 A：对每个数做除法操作，平均每个数的位数为 d（d=O(log⁡10(num))d = O(\\log_{10}(num))d=O(log10​(num))），总体为 O(n⋅d)O(n·d)O(n⋅d)。\n方法 B：字符串转换和长度计算也约为 O(n⋅d)O(n·d)O(n⋅d)。 由于 num[i] ≤ 10510^5105，d ≤ 6，故可视为 线性 O(n)O(n)O(n)。\n空间复杂度：O(1)O(1)O(1)（忽略输出和输入空间）。\n代码实现\nfrom typing import Listclass Solution:    def findNumbers(self, nums: List[int]) -&gt; int:        count = 0        for num in nums:            # 方法 B：字符串方式统计位数            if len(str(num)) % 2 == 0:                count += 1        return count\n","categories":["算法"],"tags":["Algorithm","暴力搜索","数位处理","简单"]},{"title":"LeetCode每日一题2025-04-29","url":"/post/count-subarrays-where-max-element-appears-at-least-k-times.html","content":"2962. 统计最大元素出现至少 K 次的子数组 M\n给你一个整数数组 nums 和一个 正整数 k 。\n请你统计有多少满足 「 nums 中的 最大 元素」至少出现 k 次的子数组，并返回满足这一条件的子数组的数目。\n子数组是数组中的一个连续元素序列。\n示例 1：\n\n输入：nums = [1,3,2,3,3], k = 2\n输出：6\n解释：包含元素 3 至少 2 次的子数组为：[1,3,2,3]、[1,3,2,3,3]、[3,2,3]、[3,2,3,3]、[2,3,3] 和 [3,3] 。\n\n示例 2：\n\n输入：nums = [1,4,2,1], k = 3\n输出：0\n解释：没有子数组包含元素 4 至少 3 次。\n\n提示：\n\n1 &lt;= nums.length &lt;= 10510^5105\n1 &lt;= nums[i] &lt;= 10610^6106\n1 &lt;= k &lt;= 10510^5105\n\n问题分析\n给定一个长度为 n 的整数数组 nums 和正整数 k，我们需要统计满足“子数组中数组 nums 的最大元素至少出现 k 次”的所有连续子数组的个数。\n\n全局最大值：数组中所有元素的最大值，记作 M = max(nums)。\n子数组：数组中任意一段连续的元素序列。\n目标：统计所有子数组中，元素 M 出现次数 ≥ k 的子数组个数。\n\n直接枚举所有子数组会有 O(n2)O(n^2)O(n2) 个，无法在 n ≤ 10510^5105 的规模下通过。因此，需要一个 O(n)O(n)O(n) 或 O(nlog⁡n)O(n \\log n)O(nlogn) 的方法。\n算法思路\n\n全局最大值定位：首先在数组 nums 中找到最大的元素 M = max(nums)。\n子数组计数思路：我们要统计所有包含元素 M 至少出现 k 次的连续子数组。\n滑动窗口＋双指针：统计“包含 M 出现次数 &lt; k 的子数组数目”，记为 cnt_less。\n\n用双指针 left, right 扩展窗口，维护窗口中 M 的出现次数 count_M。\n每次将 right 向右移动，若 nums[right] == M 则 count_M += 1。\n当 count_M &gt;= k 时，窗口不再满足“&lt;k”条件，需要移动 left 且在移动时相应地更新 count_M，直到 count_M &lt; k。\n对于每一个 right，当前满足 &lt; k 的最长窗口长度是 right - left + 1，将其累加到 cnt_less。\n\n\n总子数组数目：total=n(n+1)2.\\text {total}= \\frac{n(n+1)}2\\text.total=2n(n+1)​.\n答案：answer=total−cnt_less\\text{answer} = \\text{total} - \\text{cnt\\_less}answer=total−cnt_less，即所有子数组减去不满足条件的那些。\n\n时间复杂度\n时间复杂度：O(n)O(n)O(n)，left 和 right 指针各最多移动 nnn 次。\n空间复杂度：O(1)O(1)O(1)，只使用常数级的额外变量。\n代码分解\n\n\n找最大值 ：M = max(nums)\n\n\n初始化\nn = len(nums)left = 0count_M = 0cnt_less = 0\n\n\n滑动窗口循环\nfor right in range(n):    if nums[right] == M:        count_M += 1    # 收缩左端，直到 count_M &lt; k    while count_M &gt;= k:        if nums[left] == M:            count_M -= 1        left += 1    # 累加以 right 结尾的不满足子数组数    cnt_less += (right - left + 1)\n\n\n计算并返回结果\ntotal = n * (n + 1) // 2return total - cnt_less\n\n\n代码实现\nclass Solution:    def countSubarrays(self, nums: List[int], k: int) -&gt; int:        n = len(nums)        # 1. 找到全局最大值 M        M = max(nums)        # 2. 统计出现次数 &lt; k 的子数组数（滑动窗口）        left = 0        count_M = 0   # 窗口中 M 的出现次数        cnt_less = 0  # 子数组中 M 出现次数 &lt; k 的数量        # 3. 滑动窗口遍历所有可能的右端点        for right in range(n):            # 扩张窗口：若新加入元素是 M，则计数器 +1            if nums[right] == M:                count_M += 1            # 当窗口中 M 出现次数 &gt;= k 时，收缩 left            while count_M &gt;= k:                if nums[left] == M:                    count_M -= 1                left += 1            # 此时窗口 [left..right] 都是 &lt; k，子数组数量 = 窗口长度            # 以 right 结尾的所有子数组的起点可以是 left, left+1, …, right            cnt_less += (right - left + 1)        # 4. 计算总子数组数并取差        total = n * (n + 1) // 2        return total - cnt_less\n\n\n输入：nums = [1,3,2,3,3], k = 2\n\n全局最大值 M = 3\n统计 &lt;2 次的子数组数 cnt_less = 15 - 6 = 9 （总子数组 15 个，满足条件 6 个）\n返回 15 - 9 = 6，与题目示例一致。\n\n\n\n输入：nums = [1,4,2,1], k = 3\n\nM = 4，在任何子数组中最多出现 1 次，均 &lt;3\ncnt_less = total = 10，所以返回 10 - 10 = 0。\n\n\n\n","categories":["算法"],"tags":["Algorithm","中等","滑动窗口","双指针","前缀和"]},{"title":"LeetCode每日一题2025-04-28","url":"/post/count-subarrays-with-score-less-than-k.html","content":"2302. 统计得分小于 K 的子数组数目 H\n一个数组的 分数 定义为数组之和 乘以 数组的长度。\n\n比方说，[1, 2, 3, 4, 5] 的分数为 (1 + 2 + 3 + 4 + 5) * 5 = 75 。\n\n给你一个正整数数组 nums 和一个整数 k ，请你返回 nums 中分数 严格小于 k 的 非空整数子数组数目。\n子数组 是数组中的一个连续元素序列。\n示例 1：\n\n输入：nums = [2,1,4,3,5], k = 10\n输出：6\n解释：\n有 6 个子数组的分数小于 10 ：\n\n[2] 分数为 2 * 1 = 2 。\n[1] 分数为 1 * 1 = 1 。\n[4] 分数为 4 * 1 = 4 。\n[3] 分数为 3 * 1 = 3 。\n[5] 分数为 5 * 1 = 5 。\n[2,1] 分数为 (2 + 1) * 2 = 6 。\n注意，子数组 [1,4] 和 [4,3,5] 不符合要求，因为它们的分数分别为 10 和 36，但我们要求子数组的分数严格小于 10 。\n\n\n示例 2：\n\n输入：nums = [1,1,1], k = 5\n输出：5\n解释：\n除了 [1,1,1] 以外每个子数组分数都小于 5 。\n[1,1,1] 分数为 (1 + 1 + 1) * 3 = 9 ，大于 5 。\n所以总共有 5 个子数组得分小于 5 。\n\n提示：\n\n1 &lt;= nums.length &lt;= 10510^5105\n1 &lt;= nums[i] &lt;= 10510^5105\n1 &lt;= k &lt;= 101510^{15}1015\n\n问题分析\n\n\n分数 monotonic 性质\n对于正整数数组，子数组向右扩展会同时增加「和」与「长度」，因此分数\nscore(l,r)=(∑i=lrnums[i])×(r−l+1)\\text{score}(l, r) = \\left( \\sum_{i=l}^{r} \\text{nums}[i] \\right) \\times (r - l + 1)\nscore(l,r)=(i=l∑r​nums[i])×(r−l+1)\n随着 lll 不变而 rrr 增大时单调递增；同理，对于固定的右端点 rrr ，若从左端点 lll 开始的子数组已满足 (∑i=lrnums[i])×(r−l+1)&lt;k\\left( \\sum_{i=l}^{r} \\text{nums}[i] \\right) \\times (r - l + 1)&lt;k(∑i=lr​nums[i])×(r−l+1)&lt;k，那么从任意 l′&gt;ll&#x27; &gt; ll′&gt;l 开始到 rrr 的子数组也必然满足该不等式，当 lll 增大（窗口缩小）时，分数单调递减。\n\n\n利用双指针维护合法区间\n\n用指针 l、r 表示当前窗口 [l..r][l..r][l..r]。\n保证窗口内任何子数组（以任意左端点 ≥l\\ge l≥l 出发、以 rrr 结尾）的分数都严格小于 kkk。\n随着 r 从左向右遍历，将 nums[r] 加入当前窗口的累加和 window_sum。\n若此时 window_sum * (r-l+1) ≥ k，则不断收缩左端 l++（并从 window_sum 中减去 nums[l]），直到重新满足 &lt; k。\n\n\n\n计数方式\n对于每个右端点 rrr，一旦窗口调到了最大合法大小 [l..r][l..r][l..r]，那么所有起点在 l,l+1,…,rl, l+1, \\dots, rl,l+1,…,r 的子数组都合法，共有 r−l+1r - l + 1r−l+1 个。\n\n\n算法思路\n\n\n初始化：l = 0, window_sum = 0, ans = 0\n\n\n遍历 r 从 0 到 n-1：\n\n\nwindow_sum += nums[r]\n\n\n当 window_sum * (r - l + 1) ≥ k 时：\nwhile l &lt;= r and window_sum * (r - l + 1) &gt;= k:    window_sum -= nums[l]    l += 1\n\n\n此时 [l..r] 中所有子数组都合法，其数量为 r - l + 1，加到 ans。.\n\n\n\n\n遍历结束，返回 ans。\n\n\n时间复杂度\n时间复杂度：指针 r 从左向右遍历一遍：O(n)O(n)O(n)；l 最多也只会从 000 移动到 n−1n-1n−1：O(n)O(n)O(n)；合计 O(n)O(n)O(n)。\n空间复杂度：只使用了若干常数变量，O(1)O(1)O(1)。\n代码分解\n初始化  l = 0            # 窗口左端  window_sum = 0   # 窗口 [l..r] 的元素和  ans = 0          # 累计答案遍历 r 从 0 到 n-1：  1. 将 nums[r] 加入窗口和     window_sum += nums[r]  2. 如果窗口分数 &gt;= k，则移动 l 收缩：     while l ≤ r 且 window_sum * (r - l + 1) ≥ k:         window_sum -= nums[l]         l += 1     # 结束后，[l..r] 窗口恢复到「所有子数组分数 &lt; k」状态  3. 以 r 为右端点的合法子数组有 (r - l + 1) 个，累加到 ans     ans += (r - l + 1)返回 ans\n代码实现\nfrom typing import Listclass Solution:    def countSubarrays(self, nums: List[int], k: int) -&gt; int:        &quot;&quot;&quot;        返回 nums 中所有分数 &lt; k 的非空子数组数量。        分数定义为 子数组之和 * 子数组长度。        &quot;&quot;&quot;        n = len(nums)        l = 0        window_sum = 0        ans = 0                for r in range(n):            window_sum += nums[r]            # 收缩左端，直到窗口合法            while l &lt;= r and window_sum * (r - l + 1) &gt;= k:                window_sum -= nums[l]                l += 1            # 以 r 为右端点的所有子数组数            ans += (r - l + 1)                return ans\n以 nums = [2,1,4,3,5], k = 10 为例：\n\n\n\n步骤\nr\n加入 nums[r]\nwindow_sum\nl\n检查 &amp; 收缩\n合法子数组数 r−l+1r-l+1r−l+1\n累计 ans\n\n\n\n\n初始\n—\n—\n0\n0\n—\n—\n0\n\n\n1\n0\n+2 → 2\n2\n0\n2∗1&lt;102*1&lt;102∗1&lt;10✓\n0–0：1 个\n1\n\n\n2\n1\n+1 → 3\n3\n0\n3∗2&lt;103*2&lt;103∗2&lt;10✓\n0–1：2 个\n3\n\n\n3\n2\n+4 → 7\n7\n0\n7∗3=21≥10×7*3=21\\ge 10\\times7∗3=21≥10× → 收缩 – remove 2 → sum=5, l=1 5∗2=10≥10×5*2=10\\ge 10\\times5∗2=10≥10× → 收缩 – remove 1 → sum=4, l=2\n2–2：1 个\n4\n\n\n4\n3\n+3 → 7\n7\n2\n7∗2=14≥10×7*2=14\\ge 10\\times7∗2=14≥10× → 收缩 – remove 4 → sum=3, l=3 3∗1=3&lt;10×3*1=3 &lt; 10\\times3∗1=3&lt;10×✓\n3–3：1 个\n5\n\n\n5\n4\n+5 → 8\n8\n3\n8∗2=16≥10×8*2=16\\ge 10\\times8∗2=16≥10× → 收缩 – remove 3 → sum=5, l=4 5∗1=5&lt;105*1=5 &lt; 105∗1=5&lt;10✓\n4–4：1 个\n6\n\n\n\n","categories":["算法"],"tags":["Algorithm","困难","滑动窗口","双指针","前缀和"]},{"title":"LeetCode每日一题2025-04-27","url":"/post/count-subarrays-of-length-three-with-a-condition.html","content":"3392. 统计符合条件长度为 3 的子数组数目 E\n给你一个整数数组 nums ，请你返回长度为 3 的 子数组 的数量，满足第一个数和第三个数的和恰好为第二个数的一半。\n子数组 指的是一个数组中连续 非空 的元素序列。\n示例 1：\n\n输入： nums = [1,2,1,4,1]\n输出： 1\n解释：\n只有子数组 [1,4,1] 包含 3 个元素且第一个和第三个数字之和是中间数字的一半。number.\n\n示例 2：\n\n输入： nums = [1,1,1]\n**输出： ** 0\n解释：\n[1,1,1] 是唯一长度为 3 的子数组，但第一个数和第三个数的和不是第二个数的一半。\n\n提示：\n\n3 &lt;= nums.length &lt;= 100\n-100 &lt;= nums[i] &lt;= 100\n\n问题分析\n输入：长度为 nnn 的整数数组 nums，满足 3≤n≤1003 \\le n \\le 1003≤n≤100，元素取值 [−100,100][-100,100][−100,100]。\n目标：统计所有长度恰好为 3 的连续子数组 [a,b,c][a,b,c][a,b,c]，使得\na+c=b2⟺2(a+c)=b.a+c=\\frac{b}{2}\\quad\\Longleftrightarrow\\quad2(a+c)=b.\na+c=2b​⟺2(a+c)=b.\n因为子数组长度固定且很小（仅 3），子数组个数仅 n−2n-2n−2，可线性枚举，每个子数组只涉及 3 个元素，检查条件恒为常数时间。\n算法思路\n\n\n初始化\n\n计数器 ans = 0。\n\n\n\n遍历“中间位置”\n\n\n令指针 iii 从 1 到 n−2n-2n−2（包含），那么第 iii 个元素就是子数组的中间元素 b=nums[i]b = \\text{nums}[i]b=nums[i]。\n\n\n子数组的首尾分别是：\na=nums[i−1],c=nums[i+1].a = \\text{nums}[i-1],\\quad c = \\text{nums}[i+1].\na=nums[i−1],c=nums[i+1].\n\n\n\n\n判断并累加\n\n\n检查条件：\n2×(a+c)==b.2 \\times (a + c) == b.\n2×(a+c)==b.\n\n\n如果成立，ans += 1。\n\n\n\n\n返回结果\n\n遍历结束后，ans 即为满足条件的子数组数量。\n\n\n\n时间复杂度\n时间复杂度：\n\n暴力枚举每个窗口需要 O(n)O(n)O(n) 次检查，其中 n=len(nums)n = \\text{len}(nums)n=len(nums)，每次检查 O(1)O(1)O(1)，只需一次线性遍历，整体 O(n)O(n)O(n)。\n\n空间复杂度：\n\n仅使用常数级额外变量计数，O(1)O(1)O(1)。\n\n代码分解\nfunction countSubarrays(nums):    ans ← 0    for i from 1 to length(nums)-2:        a ← nums[i-1]        b ← nums[i]        c ← nums[i+1]        if 2*(a + c) == b:            ans ← ans + 1    return ans\n\n\nrange(1, len(nums)-1)：因为窗口长度固定 3，首元素索引为 i−1i-1i−1，尾元素索引为 i+1i+1i+1，故 iii 取值区间为 [1,n−2][1, n-2][1,n−2]。\n\n\n每次循环只做一次加法、一次乘法、一次比较，都是 O(1)O(1)O(1) 操作。\n\n\n代码实现\nfrom typing import Listclass Solution:    def countSubarrays(self, nums: List[int]) -&gt; int:        &quot;&quot;&quot;        统计所有长度=3 的连续子数组 [a, b, c] 满足 2*(a + c) == b。        时间复杂度：O(n)，空间复杂度：O(1)。        &quot;&quot;&quot;        ans = 0                     # 计数器，初始为 0                # i 从 1 到 len(nums)-2，确保 i-1, i, i+1 都在数组内        for i in range(1, len(nums) - 1):            a = nums[i - 1]         # 子数组首元素            b = nums[i]             # 子数组中间元素            c = nums[i + 1]         # 子数组尾元素                        # 判断核心条件：2*(a + c) == b            if 2 * (a + c) == b:                ans += 1            # 条件满足时，计数器加 1                return ans                  # 返回最终结果\n","categories":["算法"],"tags":["Algorithm","暴力搜索","简单","滑动窗口"]},{"title":"LeetCode每日一题2025-04-26","url":"/post/count-subarrays-with-fixed-bounds.html","content":"2444. 统计定界子数组的数目 H\n给你一个整数数组 nums 和两个整数 minK 以及 maxK 。\nnums 的定界子数组是满足下述条件的一个子数组：\n\n子数组中的 最小值 等于 minK 。\n子数组中的 最大值 等于 maxK 。\n\n返回定界子数组的数目。\n子数组是数组中的一个连续部分。\n示例 1：\n\n输入：nums = [1,3,5,2,7,5], minK = 1, maxK = 5\n输出：2\n解释：定界子数组是 [1,3,5] 和 [1,3,5,2] 。\n\n示例 2：\n\n输入：nums = [1,1,1,1], minK = 1, maxK = 1\n输出：10\n解释：nums 的每个子数组都是一个定界子数组。共有 10 个子数组。\n\n提示：\n\n2 &lt;= nums.length &lt;= 10510^5105\n1 &lt;= nums[i], minK, maxK &lt;= 10610^6106\n\n问题分析\n我们要统计所有「最小值＝minK 且 最大值＝maxK」的子数组个数。核心在于：\n\n\n无效区间：任何超出区间 minK,maxKminK, maxKminK,maxK 的元素都会“破坏”子数组；我们记录它的最近位置 last_invalid，子数组一旦跨过此位置就一定包含不合格元素。\n\n\n关键位置：必须同时出现 minK 和 maxK，因此我们分别记录扫描到当前位置为止，最后一次出现 minK 的下标 last_min，以及最后一次出现 maxK 的下标 last_max。\n\n\n结尾贡献：对于每个位置 i，以它为结尾的所有合法子数组，起始位置 j 必须满足：\n\nj &gt; last_invalid（子数组中不包含任何无效元素）\n而且子数组要同时包含最近一次的 minK 和 maxK，也就是说 j ≤ min(last_min, last_max)。\n\n因此，以 i 结尾的合法子数组数量是：\nmax(0, min(last_min, last_max) - last_invalid)\n累加到全局答案中即可。\n\n\n算法思路\n\n定义三个指针/下标变量：\n\nlast_invalid：上一个不满足 minK ≤ nums[i] ≤ maxK 的位置（初始化为 −1）。\nlast_min：上一个等于 minK 的位置（初始化为 −1）。\nlast_max：上一个等于 maxK 的位置（初始化为 −1）。\n\n\n从左至右遍历数组，每到索引 i：\n\n若 nums[i] &lt; minK 或 nums[i] &gt; maxK，则更新 last_invalid = i。\n若 nums[i] == minK，则更新 last_min = i。\n若 nums[i] == maxK，则更新 last_max = i。\n\n\n以 i 结尾的所有合法子数组，起始点必须在 (last_invalid, min(last_min, last_max)] 之间，故可累加 max(0, min(last_min, last_max) - last_invalid) 到答案中。\n最终累加得到所有定界子数组的数量。\n\n时间复杂度\n\n时间复杂度：O(n)O(n)O(n)，其中 nnn 为数组长度\n空间复杂度：O(1)O(1)O(1)（仅使用常数额外变量）\n\n代码实现\nclass Solution:    def countSubarrays(self, nums: list[int], minK: int, maxK: int) -&gt; int:        last_invalid = -1     # 最后一个不在 [minK, maxK] 范围内的索引        last_min = -1         # 最后一个出现 minK 的索引        last_max = -1         # 最后一个出现 maxK 的索引        count = 0             # 结果计数        for i, x in enumerate(nums):            # 1）如果 x 超出 [minK, maxK] 区间，则标记为无效            if x &lt; minK or x &gt; maxK:                last_invalid = i            # 2）记录最新出现 minK 和 maxK 的位置            if x == minK:                last_min = i            if x == maxK:                last_max = i            # 3）计算以 i 结尾的合法子数组个数            #    起始点 j 必须 &gt; last_invalid，且 ≤ min(last_min, last_max)            valid_start = min(last_min, last_max)            if valid_start &gt; last_invalid:                count += (valid_start - last_invalid)        return count\n以 nums = [1,3,5,2,7,5], minK = 1, maxK = 5为例：\n\n\n\ni\nnums[i]\nlast_invalid\nlast_min\nlast_max\nmin(last_min, last_max)\n新增子数组 = max(0, min–last_invalid)\n累计 count\n\n\n\n\n-1\n—\n-1\n-1\n-1\n—\n—\n0\n\n\n0\n1\n-1\n0\n-1\n-1\nmax(0, -1 − (-1)) = 0\n0\n\n\n1\n3\n-1\n0\n-1\n-1\nmax(0, -1 − (-1)) = 0\n0\n\n\n2\n5\n-1\n0\n2\n0\nmax(0, 0 − (-1)) = 1\n1\n\n\n3\n2\n-1\n0\n2\n0\nmax(0, 0 − (-1)) = 1\n2\n\n\n4\n7 (&gt;5)\n4\n0\n2\n0\nmax(0, 0 − 4) = 0\n2\n\n\n5\n5\n4\n0\n5\n0\nmax(0, 0 − 4) = 0\n2\n\n\n\n\ni=2 时，nums[2]=5，更新 last_max=2，此时 min(last_min,last_max)=0，新增子数组有 1 个，即 [1,3,5]。\ni=3 时，nums[3]=2，没有更新 last_min/last_max，但依然可延伸前面那个“有效段”贡献 1 个，即 [1,3,5,2]。\ni=4 时跳到 7（无效），last_invalid=4，后续以任何 i≥4 结尾的子数组都必须从 5 之后开始；此时在位置 5 上虽然又出现了 maxK，但最早的 minK 还是在 0，所以 min(last_min,last_max)=0≤ last_invalid=4，无有效子数组。\n\n最终总数为 2。\n边界\n\nminK == maxK\n算法依然适用，此时要求子数组内所有元素都等于同一个值 K，也就统计所有连续等于 K 的子数组个数。\n数组中无 minK 或 maxK\n某一关键位置永远为 −1，则 min(last_min,last_max) = −1，每次贡献都为 0，最终答案 0。\n整型溢出\n累加次数最多是 O(n2/2)\\mathcal{O}(n^2/2)O(n2/2) 级别（当所有子数组都合法时），对于 n≤ 10510^5105，要用 64 位整型（Python 中 int 自动大整型）。\n\n","categories":["算法"],"tags":["Algorithm","困难","滑动窗口","双指针"]},{"title":"LeetCode每日一题2025-04-25","url":"/post/count-of-interesting-subarrays.html","content":"2845. 统计趣味子数组的数目 M\n给你一个下标从 0 开始的整数数组 nums ，以及整数 modulo 和整数 k 。\n请你找出并统计数组中 趣味子数组 的数目。\n如果 子数组 nums[l..r] 满足下述条件，则称其为 趣味子数组 ：\n\n在范围 [l, r] 内，设 cnt 为满足 nums[i] % modulo == k 的索引 i 的数量。并且 cnt % modulo == k 。\n\n以整数形式表示并返回趣味子数组的数目。\n注意： 子数组是数组中的一个连续非空的元素序列。\n示例 1：\n\n输入：nums = [3,2,4], modulo = 2, k = 1\n输出：3\n解释：在这个示例中，趣味子数组分别是：\n子数组 nums[0…0] ，也就是 [3] 。\n\n在范围 [0, 0] 内，只存在 1 个下标 i = 0 满足 nums[i] % modulo == k 。\n因此 cnt = 1 ，且 cnt % modulo == k 。\n子数组 nums[0…1] ，也就是 [3,2] 。\n在范围 [0, 1] 内，只存在 1 个下标 i = 0 满足 nums[i] % modulo == k 。\n因此 cnt = 1 ，且 cnt % modulo == k 。\n子数组 nums[0…2] ，也就是 [3,2,4] 。\n在范围 [0, 2] 内，只存在 1 个下标 i = 0 满足 nums[i] % modulo == k 。\n因此 cnt = 1 ，且 cnt % modulo == k 。\n可以证明不存在其他趣味子数组。因此，答案为 3 。\n\n\n示例 2：\n\n输入：nums = [3,1,9,6], modulo = 3, k = 0\n输出：2\n解释：在这个示例中，趣味子数组分别是：\n子数组 nums[0…3] ，也就是 [3,1,9,6] 。\n\n在范围 [0, 3] 内，只存在 3 个下标 i = 0, 2, 3 满足 nums[i] % modulo == k 。\n因此 cnt = 3 ，且 cnt % modulo == k 。\n子数组 nums[1…1] ，也就是 [1] 。\n在范围 [1, 1] 内，不存在下标满足 nums[i] % modulo == k 。\n因此 cnt = 0 ，且 cnt % modulo == k 。\n可以证明不存在其他趣味子数组，因此答案为 2 。\n\n\n提示：\n\n1 &lt;= nums.length &lt;= 10510^5105\n1 &lt;= nums[i] &lt;= 10910^9109\n1 &lt;= modulo &lt;= 10910^9109\n0 &lt;= k &lt; modulo\n\n问题分析\n我们要统计子数组中满足以下两个条件的子数组个数：\n\n在子数组范围内，满足 nums[i] % modulo == k 的元素个数记为 cnt\n且 cnt % modulo == k\n\n算法思路\n\n\n为了更方便地计数，我们先把原数组 nums 转换成一个二值数组 b：\nb[i] = 1 if nums[i] % modulo == k else 0\n此时，任意子数组 [l..r] 中满足条件的元素个数\n就是 b[l] + b[l+1] + … + b[r]。\n\n\n引入前缀和 + 模运算\n定义前缀和数组 P，并对 modulo 取模，使得计算更简单：\nP[0] = 0P[i] = (b[0] + b[1] + … + b[i-1]) % modulo    （1 ≤ i ≤ n）\n\n注意：P[i] 表示前 i 个元素（即 b[0..i-1]）的和 mod modulo\n\n那么子数组 [l..r] 的“有趣计数” cnt = b[l] + … + b[r]，可以写成：\ncnt = (P[r+1] - P[l] + modulo) % modulo\n我们需要 cnt % modulo == k，即\n(P[r+1] - P[l]) % modulo == k⇔ P[r+1] ≡ P[l] + k   (modulo)⇔ P[l] ≡ P[r+1] - k   (modulo)\n\n\n利用哈希表计数\n由上面等式可知：在遍历到位置 r（即计算出 P[r+1]）时，我们只要知道有多少个 l &lt; r+1 使得\nP[l]≡(P[r+1]−k) mod moduloP[l] \\equiv (P[r+1] - k) \\bmod \\text{modulo}\nP[l]≡(P[r+1]−k)modmodulo\n即可将这些子数组都计入答案。因此，我们用一个哈希表 cntMap 来维护“每种前缀和出现的次数”：\n\n键：某个值 v 表示前缀和 P[*] = v\n值：该前缀和出现了多少次\n\n\n\n时间复杂度\n时间复杂度：\n\n遍历一次数组，共 n 步\n每步中哈希表的查询与更新均摊 O(1) → 总体 O(n)\n\n空间复杂度：哈希表 cntMap 最多存储 O(min(n, modulo)) 个不同的前缀和值 → 最坏 O(n)，通常远小于 n\n代码分解\n\n\n初始化\ncntMap = defaultdict(int)cntMap[0] = 1cur = 0    # 当前前缀和 P[i]（初始化为 P[0]）ans = 0\n\ncntMap[0] = 1：表示空前缀（即 P[0]）出现 1 次，便于统计以开头就满足条件的子数组\n\n\n\n遍历数组\n对于每个 x = nums[i]，更新：\nif x % modulo == k:    cur = (cur + 1) % modulo# 此时 cur = P[i+1]\n\n\n查询并累加\n计算目标前缀和值：\ntarget = (cur - k + modulo) % moduloans += cntMap[target]\n这一步相当于“找到所有 l，使得 P[l] == target”，将其数量直接加到答案中\n\n\n更新哈希表\ncntMap[cur] += 1\n将当前前缀和也记入哈希表，以便后续作为 l 被使用\n\n\n遍历结束后，ans 即为所有“趣味子数组”的总数\n代码实现\nfrom collections import defaultdictfrom typing import Listclass Solution:    def countInterestingSubarrays(self, nums: List[int], modulo: int, k: int) -&gt; int:        # b[i] = 1 if nums[i] % modulo == k else 0        # 前缀和计数映射        cntMap = defaultdict(int)        cntMap[0] = 1    # 初始：空前缀和为 0 出现过一次                cur = 0          # 当前前缀和（modulo 取模后）        ans = 0                for x in nums:            # 转换 b[i] 并更新前缀和            if x % modulo == k:                cur = (cur + 1) % modulo                        # 计算能与当前前缀和配对的目标值            target = (cur - k + modulo) % modulo            ans += cntMap[target]                        # 记录当前前缀和出现次数            cntMap[cur] += 1                return ans\n以 nums = [3,2,4]，modulo = 2，k = 1 为例：\n\n\n\ni\nnums[i]\nnums[i]%2==1?\nb[i]\ncur (P[i+1])\ntarget=(cur−k)%2\ncntMap before\n新增 ans\ncntMap after\n\n\n\n\n初始\n\n\n\ncur = 0\n\n{0:1}\n0\n{0:1}\n\n\ni=0\n3\n是\n1\n(0+1)%2 = 1\n(1-1)%2 = 0\n{0:1}\n+1 → 1\n{0:1, 1:1}\n\n\ni=1\n2\n否\n0\n(1+0)%2 = 1\n(1-1)%2 = 0\n{0:1,1:1}\n+1 → 2\n{0:1, 1:2}\n\n\ni=2\n4\n否\n0\n(1+0)%2 = 1\n(1-1)%2 = 0\n{0:1,1:2}\n+1 → 3\n{0:1, 1:3}\n\n\n\n\n\ni=0：cur=1，target=0，cntMap[0]=1，ans=1\n\n\ni=1：cur=1，target=0，cntMap[0]=1，ans=2\n\n\ni=2：cur=1，target=0，cntMap[0]=1，ans=3\n\n\n","categories":["算法"],"tags":["Algorithm","中等","数据结构","哈希表","前缀和"]},{"title":"LeetCode每日一题2025-04-24","url":"/post/count-complete-subarrays-in-an-array.html","content":"2799. 统计完全子数组的数目 M\n给你一个由 正 整数组成的数组 nums 。\n如果数组中的某个子数组满足下述条件，则称之为 完全子数组 ：\n\n子数组中 不同 元素的数目等于整个数组不同元素的数目。\n\n返回数组中 完全子数组 的数目。\n子数组 是数组中的一个连续非空序列。\n示例 1：\n\n输入：nums = [1,3,1,2,2]\n输出：4\n解释：完全子数组有：[1,3,1,2]、[1,3,1,2,2]、[3,1,2] 和 [3,1,2,2] 。\n\n示例 2：\n\n输入：nums = [5,5,5,5]\n输出：10\n解释：数组仅由整数 5 组成，所以任意子数组都满足完全子数组的条件。子数组的总数为 10 。\n\n提示：\n\n1 &lt;= nums.length &lt;= 1000\n1 &lt;= nums[i] &lt;= 2000\n\n问题分析\n\n\n给定正整数数组 nums，长度为 n（≤1000\\le 1000≤1000）。\n\n\n记数组 nums 中 不同 元素的总数为 KKK。\n\n\n我们需要统计「子数组中不同元素数 等于KKK」的子数组个数。\n\n\n算法思路\n暴力枚举：枚举左端点 i (0⋯n−1)i\\text{ }(0\\cdots n-1)i (0⋯n−1) ，再枚举右端点 j (i⋯n−1)j\\text{ }(i\\cdots n-1)j (i⋯n−1)，对每个子数组 nums[i:j+1] 用哈希或 set 统计不同元素数，再对比是否等于 KKK。\n时间复杂度：\n\n枚举子数组一共 O(n2)O(n^2)O(n2)\n每个子数组去重也要 O(n)O(n)O(n)\n合计 O(n3)O(n^3)O(n3)，在 n=1000n=1000n=1000 时是不可行的（10910^9109 级别的操作）。\n\n\n暴力+优化也可通过测试：采用双重循环遍历所有可能的子数组，并检查每个子数组是否符合条件，对于每一个起始索引 i，逐步扩展结束索引 j，使用集合记录当前子数组中的元素。一旦集合大小达到整个数组的不同元素数量，则计数加一；若超过该数量则提前终止内层循环，时间复杂度最坏为O(n2)O(n^2)O(n2)\nclass Solution:    def countCompleteSubarrays(self, nums: List[int]) -&gt; int:        total_unique = len(set(nums))        if total_unique == 0:            return 0                K = total_unique        result = 0        n = len(nums)                for i in range(n):            current_set = set()            for j in range(i, n):                current_set.add(nums[j])                if len(current_set) == K:                    result += 1                elif len(current_set) &gt; K:                    break  # 一旦超出所需的唯一计数，就不需要检查其他元素        return result\n\n我们令函数\nF(k)=“不同元素数≤k”的子数组数量.F(k) = \\text{“不同元素数} \\leq k \\text{”的子数组数量}.\nF(k)=“不同元素数≤k”的子数组数量.\n则恰好等于 KKK 的子数组数目\n#{distinct=K}=F(K)−F(K−1).\\#\\{\\text{distinct} = K\\} = F(K) - F(K - 1).\n#{distinct=K}=F(K)−F(K−1).\n所有「不同数 ≤K\\le K≤K」的子数组共 F(K)F(K)F(K) 个，\n但其中也包括「不同数 ≤K−1\\le K−1≤K−1」的 F(K−1)F(K-1)F(K−1) 个，\n二者相减，即剩下「不同数恰好 = KKK」的部分。\n使用滑动窗口 + 双指针：\n\n窗口定义\n\n左指针 i，右指针 j，初始都指向 0。\n窗口 nums[i…j] 内维护哈希表 count，记录每个数字出现的次数。\n变量 distinct 表示当前窗口内 不同 元素的个数。\n\n\n右指针扩展\n\n遍历 j 从 0 到 n−1n-1n−1：\n\n将 nums[j] 加入窗口：若原来 count[nums[j]]==0，则 distinct += 1；再 count[nums[j]] += 1。\n\n\n\n\n左指针收缩\n\n当 distinct &gt; k 时，需要不断移动左指针 i：\n\n从窗口移出 nums[i]：count[nums[i]] -= 1；若 count[nums[i]] 变为 0，则 distinct -= 1；然后 i += 1\n\n\n收缩后，窗口再次保证 distinct ≤ k。\n\n\n计数子数组\n\n对于每一个新的 j 位置，当前窗口 所包含的所有合法子数组（以 j 为右端）数量就是窗口长度：j - i + 1。\n\n因为任意左端点 LLL 满足 i≤L≤ji \\le L \\le ji≤L≤j，子数组 nums[L…j] 都有 distinct ≤ k。\n\n\n\n\n累加结果\n\n对每个 j，将 j - i + 1 累加到 res，最终 res = F(k)。\n\n\n\n以 nums = [1,3,1,2,2]，k=2k=2k=2 为例，计算「不同数 ≤2\\le 2≤2」的子数组数：\n\n\n\n步骤\nj\n加入 nums[j]\nwindow\ndistinct\ni\n新增子数组数 j−i+1\n累计 res\n\n\n\n\n初始化\n—\n—\n[]\n0\n0\n—\n0\n\n\n1\n0\n1\n[1]\n1\n0\n0−0+1 = 1\n1\n\n\n2\n1\n3\n[1,3]\n2\n0\n1−0+1 = 2\n3\n\n\n3\n2\n1\n[1,3,1]\n2\n0\n2−0+1 = 3\n6\n\n\n4\n3\n2 → distinct=3\n[1,3,1,2] → 收缩 → [3,1,2]\n2 → 经过收缩\n1\n3−1+1 = 3\n9\n\n\n5\n4\n2\n[3,1,2,2]\n3→收缩→2\n2\n4−2+1 = 3\n12\n\n\n\n最终我们得到 F(2) = 12。\n类似地可以算出 F(1)，最后 F(2) - F(1) 就是「不同数恰好 =2=2=2」的子数组数。\n时间复杂度\n\n时间复杂度：一次 atMost 为 O(n)O(n)O(n)，每个元素最多进出窗口各一次共两次，故 O(n)O(n)O(n)\n空间复杂度：哈希表存储最多 nnn 个键，故 O(n)O(n)O(n)\n\n代码分解\n\n\n用「≤K\\le K≤K」和「≤K−1\\le K−1≤K−1」之差得到「=K=K=K」。\n\n\n滑动窗口维护「不同元素数 ≤k\\le k≤k」的区间，通过左右指针一遍扫描完成。\n\n\n累加 (j - i + 1) 即可统计当前右端下所有合法子数组。\n\n\n代码实现\nclass Solution:    def countCompleteSubarrays(self, nums):        # 整体不同元素个数        K = len(set(nums))        # 计算「不同元素 ≤ k」的子数组数量        def atMost(k):            count = &#123;&#125;       # 哈希表：元素 -&gt; 频次            res = 0            distinct = 0     # 当前窗口中不同元素数            left = 0         # 窗口左指针            for right, x in enumerate(nums):                # 右指针加入                if count.get(x, 0) == 0:                    distinct += 1                count[x] = count.get(x, 0) + 1                # 如果超过 k，左指针收缩                while distinct &gt; k:                    y = nums[left]                    count[y] -= 1                    if count[y] == 0:                        distinct -= 1                    left += 1                # 以 right 为结尾的「不同元素 ≤ k」子数组有 (right - left + 1) 个                res += right - left + 1            return res        # 答案 = 至多 K 不同 − 至多 (K-1) 不同        return atMost(K) - atMost(K - 1)\n","categories":["算法"],"tags":["Algorithm","中等","滑动窗口","哈希表","双指针"]},{"title":"LeetCode每日一题2025-04-23","url":"/post/count-largest-group.html","content":"1399. 统计最大组的数目 E\n给你一个整数 n 。请你先求出从 1 到 n 的每个整数 10 进制表示下的数位和（每一位上的数字相加），然后把数位和相等的数字放到同一个组中。\n请你统计每个组中的数字数目，并返回数字数目并列最多的组有多少个。\n示例 1：\n\n输入：n = 13\n输出：4\n解释：总共有 9 个组，将 1 到 13 按数位求和后这些组分别是：\n[1,10]，[2,11]，[3,12]，[4,13]，[5]，[6]，[7]，[8]，[9]。总共有 4 个组拥有的数字并列最多。\n\n示例 2：\n\n输入：n = 2\n输出：2\n解释：总共有 2 个大小为 1 的组 [1]，[2]。\n\n示例 3：\n\n输入：n = 15\n输出：6\n\n示例 4：\n\n输入：n = 24\n输出：5\n\n提示：\n\n1 &lt;= n &lt;= 10410^4104\n\n问题分析\n给定一个整数 n，计算从1到n的每个数字的十进制位数和，并将具有相同位数和的数字分组。统计各组大小并找出最大值出现的次数。\n算法思路\n\n计算每位数字的和：遍历每个数字 i，将各位相加得到其和。\n统计每种和的频率：使用字典记录每个位数和对应有多少个数字。\n找出最大组大小及对应的组数量：\n\n找出所有组中的最大组大小。\n统计有多少个不同的位数和的组达到该最大值。\n\n\n\n时间复杂度\n\n计算位数和：对于每个数字 iii，分解其各位需要 O(log⁡i)O(\\log i)O(logi) 的时间（由于每次除以10）。总时间为 O(n×log⁡n)O(n \\times \\log n)O(n×logn)。\n统计与查找最大值：遍历所有键值对的时间为 O(k)O(k)O(k)，其中 kkk 是不同位数和的组的数量。在最坏情况下 kkk 约为 37（例如数字 9999 的各位和是 9+9+9+9 = 36），因此这部分可以视为常量时间。\n\n总的时间复杂度：O(nlog⁡n)O(n \\log n)O(nlogn)，对于 n ≤ 10410^4104 是可接受的。\n\n使用字典存储不同位数和对应的计数值，空间复杂度为 O(k)O(k)O(k)。最坏情况下 k≈O(log⁡n)k \\approx O(\\log n)k≈O(logn)（例如所有数字位数和都唯一），因此是线性空间。\n\n代码分解\n\n初始化字典groups\n从1遍历到n，计算 i 的数位和，在 groups 中将对应键的计数加 1\n计算出最大频次 max_size\n遍历 groups，统计有多少个键的值等于 max_size 并返回\n\n代码实现\nfrom collections import defaultdictclass Solution:    def countLargestGroup(self, n: int) -&gt; int:        # 使用字典统计每个数位和出现的次数        groups = defaultdict(int)                for i in range(1, n + 1):            # 计算当前数字i的十进制各位之和            digit_sum = sum(map(int, str(i)))            groups[digit_sum] += 1                if not groups:            return 0                # 找出最大的组大小        max_size = max(groups.values())                # 统计有多少个组达到了这个最大值        return sum(1 for size in groups.values() if size == max_size)\n","categories":["算法"],"tags":["Algorithm","枚举与剪枝","暴力搜索","数位处理","简单"]},{"title":"LeetCode每日一题2025-04-22","url":"/post/count-the-number-of-ideal-arrays.html","content":"2338. 统计理想数组的数目 H\n给你两个整数 n 和 maxValue ，用于描述一个 理想数组 。\n对于下标从 0 开始、长度为 n 的整数数组 arr ，如果满足以下条件，则认为该数组是一个 理想数组 ：\n\n每个 arr[i] 都是从 1 到 maxValue 范围内的一个值，其中 0 &lt;= i &lt; n 。\n每个 arr[i] 都可以被 arr[i - 1] 整除，其中 0 &lt; i &lt; n 。\n\n返回长度为 n 的 不同 理想数组的数目。由于答案可能很大，返回对 109+710^9 + 7109+7 取余的结果。\n示例 1：\n\n输入：n = 2, maxValue = 5\n输出：10\n解释：存在以下理想数组：\n\n以 1 开头的数组（5 个）：[1,1]、[1,2]、[1,3]、[1,4]、[1,5]\n以 2 开头的数组（2 个）：[2,2]、[2,4]\n以 3 开头的数组（1 个）：[3,3]\n以 4 开头的数组（1 个）：[4,4]\n以 5 开头的数组（1 个）：[5,5]\n共计 5 + 2 + 1 + 1 + 1 = 10 个不同理想数组。\n\n\n示例 2：\n\n输入：n = 5, maxValue = 3\n输出：11\n解释：存在以下理想数组：\n\n以 1 开头的数组（9 个）：\n\n不含其他不同值（1 个）：[1,1,1,1,1]\n含一个不同值 2（4 个）：[1,1,1,1,2], [1,1,1,2,2], [1,1,2,2,2], [1,2,2,2,2]\n含一个不同值 3（4 个）：[1,1,1,1,3], [1,1,1,3,3], [1,1,3,3,3], [1,3,3,3,3]\n\n\n以 2 开头的数组（1 个）：[2,2,2,2,2]\n以 3 开头的数组（1 个）：[3,3,3,3,3]\n共计 9 + 1 + 1 = 11 个不同理想数组。\n\n\n提示：\n\n\n2 &lt;= n &lt;= 10410^4104\n\n\n1 &lt;= maxValue &lt;= 10410^4104\n\n\n问题分析\n注意到：\n\n\n任意理想数组 ai{a_i}ai​ 满足 1≤a0∣a1∣⋯∣an−1=y, ai≤maxValue1\\le a_0\\mid a_1\\mid\\cdots\\mid a_{n-1}= y,\\text{ }a_i\\le \\text{maxValue}1≤a0​∣a1​∣⋯∣an−1​=y, ai​≤maxValue 。\n\n\n对于固定的末尾值 y≤maxValuey\\le\\mathrm{maxValue}y≤maxValue，从 1 变到 yyy 的“除数链”可看作在每个质因数方向上“累积指数”的过程（把它的每个质因子 ppp、指数 epe_pep​ 看成要在前 n−1n-1n−1 个“空位”中放 epe_pep​ 个“乘 ppp”操作）。\n\n\n若 y=∏pieiy=\\prod p_i^{e_i}y=∏piei​​，则在长度为 nnn 的链中，需要分配这 eie_iei​ 次“乘以 pip_ipi​”操作到 n−1n-1n−1 个相邻位置上，属于 「Stars and Bars」 模型（ “星星与条纹” ），每种质因子独立，所以总方案数是：\n#{链数}=∏i((n−1)+eiei).\\#\\{\\text{链数}\\}=\\prod_i\\binom{(n-1)+e_i}{e_i}.\n#{链数}=i∏​(ei​(n−1)+ei​​).\n\n\n最后对所有 yyy 累加，并对 109+710^9+7109+7 取模，因此，答案就是\n∑y=1maxValue[∏pe∥y((n−1)+ee)]mod(109+7).\\sum_{y=1}^\\mathrm{maxValue}\\left[\\prod_{p^e\\|y}\\binom{(n-1)+e}{e}\\right]\\mathrm{mod}(10^9+7).\ny=1∑maxValue​​pe∥y∏​(e(n−1)+e​)​mod(109+7).\n\n\n预处理 → 枚举 y=1…maxValue → 分解 y 的质因子 → 用“comb”累乘 → 累加取模 → 返回\n算法思路\n\n预处理阶乘与逆元阶乘，支持快速计算组合数 (ab)\\binom{a}{b}(ba​)。\n用 线性／筛法（SPF 最小质因子）对 [1…maxValue][1\\ldots\\mathrm{maxValue}][1…maxValue] 做一次质因数分解，整体复杂度约 O(maxValuelog⁡log⁡maxValue)O(\\mathrm{maxValue}\\log\\log \\mathrm{maxValue})O(maxValueloglogmaxValue)。\n对每个 yyy 枚举其质因数指数 eie_iei​，累乘组合数即可。\n\n时间复杂度\n\n阶乘 &amp; 逆元：O(n+log⁡maxValue)O(n + \\log \\mathrm{maxValue})O(n+logmaxValue)\nSPF 筛：O(max⁡Valuelog⁡log⁡maxValue)O(\\max\\mathrm{Value}\\log\\log\\mathrm{maxValue})O(maxValueloglogmaxValue)\n主循环：每个 yyy 仅分解一次，总体 O(max⁡Valuelog⁡maxValue)O(\\max\\mathrm{Value}\\log\\mathrm{maxValue})O(maxValuelogmaxValue)\n总体：O(n+max⁡Valuelog⁡log⁡maxValue+max⁡Valuelog⁡maxValue)O(n+\\max\\mathrm{Value}\\log\\log\\mathrm{maxValue}+\\max\\mathrm{Value}\\log\\mathrm{maxValue})O(n+maxValueloglogmaxValue+maxValuelogmaxValue) ，低于DP\n\n空间复杂度：O(n+max⁡Value)O(n+\\max\\mathrm{Value})O(n+maxValue) ，主要用于阶乘数组与 SPF 数组。\n代码实现\nimport mathclass Solution:    def idealArrays(self, n: int, maxValue: int) -&gt; int:        MOD = 10**9 + 7        # —— 1. 预处理：阶乘 &amp; 逆阶乘 ——         # 最大可能的指数增量 ≈ log2(maxValue)        maxE = int(math.log2(maxValue)) + 1        up = n - 1 + maxE        fact = [1] * (up + 1)        invfact = [1] * (up + 1)        for i in range(1, up + 1):            fact[i] = fact[i-1] * i % MOD        invfact[up] = pow(fact[up], MOD-2, MOD)        for i in range(up, 0, -1):            invfact[i-1] = invfact[i] * i % MOD        def comb(a: int, b: int) -&gt; int:            if b &lt; 0 or b &gt; a:                 return 0            return fact[a] * invfact[b] % MOD * invfact[a-b] % MOD        # —— 2. SPF 最小质因子筛 ——         spf = list(range(maxValue + 1))        for p in range(2, int(maxValue**0.5) + 1):            if spf[p] == p:                for j in range(p*p, maxValue + 1, p):                    if spf[j] == j:                        spf[j] = p        # —— 3. 主循环：对每个 y 分解、累乘组合数 ——         ans = 0        for y in range(1, maxValue + 1):            ways = 1            v = y            while v &gt; 1:                p = spf[v]                e = 0                while v % p == 0:                    v //= p                    e += 1                # 在 n-1 个间隔里放置 e 次“乘 p”操作                ways = ways * comb((n-1) + e, e) % MOD            ans = (ans + ways) % MOD        return ans\n另看到题解：\nclass Solution:    def idealArrays(self, n: int, maxValue: int) -&gt; int:        MOD = 10**9 + 7        # —— 1. 预处理：组合数 Pascal 三角 ——         maxE = int(math.log2(maxValue)) + 1        up = n - 1 + maxE        C = [[0] * (maxE + 1) for _ in range(up + 1)]        for i in range(up + 1):            C[i][0] = 1            for j in range(1, min(i, maxE) + 1):                C[i][j] = (C[i-1][j] + C[i-1][j-1]) % MOD        # —— 2. 预处理：EXP 质因子指数列表 ——         EXP = [[] for _ in range(maxValue + 1)]        for y in range(2, maxValue + 1):            v = y            p = 2            while p * p &lt;= v:                e = 0                while v % p == 0:                    v //= p                    e += 1                if e:                    EXP[y].append(e)                p += 1            if v &gt; 1:                EXP[y].append(1)        # —— 3. 主循环：对每个 y 累乘组合数 ——         ans = 0        for y in range(1, maxValue + 1):            ways = 1            for e in EXP[y]:                ways = ways * C[n - 1 + e][e] % MOD            ans = (ans + ways) % MOD        return ans\n\nDP 转组合：把「每一步都要保持可整除」的递推，转化为「质因子指数如何在 nnn 个位置上非负分配」的组合计数；\n枚举：对每个可能的末尾值 xxx 计算它的组合数贡献，再求和。\n\n\n\n对于固定的 yyy，它的每个质因子 ppp 在 a0,…,an−1a_0,\\dots,a_{n-1}a0​,…,an−1​ 中的指数序列\ne0=0(不一定为0)≤e1≤⋯≤en−1=E,e_0=0(\\text{不一定为0})\\le e_1\\le\\cdots\\le e_{n−1}=E,\ne0​=0(不一定为0)≤e1​≤⋯≤en−1​=E,\n且 ∑\\sum∑ 个位置上的“增加量”恰好等于 EEE （ e1+e2+...+ek=Ee_1 + e_2 + ... + e_k = Ee1​+e2​+...+ek​=E ）（即 yyy 中该质因子的总指数）。\n\n\n“星星与条纹”：前文已解释\n\n\n实现\n\n预处理每个 x≤maxValuex≤\\text{maxValue}x≤maxValue 的质因数指数列表，EXP[x] 存放 xxx 分解后，每个质因子的指数 [e1,e2,… ][e_1,e_2,\\dots][e1​,e2​,…]。\n预计算组合数 (Nk)\\binom{N}{k}(kN​)：由于 n≤104n\\le10^4n≤104, 指数 EpE_pEp​ 也最多 log⁡2(104)≈14\\log_2(10^4)\\approx14log2​(104)≈14，我们只需算到 N=n+14−1N=n+14-1N=n+14−1。\n用帕斯卡三角，这样 C[N][k] 就是 (Nk) mod (109+7)\\binom{N}{k}\\bmod(10^9+7)(kN​)mod(109+7)。\n枚举所有 x=1…maxValuex=1…maxValuex=1…maxValue，累加它们作为数组末尾的方案数，注意 x=1x=1x=1 时 EXP[1] 为空，res=1，对应 “全 1 数组” 这一类。\n\n\n\n复杂度：\n\n质因数分解：∑x=1Mx=O(M3/2)\\sum_{x=1}^{M}\\sqrt{x}=O(M^{3/2})∑x=1M​x​=O(M3/2)，这里 M=maxValue≤104M=\\text{maxValue}\\le10^4M=maxValue≤104 足够快。\n组合数预处理：O((n+max⁡E)×max⁡E)≈O(n⋅log⁡M)O\\bigl((n+\\max E)\\times \\max E\\bigr)\\approx O(n\\cdot\\log M)O((n+maxE)×maxE)≈O(n⋅logM)。\n枚举累加：O(M×(平均质因子数))≈O(Mlog⁡M)O\\bigl(M\\times (\\text{平均质因子数})\\bigr)\\approx O(M\\log M)O(M×(平均质因子数))≈O(MlogM)。\n\n\n\n\n\n\n特性\n第一个实现（阶乘 + 逆元 comb + SPF 筛分解）\n第二个实现（Pascal 组合表 + 试除分解）\n\n\n\n\n组合数计算\n预计算 fact 和 invfact 数组，用公式 (ab)=fact[a]fact[b]×fact[a−b]mod  p\\binom{a}{b} = \\frac{\\text{fact}[a]}{\\text{fact}[b] \\times \\text{fact}[a - b]} \\mod p(ba​)=fact[b]×fact[a−b]fact[a]​modp 每次 O(1)O(1)O(1) 快速计算\n用帕斯卡三角预计算 C[i][j]=(ij)C[i][j] = \\binom{i}{j}C[i][j]=(ji​) 查询时直接 O(1)O(1)O(1) 取表\n\n\n质因子分解\n先用线性/埃氏思路构造 SPF（最小质因子）表 spf[i]spf[i]spf[i] 分解时不断 v//=spf[v]v //= spf[v]v//=spf[v]，复杂度约 O(log⁡v)O(\\log{v})O(logv)\n每个 xxx 用试除法 x\\sqrt{x}x​ 搜索素因子，累计其指数\n\n\n预处理时间\n构造 fact, invfact：O(n+max⁡E)O(n + \\max E)O(n+maxE)（再加一次快速幂取逆）  构造 SPF：O(Mlog⁡log⁡M)O(M \\log \\log M)O(MloglogM)\n构造 CCC 表：O((n+max⁡E)×max⁡E)O\\bigl((n + \\max E) \\times \\max E\\bigr)O((n+maxE)×maxE)  试除分解：∑x=1MO(x)≈O(M3/2)\\sum_{x=1}^M O(\\sqrt{x}) \\approx O(M^{3/2})∑x=1M​O(x​)≈O(M3/2)\n\n\n空间开销\n两个长度 n+max⁡En + \\max En+maxE 的数组 + 一个长度 MMM 的 SPF 数组\nCCC 表大约 (n+max⁡E)×(max⁡E)(n + \\max E) \\times (\\max E)(n+maxE)×(maxE) 个整数\n\n\n适用场景\n当  max⁡Value\\max{Value}maxValue 更大（比如 10510^5105 、10610^6106） 时，SPF 分解会更快、更稳，阶乘逆元计算组合数也更节省空间\nn,max⁡Value≤104n, \\max{Value} \\le 10^4n,maxValue≤104 都较小，预先填表和试除都能在 1–2s 内完成\n\n\n代码复杂度\n略微复杂一些，需要处理逆元和 SPF 数组\n直观易懂，组合表和试除都很朴素\n\n\n\nQwen QWQ 32b给出的解，思路大致相同\n(预处理最小质因数 → 质因数分解存储 → 阶乘与逆元预计算 → DP到组合数学 → 前缀和优化)：\nclass Solution:    def idealArrays(self, n: int, maxValue: int) -&gt; int:        MOD = 10**9 + 7        t = n - 1        if t == 0:            return maxValue % MOD                max_num = maxValue                # 步骤 1：计算筛的 min_prime 数组.        min_prime = [0] * (max_num + 1)        for i in range(2, max_num + 1):            if min_prime[i] == 0:                min_prime[i] = i                for j in range(i*i, max_num+1, i):                    if min_prime[j] == 0:                        min_prime[j] = i                # 预计算 factor_list[m]：从质数到指数的字典.        factor_list = [&#123;&#125; for _ in range(max_num + 1)]                for m in range(2, max_num + 1):            num = m            factors = &#123;&#125;            while num &gt; 1:                p = min_prime[num]                cnt = 0                while num % p == 0:                    cnt += 1                    num //= p                factors[p] = cnt            factor_list[m] = factors.copy() if factors else &#123;&#125;                # 步骤 2：预计算 fact 和 inv_fact，最多 N=2e5.        N_fact = 2 * 10**5        fact = [1] * (N_fact + 1)        for i in range(1, N_fact + 1):            fact[i] = (fact[i-1] * i) % MOD                inv_fact = [1]*(N_fact + 1)        inv_fact[N_fact] = pow(fact[N_fact], MOD -2, MOD)        for i in range(N_fact -1, -1, -1):            inv_fact[i] = (inv_fact[i+1] * (i+1)) % MOD                # 步骤 3：计算 fm 数组.        fm = [0]*(max_num + 1)  # 从 0 到 maxValue 的索引.                for m in range(1, max_num + 1):            if m == 1:                factors_dict = &#123;&#125;            else:                factors_dict = factor_list[m]                        product = 1            for p in factors_dict:                a_i = factors_dict[p]                n_val = a_i + t - 1                k_val = t - 1                                # 选择 k 和 (n_val -k) 之间的较小值，以减少计算量.                if k_val &gt; (n_val - k_val):                    k_val = n_val - k_val                                # 计算 C(n_val, k_val)                c_n_k = fact[n_val] * inv_fact[k_val] % MOD                c_n_k = c_n_k * inv_fact[n_val - k_val] % MOD                product = (product * c_n_k) % MOD                        fm[m] = product                # 计算前缀数组.        prefix = [0]*(max_num + 1)        for i in range(1, max_num+1):            prefix[i] = (prefix[i-1] + fm[i]) % MOD                res = 0        for a_val in range(1, maxValue + 1):            m_max = maxValue // a_val            res += prefix[m_max]            res %= MOD                return res\n","categories":["算法"],"tags":["Algorithm","枚举与剪枝","困难","组合数学","快速幂"]},{"title":"LeetCode每日一题2025-04-21","url":"/post/count-the-hidden-sequences.html","content":"2145. 统计隐藏数组数目 M\n给你一个下标从 0 开始且长度为 n 的整数数组 differences ，它表示一个长度为 n + 1 的 隐藏 数组 相邻 元素之间的 差值 。更正式的表述为：我们将隐藏数组记作 hidden ，那么 differences[i] = hidden[i + 1] - hidden[i] 。\n同时给你两个整数 lower 和 upper ，它们表示隐藏数组中所有数字的值都在 闭 区间 [lower, upper] 之间。\n\n比方说，differences = [1, -3, 4] ，lower = 1 ，upper = 6 ，那么隐藏数组是一个长度为4 且所有值都在 1 和 6 （包含两者）之间的数组。\n\n[3, 4, 1, 5] 和 [4, 5, 2, 6] 都是符合要求的隐藏数组。\n[5, 6, 3, 7] 不符合要求，因为它包含大于 6 的元素。\n[1, 2, 3, 4] 不符合要求，因为相邻元素的差值不符合给定数据。\n\n\n\n请你返回 符合 要求的隐藏数组的数目。如果没有符合要求的隐藏数组，请返回 0 。\n示例 1：\n\n输入：differences = [1,-3,4], lower = 1, upper = 6\n输出：2\n解释：符合要求的隐藏数组为：\n\n[3, 4, 1, 5]\n[4, 5, 2, 6]\n\n所以返回 2 。\n\n示例 2：\n\n输入：differences = [3,-4,5,1,-2], lower = -4, upper = 5\n输出：4\n解释：符合要求的隐藏数组为：\n\n[-3, 0, -4, 1, 2, 0]\n[-2, 1, -3, 2, 3, 1]\n[-1, 2, -2, 3, 4, 2]\n[0, 3, -1, 4, 5, 3]\n\n所以返回 4 。\n\n示例 3：\n\n输入：differences = [4,-7,2], lower = 3, upper = 6\n输出：0\n解释：没有符合要求的隐藏数组，所以返回 0 。\n\n提示：\n\nn == differences.length\n1 &lt;= n &lt;= 10510^5105\n−105-10^5−105 &lt;= differences[i] &lt;= 10510^5105\n−105-10^5−105 &lt;= lower &lt;= upper &lt;= 10510^5105\n\n问题分析\n\n\n前缀和（Prefix Sums）\n定义\nP0=0,Pi=∑k=0i−1differences[k](1≤i≤n).P_0=0,\\quad P_i=\\sum_{k=0}^{i-1}\\text{differences}[k]\\quad(1\\leq i\\leq n).\nP0​=0,Pi​=k=0∑i−1​differences[k](1≤i≤n).\n则隐藏数组第 iii 个元素有\nhidden[i]=hidden[0]+Pi.\\text{hidden}[i]=\\text{hidden}[0]+P_i.\nhidden[i]=hidden[0]+Pi​.\n\n\n区间约束转化\n要保证所有元素都在 [lower,  upper][\\text{lower},\\;\\text{upper}][lower,upper] 之间，即对所有 0≤i≤n0\\le i\\le n0≤i≤n 都有\nlower≤hidden[0]+Pi≤upper.\\text{lower}\\le \\text{hidden}[0]+P_i \\le \\text{upper}.\nlower≤hidden[0]+Pi​≤upper.\n等价于\nmax⁡i(hidden[0]+Pi)≤upper⟹hidden[0]≤upper−max⁡iPi,\\max_{i}\\bigl(\\mathrm{hidden}[0] + P_{i}\\bigr) \\leq \\mathrm{upper} \\quad\\Longrightarrow\\quad \\mathrm{hidden}[0] \\leq \\mathrm{upper} - \\max_{i} P_{i},\nimax​(hidden[0]+Pi​)≤upper⟹hidden[0]≤upper−imax​Pi​,\nmin⁡i(hidden[0]+Pi)≥lower⟹hidden[0]≥lower−min⁡iPi.\\min_{i}\\bigl(\\mathrm{hidden}[0] + P_{i}\\bigr) \\geq \\mathrm{lower} \\quad\\Longrightarrow\\quad \\mathrm{hidden}[0] \\geq \\mathrm{lower} - \\min_{i} P_{i}.\nimin​(hidden[0]+Pi​)≥lower⟹hidden[0]≥lower−imin​Pi​.\nhidden[0]≤upper−max⁡iPi,hidden[0]≥lower−min⁡iPi.\\mathrm{hidden}[0]\\leq\\mathrm{upper}-\\max_iP_i,\\quad\\mathrm{hidden}[0]\\geq\\mathrm{lower}-\\min_iP_i.\nhidden[0]≤upper−imax​Pi​,hidden[0]≥lower−imin​Pi​.\n\n\n可行起始值个数\n记 minP=min⁡iPi,maxP=max⁡iPiminP=\\min_iP_i,maxP=\\max_iP_iminP=mini​Pi​,maxP=maxi​Pi​ 。\n那么\nhidden[0]∈[lower−min⁡P,upper−max⁡P],\\mathrm{hidden}[0]∈[\\mathrm{lower}−\\min\\text{P},\\mathrm{upper}−\\max\\text{P}],\nhidden[0]∈[lower−minP,upper−maxP],\n区间长度（整数个数）为\n( upper−maxP)−( lower−minP)+1=(upper−lower)−(maxP−minP)+1.(\\mathrm{~upper}-maxP)-(\\mathrm{~lower}-minP)+1=(\\mathrm{upper}-\\mathrm{lower})-(maxP-minP)+1.\n( upper−maxP)−( lower−minP)+1=(upper−lower)−(maxP−minP)+1.\n若该值为负，则答案是0。\n\n\n算法思路\n\n\n遍历一次 differences，用变量 curr 累加差分，实时维护 minP = min(minP, curr) 和 maxP = max(maxP, curr)。\n\n\n根据上面推导，计算可行的 hidden[0] 的左端点 L = lower - minP，右端点 R = upper - maxP。\n\n\n答案即为 max(0, R - L + 1)。\n\n\n时间复杂度\n\n\n算法的时间复杂度为O(n)O(n)O(n)，其中nnn是differences数组的长度。因为只需遍历一次差异数组即可计算所有必要的参数，没有嵌套循环，因此效率较高。\n\n\n仅使用常数级额外空间，故空间复杂度为O(1)O(1)O(1)。\n\n\n代码实现\n# 先求前缀极值再统一算区间class Solution:    def numberOfArrays(self, differences: List[int], lower: int, upper: int) -&gt; int:        # 初始化前缀和的最小值和最大值        minP = 0        maxP = 0        curr = 0                # 遍历差分数组，更新前缀和区间        for d in differences:            curr += d            minP = min(minP, curr)            maxP = max(maxP, curr)                # 计算起始值 hidden[0] 的可行区间 [L, R]        L = lower - minP        R = upper - maxP                # 区间长度即为符合要求的数组个数        return max(0, R - L + 1)\n也可直接把对每个位置的区间约束（本质相同）\nlower≤hidden[0]+Pi≤upper\\mathrm{lower}\\leq\\mathrm{hidden}[0]+P_i\\leq\\mathrm{upper}\nlower≤hidden[0]+Pi​≤upper\n转化为对 hidden[0] 的上下界，并在遍历中不断收缩，最终得出相同可行区间 [max⁡{L‾},min⁡{R‾}][\\max\\{\\underline{L}\\},\\min\\{\\overline{R}\\}][max{L​},min{R}]\n维护上下界\n\n令 curr = P_i，初始 curr = 0。\n看到新的curr就把 hidden[0]≥lower−currents\\mathrm{hidden}[0]\\geq\\mathrm{lower}-\\mathrm{curren}t_shidden[0]≥lower−currents​ 转化为下界 L = lower - curr并往上取最大，把 hidden[0]≤upper−currents\\mathrm{hidden}[0]\\leq\\mathrm{upper}-\\mathrm{curren}t_shidden[0]≤upper−currents​ 转化为上界 R = upper - curr并往下取最小。\n每步累加差分 curr += d 后\n\n若 L &gt; R 则 0，否则 R - L + 1。\n# 遍历中直接收敛上下界from typing import Listclass Solution:    def numberOfArrays(self, differences: List[int], lower: int, upper: int) -&gt; int:        curr = 0        L = lower      # lower - 0        R = upper      # upper - 0        for d in differences:            curr += d            candL = lower - curr            if candL &gt; L:                L = candL            candR = upper - curr            if candR &lt; R:                R = candR        return max(0, R - L + 1)\n","categories":["算法"],"tags":["Algorithm","组合数学","中等","数据结构","前缀和"]},{"title":"LeetCode每日一题2025-04-20","url":"/post/rabbits-in-forest.html","content":"781. 森林中的兔子 M\n森林中有未知数量的兔子。提问其中若干只兔子 “还有多少只兔子与你（指被提问的兔子）颜色相同?” ，将答案收集到一个整数数组 answers 中，其中 answers[i] 是第 i 只兔子的回答。\n给你数组 answers ，返回森林中兔子的最少数量。\n示例 1：\n\n输入：answers = [1,1,2]\n输出：5\n解释：\n两只回答了 “1” 的兔子可能有相同的颜色，设为红色。\n之后回答了 “2” 的兔子不会是红色，否则他们的回答会相互矛盾。\n设回答了 “2” 的兔子为蓝色。\n此外，森林中还应有另外 2 只蓝色兔子的回答没有包含在数组中。\n因此森林中兔子的最少数量是 5 只：3 只回答的和 2 只没有回答的。\n\n示例 2：\n\n输入：answers = [10,10,10]\n输出：11\n\n提示：\n\n1 &lt;= answers.length &lt;= 1000\n0 &lt;= answers[i] &lt; 1000\n\n问题分析\n我们需要根据兔子的回答 answers 数组计算森林中最少的兔子数量。每只回答为 a 的兔子表示其颜色族群中有 a + 1 只兔子（包括自己）。关键在于将相同答案的兔子尽可能分到同一族群，以最小化总数。\n算法思路\n\n\n遍历 answers 数组，使用哈希表 count 统计每个回答值 x 出现的频次 c\n\n\n对于每个不同的 x：\n\n\n每组最多能容纳 x+1 只兔子；\n\n\n如果有 c 只兔子都回答了 x，则需要的组数为：\ngroups=⌈cx+1⌉\\text{groups} = \\left\\lceil \\frac{c}{x+1} \\right\\rceil\ngroups=⌈x+1c​⌉\n\n\n每个族群贡献 x + 1 只兔子，这些组中总兔子数为：\ngroups×(x+1)\\text{groups} \\times (x+1)\ngroups×(x+1)\n\n\n\n\n将所有不同回答值对应的最少兔子数累加，即可得到森林中兔子的最少数量。\n\n\n时间复杂度\n\n统计频率的时间复杂度：O(n)O(n)O(n)，其中数组长度 n=answers.lengthn=answers.lengthn=answers.length ，因为仅需一次遍历统计，再对哈希表键值进行遍历。\n分组计算的时间复杂度：O(m)O(m)O(m)，其中 mmm 是不同答案的个数 (m≤n)(m ≤ n)(m≤n)。因此总时间复杂度为 O(n)O(n)O(n)。\n空间复杂度：O(m)O(m)O(m)，其中 mmm 是不同回答值的数量，最坏情况 m=nm = nm=n。\n\n代码分解\n\n统计答案频率：使用 collections.Counter 记录每个回答的出现次数。\n分组计算：\n\n对于每个回答x和对应的计数c：\n\n分组数目为 (c + x) // (x + 1)（使用整数运算 (c + group_size - 1) // group_size 来替代向上取整）。\n总兔子数累加 groups * (x + 1)。\n\n\n\n\n\n代码实现\nfrom collections import Counterfrom typing import Listclass Solution:    def numRabbits(self, answers: List[int]) -&gt; int:        count = Counter(answers)        total = 0        for x, c in count.items():            # 每组容量为 x+1            group_size = x + 1            # 计算需要的最少族群数量（ceil(c / group_size)向上取整）            groups = (c + group_size - 1) // group_size            # 累加该回答值对应的最少兔子数            total += groups * group_size        return total\n","categories":["算法"],"tags":["Algorithm","组合数学","中等","哈希表","贪心"]},{"title":"LeetCode每日一题2025-04-19","url":"/post/count-the-number-of-fair-pairs.html","content":"2563. 统计公平数对的数目 M\n给你一个下标从 0 开始、长度为 n 的整数数组 nums ，和两个整数 lower 和 upper ，返回 公平数对的数目 。\n如果 (i, j) 数对满足以下情况，则认为它是一个 公平数对 ：\n\n0 &lt;= i &lt; j &lt; n，且\nlower &lt;= nums[i] + nums[j] &lt;= upper\n\n示例 1：\n\n输入：nums = [0,1,7,4,4,5], lower = 3, upper = 6\n输出：6\n解释：共计 6 个公平数对：(0,3)、(0,4)、(0,5)、(1,3)、(1,4) 和 (1,5) 。\n\n示例 2：\n\n输入：nums = [1,7,9,2,5], lower = 11, upper = 11\n输出：1\n解释：只有单个公平数对：(2,3) 。\n\n提示：\n\n1 &lt;= nums.length &lt;= 10510^5105\nnums.length == n\n−109-10^9−109 &lt;= nums[i] &lt;= 10910^9109\n−109-10^9−109 &lt;= lower &lt;= upper &lt;= 10910^9109\n\n问题分析\n问题本质上是寻找满足特定条件的数对 (i,j)(i, j)(i,j)，其中 iii 和 jjj 是数组的索引，且它们的和在给定的范围 [lower, upper] 内。这是一个典型的双指针或者排序后使用二分查找的问题，通过排序将问题转化为在有序数组中快速定位满足和的区间的边界。\n算法思路\n\n\n排序数组：将输入的nums数组进行升序排列，便于后续操作。\n\n\n方法一（双指针滑动窗口）\n可以将问题化简为两个「≤ 某值」的问题\n定义函数\nf(k)=#{0≤i&lt;j&lt;n∣nums[i]+nums[j]≤k}.f(k)=\\#\\{0\\leq i&lt;j&lt;n\\mid nums[i]+nums[j]\\leq k\\}.\nf(k)=#{0≤i&lt;j&lt;n∣nums[i]+nums[j]≤k}.\n那么题目要的答案就是\nf(upper)−f(lower−1).f(upper)−f(lower−1).\nf(upper)−f(lower−1).\n对于每个左端点 i（0 ≤ i &lt; n-1），我们维护两个指针 l 与 r：\n\n\n左指针 l 从头开始（0），右指针 r 从尾开始（n−1）；\n\n\n如果 nums[l] + nums[r] ≤ k，那么对于固定的 l，所有 (l, l+1),…,(l, r) 都满足，因为排序保证 nums[l] + nums[j] ≤ nums[l] + nums[r]；可以一次性加上 r−l 个对，把 l 右移：l += 1。\n否则（和太大）就让 r 左移：r -= 1。\n\n\n直到 l &gt;= r，整个过程需 O(n)O(n)O(n) 级的指针移动，配合排序总复杂度 O(nlog⁡n)O(n \\log n)O(nlogn)。\n\n\n\n\n方法二（二分查找）\n遍历每个元素作为固定点：对于每一个元素nums[i]（其中i &lt; j），直接对排序后的数组在区间 (i+1, n-1] 上执行两次二分查找：\n计算目标和的上下界：lower - nums[i] 和 upper - nums[i]，即要求nums[j]必须落在这个范围内。\n二分查找边界：在有序数组中利用二分查找快速定位满足条件的j的位置区间：\n枚举每个 i，目标是找满足\nlower≤nums[i]+nums[j]≤upper,j&gt;ilower≤nums[i]+nums[j]≤upper,j&gt;i\nlower≤nums[i]+nums[j]≤upper,j&gt;i\n等价于\nlower−nums[i]≤nums[j]≤upper−nums[i].lower−nums[i]≤nums[j]≤upper−nums[i].\nlower−nums[i]≤nums[j]≤upper−nums[i].\n\nleft：在排序数组的区间 (i+1, n) 上，第一个大于等于目标下界lower - nums[i]的元素位置\nlo = lower - nums[i]，查 bisect_left(nums, lo, i+1)；\nright：第一个大于目标上界upper - nums[i]的元素位置\nhi = upper - nums[i]，查 bisect_right(nums, hi, i+1) - 1；\n\n统计有效数目：计算符合条件的索引区间长度，并累加到总数中\n\n二分查找各 O(log⁡n)O(\\log n)O(logn)，共 O(nlog⁡n)O(n \\log n)O(nlogn)。\n\n\n\n时间复杂度\n\n排序数组的时间为 O(nlog⁡n)O(n \\log n)O(nlogn)，其中 nnn 是 nums.length\n双指针扫描需 O(n)O(n)O(n)\n遍历每个元素并进行两次二分查找的操作时间为 O(nlog⁡n)O(n \\log n)O(nlogn)\n两种方法总时间复杂度都为：O(nlog⁡n)O(n \\log n)O(nlogn)\n空间复杂度：O(n)O(n)O(n)（排序需要复制或原地排序），O(1)O(1)O(1)（忽略排序所需栈或语言内部额外空间）\n\n代码实现\n双指针法：\nclass Solution:    def countFairPairs(self, nums: list[int], lower: int, upper: int) -&gt; int:        # 排序        nums.sort()        # 结果 = ≤upper 的对数 - ≤(lower-1) 的对数        return self._count_leq(nums, upper) - self._count_leq(nums, lower - 1)    def _count_leq(self, nums: list[int], k: int) -&gt; int:        &quot;&quot;&quot;        返回 排序后数组中 和 &lt;= k 的数对数量 f(k)。        &quot;&quot;&quot;        l, r = 0, len(nums) - 1        cnt = 0        while l &lt; r:            if nums[l] + nums[r] &lt;= k:                # 对于当前 l，(l, l+1)...(l, r) 都是合法对                cnt += (r - l)                l += 1            else:                # 和太大，缩小右侧                r -= 1        return cnt\n二分法：\nclass Solution:    def countFairPairs(self, nums: List[int], lower: int, upper: int) -&gt; int:        nums.sort()        n = len(nums)        count = 0        for i in range(n - 1):            lo = lower - nums[i]            hi = upper - nums[i]            left = bisect_left(nums, lo, i + 1, n)            right = bisect_right(nums, hi, i + 1, n) - 1            if left &lt; n and left &lt;= right:                count += (right - left + 1)  # 符合条件的元素数目        return count\n","categories":["算法"],"tags":["Algorithm","枚举与剪枝","中等","滑动窗口","数据结构","逆序对计数","双指针","二分查找","排序"]},{"title":"LeetCode每日一题2025-04-18","url":"/post/count-number-of-bad-pairs.html","content":"2364. 统计坏数对的数目 M\n给你一个下标从 0 开始的整数数组 nums 。如果 i &lt; j 且 j - i != nums[j] - nums[i] ，那么我们称 (i, j) 是一个 坏数对 。\n请你返回 nums 中 坏数对 的总数目。\n示例 1：\n\n输入：nums = [4,1,3,3]\n输出：5\n解释：数对 (0, 1) 是坏数对，因为 1 - 0 != 1 - 4 。\n数对 (0, 2) 是坏数对，因为 2 - 0 != 3 - 4, 2 != -1 。\n数对 (0, 3) 是坏数对，因为 3 - 0 != 3 - 4, 3 != -1 。\n数对 (1, 2) 是坏数对，因为 2 - 1 != 3 - 1, 1 != 2 。\n数对 (2, 3) 是坏数对，因为 3 - 2 != 3 - 3, 1 != 0 。\n总共有 5 个坏数对，所以我们返回 5 。\n\n示例 2：\n\n输入：nums = [1,2,3,4,5]\n输出：0\n解释：没有坏数对。\n\n提示：\n\n1 &lt;= nums.length &lt;= 10510^5105\n1 &lt;= nums[i] &lt;= 10910^9109\n\n问题分析\n1.化简判定条件\n我们通过数学变换将条件转化为统计差值相等的数对数量，最终用总数减去好的数对得到答案：\n对于一对索引 i&lt;ji&lt;ji&lt;j，当且仅当\nj−i=nums[j]−nums[i]j - i = \\text{nums}[j] - \\text{nums}[i]\nj−i=nums[j]−nums[i]\n时，这对 (i,j)(i,j)(i,j) 不是坏数对；等价于\nnums[j]−j=nums[i]−i.\\text{nums}[j] - j = \\text{nums}[i] - i.\nnums[j]−j=nums[i]−i.\n将所有元素映射为“调整值” Ak=nums[k]−kA_k = \\text{nums}[k] - kAk​=nums[k]−k，计算所有元素与索引的差值，统计相同差值出现次数，则“好数对”数目就是所有相同 AAA 值之间的组合对数。\n2.总对数与好对数\n数组长度为 nnn 时，总对数为 n(n−1)2\\tfrac{n(n-1)}22n(n−1)​。\n对于每个不同的调整值 vvv，若出现次数为 cvc_vcv​，则它内部的好对数为 cv(cv−1)2\\tfrac{c_v(c_v-1)}22cv​(cv​−1)​。\n坏数对数 = 总对数 – ∑vcv(cv−1)2\\displaystyle\\sum_v \\tfrac{c_v(c_v-1)}2v∑​2cv​(cv​−1)​。\n算法思路\n\n遍历一次数组，使用哈希表统计每个 Ak=nums[k]−kA_k=\\text{nums}[k]-kAk​=nums[k]−k 出现的频次。\n计算总对数 n(n−1)2\\tfrac{n(n-1)}22n(n−1)​。\n对哈希表中每个频次 ccc，累加 c(c−1)2\\tfrac{c(c-1)}22c(c−1)​ 得到“好对数”。\n用总对数减去好对数，得到坏数对数。\n\n时间复杂度\n时间复杂度：O(n)O(n)O(n)，只需一次遍历加上对哈希表的小量遍历。\n空间复杂度：O(n)O(n)O(n)，哈希表最坏存储 nnn 个不同键。\n代码实现\nclass Solution:    def countBadPairs(self, nums: list[int]) -&gt; int:        from collections import Counter                n = len(nums)        # 1. 统计调整值频次        freq = Counter(nums[i] - i for i in range(n))                # 2. 总对数        total_pairs = n * (n - 1) // 2                # 3. 累加所有“好对数”        good_pairs = sum(c * (c - 1) // 2 for c in freq.values())                # 4. 坏数对 = 总对数 - 好对数        return total_pairs - good_pairs\n","categories":["算法"],"tags":["Algorithm","组合数学","中等","数据结构","哈希表"]},{"title":"LeetCode每日一题2025-04-17","url":"/post/count-equal-and-divisible-pairs.html","content":"2176. 统计数组中相等且可以被整除的数对 E\n给你一个下标从 0 开始长度为 n 的整数数组 nums 和一个整数 k ，请你返回满足 0 &lt;= i &lt; j &lt; n ，nums[i] == nums[j] 且 (i * j) 能被 k 整除的数对 (i, j) 的 数目 。\n示例 1：\n\n输入：nums = [3,1,2,2,2,1,3], k = 2\n输出：4\n解释：\n总共有 4 对数符合所有要求：\n\nnums[0] == nums[6] 且 0 * 6 == 0 ，能被 2 整除。\nnums[2] == nums[3] 且 2 * 3 == 6 ，能被 2 整除。\nnums[2] == nums[4] 且 2 * 4 == 8 ，能被 2 整除。\nnums[3] == nums[4] 且 3 * 4 == 12 ，能被 2 整除。\n\n\n示例 2：\n\n输入：nums = [1,2,3,4], k = 1\n输出：0\n解释：由于数组中没有重复数值，所以没有数对 (i,j) 符合所有要求。\n\n提示：\n\n1 &lt;= nums.length &lt;= 100\n1 &lt;= nums[i], k &lt;= 100\n\n问题分析\n统计所有满足\n\n索引约束：0 ≤ i &lt; j &lt; n\n数值相等：nums[i] == nums[j]\n整除性：(i * j) % k == 0\n\n的数对数量。\n算法思路\n对数组nums中相同数值的下标进行分组（哈希表分组），然后在各组内部枚举下标对并检查乘积能否被 k 整除。\n对于每个数值对应的索引列表：\n\n若长度小于2，则跳过（无有效对）。\n否则，遍历所有可能的数对(i, j)（i &lt; j），检查i * j % k == 0是否成立，若成立则计数加1。\n\n时间复杂度\n\n预处理时间：O(n)O(n)O(n)，遍历数组一次存储索引。\n最坏情况下所有元素都相同(每个元素形成一组)，枚举组内所有 (n2)\\binom{n}{2}(2n​) 对，复杂度 O(n2)O(n^2)O(n2)。由于n的最大为100，总计算量约为5000次，在可行范围内。\n空间复杂度：O(n)O(n)O(n)，用于存储分组字典。\n\n代码实现\nfrom collections import defaultdictfrom typing import Listclass Solution:    def countPairs(self, nums: List[int], k: int) -&gt; int:        &quot;&quot;&quot;        返回满足 nums[i] == nums[j] 且 (i * j) 能被 k 整除的 (i, j) 对数。        &quot;&quot;&quot;        num_indices = defaultdict(list)        for idx, num in enumerate(nums):            num_indices[num].append(idx)                count = 0        for indices_list in num_indices.values():            n = len(indices_list)            if n &lt; 2:                continue            # 遍历所有i&lt;j的组合            for i in range(n):                for j in range(i + 1, n):                    a = indices_list[i]                    b = indices_list[j]                    product = a * b                    if product % k == 0:                        count += 1        return count\n用单次遍历 + 边加边算的方式可以稍微降低常数，只遍历一遍 nums，每遇到一个新下标就与之前同值下标配对判定，复杂度仍为O(n2)O(n^2)O(n2)，但常数略优\nclass Solution:    def countPairs(self, nums: List[int], k: int) -&gt; int:        index_map = defaultdict(list)        ans = 0        for i, v in enumerate(nums):            for j in index_map[v]:                if (i * j) % k == 0:                    ans += 1            index_map[v].append(i)        return ans\n","categories":["算法"],"tags":["Algorithm","枚举与剪枝","暴力搜索","简单","数据结构","哈希表"]},{"title":"LeetCode每日一题2025-04-16","url":"/post/countGoodsubarrays.html","content":"2537. 统计好子数组的数目 M\n给你一个整数数组 nums 和一个整数 k ，请你返回 nums 中 好 子数组的数目。\n一个子数组 arr 如果有 至少 k 对下标 (i, j) 满足 i &lt; j 且 arr[i] == arr[j] ，那么称它是一个 好 子数组。\n子数组 是原数组中一段连续 非空 的元素序列。\n示例 1：\n\n输入：nums = [1,1,1,1,1], k = 10\n输出：1\n解释：唯一的好子数组是这个数组本身。\n\n示例 2：\n\n输入：nums = [3,1,4,3,2,2,4], k = 2\n输出：4\n解释：总共有 4 个不同的好子数组：\n\n[3,1,4,3,2,2] 有 2 对。\n[3,1,4,3,2,2,4] 有 3 对。\n[1,4,3,2,2,4] 有 2 对。\n[4,3,2,2,4] 有 2 对。\n\n\n提示：\n\n1 &lt;= nums.length &lt;= 10510^5105\n1 &lt;= nums[i], k &lt;= 10910^9109\n\n问题分析\n给定一个整数数组 nums 和一个整数 k，要求返回数组中好子数组的数目。题目中“好子数组”的定义为：子数组中存在至少 k 对下标 (i, j) 满足 i &lt; j 且 arr[i] == arr[j]，也就是我们需要找出数组中所有满足至少有 k 对下标 (i, j)（其中 i &lt; j 且元素相同）的子数组的数量。\n算法思路\n\n当一个元素 x 在窗口中出现了 c 次时，它贡献的配对数量为组合数 C(c,2)=c(c−1)2C(c,2)=\\frac{c(c−1)} 2C(c,2)=2c(c−1)​，但动态调整更高效的方式是通过增量/减量来维护总数。\n使用双指针（滑动窗口）技术来遍历所有连续子数组。\n维护一个窗口 [l, r]，以及窗口中每个数字出现的频数 freq。\n同时在每一步更新窗口内的成对数字数量 count。当我们向窗口中添加新元素 x 时，窗口中原先 x 出现的次数为 freq[x]，那么新增的对数为 freq[x]（每个已有的 x 和新加入的 x 都可以构成一对）。因此更新 count += freq[x]，然后 freq[x] 加 1。\n对于每个左边界 l，利用右指针 r 尽可能扩展窗口，直到 count &gt;= k。设当窗口达到条件时，当前的 r 满足条件，则对于定左边界 l，所有右边界 r' 属于 [r, n-1] 的窗口均满足条件，因此可以直接将 n - r 加入答案。\n随后移动左边界 l，同时更新 count。在移除窗口最左边元素时，假设其值为 x，此时删除该元素会导致窗口中 x 的出现次数减少，进而需要减少的对数为 freq[x] - 1（因为该 x 和其它 x 形成的对数就少了）。\n\n时间复杂度\n每个元素最多被右指针和左指针访问（加入和移除窗口）各一次，因此双指针方法整体时间复杂度为 O(n)O(n)O(n)，其中 n 是数组的长度。\n代码分解\n窗口扩展：\n对于每个窗口左边界 l，通过右指针 r向右扩展窗口，直到窗口内满足 count &gt;= k。在扩展过程中使用频次统计更新 count。\n直接计数：\n一旦找到最小的右边界 r 使得 [l, r] 满足条件，则所有 [l, r], [l, r+1], …, [l, n-1] 的子数组也均满足条件，因此可以直接加上 n - r。\n滑动窗口收缩：\n移动左边界 l时，需要将 nums[l] 从窗口中移除，同时调整 freq 和 count。移除时由于原先 x 出现次数为 freq[x]，其对对数贡献为 freq[x] - 1（移除后剩余的配对数为 freq[x] - 1，因此减少 freq[x] - 1）。\n代码实现\nfrom collections import defaultdictclass Solution:    def countGood(self, nums, k: int) -&gt; int:        n = len(nums)        # 字典存储每个数字的频次        freq = &#123;&#125;        count = 0  # 当前窗口中满足条件的对数数量        res = 0    # 结果计数        r = 0                # 遍历左边界        for l in range(n):            # 不断扩展右边界，使窗口对数数量至少为 k            while r &lt; n and count &lt; k:                x = nums[r]                # 在添加前，x已有 freq.get(x, 0) 次，新增的对数即为这个频次                count += freq.get(x, 0)                freq[x] = freq.get(x, 0) + 1                r += 1                        # 如果当前窗口 [l, r-1] 的配对数量至少为 k，则右边所有扩展窗口都满足条件            if count &gt;= k:                res += (n - r + 1)                        # 在将 l 右移前需要移除 nums[l] 对 count 的贡献            x = nums[l]            freq[x] -= 1            # 当移除一个 x 时，其对配对数的贡献为移除前该 x 与其它相同元素之间的对数数目，即 freq[x]（因为移除后，剩余的 x 数量为 freq[x]）            count -= freq[x]                    return res\n","categories":["算法"],"tags":["Algorithm","组合数学","中等","滑动窗口","数据结构"]},{"title":"LeetCode每日一题2025-04-15","url":"/post/goodTriplets.html","content":"2179. 统计数组中好三元组数目 H\n给你两个下标从 0 开始且长度为 n 的整数数组 nums1 和 nums2 ，两者都是 [0, 1, ..., n - 1] 的 排列 。\n好三元组 指的是 3 个 互不相同 的值，且它们在数组 nums1 和 nums2 中出现顺序保持一致。换句话说，如果我们将 pos1v1_v1v​ 记为值 v 在 nums1 中出现的位置，pos2v2_v2v​ 为值 v 在 nums2 中的位置，那么一个好三元组定义为 0 &lt;= x, y, z &lt;= n - 1 ，且 pos1x1_x1x​ &lt; pos1y1_y1y​ &lt; pos1z1_z1z​ 和 pos2x2_x2x​ &lt; pos2y2_y2y​ &lt; pos2z2_z2z​ 都成立的 (x, y, z) 。\n请你返回好三元组的 总数目 。\n示例 1：\n\n输入：nums1 = [2,0,1,3], nums2 = [0,1,2,3]\n输出：1\n解释：\n总共有 4 个三元组 (x,y,z) 满足 pos1x1_x1x​ &lt; pos1y1_y1y​ &lt; pos1z1_z1z​ ，分别是 (2,0,1) ，(2,0,3) ，(2,1,3) 和 (0,1,3) 。\n这些三元组中，只有 (0,1,3) 满足 pos2x2_x2x​ &lt; pos2y2_y2y​ &lt; pos2z2_z2z​ 。所以只有 1 个好三元组。\n\n示例 2：\n\n输入：nums1 = [4,0,1,3,2], nums2 = [4,1,0,2,3]\n输出：4\n解释：总共有 4 个好三元组 (4,0,3) ，(4,0,2) ，(4,1,3) 和 (4,1,2) 。\n\n提示：\n\nn == nums1.length == nums2.length\n3 &lt;= n &lt;= 10510^5105\n0 &lt;= nums1[i], nums2[i] &lt;= n - 1\nnums1 和 nums2 是 [0, 1, ..., n - 1] 的排列。\n\n问题分析\n题目给定两个长度为n且下标从0开始的整数数组nums1和nums2，这两个数组都是[0,1,...,n−1]的排列。定义了好三元组为3个互不相同的值，且它们在数组nums1和nums2中出现顺序保持一致，\n即若pos1v为值v在nums1中出现的位置，pos2v为值v在nums2中出现的位置，\n好三元组需满足0 &lt;= x, y, z &lt;= n−1，且pos1x &lt; pos1y &lt; pos1z和pos2x &lt; pos2y &lt; pos2z都成立的(x,y,z) ，要求返回好三元组的总数目。\n算法思路\n由于两个数组都是 0 到 n - 1 的排列，考虑以下转换：\n\n\n构造新数组\n我们先建立一个数组 p，其中\np[i]=pos2[nums1[i]]p[i]=\\text{pos2}[\\text{nums1}[i]]\np[i]=pos2[nums1[i]]\n这里的 pos2[v]\\text{pos2}[v]pos2[v] 表示值 vvv 在 nums2 中的位置。\n由于 nums1 本身已经按其在原数组中的顺序排序，因此原题中要求 “pos1xxx &lt; pos1yyy &lt; pos1zzz” 已自动满足。问题就转化为：在数组 p 中计数满足\np[i]&lt;p[j]&lt;p[k]p[i]&lt;p[j]&lt;p[k]\np[i]&lt;p[j]&lt;p[k]\n且满足 i&lt;j&lt;ki&lt;j&lt;ki&lt;j&lt;k 的三元组。\n\n\n双遍扫描计数\n对于数组中的每个中间元素 p[j]p[j]p[j]，设：\n\nLjL_jLj​：在 jjj 之前（即 i&lt;ji&lt;ji&lt;j）满足 p[i]&lt;p[j]p[i] &lt; p[j]p[i]&lt;p[j] 的数量；\nRjR_jRj​：在 jjj 之后（即 k&gt;jk&gt;jk&gt;j）满足 p[k]&gt;p[j]p[k] &gt; p[j]p[k]&gt;p[j] 的数量；\n\n则以 p[j]p[j]p[j] 为中间元素的有效三元组数量为 Lj×RjL_j \\times R_jLj​×Rj​。整个三元组数量为所有 jjj 上的累加和。\n\n\n树状数组（Fenwick Tree）的作用\n由于 nnn 可能达到 10510^5105 级别，直接遍历统计 LjL_jLj​​ 和 RjR_jRj​​ 是 O(n2)O(n^2)O(n2) 的效率。借助树状数组，我们可以在 O(log⁡n)O(\\log n)O(logn) 内查询某个前缀的值，从而：\n\n正向遍历计算每个位置 jjj 的 LjL_jLj​；\n逆向遍历计算每个位置 jjj 的 RjR_jRj​。\n\n\n\n时间复杂度\n\n\n构造映射与数组转换：O(n)O(n)O(n)\n\n\n正序与逆序遍历树状数组操作：使用两个树状数组分别进行两次扫描(每个元素需要正向逆向各一次)，每个查询和更新均为 O(log⁡nO(\\log nO(logn，共计 O(nlog⁡n)O(n \\log n)O(nlogn)\n\n\n总体时间复杂度：O(nlog⁡n)O(n \\log n)O(nlogn)\n\n\n空间复杂度：O(n)O(n)O(n), 用于存储两个计数数组及树状数组的结构\n\n\n代码分解\nFenwickTree 类\n负责单点更新和区间查询，从而在 O(log⁡n)O(\\log n)O(logn) 时间内计算前缀和。\n构造映射与数组转换\n将 nums2 中每个数值映射到对应的位置，构造数组 p 后，数组 p 就是按照 nums1 顺序排列的 nums2 中的下标，即 p[i] 是 nums1 的第 i 个元素在 nums2 中的位置。\n左侧计数（L[j]）\n使用树状数组，从左到右扫描数组 p，对于每个位置 j，查询 p[j] 之前比它小的数字个数，并更新树状数组，通过遍历 p 数组并动态查询当前值之前的前缀和实现。\n右侧计数（R[j]）\n使用另一个树状数组，从右到左扫描数组 p，对于每个位置 j，查询已经处理的右侧元素中比 p[j] 大的数量，通过总已处理元素数减去小于等于 p[j] 的数目得到。\n三元组数量累加\n对每个中间位置 j，三元组数量为 L[j]×R[j]L[j] \\times R[j]L[j]×R[j]，对所有可能的中间位置累加即为最终答案。\n代码实现\nclass FenwickTree:    def __init__(self, size: int):        self.size = size        self.tree = [0] * (size + 1)        def update(self, index: int, delta: int):        # index 从 0 开始转换到 1-based        index += 1        while index &lt;= self.size:            self.tree[index] += delta            index += index &amp; -index    def query(self, index: int) -&gt; int:        # 查询前缀和 [0, index]，index 为 0-based        index += 1        res = 0        while index:            res += self.tree[index]            index -= index &amp; -index        return resclass Solution:    @staticmethod    def goodTriplets(nums1: list, nums2: list) -&gt; int:        n = len(nums1)                # 建立 nums2 中值 -&gt; 位置 的映射        pos2 = [0] * n        for idx, num in enumerate(nums2):            pos2[num] = idx                # 构造数组 p，其中 p[i] = pos2[nums1[i]]        p = [pos2[num] for num in nums1]                # 第一步：正序遍历，计算每个 j 左侧比 p[j] 小的数量 L[j]        left_count = [0] * n        fenwick_left = FenwickTree(n)        for j in range(n):            # p[j] 前有多少数比它小            left_count[j] = fenwick_left.query(p[j] - 1)            fenwick_left.update(p[j], 1)                # 第二步：逆序遍历，计算每个 j 右侧比 p[j] 大的数量 R[j]        right_count = [0] * n        fenwick_right = FenwickTree(n)        for j in range(n - 1, -1, -1):            # 右侧比 p[j] 大的数量 = 当前已处理的个数中 p 值大于 p[j] 的数量            # 先查询 p[j] 的前缀和，已加入的元素总数为 (n-1 - j)            right_count[j] = fenwick_right.query(n - 1) - fenwick_right.query(p[j])            fenwick_right.update(p[j], 1)                # 三元组数量：对每个 j 中间元素，累加 L[j] * R[j]        result = 0        for j in range(n):            result += left_count[j] * right_count[j]        return result\n","categories":["算法"],"tags":["Algorithm","困难","组合数学","数据结构","树状数组","逆序对计数"]},{"title":"LeetCode每日一题2025-04-14","url":"/post/countGoodTriplets.html","content":"1534. 统计好三元组 E\n给你一个整数数组 arr ，以及 a、b 、c 三个整数。请你统计其中好三元组的数量。\n如果三元组 (arr[i], arr[j], arr[k]) 满足下列全部条件，则认为它是一个 好三元组 。\n\n0 &lt;= i &lt; j &lt; k &lt; arr.length\n|arr[i] - arr[j]| &lt;= a\n|arr[j] - arr[k]| &lt;= b\n|arr[i] - arr[k]| &lt;= c\n\n其中 |x| 表示 x 的绝对值。\n返回 好三元组的数量 。\n示例 1：\n\n输入： arr = [3,0,1,1,9,7], a = 7, b = 2, c = 3\n输出： 4\n解释： 一共有 4 个好三元组：[(3,0,1), (3,0,1), (3,1,1), (0,1,1)] 。\n\n示例 2：\n\n输入： arr = [1,1,2,2,3], a = 0, b = 0, c = 1\n输出： 0\n解释： 不存在满足所有条件的三元组。\n\n提示：\n\n3 &lt;= arr.length &lt;= 100\n0 &lt;= arr[i] &lt;= 1000\n0 &lt;= a, b, c &lt;= 1000\n\n问题分析\n给定数组 arr，以及三个整数 a、b、c，需要统计满足以下三个条件的三元组 (arr[i], arr[j], arr[k]) 的数量（其中 0 &lt;= i &lt; j &lt; k &lt; len(arr)）：\n\n|arr[i] - arr[j]| &lt;= a\n|arr[j] - arr[k]| &lt;= b\n|arr[i] - arr[k]| &lt;= c\n\n算法思路\n\n暴力枚举：直接使用三重循环枚举所有可能的三元组，然后检查是否满足条件。\n提前剪枝：在第二层循环中，若abs(arr[i] - arr[j]) &gt; a则直接跳过第三层循环（k），减少无效计算。\n\n时间复杂度\n\n\n对于数组长度 n，每个三元组枚举的时间复杂度为 O(n³)。由于题目约束 3 &lt;= n &lt;= 100，当 n = 100 时，最多循环大约 161700 次，在可接受的范围内。\n\n\n除了输入数组与常数级变量外，未使用额外数据结构，因此空间复杂度为 O(1)。\n\n\n代码实现\nfrom typing import Listclass Solution:    def countGoodTriplets(self, arr: List[int], a: int, b: int, c: int) -&gt; int:        count = 0        n = len(arr)        for i in range(n):            for j in range(i + 1, n):                if abs(arr[i] - arr[j]) &gt; a:                    continue  # 提前剪枝，不满足a条件则跳过后续k的判断                for k in range(j + 1, n):                    # 同时检查b和c的条件                    if (abs(arr[j] - arr[k]) &lt;= b) and (abs(arr[i] - arr[k]) &lt;= c):                        count += 1        return count\n","categories":["算法"],"tags":["Algorithm","枚举与剪枝","暴力搜索","简单"]},{"title":"LeetCode每日一题2025-04-13","url":"/post/countGoodNumbers.html","content":"1922. 统计好数字的数目 M\n我们称一个数字字符串是 好数字 当它满足（下标从 0 开始）偶数 下标处的数字为 偶数 且 奇数 下标处的数字为 质数 （2，3，5 或 7）。\n\n比方说，&quot;2582&quot; 是好数字，因为偶数下标处的数字（2 和 8）是偶数且奇数下标处的数字（5 和 2）为质数。但 &quot;3245&quot; 不是 好数字，因为 3 在偶数下标处但不是偶数。\n\n给你一个整数 n ，请你返回长度为 n 且为好数字的数字字符串 总数 。由于答案可能会很大，请你将它对 109 + 7 取余后返回 。\n一个 数字字符串 是每一位都由 0 到 9 组成的字符串，且可能包含前导 0 。\n示例 1：\n\n输入：n = 1\n输出：5\n解释：长度为 1 的好数字包括 “0”，“2”，“4”，“6”，“8” 。\n\n示例 2：\n\n输入：n = 4\n输出：400\n\n示例 3：\n\n输入：n = 50\n输出：564908303\n\n提示：\n\n1 &lt;= n &lt;= 101510^{15}1015\n\n分析题意：\n\n数字字符串为好数字需满足：偶数下标（0、2、4…）处的数字为偶数（0、2、4、6、8），共有 5 个选择；奇数下标（1、3、5…）处的数字为质数（只允许 2、3、5、7），共有 4 个选择。\n偶数位的数量 k 为 (n + 1) // 2, 奇数位的数量为 n - k\n对于长度为 nnn 的数字字符串，偶数下标的数量为 ⌈n/2⌉=n+12⌈n/2⌉ = \\frac{n+1}{2}⌈n/2⌉=2n+1​ 向下取整, 因此总共有 5k5^k5k 种可能，奇数下标的数量为 ⌊n/2⌋⌊n/2⌋⌊n/2⌋（由于数组下标从 0 开始），因此总共有 4(n−k)4^{(n-k)}4(n−k) 种可能。\n\n构造方案：\n因此，好数字的总数量可表示为：\nans=5k×4n−kmod  (109+7)\\text{ans} = 5^{ k } \\times 4^{ n-k } \\mod (10^9+7)\nans=5k×4n−kmod(109+7)\n给定 nnn 可能高达 101510^{15}1015，直接计算大数幂需要使用快速幂算法（快速指数求幂），Python 内置的 pow 函数可以直接接受第三个参数来进行模运算并实现快速幂。\n时间复杂度：\n\n\n使用快速幂算法对大指数进行求幂取模，保证运算效率且不溢出。利用指数二进制分解实现指数运算，快速幂算法的时间复杂度为 O(log⁡n)O(\\log n)O(logn)，即使 nnn 高达 101510^{15}1015 也可以在极短时间内求出结果。\n\n\n使用乘法原理，将两个独立的选择相乘，即可得到所有可能性的乘积。\n\n\n代码实现：\nclass Solution:    def countGoodNumbers(self, n: int) -&gt; int:        MOD = 10**9 + 7        # 计算偶数下标的数量：        k = (n + 1) // 2        part5 = pow(5, k, MOD)    # 偶数下标：0, 2, 4, ...，利用内置的 pow 函数进行快速幂取模计算        part4 = pow(4, n - k, MOD)# 奇数下标：1, 3, 5, ...        return (part5 * part4) % MOD\n","categories":["算法"],"tags":["Algorithm","组合数学","快速幂","乘法","中等"]},{"title":"LeetCode每日一题2025-04-12","url":"/post/countGoodIntegers.html","content":"3272. 统计好整数的数目 H\n给你两个 正 整数 n 和 k 。\n如果一个整数 x 满足以下条件，那么它被称为 k 回文 整数 。\n\nx 是一个 回文整数 。\nx 能被 k 整除。\n\n如果一个整数的数位重新排列后能得到一个 k 回文整数 ，那么我们称这个整数为 好 整数。比方说，k = 2 ，那么 2020 可以重新排列得到 2002 ，2002 是一个 k 回文串，所以 2020 是一个好整数。而 1010 无法重新排列数位得到一个 k 回文整数。\n请你返回 n 个数位的整数中，有多少个 好 整数。\n注意 ，任何整数在重新排列数位之前或者之后 都不能 有前导 0 。比方说 1010 不能重排列得到 101 。\n示例 1：\n\n输入： n = 3, k = 5\n输出： 27\n解释：\n部分好整数如下：\n\n551 ，因为它可以重排列得到 515 。\n525 ，因为它已经是一个 k 回文整数。\n\n\n示例 2：\n\n输入： n = 1, k = 4\n输出： 2\n解释：\n两个好整数分别是 4 和 8 。\n\n示例 3：\n\n输入： n = 5, k = 6\n输出： 2468\n\n提示：\n\n1 &lt;= n &lt;= 10\n1 &lt;= k &lt;= 9\n\n分析思路\n我们可以把问题拆分为两个部分：\n\n判断数位集合是否有回文排列\n一个数的数位可以重新排列成回文数当且仅当：\n\n当 n 为偶数：所有数字出现次数均为偶数。\n当 n 为奇数：最多只有一个数字出现次数为奇数，其余为偶数。\n\n\n存在回文排列且该排列满足被 k 整除\n\n由于我们要求构造的回文排列不能有前导 0，所以构造时需要保证最左位数字不为 0。\n对于一个给定的符合“回文排列”条件的数位集合，若存在一种排列构成的回文数能被 k 整除，则我们将此多重集认为是合格的。\n注意：一个 n 位整数只要其数位集合满足条件（存在至少一种排列构成合格的 k 回文数），那么所有拥有相同数位多重集的 n 位整数都是好整数。\n\n\n\n构造方案\n由于 n 的范围最多为 10，因此直接枚举所有 n 位回文数来检查被 k 整除的条件是可行的。根据 n 的奇偶性，我们可以分为两种情况：\n\n\nn 为偶数：\n设 m = n/2，回文数为：\nhalf + reverse(half)\n枚举长度为 m 的数字串，其中第一个字符（对应整体最高位）不为 0。\n\n\nn 为奇数：\n设 m = n//2，则回文数为：\nhalf + mid + reverse(half)\n其中 half 枚举同上（第一个字符非 0），mid 为 0～9 均可。\n\n\n对于每个构造出来的回文数，如果它满足能被 k 整除的条件，则提取其“数字多重集”（即各个数字出现的次数），并存入一个集合中，确保对于同一多重集只记录一次。\n计数方法\n对于一个记录下来的数字多重集（长度为 n），所有的排列数为\ntotal=n!∏d=09(count[d]!)\\text{total} = \\frac{n!}{\\prod_{d=0}^{9} (\\text{count}[d]!)}\ntotal=∏d=09​(count[d]!)n!​\n但由于存在前导 0 的问题，对于包含 0 的情况，我们需要剔除那些首位为 0 的排列。\n\n若多重集中 0 出现次数为 c0 &gt; 0，则固定首位为 0后，剩余排列数为\n\ninvalid=(n−1)!(c0−1)!∏d=19(count[d]!)\\text{invalid} = \\frac{(n-1)!}{(c_0-1)! \\prod_{d=1}^{9} (\\text{count}[d]!)}\ninvalid=(c0​−1)!∏d=19​(count[d]!)(n−1)!​\n\n故该多重集对应的合法 n 位数字数为valid=total−invalid(当 c0&gt;0)\\text{valid} = \\text{total} - \\text{invalid} \\quad \\left( \\text{当}\\ c_0 &gt; 0 \\right)\nvalid=total−invalid(当 c0​&gt;0)\n或者当 c0=0，则 valid = total。\n\n对所有满足条件的多重集，将其合法排列数累加即为答案。\n算法时间复杂度分析\n\n\n枚举回文数\n\n对于 n 为偶数：需要枚举 10n2−1∗910^{\\frac{n}{2}-1} * 9102n​−1∗9 个数，最多约O(10n2)O(10^\\frac{n}{2})O(102n​)；\n对于 n 为奇数：乘上 10 种中间数字情况，依然是 O(10n2)O(10^\\frac{n}2)O(102n​)。\n\n由于 n ≤ 10，最坏情形枚举数量不会超过 10510^5105，计算量是可接受的。\n\n\n多重集计数\n对于每个多重集，计算排列数的时间复杂度为 O(10)（数字个数恒定），因此总体时间复杂度主要取决于回文数枚举部分，为 O(10n2)O(10^\\frac{n}2)O(102n​)。\n\n\n总结\n\n枚举所有符合 n 位、无前导 0 的回文数；\n检查该回文数能否被 k 整除；\n对满足条件的回文数，提取其数字多重集，并保证每个多重集只计入一次；\n对每个多重集，计算所有排列中首位不为 0 的排列数，并累加结果。\n\n代码实现：\nfrom math import factorialclass Solution:    def countGoodIntegers(self, n: int, k: int) -&gt; int:        &quot;&quot;&quot;        统计 n 位整数中好整数的数量。        好整数定义为：其数位重新排列后可以得到一个回文且能被 k 整除，        且排列后不能有前导 0。        &quot;&quot;&quot;        # 对 n==1 情况单独处理        if n == 1:            count = 0            for d in range(1, 10):                if d % k == 0:                    count += 1            return count                good_multisets = set()  # 存储符合条件的多重集（以元组形式存储 0~9 的数字出现次数）                if n % 2 == 0:            # n 为偶数，回文数由半边构造            half_len = n // 2            start = 10 ** (half_len - 1)            end = 10 ** half_len            for num in range(start, end):                half_str = str(num)                pal_str = half_str + half_str[::-1]  # 构造回文数                # 已经保证 half_str 的首位不为 &#x27;0&#x27;                pal_num = int(pal_str)                if pal_num % k == 0:                    counts = [0] * 10                    for ch in pal_str:                        counts[int(ch)] += 1                    good_multisets.add(tuple(counts))        else:            # n 为奇数，多一位中间数字            half_len = n // 2            # 当 n&gt;=3 时，half_len&gt;=1，此时可以按原逻辑构造            start = 10 ** (half_len - 1)            end = 10 ** half_len            for num in range(start, end):                half_str = str(num)                for mid in range(10):                    pal_str = half_str + str(mid) + half_str[::-1]                    # half_str 保证首位不为 &#x27;0&#x27;                    pal_num = int(pal_str)                    if pal_num % k == 0:                        counts = [0] * 10                        for ch in pal_str:                            counts[int(ch)] += 1                        good_multisets.add(tuple(counts))                # 预计算阶乘        fact = [1] * (n + 1)        for i in range(1, n + 1):            fact[i] = fact[i - 1] * i                total_good = 0        # 对每个符合条件的数字多重集，计算满足无前导0限制的排列数        for counts in good_multisets:            # 计算该多重集所有排列数： n! / (c0! * c1! * ... * c9!)            total_perm = fact[n]            for c in counts:                total_perm //= fact[c]                        # 如果该多重集中包含0，需要排除首位为0的排列            if counts[0] &gt; 0:                # 固定首位为0，剩余的排列数为 (n-1)! / ((c0-1)! * (c1)! ... (c9)!)                prod_nonzero = 1                for d in range(1, 10):                    prod_nonzero *= fact[counts[d]]                invalid = fact[n - 1] // (fact[counts[0] - 1] * prod_nonzero)                valid_perm = total_perm - invalid            else:                valid_perm = total_perm                        total_good += valid_perm                return total_good\n\n注意：需要对 n==1 的情况进行单独处理。由于一位数的重排列只能为其本身，所以对于一位数，只需要统计 1 到 9 中能被 k 整除的数字即可。\n\n\n\n对 n==1 的处理\n直接遍历 1～9 的单个数字，检查每个数字是否能被 k 整除，若能则计数。\n\n\n回文数生成\n\n\n\n\n当 n 为偶数时，构造回文数格式为 half + reverse(half)。\n\n\n当 n 为奇数时，遍历中间数字 mid，构造回文数格式为 half + mid + reverse(half)。\n\n注：此处保证 half 的首位非 0。\n\n\n\n\n多重集记录与排列数计算\n\n\n将符合条件的回文数的数字多重集（各个数字出现的次数）存入集合避免重复计入。\n利用阶乘及组合公式计算总排列数，再剔除那些首位为 0 的排列（当数字 0 存在时）。\n\n","categories":["算法"],"tags":["Algorithm","排列组合","回文数构造","枚举与剪枝","困难"]},{"title":"LeetCode每日一题2025.04.11","url":"/post/countSymmetricIntegers.html","content":"2843. 统计对称整数的数目 E\n给你两个正整数 low 和 high 。\n对于一个由 2 * n 位数字组成的整数 x ，如果其前 n 位数字之和与后 n 位数字之和相等，则认为这个数字是一个对称整数。\n返回在 [low, high] 范围内的 对称整数的数目 。\n示例 1：\n输入：low = 1, high = 100输出：9解释：在 1 到 100 范围内共有 9 个对称整数：11、22、33、44、55、66、77、88 和 99 。\n示例 2：\n输入：low = 1200, high = 1230输出：4解释：在 1200 到 1230 范围内共有 4 个对称整数：1203、1212、1221 和 1230 。\n\n提示：1&lt;=low&lt;=high&lt;=1041 &lt;= low &lt;= high &lt;= 10^41&lt;=low&lt;=high&lt;=104\n\n题目需要找出在给定范围内满足特定数字对称条件的所有整数的数量。\n\n检查位数是否为偶数：只有当数字的位数是偶数时才有可能成为对称整数，否则直接跳过。\n分割数字前后半部分：对于一个 2*n 位数字，将该数字转换为字符串，然后将其前 n 位数字和后 n 位数字分别累加求和，判断两部分是否相等。两者之和相等，则该数字符合条件。\n遍历范围： low 和 high 的范围较小（最高 10410^4104），可以直接遍历 [low, high] 区间内的所有数字，对符合条件的数字进行计数。\n\n代码如下：\nclass Solution:    def countSymmetricIntegers(self, low: int, high: int) -&gt; int:        count = 0        for num in range(low, high + 1):            num_str = str(num)            # 数字必须为偶数位，才能分成两部分比较            if len(num_str) % 2 == 0:                half = len(num_str) // 2                # 将前一半和后一半的各个数字相加                left_sum = sum(int(digit) for digit in num_str[:half])                right_sum = sum(int(digit) for digit in num_str[half:])                if left_sum == right_sum:                    count += 1        return count\n\n首先通过 str(num) 将整数转换为字符串，以便判断数字的位数是否为偶数。\n如果是偶数位，则将字符串分为前后两部分，分别计算各自数字的和。\n如果两部分的和相等，则计数器 count 累加。\n\n通过遍历 [𝑙𝑜𝑤,ℎ𝑖𝑔ℎ]范围内的每个整数，对于每个数字：\n\n将数字转换为字符串：复杂度 O(d)O(d)O(d)（其中 ddd 为数字的位数）。\n对前半部分和后半部分求和，各需要 O(d/2)O(d/2)O(d/2)，加起来也是 O(d)O(d)O(d)。\n\n总体时间复杂度大致为 O(N×d)O(N×d)O(N×d)，其中 N=high−low+1N=high−low+1N=high−low+1，ddd通常为常数\n","categories":["算法"],"tags":["Algorithm","暴力搜索","数位处理","字符串处理","简单"]},{"title":"Linux基础","url":"/post/linuxba.html","content":"所需软件的安装和配置\n1.VMware和远程连接软件（FinalShell、Xshell等）的安装\nVMware软件安装简单，激活码查找也方便，FinalShell若不使用专业版内容也是直接安装即可。\n下面是FinalShell3.9.5.7及之前版本的高级/专业版激活码获取方式。\n打开FinalShell后点击激活，选择离线激活，随便输入账号密码，复制机器码，粘贴即可获取\n&lt;?php    if(!empty($_POST[&#x27;k&#x27;]))&#123;        if($_POST[&#x27;s&#x27;] == 1)&#123;            $a = &#x27;激活码为：&#x27;.strtolower(substr(md5(&#x27;2356&#x27;.$_POST[&#x27;k&#x27;].&#x27;13593&#x27;),8,16));        &#125;        if($_POST[&#x27;s&#x27;] == 0)&#123;            $a = &#x27;激活码为：&#x27;.strtolower(substr(md5(&#x27;61305&#x27;.$_POST[&#x27;k&#x27;].&#x27;8552&#x27;),8,16));        &#125;    &#125;?&gt;\nsubstr截取md5的一部分，从第八位开始往后面的16个字符，strtolower()将字符串全部转为小写\n&lt;form action=&quot;#&quot; method=&quot;post&quot;&gt;        &lt;input type=&quot;text&quot; name=&quot;k&quot; id=&quot;k&quot;&gt;        &lt;input type=&quot;radio&quot; name=&quot;s&quot; id=&quot;s&quot; value=&quot;1&quot;&gt;专业版        &lt;input type=&quot;radio&quot; name=&quot;s&quot; id=&quot;s&quot; value=&quot;0&quot;&gt;高级版        &lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;    &lt;/form&gt;\nphp文件内容应为\n&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;    &lt;title&gt;FinalShell激活码计算&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;form action=&quot;#&quot; method=&quot;post&quot;&gt;    &lt;input type=&quot;text&quot; name=&quot;k&quot; id=&quot;k&quot;&gt;    &lt;input type=&quot;radio&quot; name=&quot;s&quot; id=&quot;s1&quot; value=&quot;1&quot;&gt;专业版    &lt;input type=&quot;radio&quot; name=&quot;s&quot; id=&quot;s2&quot; value=&quot;0&quot;&gt;高级版    &lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;&lt;/form&gt;&lt;?php    $a = &#x27;&#x27;;    if(!empty($_POST[&#x27;k&#x27;]))&#123;        if($_POST[&#x27;s&#x27;] == 1)&#123;            $a = &#x27;激活码为：&#x27;.strtolower(substr(md5(&#x27;2356&#x27;.$_POST[&#x27;k&#x27;].&#x27;13593&#x27;),8,16));        &#125;        if($_POST[&#x27;s&#x27;] == 0)&#123;            $a = &#x27;激活码为：&#x27;.strtolower(substr(md5(&#x27;61305&#x27;.$_POST[&#x27;k&#x27;].&#x27;8552&#x27;),8,16));        &#125;    &#125;    echo $a;?&gt;&lt;/body&gt;&lt;/html&gt;\nJava代码 附在线运行网站\nimport java.io.IOException;import java.security.MessageDigest;import java.security.NoSuchAlgorithmException;import java.util.Scanner;class Main&#123;    public static void main(String[] args) throws NoSuchAlgorithmException, IOException &#123;        System.out.print(&quot;请输入FinalShell的离线机器码：&quot;);        @SuppressWarnings(&quot;resource&quot;)        //Scanner reader = new Scanner(System.in);        String machineCode = &quot;aa@6a6c73491cbe6c6e&quot;; // 在此处放置机器码        generateKey(machineCode);    &#125;    public static void generateKey(String hardwareId) throws NoSuchAlgorithmException &#123;        String proKey = transform(61305 + hardwareId + 8552); //高级版        String pfKey = transform(2356 + hardwareId + 13593); //专业版        System.out.println(&quot;请将此行复制到离线激活中：&quot; + pfKey);    &#125;    public static String transform(String str) throws NoSuchAlgorithmException &#123;        @SuppressWarnings(&quot;unused&quot;)        String md5 = hashMD5(str);        return hashMD5(str).substring(8, 24);    &#125;    public static String hashMD5(String str) throws NoSuchAlgorithmException &#123;        MessageDigest digest = MessageDigest.getInstance(&quot;MD5&quot;);        byte[] hashed = digest.digest(str.getBytes());        StringBuilder sb = new StringBuilder();        for (byte b : hashed) &#123;            int len = b &amp; 0xFF;            if (len &lt; 16) &#123;                sb.append(&quot;0&quot;);            &#125;            sb.append(Integer.toHexString(len));        &#125;        return sb.toString();    &#125;&#125;\n虚拟网络配置\n安装好本地虚拟机后，需要对网络进行配置，使用vps可跳过这个步骤 课程中使用的是CentOS7的系统，不同版本的具体配置可能不尽相同。在虚拟机设置中，将虚拟机的网络模式设置为NAT模式。\n在终端界面输入ifconfig 查看ens33的ip地址，ip地址为192.168.88.100，然后打开虚拟网络编辑器，选中VMnet8更改配置\n\n\n子网IP更改为192.168.88.0，点击将主机虚拟适配器连接到此网络，点击NAT设置，将网关IP改为192.168.88.2，点击确定，保存。\n修改配置文件，IP地址192.168.88.100和网关地址192.168.88.2、DNS192.168.88.2\nvim /etc/sysconfig/network-scripts/ifcfg-ens33\n\n然后修改网络适配器\n\n删除/etc/sysconfig/network-scripts/ 下的以ifcfg开头除ifcfg-ens33和ifcfg-lo以外的文件（ifcfg-配置_1， ifcfg-ens33.bak），重启网络systemctl restart network 此时虚拟机应能正常访问网络。\n2.Linux命令\nLinux是树状存储结构，在一个根节点下存放了系统的不同文件夹，Windows是森林结构\n/bin：这个目录存放着最经常使用的命令,ls、cp、rm、chmod 等常用命令都在此目录\n/boot 系统启动目录，保存与系统启动相关的文件，如内核文件和启动引导程序；\n/dev 设备文件保存位置；\n/etc：存放在配置文件\n/home：用户的主目录\n/lib：存放程序所需的动态库和静态库文件；\n/root ：超级用户 home目录\n2.1.Linux基础命令\n2.1.1.linux命令的构成\nlinux指令=命令（做什么） +选项（怎么做） +参数（对谁做）\n​\t\t\t-command ：命令名 ：使用英文单词的缩写或者英文单词\n​\t\t\t-options：选项     ，可以对命令进行控制   但是 也可以省略\n​\t\t\t-parameter：给命令传参数， 可以是一个 ，也可以是多个或者零个\n在使用命令时，可以使用man 命令名查看使用说明\n./ ：代表当前目录\n…/：上一级目录\n使用这两种方式可实现绝对路径和相对路径访问文件\nctrl+r：历史记录中所搜命令（输入命令中的任意一个字符）；\nctrl+c：终止当前的命令\n2.1.2 ls命令\nls命令：展示linux系统中指定位置的目录信息   -F 查看目录中的文件\n-a ：查看所有文件，包括隐藏的文件，Linux下隐藏文件 隐藏目录 名称都是以.开头，图形界面下可以使用ctrl+h切换是否显示隐藏文件-l ：展示文件的详细信息，包括权限、归属、文件大小、创建修改时间、文件名称，linux内置了ll命令作为ls -l的别名ls -ld：显示目录和链接信息；-h ：人性化显示文件大小，赋予最恰当的单位 但是需要和 l一起使用  ls -R：递归显示子目录结构；ls [0-9] ：显示包含数字的文件名和目录名\n2.1.3 cd命令\ncd ../   返回上一级目录cd ../.. 返回上两级目录cd - 返回上一次操作的工作目录cd / 进入根目录cd ~ 返回家目录中   ~ 可以省略\n2.1.4 pwd命令\npwd命令：获取当前所在工作目录的绝对路径\n2.1.5 mkdir命令\nmkdir命令用来创建空目录的命令，我们可以在指定的路径下厨房间一个空目录\nmkdir 文件夹名字  ：在当前目录下创建一个文件夹mkdir -p 文件路径   指定路径下创建一个空目录，同时创建其父目录\n2.1.6 touch命令\ntouch命令可以创建一个新的文件，文件的拓展名随意，甚至可以是一个不存在的拓展名，当文件存在的时候，修改文件的创建时间\ntouch 可以一次性创建多个文件，但是这个文件路径必须正确\ntouch -t 0712250000 file1 修改一个文件或目录的时间戳 - (YYMMDDhhmm)touch * ：将当前下的文件时间修改为系统的当前时间touch –d 20040210 test：将test文件的日期改为20040210touch abc　：若abc文件存在，则修改为系统的当前时间；若不存在，则生成一个为当前时间的空文件\n2.1.7 rm命令\nrm 是删除文件的指令，可以删除文件 ，也可以删除文件夹\n-r  递归删除，删除文件夹的时候使用-f  强制删除 ，不进行询问rm  可以删除任意文件，路径可以是相对/绝对的\n2.1.8 mv命令\nmv是一个移动文件的指令，将文件从一个位置移动到另一个位置，在移动的过程中可以修改文件或者目录的名称，格式：mv 源文件路径（相对/绝对）   目标路径。移动文件或者目录时，目标路径必须存在，改名只需输入相同的路径不同的文件名即可，可同时改名并移动文件\nmv dir1 new_dir 重命名/移动 一个目录\n2.1.9 cp命令\ncp命令就是可以复制文件或者目录的命令，在复制的过程中，源文件不会被删除，复制完成后，文件可以修改名称，格式：cp 源文件路径  目标路径\ncp -r #复制目录时需要- rcp file1 file2 复制一个文件cp dir/* . 复制一个目录下的所有文件到当前工作目录cp -a /tmp/dir1 . 复制一个目录到当前工作目录cp -a dir1 dir2 复制一个目录\nmv和cp的使用方式基本一致，只有两个地方不一样：\n1：mv移动目录时不需要使用-r，cp需要使用-r\n2：cp不会删除源文件，而mv源文件会消失\n2.1.10 echo命令\n功能：输出内容\n语法：echo 参数\n\n参数：被输出的内容\n被两个反引号包围的内容，会作为命令执行，echo `pwd`，会输出当前工作目录\n\n2.1.11 重定向符\n功能：将符号左边的结果，输出到右边指定的文件中去\n\n&gt;，表示覆盖输出\n&gt;&gt;，表示追加输出\n\n2.2 进阶命令\n2.2.1 cat命令\n用于查看linux中小型的文本文件，cat 文件名\n因为他会一次行将所有的文件内容加载终端中，终端显示的数据有限，大的文件会显示不全，且消耗内存\n使用生产场景：   大数据框架的运行日志、大数据计算的运行日志\ncat file1 从第一个字节开始正向查看文件的内容tac file1 从最后一行开始反向查看一个文件的内容\n2.2.2 more命令\n用于查看linux中中型的文本文件\n使用more进行文件的查看可以按页，手动翻页或者回滚，更灵活。但是统一也消耗内存\n -回车   向下一行 -空格    向下一页 b   向上一页 q   退出查看 more file1 查看一个长文件的内容less file1 类似于 &#x27;more&#x27; 命令，但是它允许在文件中和正向操作一样的反向操作\ncat 和 more 都可用来查看文件内容。不同点在于：cat 指令查看完毕后会自动返回到正常模式而 more 指令则需要用户手动退出查看模式。cat 命令用于显示整个文件的内容，单独使用没有翻页功能。而 more 命令则可以分页显示文件内容，可以向前或向后翻页，可与cat配合使用。\n2.2.3 head，tail命令\nhead功能：查看文件头部内容\n语法：head [-n] 参数\n\n参数：被查看的文件\n选项：-n，查看的行数\n\ntail默认查看该文件的最新10行（如果这个文件发生变动，有新的内容添加到文件的尾部，tail命令会把新添加的内容展示出来，实时查看 ）\ntail -f 文件名head -2 file1 查看一个文件的前两行tail -2 file1 查看一个文件的最后两行\n2.2.4 ps命令\n查看当前活跃的进程\nps -ef 作用：查看当前所有的进程，查看PID和了解进程cpu资源占比情况\nUID：表示是哪个一个用户执行的PPID：进行的父进行标识号C：cpu使用资源的百分比Stime：进程开始执行的时间\n2.2.5 kill命令\n用于结束linux中的软件或者服务，格式： kill -9 进程编号\nkill -9 可以快速的杀死进程，但是不安全，因为我们的服务在运行的过程中，可能会需要保存或者某执行完某一个任务在关闭。所以不轻易使用，一般都是用于杀死闲置进程或者不响应的进行。\n2.2.6 ifconfig命令\n作用：用于查看服务器网络信息\n2.2.7 free命令\n作用：查看内存的使用情况\ntotal：表示总计的物理内存大小used：表示已经使用的多了free：表示还可以用多少shared：表示多个进行共享的内存总额buff：表示缓存的大小free -k：以kb为单位来显示内存（默认就是k）free -m：以m为单位来显示内存信息free -g ：以m为单位来显示内存信息free -h ：以用户适合的方式去显示内存free -t：显示linux全部的内存（total）free -s：表示每个N秒打印一次内存信息，直到使用crtl+c结束free -hs  5：生产使用场景：提交大数据计算任务后，动态的查看内存变化情况\n2.2.8 df命令\n作用：查看磁盘的使用情况\ndf -h：以用户方便的单位进行显示df-Th：显示文件系统的类型\n2.2.9 clear命令\n清除终端窗口的信息=crlt+l\n2.2.10 关机&amp;重启命令\n1：reboot命令重启计算机，reboot属于安全重启，不属于强制重启，可以放心的使用2：shutdown命令shutdown命令主要用于关机操作，关闭过程中，可以指定关机时间shutdown -h now 立即关机shutdown -h 1 一分钟后关机shutdown -h hours:minutes &amp; 按预定时间关闭系统shutdown -c 取消按预定时间关闭系统shutdown -r now 重启init 0    关闭系统telinit 0 关闭系统logout    注销\n2.2.11 which命令\n查看脚本或者终端命令文件所在位置\n一般情况下可以使用which命令找到终端指令的安装目录\n2.2.12 grep命令\ngrep就是根据一定的规则做全文检索，在文件中查询到满足规则的文本内容\ngrep是在文件中查询文本，指定的文件中查找特定的字符组合\n用法: grep [选项]…\n生产使用场景：从日志中找到错误信息，方便我们分析日志\n​\tgrep ERROR 文件名\n​\t警告：grep INFO 文件名\npgrep\n用于列举进程ID，下面两条命令是等效的\npgrep -u hchen2244122444ps -ef | egrep &#x27;^hchen&#x27; | awk &#x27;&#123;print $2&#125;&#x27;\n2.2.13 hostname命令\n查看主机名\n2.2.14 | 无名管道命令\n管道指令，是连接两个命令的指令，前一个命令的输出，就是下一个命令的输入\n查找文件：ls -l | grep 创建时间 |grep 文件名查找进程：ps -ef | grep 进程名 | grep 进程归属\n2.2.14.1 mkfifo 命名管道\n用法：mkfifo [选项] 文件名\n命名管道是一种特殊的文件类型，可以用于实现进程间通信（IPC，Inter-Process Communication），允许不同进程之间通过读写同一个文件来传递数据\n使用 mkfifo 命令创建的命名管道可以像普通文件一样被读取和写入。一个进程可以将数据写入命名管道，而另一个进程可以从同一个命名管道中读取这些数据，从而实现了进程间的通信。命名管道通常用于在不同的进程之间传递数据，例如在Shell脚本中用于管道操作、在不同的程序之间传递数据等\n命名管道在使用时需要注意同步和阻塞的问题，因为命名管道是基于文件系统的，读写操作可能会阻塞，导致进程在没有数据可读或可写时被阻塞。此外，命名管道在使用完毕后需要手动删除，可以使用 rm 命令删除对应的文件\n# mkfifo /tmp/aapipe           创建命名管道# ls -l /tmp输出 prw-rw-r-- 1 aa  aa  0 05-10 18:58 aapipe# ls -al &gt; /tmp/aapipe         在一个shell中运行此命令，命令不会返回，除非有人从这个有名管道中把信息读走# head /tmp/aapipe             在另一命令窗口读取管道中的信息，同时上一命令会返回输出 drwx------ 8 aa aa    4096 05-10 18:27 .    drwxr-xr-x 7 root  root     4096 03-05 00:06 ..    drwxr-xr-x 3 aa aa    4096 03-01 18:13 backup    -rw------- 1 aa aa     721 05-05 22:12 .bash_history    -rw-r--r-- 1 aa aa      24 02-28 22:20 .bash_logout    -rw-r--r-- 1 aa aa     176 02-28 22:20 .bash_profile    -rw-r--r-- 1 aa aa     124 02-28 22:20 .bashrc    -rw-r--r-- 1 root  root    14002 03-07 00:29 index.htm    -rw-r--r-- 1 aa aa   31465 03-01 23:48 index.php\n2.2.15 tar命令\ntar命令是进行打包，解包，压缩和解压的命令\n打包：将多个文件归档为一个文件，文件大小不会减少\n解包（拆包）：将一个包文件分拆多个实体的文件\n压缩：将文件按照一定的算法减少体积，但是文件的内容和信息不会发送改变\n解压缩：将一个压缩文件还原到正常的状态\n参数：c：打包选项x：解包选项z：压缩或者解压缩选项v：展示过程f：指定文件名一般情况tar -cxvf压缩 tar -zxvf解压\n其它压缩指令\nbunzip2 file1.bz2           解压一个叫做 &#x27;file1.bz2&#x27;的文件bzip2 file1                 压缩一个叫做 &#x27;file1&#x27; 的文件gunzip file1.gz             解压一个叫做 &#x27;file1.gz&#x27;的文件gzip file1                  压缩一个叫做 &#x27;file1&#x27;的文件gzip -9 file1               最大程度压缩rar a file1.rar test_file          创建一个叫做 &#x27;file1.rar&#x27; 的包rar a file1.rar file1 file2 dir1   同时压缩 &#x27;file1&#x27;, &#x27;file2&#x27; 以及目录 &#x27;dir1&#x27;rar x file1.rar     压缩rar包unrar x file1.rar   解压rar包tar -cvf archive.tar file1     创建一个非压缩的 tarballtar -tf archive.tar            显示一个包中的内容tar -xvf archive.tar           释放一个包tar -xvf archive.tar -C /tmp   将压缩包释放到 /tmp目录下tar -cvfj archive.tar.bz2 dir1 创建一个bzip2格式的压缩包tar -xvfj archive.tar.bz2      解压一个bzip2格式的压缩包tar -cvfz archive.tar.gz dir1  创建一个gzip格式的压缩包tar -xvfz archive.tar.gz       解压一个gzip格式的压缩包zip file1.zip file1            创建一个zip格式的压缩包zip -r file1.zip file1 file2 dir1   将几个文件和目录同时压缩成一个zip格式的压缩包unzip file1.zip                     解压一个zip格式压缩包\n2.2.16 useradd，groupadd命令\nuseradd 可以添加一个linux用户，/home目录会创建一个该用户的家目录\ngroupmod -n new_group_name old_group_name                              重命名一个用户组useradd -c &quot;Name Surname &quot; -g admin -d /home/user1 -s /bin/bash user1  创建一个属于 &quot;admin&quot; 用户组的用户\n2.2.17 userdel，groupdel命令\n删除用户同时会删除用户的家目录\nuserdel -r user1              删除一个用户 ( &#x27;-r&#x27; 排除主目录)usermod -c &quot;User FTP&quot; -g system -d /ftp/user1 -s /bin/nologin user1   修改用户属性newgrp group_name             登陆进一个新的群组以改变新创建文件的预设群组\n2.2.18 passwd命令\n格式：passwd 用户名 更改指定用户的密码，不可使用数字小键盘\npasswd user1               修改一个用户的密码 (只允许root执行)chage -E 2023-04-10 user1  设置用户密码的失效期限pwck                       检查 &#x27;/etc/passwd&#x27; 的文件格式和语法修正以及存在的用户grpck                      检查 &#x27;/etc/passwd&#x27; 的文件格式和语法修正以及存在的群组\n2.2.19 chmod，chown命令\ninux的文件权限\n\n\n\n\n\n权值\n\n\n\n\n读：r\nread\n4\n\n\n写：w\nwrite\n2\n\n\n执行： x\nexcuter\n1\n\n\n无权限：-\n\n0\n\n\n\nlinux文件归属\n属主：文件拥有者，一般是创建者 u   –user\n属组：文件拥有者所在的用户组   g    -group\n其他用户： 除了 属主和数组的其他用户 o -other\nls -l 可以查看文件的详细信息，包含文件权限其中d ：代表目录，-：普通文件\nchmod 777 文件名                #表示给当前用户，用户所在组，其他用户都给予全部权限chmod u+x,g+x,o+x 文件名        #增加权限，-则为删除权限chmod u=rwx, g=wx, o=r 文件名   #同时编辑多个权限chmod go-rwx directory1        删除群组(g)与其他人(o)对目录的读写执行权限chown [-R] [用户][:][用户组] 文件或文件夹chown -R user1 directory1      改变一个目录的所有人属性并同时改变改目录下所有文件的属性chgrp group1 file1             改变文件的群组chmod u+s /bin/file1       设置一个二进制文件的 SUID 位 - 运行该文件的用户也被赋予和所有者同样的权限chmod u-s /bin/file1       禁用一个二进制文件的 SUID位chmod g+s /home/public     设置一个目录的 SGID 位 - 类似SUID ，不过这是针对目录的chmod g-s /home/public     禁用一个目录的 SGID 位chmod o+t /home/public     设置一个文件的 STIKY 位 - 只允许合法所有人删除文件chmod o-t /home/public     禁用一个目录的 STIKY 位\n2.2.20 tree命令（需安装）\ntree    显示文件和目录由根目录开始的树形结构\nlstree 显示文件和目录由根目录开始的树形结构\n2.2.21 ln命令\n功能：在文件和目录之间建立链接\n格式：ln [参数] &lt;源文件或目录&gt; &lt;目标文件或目录&gt;\nln -s file1 lnk1 创建一个指向文件或目录的软链接ln file1 lnk1    创建一个指向文件或目录的物理链接\n2.2.22 chattr命令\nchattr +a file1    只允许以追加方式读写文件chattr +c file1    允许这个文件能被内核自动压缩/解压chattr +d file1    在进行文件系统备份时，dump程序将忽略这个文件chattr +i file1    设置成不可变的文件，不能被删除、修改、重命名或者链接chattr +s file1    允许一个文件被安全地删除chattr +S file1    一旦应用程序对这个文件执行了写操作，使系统立刻把修改的结果写到磁盘chattr +u file1    若文件被删除，系统会允许你在以后恢复这个被删除的文件lsattr             显示特殊的属性\n2.2.23 wc命令\n功能：统计\n语法：wc [-c -m -l -w] 文件路径\n\n选项，-c，统计bytes数量\n选项，-m，统计字符数量\n选项，-l，统计行数\n选项，-w，统计单词数量\n参数，文件路径，被统计的文件，可作为内容输入端口\n\n2.3 系统指令\n2.3.1 系统信息查看\nuname -m         显示机器的处理器架构uname -r         显示正在使用的内核版本hdparm -tT /dev/sda                在磁盘上执行测试性读取操作系统信息(SMBIOS / DMI) hdparm -i /dev/hda  罗列一个磁盘的架构特性hdparm -i /dev/hda   罗列一个磁盘的架构特性arch                 显示机器的处理器架构dmidecode -q         显示硬件系统部件 - (SMBIOS / DMI)cat /proc/cpuinfo    显示CPU info的信息cat /proc/interrupts 显示中断cat /proc/meminfo    校验内存使用cat /proc/swaps      显示哪些swap被使用cat /proc/version    显示内核的版本cat /proc/net/dev    显示网络适配器及统计cat /proc/mounts     显示已加载的文件系统lspci -tv            罗列 PCI 设备lsusb -tv            显示 USB 设备lsmod                查看加载的模块(驱动)date                 显示系统日期cal 2007             显示2007年的日历表date 041217002007.00 设置日期和时间 - 月日时分年.秒clock -w             将时间修改保存到 BIOSiconv -l             列出已知的编码\n2.3.2 文件查找\nfind / -name file1                          从 &#x27;/&#x27; 开始进入根文件系统搜索文件和目录find / -user user1                          搜索属于用户 &#x27;user1&#x27; 的文件和目录find /home/user1 -name \\.bin                在目录 &#x27;/ home/user1&#x27; 中搜索带有&#x27;.bin&#x27; 结尾的文件find /usr/bin -type f -atime +100           搜索在过去100天内未被使用过的执行文件find /usr/bin -type f -mtime -10            搜索在10天内被创建或者修改过的文件find / -name \\.rpm -exec chmod 755 &#x27;&#123;&#125;&#x27; \\;  搜索以 &#x27;.rpm&#x27; 结尾的文件并定义其权限find / -xdev -name \\.rpm                    搜索以 &#x27;.rpm&#x27; 结尾的文件，忽略光驱等可移动设备find / -perm -u+s                           罗列一个系统中所有使用了SUID控制的文件locate \\.ps                                 寻找以 &#x27;.ps&#x27; 结尾的文件 - 先运行 &#x27;updatedb&#x27; 命令whereis halt                                显示一个二进制文件、源码或man的位置which halt                                  显示一个二进制文件或可执行文件的完整路径\n2.3.3 文件系统挂载\nmount /dev/hda2 /mnt/hda2                挂载一个叫做hda2的盘 - 确定目录 &#x27;/ mnt/hda2&#x27; 已经存在umount /dev/hda2                         卸载一个叫做hda2的盘 - 先从挂载点 &#x27;/ mnt/hda2&#x27; 退出fuser -km /mnt/hda2                      当设备繁忙时强制卸载umount -n /mnt/hda2                      运行卸载操作而不写入 /etc/mtab 文件- 当文件为只读或当磁盘写满时非常有用mount /dev/fd0 /mnt/floppy               挂载一个软盘mount /dev/cdrom /mnt/cdrom              挂载一个cdrom或dvdrommount /dev/hdb /mnt/cdrecorder           挂载一个cdrw或dvdrommount -o loop file.iso /mnt/cdrom        挂载一个文件或ISO镜像文件mount -t vfat /dev/hda5 /mnt/hda5        挂载一个Windows FAT32文件系统mount /dev/sda1 /mnt/usbdisk             挂载一个usb 捷盘或闪存设备mount -t smbfs -o username=user,password=pass //WinClient/share /mnt/share 挂载一个windows网络共享\n2.3.4 磁盘查看\ndf -h                                               显示已经挂载的分区列表ls -lSr |more                                       以尺寸大小排列文件和目录du -sh dir1                                         估算目录 &#x27;dir1&#x27; 已经使用的磁盘空间&#x27;du -sk * | sort -rn                                 以容量大小为依据依次显示文件和目录的大小dmesg                                               显示系统诊断信息、操作系统版本号、物理内存的大小以及其它信息rpm -q -a --qf &#x27;%10&#123;SIZE&#125;t%&#123;NAME&#125;n&#x27; | sort -k1,1n   以大小为依据依次显示已安装的rpm包所使用的空间 (fedora, redhat类系统)dpkg-query -W -f=&#x27;$&#123;Installed-Size;10&#125;t$&#123;Package&#125;n&#x27; | sort -k1,1n   以大小为依据显示已安装的deb包所使用的空间 (ubuntu, debian类系统)\n2.3.5 软件安装命令\nrpm\nrpm -ivh package.rpm             安装一个rpm包rpm -ivh --nodeeps package.rpm   安装一个rpm包而忽略依赖关系警告rpm -U package.rpm               更新一个rpm包但不改变其配置文件rpm -F package.rpm               更新一个确定已经安装的rpm包rpm -e package_name.rpm          删除一个rpm包rpm -qa                          显示系统中所有已经安装的rpm包rpm -qa | grep httpd             显示所有名称中包含 &quot;httpd&quot; 字样的rpm包rpm -qi package_name             获取一个已安装包的特殊信息rpm -qg &quot;System Environment/Daemons&quot;     显示一个组件的rpm包rpm -ql package_name                     显示一个已经安装的rpm包提供的文件列表rpm -qc package_name                     显示一个已经安装的rpm包提供的配置文件列表rpm -q package_name --whatrequires       显示与一个rpm包存在依赖关系的列表rpm -q package_name --whatprovides       显示一个rpm包所占的体积rpm -q package_name --scripts            显示在安装/删除期间所执行的脚本lrpm -q package_name --changelog          显示一个rpm包的修改历史rpm -qf /etc/httpd/conf/httpd.conf       确认所给的文件由哪个rpm包所提供rpm -qp package.rpm -l                   显示由一个尚未安装的rpm包提供的文件列表rpm --import /media/cdrom/RPM-GPG-KEY    导入公钥数字证书rpm --checksig package.rpm               确认一个rpm包的完整性rpm -qa gpg-pubkey                       确认已安装的所有rpm包的完整性rpm -V package_name                      检查文件尺寸、 许可、类型、所有者、群组、MD5检查以及最后修改时间rpm -Va                                  检查系统中所有已安装的rpm包- 小心使用rpm -Vp package.rpm                      确认一个rpm包还未安装rpm2cpio package.rpm | cpio --extract --make-directories *bin* 从一个rpm包运行可执行文件rpm -ivh /usr/src/redhat/RPMS/`arch`/package.rpm               从一个rpm源码安装一个构建好的包rpmbuild --rebuild package_name.src.rpm                        从一个rpm源码构建一个 rpm 包\nyum[-y 自动确认] [install / remove / search] 软件名称\nyum install package_name            下载并安装一个rpm包yum localinstall package_name.rpm   将安装一个rpm包，使用你自己的软件仓库为你解决所有依赖关系yum update package_name.rpm         更新当前系统中所有安装的rpm包yum update package_name             更新一个rpm包yum remove package_name             删除一个rpm包yum list                            列出当前系统中安装的所有包yum search package_name             在rpm仓库中搜寻软件包yum clean packages                  清理rpm缓存删除下载的包yum clean headers                   删除所有头文件yum clean all                       删除所有缓存的包和头文件\ndeb\ndpkg -i package.deb         安装/更新一个 deb 包dpkg -r package_name        从系统删除一个 deb 包dpkg -l                     显示系统中所有已经安装的 deb 包dpkg -l | grep httpd        显示所有名称中包含 &quot;httpd&quot; 字样的deb包dpkg -s package_name        获得已经安装在系统中一个特殊包的信息dpkg -L package_name        显示系统中已经安装的一个deb包所提供的文件列表dpkg --contents package.deb 显示尚未安装的一个包所提供的文件列表dpkg -S /bin/ping           确认所给的文件由哪个deb包提供\napt(用于Debian, Ubuntu 以及类似系统)[-y 自动确认] [install / remove / search] 软件名称\napt-get install package_name       安装/更新一个 deb 包apt-cdrom install package_name     从光盘安装/更新一个 deb 包apt-get update                     升级列表中的软件包apt-get upgrade                    升级所有已安装的软件apt-get remove package_name        从系统删除一个deb包apt-get check                      确认依赖的软件仓库正确apt-get clean                      从下载的软件包中清理缓存apt-cache search searched-package  返回包含所要搜索字符串的软件包名称\n2.3.6 文本处理\ncat file1 file2 ... | command &lt;&gt; file1_in.txt_or_file1_out.txt general syntax for text manipulation using PIPE, STDIN and STDOUTcat file1 | command( sed, grep, awk, grep, etc...) &gt; result.txt  合并一个文件的详细说明文本，并将简介写入一个新文件中cat file1 | command( sed, grep, awk, grep, etc...) &gt;&gt; result.txt 合并一个文件的详细说明文本，并将简介写入一个已有的文件中grep Aug /var/log/messages    在文件 &#x27;/var/log/messages&#x27;中查找关键词&quot;Aug&quot;grep ^Aug /var/log/messages   在文件 &#x27;/var/log/messages&#x27;中查找以&quot;Aug&quot;开始的词汇grep [0-9] /var/log/messages  选择 &#x27;/var/log/messages&#x27; 文件中所有包含数字的行grep Aug -R /var/log/         在目录 &#x27;/var/log&#x27; 及随后的目录中搜索字符串&quot;Aug&quot;sed &#x27;s/stringa1/stringa2/g&#x27; example.txt     将example.txt文件中的 &quot;string1&quot; 替换成 &quot;string2&quot;sed &#x27;/^$/d&#x27; example.txt                     从example.txt文件中删除所有空白行sed &#x27;/ *#/d; /^$/d&#x27; example.txt             从example.txt文件中删除所有注释和空白行echo &#x27;esempio&#x27; | tr &#x27;[:lower:]&#x27; &#x27;[:upper:]&#x27; 合并上下单元格内容sed -e &#x27;1d&#x27; result.txt                      从文件example.txt 中排除第一行sed -n &#x27;/stringa1/p&#x27;                        查看只包含词汇 &quot;string1&quot;的行sed -e &#x27;s/ *$//&#x27; example.txt                删除每一行最后的空白字符sed -e &#x27;s/stringa1//g&#x27; example.txt          从文档中只删除词汇 &quot;string1&quot; 并保留剩余全部sed -n &#x27;1,5p;5q&#x27; example.txt                查看从第一行到第5行内容sed -n &#x27;5p;5q&#x27; example.txt                  查看第5行sed -e &#x27;s/00*/0/g&#x27; example.txt              用单个零替换多个零cat -n file1                                标示文件的行数cat example.txt | awk &#x27;NR%2==1&#x27;             删除example.txt文件中的所有偶数行echo a b c | awk &#x27;&#123;print $1&#125;&#x27;               查看一行第一栏echo a b c | awk &#x27;&#123;print $1,$3&#125;&#x27;            查看一行的第一和第三栏paste file1 file2                           合并两个文件或两栏的内容paste -d &#x27;+&#x27; file1 file2                    合并两个文件或两栏的内容，中间用&quot;+&quot;区分sort file1 file2                            排序两个文件的内容sort file1 file2 | uniq                     取出两个文件的并集(重复的行只保留一份)sort file1 file2 | uniq -u                  删除交集，留下其他的行sort file1 file2 | uniq -d                  取出两个文件的交集(只留下同时存在于两个文件中的文件)comm -1 file1 file2                         比较两个文件的内容只删除 &#x27;file1&#x27; 所包含的内容comm -2 file1 file2                         比较两个文件的内容只删除 &#x27;file2&#x27; 所包含的内容comm -3 file1 file2                         比较两个文件的内容只删除两个文件共有的部分\n2.3.7 字符/文件格式转换\ndos2unix filedos.txt fileunix.txt     将一个文本文件的格式从MSDOS转换成UNIXunix2dos fileunix.txt filedos.txt     将一个文本文件的格式从UNIX转换成MSDOSrecode ..HTML &lt; page.txt &gt; page.html  将一个文本文件转换成htmlrecode -l | more                      显示所有允许的转换格式\n2.3.8 文件系统操作\nbadblocks -v /dev/hda1    检查磁盘hda1上的坏磁块fsck /dev/hda1            修复/检查hda1磁盘上linux文件系统的完整性fsck.ext2 /dev/hda1       修复/检查hda1磁盘上ext2文件系统的完整性e2fsck /dev/hda1          修复/检查hda1磁盘上ext2文件系统的完整性e2fsck -j /dev/hda1       修复/检查hda1磁盘上ext3文件系统的完整性fsck.ext3 /dev/hda1       修复/检查hda1磁盘上ext3文件系统的完整性fsck.vfat /dev/hda1       修复/检查hda1磁盘上fat文件系统的完整性fsck.msdos /dev/hda1      修复/检查hda1磁盘上dos文件系统的完整性dosfsck /dev/hda1         修复/检查hda1磁盘上dos文件系统的完整性mkfs /dev/hda1         在hda1分区创建一个文件系统mke2fs /dev/hda1       在hda1分区创建一个linux ext2的文件系统mke2fs -j /dev/hda1    在hda1分区创建一个linux ext3(日志型)的文件系统mkfs -t vfat 32 -F /dev/hda1  创建一个 FAT32 文件系统fdformat -n /dev/fd0          格式化一个软盘mkswap /dev/hda3              创建一个swap文件系统swapon /dev/hda3              启用一个新的swap文件系统swapon /dev/hda2 /dev/hdb3    启用两个swap分区\n2.3.9 备份\ndump -0aj -f /tmp/home0.bak /home    制作一个 &#x27;/home&#x27; 目录的完整备份dump -1aj -f /tmp/home0.bak /home    制作一个 &#x27;/home&#x27; 目录的交互式备份restore -if /tmp/home0.bak           还原一个交互式备份rsync -rogpav --delete /home /tmp    同步两边的目录rsync -rogpav -e ssh --delete /home ip_address:/tmp           通过SSH通道rsyncrsync -az -e ssh --delete ip_addr:/home/public /home/local    通过ssh和压缩将一个远程目录同步到本地目录rsync -az -e ssh --delete /home/local ip_addr:/home/public    通过ssh和压缩将本地目录同步到远程目录dd bs=1M if=/dev/hda | gzip | ssh user@ip_addr &#x27;dd of=hda.gz&#x27; 通过ssh在远程主机上执行一次备份本地磁盘的操作dd if=/dev/sda of=/tmp/file1     备份磁盘内容到一个文件tar -Puf backup.tar /home/user   执行一次对 &#x27;/home/user&#x27; 目录的交互式备份操作( cd /tmp/local/ &amp;&amp; tar c . ) | ssh -C user@ip_addr &#x27;cd /home/share/ &amp;&amp; tar x -p&#x27;  通过ssh在远程目录中复制一个目录内容( tar c /home ) | ssh -C user@ip_addr &#x27;cd /home/backup-home &amp;&amp; tar x -p&#x27;           通过ssh在远程目录中复制一个本地目录tar cf - . | (cd /tmp/backup ; tar xf - )      本地将一个目录复制到另一个地方，保留原有权限及链接find /home/user1 -name &#x27;*.txt&#x27; | xargs cp -av --target-directory=/home/backup/ --parents 从一个目录查找并复制所有以 &#x27;.txt&#x27; 结尾的文件到另一个目录find /var/log -name &#x27;*.log&#x27; | tar cv --files-from=- | bzip2 &gt; log.tar.bz2          查找所有以 &#x27;.log&#x27; 结尾的文件并做成一个bzip包dd if=/dev/hda of=/dev/fd0 bs=512 count=1      做一个将 MBR (Master Boot Record)内容复制到软盘的动作dd if=/dev/fd0 of=/dev/hda bs=512 count=1 从已经保存到软盘的备份中恢复MBR内容\n2.3.10 光盘\ncdrecord -v gracetime=2 dev=/dev/cdrom -eject blank=fast -force 清空一个可复写的光盘内容mkisofs /dev/cdrom &gt; cd.iso            在磁盘上创建一个光盘的iso镜像文件mkisofs /dev/cdrom | gzip &gt; cd_iso.gz  在磁盘上创建一个压缩了的光盘iso镜像文件mkisofs -J -allow-leading-dots -R -V &quot;Label CD&quot; -iso-level 4 -o ./cd.iso data_cd 创建一个目录的iso镜像文件cdrecord -v dev=/dev/cdrom cd.iso  刻录一个ISO镜像文件gzip -dc cd_iso.gz | cdrecord dev=/dev/cdrom - 刻录一个压缩了的ISO镜像文件mount -o loop cd.iso /mnt/iso      挂载一个ISO镜像文件cd-paranoia -B           从一个CD光盘转录音轨到 wav 文件中cd-paranoia -- &quot;-3&quot;      从一个CD光盘转录音轨到 wav 文件中（参数-3）cdrecord --scanbus       扫描总线以识别scsi通道dd if=/dev/hdc | md5sum  校验一个设备的md5sum编码，例如一张 CD\n2.3.11 网络\nifconfig eth0：显示网络接口“eth0”的配置详细信息，例如IP地址、子网掩码和其他网络设置ifup eth0：    启动网络接口“eth0”，使其能够发送和接收网络流量ifdown eth0：  关闭网络接口“eth0”，禁止其发送或接收网络流量ifconfig eth0 192.168.1.1 netmask 255.255.255.0：将网络接口“eth0”的IP地址和子网掩码配置为分别为“192.168.1.1”和“255.255.255.0”ifconfig eth0 promisc：      将网络接口“eth0”设置为混杂模式，允许其捕获所有网络流量，包括不是发送到其MAC地址的数据包。dhclient eth0：              请求网络接口“eth0”从DHCP服务器获取IP地址租约。route -n show routing table：显示当前系统的路由表，显示当前的路由配置。route add -net 0/0 gw IP_Gateway：  为系统添加默认网关，其中网关IP地址设置为“IP_Gateway”。route add -net 192.168.0.0 netmask 255.255.0.0 gw 192.168.1.1：通过网关“192.168.1.1”添加静态路由，以便通过该网关访问网络“192.168.0.0/16”。route del 0/0 gw IP_gateway：删除之前添加的默认网关。echo &quot;1&quot; &gt; /proc/sys/net/ipv4/ip_forward：激活IP转发，允许系统在不同的网络接口之间进行IP数据包路由。hostname：显示系统的主机名，即在网络上标识系统的名称。host www.example.com：    执行DNS查找，将主机名“www.example.com”解析为IP地址，反之亦然。nslookup www.example.com：同样执行DNS查找，将主机名“www.example.com”解析为IP地址，反之亦然。ip link show： 显示所有网络接口的状态，包括其链路状态（已启用或已禁用）和其他信息。mii-tool eth0：使用Media Independent Interface（MII）工具显示网络接口“eth0”的链路状态。ethtool eth0： 显示网络卡“eth0”的统计信息和详细信息，例如速度、双工模式和错误计数器。netstat -tup： 显示使用TCP和UDP协议的所有活动网络连接及其关联的进程（通过PID标识）。netstat -tupl：显示系统上所有监听的网络服务及其关联的进程（通过PID标识）使用TCP和UDP协议。`tcpdump tcp port 80`：显示所有在端口80上使用TCP协议的网络流量，通常用于监控HTTP（超文本传输协议）流量。iwlist scan：  显示无线网络接口的扫描结果，列出可用的无线网络。iwconfig eth1：显示无线网络接口“eth1”的配置信息，包括SSID、信号强度和加密设置等。hostname：     显示系统的主机名，即在网络上标识系统的名称。host www.example.com：    执行DNS查找，将主机名“www.example.com”解析为IP地址，反之亦然。nslookup www.example.com：同样执行DNS查找，将主机名“www.example.com”解析为IP地址，反之亦然。whois www.example.com：   在Whois数据库中查找主机名“www.example.com”的注册信息，包括域名所有者、注册商、联系信息等。\n2.3.12 其它命令\nbc  用于编写脚本进行高精度数学运算\n编写如下sqrt脚本，可使用./sqrt 数字 进行平方根运算\n#!/bin/bashif [ $# -ne 1 ]then    echo &#x27;Usage: sqrt number&#x27;    exit 1else    echo -e &quot;sqrt($1)\\nquit\\n&quot; | bc -q -ifi\nsplit 用于分割大型文件\n用法：split [选项] [输入文件] [输出文件前缀]\n-b：指定每个输出文件的大小，后面跟着的参数可以是以字节（B）、千字节（K）、兆字节（M）等为单位的数值。例如 -b 1M 表示每个输出文件的大小为1兆字节-l：指定每个输出文件的行数，后面跟着的参数为整数。例如 -l 1000 表示每个输出文件包含1000行-d：设置输出文件的后缀数字的长度，默认为2-a：设置输出文件的后缀字符，默认为字母 &quot;a&quot;\n# ls -l largefile.tar.gz输出-rw-r--r-- 1 aa aa 436774774 04-17 02:00 largefile.tar.gz# split -b 50m largefile.tar.gz LF_# ls -l LF_*-rw-r--r-- 1 aa aa 52428800 05-10 18:34 LF_aa输出-rw-r--r-- 1 aa aa 52428800 05-10 18:34 LF_ab   -rw-r--r-- 1 aa aa 52428800 05-10 18:34 LF_ac   -rw-r--r-- 1 aa aa 52428800 05-10 18:34 LF_ad   -rw-r--r-- 1 aa aa 52428800 05-10 18:34 LF_ae   -rw-r--r-- 1 aa aa 52428800 05-10 18:35 LF_af   -rw-r--r-- 1 aa aa 52428800 05-10 18:35 LF_ag   -rw-r--r-- 1 aa aa 52428800 05-10 18:35 LF_ah   -rw-r--r-- 1 aa aa 17344374 05-10 18:35 LF_ai\n拆分后合并\ncat LF_* &gt;largefile.tar.gz\nnl nl命令其它和cat命令很像，只不过它会打上行号\nldd 查看一个可执行文件所使用的动态链接库 ldd+文件目录/文件名\ncol 把man文件转成纯文本文件\n# PAGER=cat# man less | col -b &gt; less.txt\nxmlwf 检查一个XML文档是否是所有的tag都是正常的\n# curl &#x27;https://coolshell.cn/?feed=rss2&#x27; &gt; cocre.xml  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current                                 Dload  Upload   Total   Spent    Left  Speed100 64882    0 64882    0     0  86455      0 --:--:-- --:--:-- --:--:-- 2073k# xmlwf cocre.xml# perl -i -pe &#x27;s@&lt;link&gt;@&lt;br&gt;@g&#x27; cocre.xml# xmlwf cocre.xmlcocre.xml:13:23: mismatched tag\nlsof 可以列出打开了的文件\n# lsof | grep TCPhttpd       548    apache    4u     IPv6   14300967    TCP *:http (LISTEN)httpd       548    apache    6u     IPv6   14300972    TCP *:https (LISTEN)httpd       561    apache    4u     IPv6   14300967    TCP *:http (LISTEN)httpd       561    apache    6u     IPv6   14300972    TCP *:https (LISTEN)sshd       1764      root    3u     IPv6       4993    TCP *:ssh (LISTEN)tcpserver  8965      root    3u     IPv4  153795500    TCP *:pop3 (LISTEN)mysqld    10202     mysql   10u     IPv4   73819697    TCP *:mysql (LISTEN)sshd      10735      root    3u     IPv6  160731956    TCP 210.51.0.232:ssh-&gt;123.117.239.68:31810 (ESTABLISHED)sshd      10767     hchen    3u     IPv6  160731956    TCP 210.51.0.232:ssh-&gt;123.117.239.68:31810 (ESTABLISHED)vsftpd    11095      root    3u     IPv4  152157957    TCP *:ftp (LISTEN)\n2.4 vim的使用\nvim有三种模式\n\n**使用技巧**帮助系统（内容收集于vimtutor）\n- 按下 &lt;HELP&gt; 键 (如果键盘上有的话)- 按下 &lt;F1&gt; 键 (如果键盘上有的话)- 输入 :help &lt;回车&gt;输入 CTRL-W CTRL-W   可以在窗口之间跳转。输入 :q &lt;回车&gt; 可以关闭帮助窗口Vim 的功能特性要比 Vi 多得多，但其中大部分都没有缺省启用，创建一个vimrc文件以启用更多特性1. 开始编辑 vimrc 文件 :edit ~/.vimrc\t\t这是 Unix 系统所使用的命令 :edit $VIM/_vimrc\t这是 MS-Windows 系统所使用的命令2. 接着读取 vimrc 示例文件的内容： :r $VIMRUNTIME/vimrc_example.vim3. 保存文件，命令为： :write  下次您启动 Vim 时，编辑器就会有了语法高亮的功能，要了解更多信息，添加设置请输入 :help vimrc-intro\n2.4.1基本插入删除，保存退出\nh、j、k、l 键分别对应光标键的左、下、上、右\n按键。然后输入:q! &lt;回车&gt;   表示不保存退出，使用 :wq 可以保存文件并退出\n命令模式下按x即可删除字符\n命令模式下按i即可进入插入模式，按a键可在光标之后插入文本\n命令模式输入 o 将在光标的下方打开新的一行并进入插入模式\n命令模式输入 O 将在光标的上方打开新的一行并进入插入模式\n2.4.2删除与撤销\n输入 dw 可以从光标处删除至一个单词的末尾\n输入 d$ 从当前光标删除到行末\n输入 dd 可以删除整一个当前行\nd      - 删除操作符。motion - 操作符的操作对象。w - 从当前光标当前位置直到下一个单词起始处，不包括它的第一个字符。e - 从当前光标当前位置直到单词末尾，包括最后一个字符。$ - 从当前光标当前位置直到当前行末。在动作前输入数字会使它重复那么多次，如输入 2w 使光标向前移动两个单词，输入 3e 使光标向前移动到第三个单词的末尾，因此输入 d2w 可以删除两个大写字母单词，输入 2dd 可以删除两行\n输入 u 来撤消最后执行的命令，输入 U 来撤消对整行的修改，输入 CTRL+R 可以重做被撤消的命令\n2.4.3更改与替换\n输入 p 可以将最后一次删除的内容置入光标之后\n输入 dd 删除整行，这样会将该行保存到 Vim 的一个寄存器中接着将光标移动到 准备置入的位置的上方，然后在命令模式下输入 p 将该行粘贴置入\n输入 r 和一个字符替换光标所在位置的字符\n输入 R 可连续替换多个字符\n输入  ce 可以改变文本直到一个单词的末尾\n改类操作符的工作方式跟删除类是一致的，动作参数（motion）也是相同的。\n2.4.4查找与定位\n1.输入 CTRL-G 显示当前编辑文件中当前光标所在行位置以及文件状态信息\n输入 CTRL-O 可以回到之前的位置\nCTRL-I 会跳转到较新的位置\n输入大写 G 可以使得当前光标直接跳转到文件最后一行，行号+G跳转到指定行输入 gg 可以使得当前光标直接跳转到文件第一行\n2.在命令模式下输入/ 想查找的字符 可以实现查找操作，按n键可以查找同上一次的字符串，N向相反方向查找同上一次的字符串？ 想查找的字符 可以逆向查找字符串\n3.输入 % 可以查找配对的括号 )、]、}，当光标在括号上时按% 即可跳转到与之匹配的括号处，再按则返回原来位置，可用于程序调试\n4.输入 :s/old/new 可以替换第一个匹配到的字符串 old 为 new\n输入   :s/old/new/g      可以替换整行 old 为 new输入   :#,#s/old/new/g   其中 #,# 代表的是替换操作的若干行中首尾两行的行号。输入   :%s/old/new/g     则是替换整个文件中的每个匹配串。输入   :%s/old/new/gc    会找到整个文件中的每个匹配串，并且对每个匹配串提示是否进行替换。\n2.4.5移动与批量操作\n输入 :! 然后紧接着输入一个外部命令+&lt;回车&gt;即可执行该外部命令\n输入 :w FILENAME可以把对当前文件的改动保存到FILENAME文件中\n部分保存：按 v 键，将光标从第一个想保存的字符移动至最后一个，这之间的文本被高亮了，按 : 字符。屏幕底部会出现 :&#x27;&lt;,&#x27;&gt; 输入 w TEST， TEST 应是一个未被使用的文件名。在出现:&#x27;&lt;,&#x27;&gt;w TEST 之后按 &lt;回车&gt; 键\n插入\n输入 :r FILENAME向当前文件中插入另外的文件的内容，提取进来的文件将从光标所在位置处开始置入\n复制\n按 v 键，将光标从第一个想保存的字符移动至最后一个，这之间的文本被高亮了，输入y复制，接着输入 p 粘贴。y 可以当作操作符来使用，如yw复制一个单词\n输入 :set xxx 可以设置 xxx 选项。一些有用的选项如下：    &#x27;ic&#x27; &#x27;ignorecase&#x27;   查找时忽略字母大小写    &#x27;is&#x27; &#x27;incsearch&#x27;    查找短语时显示部分匹配    &#x27;hls&#x27; &#x27;hlsearch&#x27;    高亮显示所有的匹配短语    :set nu             显示行号    :set nonu           不显示行号     选项名可以用完整版本，也可以用缩略版本，在选项前加上 no 可以关闭选项：  :set noic\n2.4.6补全功能\n使用 CTRL+D 和  可以进行命令行补全\n1. 确保 Vim 不是在以兼容模式运行： :set nocp2. 查看一下当前目录下已经存在哪些文件，输入： :!ls   或者  :!dir3. 现在输入一个目录的起始部分，例如输入： :e4. 接着按 CTRL+D 键，Vim 会显示以 e 开始的命令的列表。5. 然后按 &lt;TAB&gt; 键，Vim 会补全命令为 :edit 。6. 现在添加一个空格，以及一个已有文件的文件名的起始部分，例如： :edit FIL7. 接着按 &lt;TAB&gt; 键，Vim 会补全文件名(如果它是唯一匹配的)。","categories":["大数据"],"tags":["vim","shell","linux"]},{"title":"大数据套件安装","url":"/post/datainstall.html","content":"大数据套件安装\n本文记录了jdk，FineBI，kettle的安装过程。\njdk安装\n把jdk1.8.0_301.zip文件解压缩，放在某个目录中，本教程中是D:\\program files\\\n\n\n\n确认jdk安装成功，在cmd中输入 java -version\n\nFineBI安装使用\nBI：business intelligence\nFineBI介绍\n1：数据可以帮助我们做什么 ？\n​\t1-1  历史数据分析：分析已有的数据，对之前发生的事情做分析，找到原因\n​\t1-2  实时数据分析：对当下发生的数据进行处理，及时展示数据信息。让企业关注实时发展动态\n​\t1-3  未来数据：对未来即将发生的事情进行预测，帮助企业调整方向\n2：FineBI有哪些优势\n​\t1：个人用户完全免费，企业用户收费较低\n​\t2：自动式BI工具，企业或者个人自己搭建服务器，就可以访问BI版块\n​\t3：兼容多种数据源\n​\t4：零编码设计，让数据可视化工具通过拖拉拽就可以完成日常的需求\n​\t5：有超强的数据录入能力，在数据源加载以后依然可以修改、删除补录数据\n3：FineBI的使用场景\n​\tFineBI在大数据的场景中，使用一般是将我们抽取的数据源加载完毕后，满足数据分析要求的数据或者指标的数据在进行BI开发。\nFineBI的安装\n第一步：找到软件，右键安装\n第二步：配置安装路径\n第三步：修改jvm内存（默认-本机内存的二分之一）\n第四步：安装后运行之激活码的获取\n第五步：启动界面分析\n\n第六步：密码设置\n第七步：数据库的选择\n第八步：页面介绍\n\n网页开发优点\n如果企业中，我们将FineBI部署在一个服务器中，所有人都可以访问浏览器访问这个服务器进行BI开发\n1、此时所有的人的使用开发环境是相同\n2、方便数据源的使用，绑定或者提取一次数据源所有的开发者都可以使用\n3、开发结果所有的人都可以通过浏览器的方式查看\n4、可以快速分析数据报表（表格和图形）给非专业人事看\n开发前的数据准备\n1、大数据开发，既不产生数据，也不消费数据\n​     业务部门各个数据源提供生产数据（抽）\n​    BI开发、数据分析师、运营部门、产品经理\n因为BI开发都是大数据的下游部门，所以开发之前必须有数据！！！\n操作：把我们提供给大家的sql脚本，导入到数据库中\n1：启动datagrip ，选择一个数据库连接，找到结构，右键 run sql Script\n\n2：找到要执行sql脚本文件\n\n3：导入数据结果\n\n数据准备\n1：创建数据库连接\n\n2：创建分组&amp;业务包\n\n3：给业务包添加数据\n\n4：最重要的一步\n\n仪表版内容\n\n1：新建仪表板\n\n2：选择仪表板样式\n\n3：选择数据源\n\n4：页面编辑界面介绍\n\n5：点击分区柱形图\n6：拖拽字段\n\n7：通过自定义图标将下面的展示改为线\n8：修改图表颜色\n第九步：取消图例\n\n不同地区访问人数表\n1：加载数据源\n\n第二步：选择分析数据表\n\n第三步：更新业务数据包\n\n第四步：进入仪表盘\n\n第五步：选择要分析的数据表\n\n第六步：选择 地图\n\n第七步：构建地图（添加横轴、纵轴）\n\n总结：大屏展示的步骤\n1：连接内部（外部的数据库）-找到要展示bi库\n2：数据准备、 创建分组，根据数据连接创建业务包【注意！！一定要记得点更新】\n3：进入仪表板\n​\t3-1：创建组件\n​\t3-2：加载数据源\n​\t3-3：配置\n拓展：\n​\t遇到问题！！！记载页面数据发现有点卡\n1：进入安装目录下的bin文件夹， 找到 finebi.vmoptions\n集团数据分析_数据准备\n1：找到数据需要数据\n\n2：分析数据之前的关系\n\n3：自主选取数据，选择字段\n\n4：数据自助选取结果\n\n5：添加新增了-毛利额\n\n6：创建集团分析源表\n\n7：查看源数据集是否创建成功\n\n8：创建仪表盘\n\n集团数据分析_月销售额\n1：使用sql分析\n\n2：创建图表\n\n3：解决时间的问题&amp;毛利额问题\n\n同比&amp;环比【拓展】\n1：同比是本期与同期做对比   eg： 2020-1    2019-1\n​\t\t–本期指一定时期如月、季度、年\n​\t\t同期\n2：环比：表示连续2个统计周期内的量的变化比  eg：2020-1   2020-2\n\n\n4：修改组件颜色\n\nKettle安装使用\nkettle是一个etl工具，etl是进行数据抽取 转换 加载\nkettle用java开发的，所以要安装jdk（java development kit），\n\nwindows下使用 kettle打开Spoon.bat\n\n\nmac 下打开 kettle 使用终端 cd  切换到 你解压的kettle的目录下，  ==sh ./spoon.sh==\n\ntxt数据转换Excel数据\n\n新建转换\n\n\n\n创建文本输入组件\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n获取好字段之后，点击确定保存即可。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n当看到流程上面有绿色的对勾 表示转换成功了\n\n\nExcel数据转换Mysql数据\n\n\n找到要转换为excel文件\n\n\n打开DG或者是使用命令行进入到mysql数据库，创建一个数据库\nCREATE DATABASE kettle_db CHARSET =utf8;\n\n\n配置kettle和mysql连接，\n\n\n\n\nkettle_demo/type=javax.sql.DataSource  kettle_demo/driver=com.mysql.cj.jdbc.Driverkettle_demo/url=jdbc:mysql://192.168.88.100:3306/kettle_demo?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=false&amp;serverTimezone=GMTkettle_demo/user=rootkettle_demo/password=123456\n\n\n先去新建输入和输出组件\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nctrl+s 将流程进行保存，保存之后，点击执行即可。\n\n\n错误问题\n\n\n找到自己的mysql的配置文件 my.ini\n\ndefault_authentication_plugin 这个选项后面的值 改为\ndefault_authentication_plugin=mysql_native_password\n保存这个文件， 打开 win+R， 输入services.msc，重启此服务\nMysql表间转换\n设置数据库连接的共享\n\n\n\n\n\n\n保存并执行即可\n\n插入-更新组件\n\n清空 new_user 表中的数据（右键Database Tools Truncate）\n先将 t_user 表中的张三 改为 20岁，重新的去执行 刚才的 table_to_table 这个脚本，将t_user表中的数据 ，添加到 new_user 表。\n\n\n\n\n保存并执行\n\nswitch-case组件\n1， \n\n\n\n\nexcel输出男和女的时候，配置基本一样，女的配置参照男的截图（3-4）\n保存这个流程 并执行。\n\nSQL脚本组件\n\n设置转换参数\n\n\n\n\n接下来就可以保存去执行了\njob开发\n\n新建job\n先将job保存完毕之后，再去设置转换\n\n\n==Kettle中文网 – Kettle安装、Kettle使用、Kettle中文==\n","categories":["大数据"],"tags":["大数据"]},{"title":"SQL基础","url":"/post/SQLba.html","content":"一、数据库概述\n1、数据库介绍\n数据库就是存储数据的仓库，其本质是一个文件系统，按照特定的格式将数据存储起来，用户可以对数据库中的数据进行增加，修改，删除及查询操作。\n随着互联网的高速发展，大量的数据在不断的产生，伴随而来的是如何高效安全的存储数据和处理数据，而这一问题成为了信息时代的一个非常大的问题，而使用数据库可以高效的有条理的储存数据。\n\n可以结构化存储大量的数据；\n可以有效的保持数据的一致性、完整性；\n读写效率极高。\n\n2、数据库分类\n数据库又分为关系型数据库和非关系型数据库\n关系型数据库RDBMS\n关系型数据库：指采用了关系模型来组织数据的数据库。\n关系模型指的就是二维表格模型，而一个关系型数据库就是由二维表及其之间的联系所组成的一个数据组织。\n非关系型数据库NoSQL\n非关系型数据库：又被称为NoSQL（Not Only SQL )，意为不仅仅是SQL，对NoSQL 最普遍的定义是“非关联型的”，强调 Key-Value 的方式存储数据。\nKey-Value结构存储： Key-value数据库是一种以键值对存储数据的一种数据库，类似Java中的map。可以将整个数据库理解为一个大的map，每个键都会对应一个唯一的值。\n\n关系型数据库（RDBMS）和非关系型数据库（NoSQL）是两种不同类型的数据库管理系统，用于存储和管理数据的方式不同，它们之间的一些主要区别如下：\n\n数据结构：关系型数据库使用表格（表）来组织数据，每个表都有固定的列和行。表之间可以建立关系，通过键（键值对）进行连接。而非关系型数据库则没有固定的表结构，数据可以以文档、键值对、列族或者图等形式存储。\n可扩展性：非关系型数据库通常具有更好的可扩展性，可以更容易地处理大规模和高并发的数据。关系型数据库在处理大量数据和高并发请求时可能会面临性能瓶颈。\n数据一致性：关系型数据库通常具有强一致性，即数据在数据库中的状态是一致的。而非关系型数据库则可能具有弱一致性或最终一致性，即在某一时刻数据在不同节点之间可能存在不一致，但最终会达到一致状态。\n灵活性：非关系型数据库通常更加灵活，可以在不需要事先定义数据结构的情况下存储和处理各种不同类型的数据。而关系型数据库需要事先定义表结构，并在存储数据之前进行严格的模式设计。\n查询语言：关系型数据库通常使用结构化查询语言（SQL）来查询和操作数据。而非关系型数据库使用不同的查询语言，例如键值对数据库使用键（key）来查询数据，文档数据库使用类似于JSON的查询语法，列族数据库使用列族和列来查询数据。\n数据库设计：关系型数据库通常适用于复杂的事务性应用，需要保持数据的一致性和完整性，如金融系统、人力资源管理系统等。而非关系型数据库通常适用于需要处理大量半结构化或非结构化数据、需要高度可扩展性和灵活性的应用，如社交媒体、物联网应用、日志数据等。\n\n3、常见数据库介绍\n关系型数据库\n\n\n\n数据库\n介绍\n\n\n\n\nMySQL\n开源免费的中型数据库,已经被Oracle收购.MySQL6.x版本也开始收费。\n\n\nOracle\n收费的大型数据库，Oracle公司的产品。Oracle收购SUN公司，收购MYSQL。\n\n\nDB2\nIBM公司的数据库产品,收费的。常应用在银行系统中.\n\n\nSQLserver\nMicroSoft 公司收费的中型的数据库。C#、.net等语言常使用。\n\n\nSQLite\n嵌入式的小型数据库，应用在手机端。\n\n\n\n非关系型数据库\n\n\n\n数据库\n介绍\n\n\n\n\nRedis\n是一个小而美的数据库，主要用在key-value的内存缓存，读写性能极佳\n\n\nHBase\nHBase是列式数据库，目标是高效存储大量数据\n\n\nMongoDB\nMongoDB是文档型数据库，非常接近关系型数据库的。\n\n\n\n二、MySQL数据库\n1、MySQL介绍\nMySQL是一个关系型数据库管理系统，在 WEB 应用方面，MySQL是最好的 RDBMS (Relational Database Management System，关系数据库管理系统) 应用软件，它是由瑞典MySQL AB 公司开发，目前属于 Oracle 旗下产品，MySQL 是最流行的关系型数据库管理系统中的一个。\n2、MySQL特点\n1.MySQL支持大型的数据库。可以处理拥有上千万条记录的大型数据库。\n2.MySQL使用标准的SQL数据语言形式。\n3.MySQL可以安装在不同的操作系统，并且提供多种编程语言的操作接口。这些编程语言包括C、C++、Python、Java、Ruby等等。\n3、MySQL版本\nMySQL Community Server：社区版本，开源免费，但不提供官方技术支持。\nMySQL Enterprise Edition：企业版本，需付费，可以试用30天。\nMySQL Cluster：集群版，开源免费。可将几个MySQL Server封装成一个Server。\nMySQL Cluster CGE：高级集群版，需付费。\nMySQL Workbench（GUITOOL）：一款专为MySQL设计的ER/数据库建模工具。它是著名的数据库设计工具DBDesigner4的继任者。MySQL Workbench又分为两个版本，分别是社区版（MySQL Workbench OSS）、商用版（MySQL WorkbenchSE）。\n三、Linux系统MySQL使用\n1、登陆MySQL数据库\nMySQL是一个需要账户名密码登录的数据库，登陆后使用，它提供了一个默认的root账号，使用安装时设置的密码即可登录，目前有两种登录场景：\n本地登录\n# mysql -uroot –p 回车  password：输入密码\n-u 后面是登录的用户名\n-p 后面是登录密码, 如果不填写, 回车之后会提示输入密码\n远程登录\n# mysql -h 远程服务器IP地址 -P 端口号 -u用户名 -p 回车password：输入密码\n退出\nmysql&gt; exitmysql&gt; quit快捷键Ctrl + d\n2.DataGrip使用\n创建工程\n点击File-&gt;New-&gt;Project新建DataGrip工程\n输入项目名称，点击确定。\n选择新项目打开方式：This Windows（在本窗口中打开），New Windows（在新窗口中打开）， Attach（附加模式）\n连接数据库\n选择Database下的➕，点击DataSource菜单下的MySQL。\n填写对应的参数，连接数据库：连接名，IP，用户名，密码等，点击OK完成连接。\n如果是第一次使用，需要下载mysql驱动文件。\n设置数据库时区：\n\n点击Advanced按钮；\n在VM options后面写入`-Duser.timezone=Asia/Shanghai\n\n设置完成后，单击Apply（应用），单击OK，连接完成\n选择要使用的数据库\n点击连接名称之后的按钮可以选择所要使用的数据库：\nDataGrip软件设置\n设置字体大小\n设置文字大小： File—&gt;settings—&gt;Editor----&gt;Font，可以设置文字尺寸Size和行高Line height\n设置关键字大写\n设置关键字大写： File—&gt;settings—&gt;Editor----&gt;Code Style—&gt;SQL—&gt;MySql(需要设置的数据库)—&gt;Case\n\n自动排版\n自动排版布局： File—&gt;settings—&gt;Editor----&gt;Code Style—&gt;SQL—&gt;MySql(需要设置的数据库)—&gt;Queries\n自动排版快捷键：Ctrl+ Alt + L\n四、SQL语句\n1、连接数据库\n结构化查询语言(Structured Query Language)简称SQL，是关系型数据库管理系统都需要遵循的规范，是数据库认识的语句。不同的数据库生产厂商都支持SQL语句，但都有特有内容。\n举例：\n普通话：各数据库厂商都遵循的ISO标准\n方言：数据库特有的关键字\n2、SQL语句分类\nDDL\nDDL（Data Definition Language）用于定义和管理数据库中的数据结构，包括表、视图、索引、触发器、存储过程、用户等。\nDDL通常包括以下几种常见的语句：\n\nCREATE：用于创建数据库中的各种对象，如创建表、视图、索引、触发器、存储过程等。例如，CREATE TABLE用于创建表，CREATE VIEW用于创建视图。\nALTER：用于修改数据库中已存在的对象，如修改表结构、修改视图定义等。例如，ALTER TABLE用于修改表结构，ALTER VIEW用于修改视图定义。\nDROP：用于删除数据库中的对象，如删除表、删除视图等。例如，DROP TABLE用于删除表，DROP VIEW用于删除视图。\nTRUNCATE：用于删除表中的所有数据，并且保留表结构和属性。例如，TRUNCATE TABLE用于删除表中的所有数据。\nRENAME：用于修改数据库中对象的名称，如修改表名、修改视图名等。例如，RENAME TABLE用于修改表名，RENAME VIEW用于修改视图名。\nGRANT和REVOKE：用于授权和撤销数据库对象的权限，如授权用户对表进行增、删、改、查操作等。例如，GRANT SELECT, INSERT, UPDATE, DELETE ON table_name TO user_name用于授权用户对表进行查询、插入、更新、删除操作。\n\nDDL语句通常由数据库管理员或具有相应权限的用户执行，用于定义数据库的结构和元数据，对数据库的整体架构进行管理和控制。\nDML\nDML（Data Manipulation Language）用于对数据库中的数据进行操作，包括查询、插入、更新、删除等操作。\nDML通常包括以下几种常见的语句：\n\nSELECT：用于查询数据库中的数据，包括单表查询、多表查询、嵌套查询、聚合查询、排序、分组等操作。例如，SELECT * FROM table_name用于查询表中的所有数据，SELECT column1, column2 FROM table_name用于查询表中指定列的数据。\nINSERT：用于向数据库中插入新数据，包括单行插入和多行插入。例如，INSERT INTO table_name (column1, column2) VALUES (value1, value2)用于向表中插入一行数据。\nUPDATE：用于更新数据库中的数据，可以更新单表或多表中的数据。例如，UPDATE table_name SET column1 = value1, column2 = value2 WHERE condition用于更新表中符合条件的数据。\nDELETE：用于删除数据库中的数据，可以删除单表或多表中的数据。例如，DELETE FROM table_name WHERE condition用于删除表中符合条件的数据。\n\nDML语句用于对数据库中的数据进行增、删、改、查等操作，由应用程序或数据库用户执行，用于操作数据库中的具体数据记录。DML操作可以通过执行DML语句来实现对数据库中数据的增加、删除、修改和查询。\nDQL\nDQL（Data Query Language）用于查询数据库中的数据，即实现从数据库中获取数据的操作。\nDQL通常包括以下几种常见的语句：\n\nSELECT：用于查询数据库中的数据，包括单表查询、多表查询、嵌套查询、聚合查询、排序、分组等操作。SELECT语句可以通过指定要查询的表、列、条件、排序方式等来获取数据。例如，SELECT * FROM table_name用于查询表中的所有数据，SELECT column1, column2 FROM table_name用于查询表中指定列的数据。\nFROM：用于指定要查询的表名，可以查询单个表或多个表的数据。例如，SELECT * FROM table1, table2用于从table1和table2两个表中获取数据。\nWHERE：用于指定查询的条件，可以使用逻辑运算符、比较运算符、通配符等来定义查询条件。例如，SELECT * FROM table_name WHERE column1 = 'value’用于查询column1等于特定值的数据。\nORDER BY：用于指定查询结果的排序方式，可以按照一个或多个列进行升序或降序排序。例如，SELECT * FROM table_name ORDER BY column1 ASC用于按照column1列的升序排序。\nGROUP BY：用于将查询结果按照一个或多个列进行分组，并对每个分组进行聚合计算。例如，SELECT column1, SUM(column2) FROM table_name GROUP BY column1用于按照column1列的值进行分组，并计算每个分组中column2列的和。\nJOIN：用于连接多个表的数据，可以通过不同的连接方式（如内连接、外连接、自连接等）来获取联接后的结果。例如，SELECT * FROM table1 INNER JOIN table2 ON table1.id = table2.id用于执行内连接操作，连接两个表的id列相等的记录。\n\nDQL语句用于查询数据库中的数据，并通过结果集返回查询结果。DQL语句可以通过执行查询操作来实现从数据库中获取数据，并支持丰富的查询功能，用于满足应用程序或用户对数据库中数据的查询需求。\nDCL\nDCL（Data Control Language用于控制数据库中的数据访问和权限管理。\nDCL主要包括以下两种常见的语句：\n\nGRANT：用于授权用户或角色对数据库对象（如表、视图、存储过程等）进行特定的操作权限。GRANT语句可以授权用户或角色执行SELECT、INSERT、UPDATE、DELETE等数据库操作，也可以授权用户或角色对特定的数据库对象进行操作。例如，GRANT SELECT, INSERT ON table_name TO user_name或GRANT UPDATE ON table_name TO role_name用于授权用户或角色对表进行SELECT、INSERT或UPDATE操作。\nREVOKE：用于撤销用户或角色对数据库对象的操作权限。REVOKE语句可以撤销之前通过GRANT语句授权的权限。例如，REVOKE SELECT ON table_name FROM user_name或REVOKE INSERT ON table_name FROM role_name用于撤销用户或角色对表的SELECT或INSERT权限。\n\nDCL语句用于对数据库中的数据访问进行控制，包括授权用户或角色对数据库对象的操作权限，以及撤销之前授权的权限。通过DCL语句，数据库管理员可以灵活地管理用户或角色对数据库的操作权限，确保数据库的安全性和数据的合法性。\n要点\n① SQL语句可以单行或多行书写，以分号结尾\n② 可使用空格和缩进来增强语句的可读性\n③ MySQL数据库的SQL语句不区分大小写，关键字建议使用大写\n④ 可以使用单行与多行注释（#和/*）\n五、DDL数据库操作\n1、MySQL的组成结构\n\n一个MySQL DBMS可以同时存放多个数据库，理论上一个项目就对应一个数据库\n一个数据库中还可以同时包含多个数据表，而数据表才是真正用于存放数据的位置。（类似Office软件中的Excel表格），理论上一个功能就对应一个数据表。如博客系统中的用户管理功能，就需要一个user数据表、博客中的文章就需要一个article数据表、博客中的评论就需要一个message数据表\n一个数据表又可以拆分为多个字段，每个字段就是一个属性\n一个数据表除了字段以外，还有很多行，每一行都是一条完整的数据（记录）\n2、数据库的基本操作\n① 创建数据库\ncreate database 数据库名称(字母+数字+下划线组成，以字母开头，不能出现中文以及特殊字符，不能重名)\nmysql&gt; create database 数据库名称 [设置编码格式];create database if not exists db_itheima default character set utf8 指定默认字符集设置编码格式\n国内汉字无法通过256个字符进行描述，所以国内开发了自己的编码格式gb2312，升级gbk\n中国台湾业开发了一套自己的编码格式big5\n很多项目并不仅仅只在本地使用，也可能支持多国语言，标准化组织开发了一套通用编码utf8，后来5.6版本以后又进行了升级utf8mb4\n\n编写SQL语句是一个比较细致工作，不建议直接在终端中输入SQL语句，可以先把要写的SQL语句写入一个记事本中，然后拷贝执行。\n\n② 查询数据库\n基本语法：显示所有数据库\nmysql&gt; show databases;\n③ 删除数据库\n基本语法：\nmysql&gt; drop database 数据库名称;\n④ 选择数据库\n从数据库列表中查找需要使用的数据库 格式：\nmysql&gt; use datab;\n查看正在使用的数据库（8.0以后版本需要基于select查询来获取当前数据库）\nmysql&gt; select database();\n六、DDL数据表操作\n特别注意：创建数据表必须有一个前提，首先要明确选择某一个数据库。\n1、数据表的基本操作\n数据表的创建\n基本语法：\nmysql&gt; create table 数据表名称(\t字段1 字段类型 [字段约束],\t字段2 字段类型 [字段约束],\t...); \n\nuse在MySQL中的含义代表选择，use 数据库名称相当于选择指定的数据库。而且use比较特殊，其选择结束后，其尾部可以不加分号；但是强烈建议所有的SQL语句都要加分号，养成一个好习惯。\n\nmysql&gt; create table aa(\tid tinyint,    username varchar(20),    password char(32)) engine=innodb default charset=utf8;\n\ntinyint ：微整型，范围-128 ~ 127，无符号型，则表示0 ~ 255\n\n\n表示字符串类型可以使用char与varchar，char代表固定长度的字段，varchar代表变化长度的字段。\n\n创建一个article文章表，拥有4个字段（编号、标题、作者、内容）\nmysql&gt; use datab;mysql&gt; create table article(\tid int,\ttitle varchar(50),\tauthor varchar(20),\tcontent text) engine=innodb default charset=utf8;\n\ntext ：文本类型，一般情况下，用varchar存储不了的字符串信息，都建议使用text文本进行处理。\n\n\nvarchar存储的最大长度，理论值65535个字符。但是实际上，有几个字符是用于存放内容的长度的，所以真正可以使用的不足65535个字符，另外varchar类型存储的字符长度还和编码格式有关。1个GBK格式的占用2个字节长度，1个UTF8格式的字符占用3个字节长度。GBK = 65532~65533/2，UTF8 = 65532~65533/3\n\n查询已创建数据表\n显示所有数据表（当前数据库）\nmysql&gt; use 数据库名称;mysql&gt; show tables;\n显示数据表的（编码格式、字段等信息）\nmysql&gt; desc 数据表名称;\n修改数据表信息\n① 数据表字段添加\nmysql&gt; alter table 数据表名称 add 新字段名称 字段类型 first|after 其他字段名称;选项说明：first：把新添加字段放在第一位after 字段名称：把新添加字段放在指定字段的后面\n案例：在tb_article文章表中添加一个addtime字段，类型为date(年-月-日)\nmysql&gt; alter table tb_article add addtime date after content;mysql&gt; desc tb_article;\n② 修改字段名称或字段类型\n修改字段名称与字段类型（也可以只修改名称）\nmysql&gt; alter table tb_admin change username user varchar(40);mysql&gt; desc tb_admin;\n仅修改字段的类型\nmysql&gt; alter table tb_admin modify user varchar(20mysql&gt; desc tb_admin;\n③ 删除某个字段\nmysql&gt; alter table tb_article drop 字段名称;mysql&gt; desc tb_article;\n④ 修改数据表名称\nrename table 旧名称 to 新名称;\n删除数据表\nmysql&gt; drop table IF EXISTS 数据表名称;\n2、字段类型详解\n① 整数类型\n\n\n\n分类\n类型名称\n说明\n\n\n\n\ntinyint\n很小的整数\n-128 ~ 127\n\n\nsmallint\n小的整数\n-32768 ~ 32767\n\n\nmediumint\n中等大小的整数\n-8388608 ~ 8388607\n\n\nint(integer)\n普通大小的整数\n-2147483648 ~ 2147483647\n\n\n\n② 浮点类型\n浮点类型（精度失真情况）和定点类型（推荐使用定点类型）\n\n\n\n分类\n类型名称\n\n\n\n\nfloat\n单精度浮点数\n\n\ndouble\n双精度浮点数\n\n\ndecimal(m,d)\n定点数，decimal(10,2)\n\n\n\n\ndecimal(10,2) ：代表这个数的总长度为10 = 整数长度 + 小数长度，2代表保留2位小数\n\n③ 日期类型\n\n\n\n分类\n类型名称\n\n\n\n\nyear\nYYYY 1901~2155\n\n\ntime\nHH:MM:SS -838:59:59~838:59:59\n\n\ndate\nYYYY-MM-DD  1000-01-01~9999-12-3\n\n\ndatetime\nYYYY-MM-DD  HH:MM:SS 1000-01-01 00:00:00~ 9999-12-31 23:59:59\n\n\ntimestamp\nYYYY-MM-DD  HH:MM:SS 1970~01~01 00:00:01  UTC~2038-01-19 03:14:07UTC\n\n\n\n④ 文本\n\n\n\n类型名称\n说明\n\n\n\n\nchar(m)\nm为0~255之间的整数定长（固定长度）\n\n\nvarchar(m)\nm为0~65535之间的整数变长（变化长度）\n\n\ntext\n允许长度0~65535字节\n\n\nmediumtext\n允许长度0~167772150字节\n\n\nlongtext\n允许长度0~4294967295字节\n\n\n\n七、DML数据操作语言\n1、DML的SQL语句\ninsert插入、update更新、delete删除\n2、数据的增删改\n数据的增加操作\nmysql&gt; insert into 数据表名称([字段1,字段2,字段3...]) values (字段1的值,字段2的值,字段3的值...);\n\n特别注意：在SQL语句中，除了数字，其他类型的值，都需要使用引号引起来，否则插入时会报错。\n\n第一步：准备一个数据表\nmysql&gt; use aa;mysql&gt; create table tb_user(\tid int,\tusername varchar(20),\tage tinyint unsigned,\tgender enum(&#x27;男&#x27;,&#x27;女&#x27;,&#x27;保密&#x27;),\taddress varchar(255)) engine=innodb default charset=utf8;\n\nunsigned代表无符号型，只有0到正数。tinyint unsigned无符号型，范围0 ~ 255\n\n\nenum枚举类型，多选一。只能从给定的值中选择一个\n\n第二步：使用insert语句插入数据\nmysql&gt; insert into tb_user values (1,&#x27;刘备&#x27;,34,&#x27;男&#x27;,&#x27;广州市天河区&#x27;);mysql&gt; insert into tb_user(id,username,age) values (2,&#x27;关羽&#x27;,33);\n第三步：批量插入多条数据\nmysql&gt; insert into tb_user values (3,&#x27;大乔&#x27;,19,&#x27;女&#x27;,&#x27;上海市浦东新区&#x27;),(4,&#x27;小乔&#x27;,18,&#x27;女&#x27;,&#x27;上海市浦东新区&#x27;),(5,&#x27;马超&#x27;,26,&#x27;男&#x27;,&#x27;北京市昌平区&#x27;);INSERT INTO aaa(name)VALUES (&#x27;heheh&#x27;);                               #单独插入一个数据INSERT INTO aaa(name,gender,age)VALUES (&#x27;hehe&#x27;,&#x27;male&#x27;,18);           #插入多个列出数据INSERT INTO aaa VALUES (&#x27;hehe1&#x27;,&#x27;male&#x27;,18);                          #插入一条完整数据INSERT INTO aaa VALUES (&#x27;hehe2&#x27;,&#x27;male&#x27;,18),(&#x27;hehehe&#x27;,&#x27;female&#x27;,18);   #插入多条完整数据INSERT INTO aaa(name,gender)VALUES (&#x27;hehe3&#x27;,&#x27;male&#x27;),(&#x27;hehe4&#x27;,&#x27;male&#x27;);#插入多条列出数据\n数据的修改操作\nmysql&gt; update 数据表名称 set 字段1=更新后的值,字段2=更新后的值,... where 更新条件;\n\n特别说明：如果在更新数据时，不指定更新条件，则其会把这个数据表的所有记录全部更新一遍。\n\n案例：修改username='马鹏’这条记录，将其性别更新为男，家庭住址更新为广东省深圳市\nmysql&gt; update tb_user set gender=&#x27;男&#x27;,address=&#x27;广东省深圳市&#x27; where username=&#x27;马鹏&#x27;;\n案例：今年是2020年，假设到了2021年，现在存储的学生年龄都差1岁，整体进行一次更新\nmysql&gt; update tb_user set age=age+1;\n数据的删除操作\nmysql&gt; delete from 数据表名称 [where 删除条件];\n删除tb_user表中，id=1的用户信息\nmysql&gt; delete from tb_user where id=1;\ndelete from与truncate清空数据表操作\nmysql&gt; delete from 数据表;或mysql&gt; truncate 数据表;\ndelete from与truncate区别\n\ndelete：删除数据记录\n\n数据操作语言（DML）\n删除大量记录速度慢，只删除数据，主键自增序列不清零，100 =&gt; 新插入 =&gt; 101\n可以带条件删除\n\n\ntruncate：删除所有数据记录\n\n数据定义语言（DDL）\n清里大量数据速度快，主键自增序列清零, 100 =&gt; 新插入 =&gt; 1\n不能带条件删除\n\n\n\n八、SQL约束\n1、主键约束\n1、PRIMARY KEY 约束唯一标识数据库表中的每条记录。\n2、主键必须包含唯一的值。\n3、主键列不能包含 NULL 值。\n4、每个表都应该有一个主键，并且每个表只能有一个主键。\n遵循原则：\n1）主键应当是对用户没有意义的\n2）永远也不要更新主键。\n3）主键不应包含动态变化的数据，如时间戳、创建时间列、修改时间列等。\n4） 主键应当由计算机自动生成。\n创建主键约束：创建表时，在字段描述处，声明指定字段为主键\n\n如：创建一个学生信息表tb_students，包含编号id、学生姓名name、年龄age、性别gender以及家庭住址address等字段，然后将id设置为主键。\ncreate table tb_students(\tid int primary key,    name varchar(20),    age tinyint unsigned,    gender enum(&#x27;男&#x27;, &#x27;女&#x27;),    address varchar(255)) engine=innodb default charset=utf8;\n删除主键约束：如需撤销 PRIMARY KEY 约束，请使用下面的 SQL\nalter table persons2 drop primary key;\n删除tb_students数据表的主键\nalter table tb_students drop primary key;\n\n自动增长\n\n我们通常希望在每次插入新记录时，数据库自动生成字段的值。\n我们可以在表中使用 auto_increment（自动增长列）关键字，自动增长列类型必须是整型，自动增长列必须为键(一般是主键)。\n下列 SQL 语句把 “Persons” 表中的 “Id” 列定义为 auto_increment 主键\ncreate table persons3(\tid int primary key auto_increment,\tfirst_name varchar(255),\tlast_name varchar(255),\taddress varchar(255),\tcity varchar(255)) default charset=utf8;\n向persons添加数据时，可以不为Id字段设置值，也可以设置成null，数据库将自动维护主键值：\ninsert into persons3(first_name,last_name) values(&#x27;Bill&#x27;,&#x27;Gates&#x27;);insert into persons3(id,first_name,last_name) values(null,&#x27;Bill&#x27;,&#x27;Gates&#x27;);\n如：创建一个学生信息表tb_students，包含编号id、学生姓名name、年龄age、性别gender以及家庭住址address等字段，然后将id设置为主键自动增长列。\ndrop table tb_students;create table tb_students(\tid int auto_increment primary key,    name varchar(20),    age tinyint unsigned,    gender enum(&#x27;男&#x27;, &#x27;女&#x27;),    address varchar(255)) engine=innodb default charset=utf8;或create table tb_students(\tid int auto_increment,    name varchar(20),    age tinyint unsigned,    gender enum(&#x27;男&#x27;, &#x27;女&#x27;),    address varchar(255),    primary key(id)) engine=innodb default charset=utf8;-- 插入测试数据insert into tb_students values (null, &#x27;吕布&#x27;, 30, &#x27;男&#x27;, &#x27;内蒙古包头市&#x27;);insert into tb_students values (null, &#x27;貂蝉&#x27;, 19, &#x27;女&#x27;, &#x27;山西忻州市&#x27;);-- 删除auto_incrementalter table 表名 change 列名 列名 类型; ALTER TABLE 表名 CHANGE 列名 列名 类型;ALTER TABLE 表名 DROP PRIMARY KEY ;#删除主键自增的值需要先更改主键类型\n2、非空约束\nNOT NULL 约束强制列不接受 NULL 值。\nNOT NULL 约束强制字段始终包含值。这意味着，如果不向字段添加值，就无法插入新记录或者更新记录。\n下面的 SQL 语句强制 “id” 列和 “last_name” 列不接受 NULL 值：\n\n创建一个tb_news新闻表，包含id主键列、title新闻标题、description描述、content新闻内容以及addtime添加时间，要求为title字段添加非空约束。\ncreate table tb_news(\tid int auto_increment,    title varchar(80) not null,    description varchar(255),    content text,    addtime datetime,    primary key(id)) engine=innodb default charset=utf8;\n3、唯一约束\nUNIQUE 约束唯一标识数据库表中的每条记录。\nUNIQUE 和 PRIMARY KEY 约束均为列或列集合提供了唯一性的保证。\nPRIMARY KEY 拥有自动定义的 UNIQUE 约束。\n请注意：\n每个表可以有多个 UNIQUE 约束，但是每个表只能有一个 PRIMARY KEY 约束。\n\n创建一个tb_member会员表 ，包含字段有id主键、username用户名、password密码（密码必须使用密文保存，长度为固定的32位），由于用户名不允许出现重复的情况，所以请为username添加唯一约束。\ncreate table tb_member(\tid int auto_increment,    username varchar(20) unique,    password char(32),    primary key(id)) engine=innodb default charset=utf8;\n4、默认值约束\n关键字：default\n用来指定某列的默认值。在表中插入一条新记录时，如果没有为这个字段赋值，系统就会自动为这个字段插入默认值。\n创建一个tb_department部门表，包含字段id主键、name部门名称以及location部门位置。由于我们的部门位置位于北京的较多，所以部门位置就可以默认为“Beijing”。\ncreate table tb_department(\tid int auto_increment,    name varchar(20),    location varchar(50) default &#x27;Beijing&#x27;,    primary key(id)) engine=innodb default charset=utf8;\n5、外键约束\n外键约束：关键字foreign key（主要用于多表关联使用）\n用于保持不同表之间的数据一致性和完整性。它是一种规定，用于确保在一个表中的外键（Foreign Key）值必须存在于另一个表中的主键（Primary Key）中。\n外键约束的主要目的是建立表之间的关联关系，以确保表之间的数据一致性。外键约束可以在数据库设计时定义，并且可以由数据库管理系统（DBMS）自动执行，以防止不符合约束条件的数据插入或更新操作。\n比如：有两张数据表，这两个数据表之间有联系，通过了某个字段可以建立连接，这个字段在其中一个表中是主键，在另外一张表中，我们就把其称之为==外键==。\n\n外键约束可以有以下特性：\n\n引用完整性：外键约束可以确保表之间的关联关系是有效的，即在外键列中的值必须在主键列中存在。这可以防止插入或更新数据时出现无效的外键值，从而保持数据的完整性。\n数据一致性：外键约束可以确保在关联表之间的数据一致性，因为它要求外键值与主键值相匹配。这可以防止在不同表中出现不一致的数据，从而保持数据的一致性。\n数据操作控制：外键约束可以限制对外键列的插入、更新和删除操作，从而控制对关联表的数据操作。这可以帮助防止不正确的数据操作，从而提高数据的质量和准确性。\n\n外键约束可能会对数据库的性能和灵活性产生影响，因为它会增加对数据的检查和验证操作。在设计数据库时，需要仔细考虑外键约束的使用，并根据具体情况进行权衡。\n6、小结\n① 主键约束：唯一标示，不能重复，不能为空。\n1）主键应当是对用户没有意义的\n2）永远也不要更新主键。\n3）主键不应包含动态变化的数据，如时间戳、创建时间列、修改时间列等。\n4） 主键应当由计算机自动生成。\n自动增长：\n我们可以在表中使用 auto_increment（自动增长列）关键字，自动增长列类型必须是整型，自动增长列必须为键(一般是主键)。\n② 非空约束：\nNOT NULL 约束强制列不接受 NULL 值。\n③ 唯一约束：\nUNIQUE 约束唯一标识数据库表中的每条记录。\nUNIQUE 和 PRIMARY KEY 约束均为列或列集合提供了唯一性的保证。\nPRIMARY KEY 拥有自动定义的 UNIQUE 约束。\n④ 默认值约束\ndefault 默认值\n用来指定某列的默认值。在表中插入一条新记录时，如果没有为这个字段赋值，系统就会自动为这个字段插入默认值。\n⑤ 外键约束\n主要用于指定两张表之间的关联关系。\n九、DQL数据查询语言\n1、数据集准备\nCREATE TABLE product(    pid         INT PRIMARY KEY,    pname       VARCHAR(20),    price       DOUBLE,    category_id VARCHAR(32));\n插入数据：\nINSERT INTO product VALUES (1,&#x27;联想&#x27;,5000,&#x27;c001&#x27;);INSERT INTO product VALUES (2,&#x27;海尔&#x27;,3000,&#x27;c001&#x27;);INSERT INTO product VALUES (3,&#x27;雷神&#x27;,5000,&#x27;c001&#x27;);INSERT INTO product VALUES (4,&#x27;杰克琼斯&#x27;,800,&#x27;c002&#x27;);INSERT INTO product VALUES (5,&#x27;真维斯&#x27;,200,&#x27;c002&#x27;);INSERT INTO product VALUES (6,&#x27;花花公子&#x27;,440,&#x27;c002&#x27;);INSERT INTO product VALUES (7,&#x27;劲霸&#x27;,2000,&#x27;c002&#x27;);INSERT INTO product VALUES (8,&#x27;香奈儿&#x27;,800,&#x27;c003&#x27;);INSERT INTO product VALUES (9,&#x27;相宜本草&#x27;,200,&#x27;c003&#x27;);INSERT INTO product VALUES (10,&#x27;面霸&#x27;,5,&#x27;c003&#x27;);INSERT INTO product VALUES (11,&#x27;好想你枣&#x27;,56,&#x27;c004&#x27;);INSERT INTO product VALUES (12,&#x27;香飘飘奶茶&#x27;,1,&#x27;c005&#x27;);INSERT INTO product VALUES (13,&#x27;海澜之家&#x27;,1,&#x27;c002&#x27;);\n2、select查询\n基础查询：\n# 根据某些条件从某个表中查询指定字段的内容格式：select [distinct]*| 列名,列名 from 表 where 条件\n高级查询：SQL查询五子句\nselect */列名,列名 from 数据表 where 子句 group by 子句 having 子句 order by 子句 limit 子句;① where子句② group by子句③ having子句④ order by子句⑤ limit子句\n3、简单查询\n# 1.查询所有的商品.  select *  from product;# 2.查询商品名和商品价格. select pname,price from product;# 3.查询结果是表达式（运算查询）：将所有商品的价格+10元进行显示.select pname,price+10 from product;\n4、条件查询\n\n比较查询\n# 查询商品名称为“花花公子”的商品所有信息：SELECT * FROM product WHERE pname = &#x27;花花公子&#x27;;# 查询价格为800商品SELECT * FROM product WHERE price = 800;# 查询价格不是800的所有商品SELECT * FROM product WHERE price != 800;SELECT * FROM product WHERE price &lt;&gt; 800;# 查询商品价格大于60元的所有商品信息SELECT * FROM product WHERE price &gt; 60;# 查询商品价格小于等于800元的所有商品信息SELECT * FROM product WHERE price &lt;= 800;\n范围查询\n# 查询商品价格在200到1000之间所有商品SELECT * FROM product WHERE price BETWEEN 200 AND 1000;# 查询商品价格是200或800的所有商品SELECT * FROM product WHERE price IN (200,800);\n逻辑查询\n# 查询商品价格在200到1000之间所有商品SELECT * FROM product WHERE price &gt;= 200 AND price &lt;=1000;# 查询商品价格是200或800的所有商品SELECT * FROM product WHERE price = 200 OR price = 800;# 查询价格不是800的所有商品SELECT * FROM product WHERE NOT(price = 800);\n模糊查询\n# 查询以&#x27;香&#x27;开头的所有商品SELECT * FROM product WHERE pname LIKE &#x27;香%&#x27;;# 查询第二个字为&#x27;想&#x27;的所有商品SELECT * FROM product WHERE pname LIKE &#x27;_想%&#x27;;\n非空查询\n# 查询没有分类的商品SELECT * FROM product WHERE category_id IS NULL;# 查询有分类的商品SELECT * FROM product WHERE category_id IS NOT NULL;\n5、排序查询\n# 通过order by语句，可以将查询出的结果进行排序。暂时放置在select语句的最后。格式：SELECT * FROM 表名 ORDER BY 排序字段 ASC|DESC;ASC 升序 (默认)DESC 降序# 1.使用价格排序(降序)SELECT * FROM product ORDER BY price DESC;# 2.在价格排序(降序)的基础上，以分类排序(降序)SELECT * FROM product ORDER BY price DESC,category_id DESC;\n6、聚合查询\n之前我们做的查询都是横向查询，它们都是根据条件一行一行的进行判断，而使用聚合函数查询是纵向查询，它是对一列的值进行计算，然后返回一个单一的值；另外聚合函数会忽略空值。\n今天我们学习如下五个聚合函数：\n\n\n\n聚合函数\n作用\n\n\n\n\ncount()\n统计指定列不为NULL的记录行数；\n\n\nsum()\n计算指定列的数值和，如果指定列类型不是数值类型，则计算结果为0\n\n\nmax()\n计算指定列的最大值，如果指定列是字符串类型，使用字符串排序运算；\n\n\nmin()\n计算指定列的最小值，如果指定列是字符串类型，使用字符串排序运算；\n\n\navg()\n计算指定列的平均值，如果指定列类型不是数值类型，则计算结果为0\n\n\n\n演示：\n# 1、查询商品的总条数SELECT COUNT(*) FROM product;# 2、查询价格大于200商品的总条数SELECT COUNT(*) FROM product WHERE price &gt; 200;# 3、查询分类为&#x27;c001&#x27;的所有商品的总和SELECT SUM(price) FROM product WHERE category_id = &#x27;c001&#x27;;# 4、查询分类为&#x27;c002&#x27;所有商品的平均价格SELECT AVG(price) FROM product WHERE categ ory_id = &#x27;c002&#x27;;# 5、查询商品的最大价格和最小价格SELECT MAX(price),MIN(price) FROM product;\n7、分组查询与having子句\n分组查询介绍\n分组查询就是将查询结果按照指定字段进行分组，字段中数据相等的分为一组。\n分组查询基本的语法格式如下：\nGROUP BY 列名 [HAVING 条件表达式] [WITH ROLLUP]\n说明:\n\n列名: 是指按照指定字段的值进行分组。\nHAVING 条件表达式: 用来过滤分组后的数据。\nWITH ROLLUP：在所有记录的最后加上一条记录，显示select查询时聚合函数的统计和计算结果\n\ngroup by的使用\n创建数据集\ncreate table students(\tid int auto_increment,\tname varchar(20),\tage tinyint unsigned,\tgender enum(&#x27;male&#x27;, &#x27;female&#x27;),\theight float(5,2),\tprimary key(id)) engine=innodb default charset=utf8;insert into students values (null,&#x27;郭靖&#x27;,33,&#x27;male&#x27;,1.80);insert into students values (null,&#x27;黄蓉&#x27;,19,&#x27;female&#x27;,1.65);insert into students values (null,&#x27;柯镇恶&#x27;,45,&#x27;male&#x27;,1.61);insert into students values (null,&#x27;黄药师&#x27;,50,&#x27;male&#x27;,1.72);insert into students values (null,&#x27;华筝&#x27;,18,&#x27;female&#x27;,1.60);\ngroup by可用于单个字段分组，也可用于多个字段分组\n-- 根据gender字段来分组select gender from students group by gender;-- 根据name和gender字段进行分组select name, gender from students group by name, gender;\n① group by可以实现去重操作\n② group by的作用是为了实现分组统计（group by + 聚合函数）\ngroup by + 聚合函数的使用\n-- 统计不同性别的人的平均年龄select gender,avg(age) from students group by gender;-- 统计不同性别的人的个数select gender,count(*) from students group by gender;\n执行原理图\n\ngroup by + having的使用\nhaving作用和where类似都是过滤数据的，但having是过滤分组数据的，只能用于group by\n-- 根据gender字段进行分组，统计分组条数大于2的select gender,count(*) from students group by gender having count(*)&gt;2;\n#1 统计各个分类商品的个数SELECT category_id ,COUNT(*) FROM product GROUP BY category_id ;#2 统计各个分类商品的个数,且只显示个数大于1的信息SELECT category_id ,COUNT(*) FROM product GROUP BY category_id HAVING COUNT(*) &gt; 1;\n8、limit分页查询\n作用：限制数据的查询数量\n基本语法：\nselect * from 数据表 limit 查询数量;\n案例：查询学生表中，身高最高的3名同学信息\nselect * from students order by height desc limit 3;\nlimit除了可以限制查询数量以外，其还可以指定从哪条数据开始查起，limit完整语法：\nselect * from students limit offset,count;offset：索引，默认从0开始count：查询总数量\n如：查询学生表中，身高第2、3高的同学信息\nselect * from students order by height desc limit 1,2;\nlimit子句典型应用场景：\n分页查询在项目开发中常见，由于数据量很大，显示屏长度有限，因此对数据需要采取分页显示方式。例如数据共有30条，每页显示5条，第一页显示1-5条，第二页显示6-10条。\n格式：\nSELECT 字段1，字段2... FROM 表名 LIMIT M,NM: 整数，表示从第几条索引开始，计算方式 （当前页-1）* 每页显示条数N: 整数，表示查询多少条数据SELECT 字段1，字段2... FROM 表名 LIMIT 0,5SELECT 字段1，字段2... FROM 表名 LIMIT 5,5\n9、小结\nSQL查询五子句：select * from 表名 where子句 group by子句 having子句 order by子句 limit子句;特别注意：查询五子句中，五子句的顺序一定要严格按照以上格式。条件查询：SELECT *|字段名 FROM 表名 WHERE 条件；排序查询：SELECT * FROM 表名 ORDER BY 排序字段 ASC|DESC;聚合查询函数：count()，sum()，max()，min()，avg()。分组查询：SELECT 字段1,字段2… FROM 表名 GROUP BY 分组字段 HAVING 分组条件;分页查询：SELECT 字段1，字段2... FROM 表名 LIMIT M,NM: 整数，表示从第几条索引开始，计算方式 （当前页-1）*每页显示条数N: 整数，表示查询多少条数据\n十、多表查询\n数据集准备\nclasses班级表\ncreate table classes(\tcls_id tinyint auto_increment,    cls_name varchar(20),    primary key(cls_id)) engine=innodb default charset=utf8;-- 插入测试数据insert into classes values (null, &#x27;ui&#x27;);insert into classes values (null, &#x27;java&#x27;);insert into classes values (null, &#x27;python&#x27;);\nstudents学生表\ncreate table students(\tid int auto_increment,    name varchar(20),    age tinyint unsigned,    gender enum(&#x27;male&#x27;,&#x27;female&#x27;),    score float(5,1),\tcls_id tinyint,    primary key(id)) engine=innodb default charset=utf8;-- 插入测试数据insert into students values (null,&#x27;刘备&#x27;,34,&#x27;male&#x27;,90.0,2);insert into students values (null,&#x27;貂蝉&#x27;,18,&#x27;female&#x27;,75.0,1);insert into students values (null,&#x27;赵云&#x27;,28,&#x27;male&#x27;,95.0,3);insert into students values (null,&#x27;关羽&#x27;,32,&#x27;male&#x27;,98.0,3);insert into students values (null,&#x27;大乔&#x27;,19,&#x27;female&#x27;,80.0,1);\n交叉连接\n是所有连接的基础。其功能就是将表1和表2中的每一条数据进行连接。\n结果：\n字段数 = 表1字段 + 表2的字段\n记录数 = 表1中的总数量 * 表2中的总数量（笛卡尔积）\nselect * from students cross join classes;或select * from students, classes;\n1、内连接\n连接查询的介绍\n连接查询可以实现多个表的查询，当查询的字段数据来自不同的表就可以使用连接查询来完成。\n连接查询可以分为:\n\n内连接查询\n左外连接查询\n右外连接查询\n\n内连接查询\n查询两个表中符合条件的共有记录\n\n内连接查询语法格式:\nselect 字段 from 表1 inner join 表2 on 表1.字段1 = 表2.字段2\n说明:\n\ninner join 就是内连接查询关键字\non 就是连接查询条件\n\n例1：使用内连接查询学生表与班级表:\nselect * from students as s inner join classes as c on s.cls_id = c.id;\n小结\n\n内连接使用inner join … on …, on 表示两个表的连接查询条件\n内连接根据连接查询条件取出两个表的 “交集”\n\n2、左外连接\n左连接查询\n以左表为主根据条件查询右表数据，如果根据条件查询右表数据不存在使用null值填充\n\n左连接查询语法格式:\nselect 字段 from 表1 left join 表2 on 表1.字段1 = 表2.字段2\n说明:\n\nleft join 就是左连接查询关键字\non 就是连接查询条件\n表1 是左表\n表2 是右表\n\n例1：使用左连接查询学生表与班级表:\nselect * from students as s left join classes as c on s.cls_id = c.id;\n例2：查询学生表中每一位学生（包括没有对应班级的学生）所属的班级信息\n前提：\n在students学生表中，插入一条测试数据\ninsert into students values (null,&#x27;林黛玉&#x27;,19,&#x27;female&#x27;,96.0,99);\n执行左外连接查询：\nselect * from students as s left join classes as c on s.cls_id = c.id;\n小结\n\n左连接使用left join … on …, on 表示两个表的连接查询条件\n左连接以左表为主根据条件查询右表数据，右表数据不存在使用null值填充。\n\n3、右外连接\n右连接查询\n以右表为主根据条件查询左表数据，如果根据条件查询左表数据不存在使用null值填充\n\n右连接查询语法格式:\nselect 字段 from 表1 right join 表2 on 表1.字段1 = 表2.字段2\n说明:\n\nright join 就是右连接查询关键字\non 就是连接查询条件\n表1 是左表\n表2 是右表\n\n例1：使用右连接查询学生表与班级表:\nselect * from students as s right join classes as c on s.cls_id = c.id;\n小结\n\n右连接使用right join … on …, on 表示两个表的连接查询条件\n右连接以右表为主根据条件查询左表数据，左表数据不存在使用null值填充。\n\n十一、子查询\n1、子查询（嵌套查询）的介绍\n在一个 select 语句中,嵌入了另外一个 select 语句, 那么被嵌入的 select 语句称之为子查询语句，外部那个select语句则称为主查询.\n主查询和子查询的关系:\n\n子查询是嵌入到主查询中\n子查询是辅助主查询的,要么充当条件,要么充当数据源(数据表)\n子查询是可以独立存在的语句,是一条完整的 select 语句\n\n2、子查询的使用\n例1. 查询学生表中大于平均年龄的所有学生:\n需求：查询年龄 &gt; 平均年龄的所有学生\n前提：① 获取所有学生的平均年龄\n​\t   ② 查询表中的所有记录，判断哪个同学 &gt; 平均年龄值\n第一步：写子查询\nselect avg(age) from students;\n第二步：写主查询\nselect * from students where age &gt; (平均值);\n第三步：第一步和第二步进行合并\nselect * from students where age &gt; (select avg(age) from students);\n例2. 查询学生在班的所有班级名字:\n需求：显示所有有学生的班级名称\n前提：① 先获取所有学员都属于那些班级\n​\t         ② 查询班级表中的所有记录，判断是否出现在①结果中，如果在，则显示，不在，则忽略。\n第一步：编写子查询\nselect distinct cls_id from students is not null;\n第二步：编写主查询\nselect * from classes where cls_id in (1, 2, 3);\n第三步：把主查询和子查询合并\nselect * from classes where cls_id in (select distinct cls_id from students where cls_id is not null);\n例3. 查找年龄最小,成绩最低的学生:\n第一步：获取年龄最小值和成绩最小值\nselect min(age), min(score) from student;\n第二步：查询所有学员信息（主查询）\nselect * from students where (age, score) = (最小年龄, 最少成绩);\n第三步：把第一步和第二步合并\nselect * from students where (age, score) = (select min(age), min(score) from students);\n十二、练习部分\n练习使用 微软的Northwind数据集, 零售业务，包含了客户，供应商和订单数据。原始数据集可以在 微软GitHub 仓库下载。当前使用数据库数据在原始数据基础上做了微调，放在了文末。\n基于此份数据，通过SQL来创建数据报表，满足业务需求。\n本项目中一共用到7张表\n\nemployees 员工表 记录了Northwind所有员工信息.\ncustomers 客户表，记录了客户相关信息.\nproducts 记录了商品信息.\ncategories 记录了商品类别信息.\nsuppliers 记录了商品供应商信息.\norders 记录了Northwind的顾客下的订单.\norder_items 记录了订单中的每一件商品明细.\n\n数据表结构及表关系\n\n\n1.1 员工表(employees)\n\n\n保存员工基本信息：\n\n唯一ID (employee_id).\n姓，名(first_name and last_name).\n职务 (title).\n\n\n需要注意的是 reports_to这一列, 保存的是员工所对应的直属领导的员工ID (也在这张表中保存) ，此外还有其它列包括入职时间，生日… …\n\n练习1\n\n选中employees 表的所有数据\n\nselect * from employees\n\n1.2 顾客表(customers)\n\n\n每一个顾客都有唯一IDcustomer_id, 顾客的ID是公司全名的缩写，用5个字母表示\n\n\n公司全名在 company_name 列中保存\n\n\ncontact_name 和 contact_title 两列代表了客户公司的联系人信息（名字和职务）\n除此之外还保存了顾客的地址信息和联系方式city, region, postal_code, country, fax\n\n\n练习2\n\n查询每个客户的 ID, company name, contact name, contact title, city, 和 country.并按照国家名字排序\n\nselect customer_id,  company_name,  contact_name,  contact_title,  city,  country from customers  order by country\n\n1.3 商品(products)和商品类别(categories)表\n\n商品表中保存了在Northwind商店中出售的商品信息\n\n每一种商品都有唯一的 product_id 和商品名字product_name.\n每一种商品都有一个供应商 (supplier_id)\n每一种商品都有一个商品类别 (category_id).\n每一种商品都有确定的单价 unit_price.\n字段 discontinued 代表商品是否缺货， false (有货)   true (缺货)\n\n\n商品类别表 categories ，保存了所有商品的类别\n\n每个类别都有唯一的id\n每个类别都有自己的名称 category_name\n字段description 存储了类别的简短描述信息\n\n\n商品表中包含了  category_id 字段，所以可以使用join 将商品表中的信息与商品类别表中的信息进行关联查询\n\n练习3\n\n查询每一个商品的product_name，category_name，quantity_per_unit，unit_price，units_in_stock 并且通过 unit_price 字段排序\n\nSELECT  product_name,  category_name,  quantity_per_unit,  unit_price,  units_in_stockFROM productsJOIN categories  ON products.category_id = categories.category_idORDER BY unit_price;\n\n1.4 供应商表（supplier）\n\n供应商表与用户表类似\n每个供应商都有唯一ID supplier_id\n每个供应商都有公司名字company_name\n表中还记录了供应商的地址信息 address，city，region，postal_code，country\n\n练习4\n\n列出所有提供了4种以上不同商品的供应商列表\n所需字段：supplier_id, company_name, and products_count (提供的商品种类数量).\n\nSELECT  s.supplier_id,   s.company_name,   COUNT(*) AS products_countFROM products pJOIN suppliers s   ON p.supplier_id = s.supplier_idGROUP BY s.supplier_id,  s.company_nameHAVING COUNT(*) &gt; 4;\n\n1.5 订单和订单明细表\n\n订单表 orders 中的每一条数据包含了一个订单的基本信息：\n\n订单ID order_id，顾客ID customer_id, 销售员的员工ID employee_id\n订单相关的时间信息  (下单日期order_date 和配送日期 shipped_date) 和其他配送相关信息\n\nship_via 运输方式\nfreight   运费\nship_address  收货地址\nship_city   收货城市\nship_region 收货地区\nship_postal_code 收货地址邮编\nship_country 收货国家\n\n\n\n\n\n练习5\n\n\n提取订单编号为10250的订单详情，显示如下信息：\nproduct_name, quantity, unit_price （ order_items 表)discount ，order_date ,按商品名字排序\n\n\nSELECT  product_name,  quantity,  order_items.unit_price,  discount,  order_dateFROM order_itemsJOIN products  ON order_items.product_id = products.product_idJOIN orders  ON orders.order_id = order_items.order_idWHERE orders.order_id = 10250ORDER BY product_name;\n2.1 详细报告\n\n将一个或者多个业务对象的详细信息汇总到一张表中是一种比较常见的报表形式\n我们需要的信息可能分散在多张表中，在写SQL时可以通过一个或者多个JOIN子句将信息进行汇总\n\nSELECT  c.company_name AS customer_company_name,   e.first_name AS employee_first_name,   e.last_name AS employee_last_name,  o.order_date,  o.shipped_date,  o.ship_countryFROM orders oJOIN employees e  ON o.employee_id = e.employee_idJOIN customers c  ON o.customer_id = c.customer_idWHERE o.ship_country = &#x27;France&#x27;;\n\n在上面的SQL查询中，我们想收集运输到法国的订单的相关信息，包括订单涉及的顾客和员工信息，下单和发货日期等\n由于相关数据保存在不同的表中，所以需要将orders 表， employees 表和 customers 表连接在一起\n注意在写SQL时，我们可以为每一张表都起了一个别名，可以减少输入的字符数\n\n练习6\n\n需求：提供订单编号为10248的相关信息，包括product name,  unit price (在 order_items 表中),  quantity（数量）,company_name（供应商公司名字 ，起别名 supplier_name).\n\nSELECT  product_name,  oi.unit_price,  oi.quantity,  company_name AS supplier_nameFROM order_items oiJOIN products p   ON oi.product_id = p.product_idJOIN suppliers s  ON s.supplier_id = p.supplier_idWHERE oi.order_id = 10248;\n练习7\n\n需求：提取每件商品的详细信息，包括  商品名称（product_name）, 供应商的公司名称  (company_name，在 suppliers 表中), 类别名称 category_name, 商品单价unit_price, 和每单位商品数量quantity per unit\n\nSELECT   p.product_name,  s.company_name,  c.category_name,  p.unit_price,  p.quantity_per_unitFROM products pJOIN suppliers s  ON p.supplier_id = s.supplier_idJOIN categories c  ON c.category_id = p.category_id;\n2.2 带时间限制的报表\n\n另一种常见的报表需求是查询某段时间内的业务指标\n\nSELECT  COUNT(*)FROM ordersWHERE order_date &gt;= &#x27;2016-07-01&#x27; AND  order_date &lt; &#x27;2016-08-01&#x27;;\n\n在上面的查询中，我们统计了2016年7月的订单数量，\n需要注意SQL中的日期总是放在单引号内，格式通常为“ YYYY-MM-DD”（年-月-日）\n\n练习8\n\n统计2013年入职的员工数量，统计字段起别名 number_of_employees\n\nSELECT  COUNT(*) AS number_of_employeesFROM employeesWHERE hire_date &gt;= &#x27;2013-01-01&#x27; AND hire_date &lt; &#x27;2014-01-01&#x27;;\n2.3 计算多个对象\n\n在业务报表中，我们通常希望同时计算多个业务对象的某些指标。\n\nSELECT    order_id,    COUNT(*) AS order_items_countFROM    order_itemsWHERE    order_id BETWEEN 10200 AND 10300GROUP BY    order_id;\n\n在上面的查询中，我们统计了指定范围内的order_id，计算每个订单中的商品数量\n\n通过连接orders 和order_items表，在同一行显示单个订单商品及其父订单的信息\n按照父顺序对所有行进行分组\n使用COUNT（*）统计每个订单的商品数量\n\n\n\n练习9\n\n需求：统计每个供应商供应的商品总数量\n\n结果返回供应商IDsupplier_id ，公司名字company_name ，商品种类数量（起别名products_count )\n使用 products 和 suppliers 表.\n\n\n\nSELECT  s.supplier_id,  company_name,  COUNT(*) AS products_countFROM products pJOIN suppliers s  ON p.supplier_id = s.supplier_id GROUP BY s.supplier_id,company_name;\n需求：统计每个供应商分别供应每类商品的数量\nSELECT    count(*) AS `products_count`,    s.supplier_id,    s.company_name,    category_idFROM    products AS p        INNER JOIN suppliers AS s ON p.supplier_id = s.supplier_idGROUP BY    s.supplier_id, s.company_name, category_id ;\n2.4 总订单金额\n\n在销售报表中,我们经常需要计算订单的总付款额。\n\nSELECT    sum(unit_price * quantity) AS total_priceFROM    order_itemsWHERE    order_id = 10250;\n\n我们要查找ID为10250的订单的总价（折扣前），SUM(unit_price * quantity)\n\n练习10\n\nNorthwind商店某些产品会不定期做打折促销\n每个商品的折扣都存储在 order_items 表的discount 列中\n例如，“ 0.20”折扣意味着客户支付原始价格的“ 1-0.2 = 0.8”\n在下面的代码中添加第二个名为total_price_after_discount的列，计算打折后的商品价格\n\nSELECT  SUM(unit_price * quantity) AS total_priceFROM orders oJOIN order_items oi   ON o.order_id = oi.order_idWHERE o.order_id = 10250;\nSELECT    SUM(unit_price * quantity) AS total_price,    SUM(unit_price * quantity * (1 - discount)) AS total_price_after_discountFROM    order_itemsWHERE        order_id = 10250\n2.5 计算多个订单的订单金额\n\n上面的案例中我们计算了单个订单的订单总金额，接下来我们统计多个订单的总金额\n\nSELECT  o.order_id,  c.company_name AS customer_company_name,   SUM(unit_price * quantity) AS total_priceFROM orders oJOIN customers c  ON o.customer_id = c.customer_idJOIN order_items oi  ON o.order_id = oi.order_idWHERE o.ship_country = &#x27;France&#x27;GROUP BY o.order_id, c.company_name;\n\n我们想计算运输到法国的所有订单的总订单金额\n在结果中，我们想保留订单ID和订单公司名字，可以通过GROUP BY 实现\n注意：通过GROUP BY  我们只需要对 order_id 进行分组就可以了，但MySQL 5.7之后要求，在使用GROUP BY分组时，SELECT 后的字段，如果没有在聚合函数中使用，就必须在GROUP BY 后出现\n\n练习11\n\n统计每个员工处理的订单总数\n结果包含员工IDemployee_id，姓名first_name 和 last_name，处理的订单总数(别名 orders_count)\n\nSELECT  e.employee_id,  e.first_name,  e.last_name,  COUNT(*) AS orders_countFROM orders oJOIN employees e  ON e.employee_id = o.employee_idGROUP BY e.employee_id,  e.first_name,  e.last_name;\n2.6 不同类别商品的库存\n\n统计每个类别中的库存产品值多少钱？\n\n显示三列：category_id, category_name, 和 category_total_value\n如何计算库存商品总价：SUM(unit_price * units_in_stock)。\n\n\n\nSELECT  c.category_id,  c.category_name,  SUM(unit_price * units_in_stock) AS category_total_valueFROM products pJOIN categories c  ON p.category_id = c.category_idGROUP BY c.category_id,  c.category_name;\n2.7 Group by分组\n\n接下来，我们来了解每个员工的业绩：计算每个员工的订单数量\n看下面的SQL是否有问题\n\nSELECT  e.first_name,  e.last_name,  COUNT(*) AS orders_countFROM orders oJOIN employees e  ON o.employee_id = e.employee_idGROUP BY e.first_name,  e.last_name;\n\n上面的SQL貌似正确，但是没有考虑到员工重名的问题，所以需要做一个小调整：\n\nSELECT  e.employee_id,  e.first_name,  e.last_name,  COUNT(*) AS orders_countFROM orders oJOIN employees e  ON o.employee_id = e.employee_idGROUP BY e.employee_id,  e.first_name,  e.last_name;\n\n在SELECT 和 GROUP BY 中添加了 员工ID employee_id字段后,重名的问题就可以解决了\n注意，在使用GROUP BY进行分组聚合统计时，需要考虑分组字段中的相同值的业务含义是否相同\n\n练习12\n\n需求：计算每个客户的下订单数\n结果包含：用户id、用户公司名称、订单数量（customer_id, company_name,  orders_count ）\n\nSELECT  c.customer_id,  c.company_name,  COUNT(*) AS orders_countFROM orders oJOIN customers c  ON o.customer_id = c.customer_idGROUP BY c.customer_id,  c.company_name;\n2.8 选择显示部分信息\n\n再看一下上面的例子\n\nSELECT  e.employee_id,  e.first_name,  e.last_name,  COUNT(*) AS orders_countFROM orders oJOIN employees e  ON o.employee_id = e.employee_idGROUP BY e.employee_id,  e.first_name,  e.last_name;\n\n我们通过 employee_id进行分组, 但是GROUP BY中的字段，不一定在SELECT中出现，例如下面的SQL：\n\nSELECT  e.first_name,  e.last_name,  COUNT(*) AS orders_countFROM orders oJOIN employees e  ON o.employee_id = e.employee_idGROUP BY e.employee_id,  e.first_name,  e.last_name;\n\n之前我们强调过，SELECT 中的字段，如果没在聚合函数中使用，就一定更要在GROUP BY 子句中出现\n但是，GROUPY BY子句中的字段，可以不用都出现在SELECT中\n\n练习13\n\n需求：统计2016年6月到2016年7月底用户的总下单金额并按金额从高到低排序\n结果包含：顾客公司名称company_name 和总下单金额（折后实付金额）total_paid\n提示：\n\n计算实际总付款金额： SUM(unit_price * quantity * (1 - discount))\n日期过滤 WHERE order_date &gt;= '2016-06-01' AND order_date &lt; '2016-08-01'\n\n\n\nSELECT  c.company_name,   SUM(unit_price * quantity * (1 - discount)) AS total_paidFROM orders oJOIN order_items oi  ON o.order_id = oi.order_idJOIN customers c  ON o.customer_id = c.customer_idWHERE order_date &gt;= &#x27;2016-06-01&#x27; AND order_date &lt; &#x27;2016-08-01&#x27;GROUP BY c.customer_id,  c.company_nameORDER BY total_paid DESC;\n2.9 COUNT()函数回顾\n\n当创建业务报表的时候，需要注意 COUNT(*) 和 COUNT(列名) 之间的区别\n假设我们要统计发货到不同国家/地区的订单数量以及已经发货的订单数量\n\nSELECT  ship_country,  COUNT(*) AS all_orders,  COUNT(shipped_date) AS shipped_ordersFROM ordersGROUP BY ship_country;\n\nCOUNT（*）将计算ship_country中的所有订单\nCOUNT（shipped_date）将仅计算shipped_date列值不为NULL的行\n在我们的数据库中， shipped_date 列中的NULL表示尚未发货，COUNT（shipped_date）` 仅计算已经发货的订单。\n\n练习14\n\n需求：统计客户总数和带有传真号码的客户数量\n需要字段：all_customers_count 和 customers_with_fax_count\n\nSELECT  COUNT(*) AS all_customers_count,   COUNT(fax) AS customers_with_fax_countFROM customers;\n3.1 使用CASE WHEN自定义分组\n\n需求：我们要在报表中显示每种产品的库存量，但我们不想简单地将“ units_in_stock”列放在报表中。报表中只需要一个总体级别，例如低，高：\n\nSELECT  product_id,  product_name,  units_in_stock,  CASE    WHEN units_in_stock &gt; 100 THEN &#x27;high&#x27;    WHEN units_in_stock &gt; 50 THEN &#x27;moderate&#x27;    WHEN units_in_stock &gt; 0 THEN &#x27;low&#x27;    WHEN units_in_stock = 0 THEN &#x27;none&#x27;  END AS availabilityFROM products;\n\n上面的SQL查询结果中，我们创建了一个新列availability， 通过 CASE WHEN 语句来对这一列赋值\nCASE WHEN 语法回顾\n上面的查询中，通过  units_in_stock 列的值来判断库存的可用性\n\n库存大于100 的可用性为高(high)\n50到100的可用性为中等(moderate)\n小于50的为低(low)\n零库存 为 (none)\n\n\n\n练习15\n运行上面的SQL，比较units_in_stock 和 availability两列的结果\n练习16\n\n需求： 创建一个报表，统计员工的经验水平\n显示字段：first_name, last_name, hire_date, 和 experience\n经验字段（experience ）：\n\n'junior'  2014年1月1日以后雇用的员工\n'middle' 在2013年1月1日之后至2014年1月1日之前雇用的员工\n'senior' 2013年1月1日或之前雇用的员工\n\n\n\nSELECT  first_name,  last_name,  hire_date,  CASE    WHEN hire_date &gt; &#x27;2014-01-01&#x27; THEN &#x27;junior&#x27;    WHEN hire_date &gt; &#x27;2013-01-01&#x27; THEN &#x27;middle&#x27;    WHEN hire_date &lt;= &#x27;2013-01-01&#x27; THEN &#x27;senior&#x27;  END AS experienceFROM employees;\n3.2 CASE WHEN中ELSE的使用\n\n我们的商店要针对北美地区的用户做促销活动：任何运送到北美地区（美国，加拿大) 的包裹免运费。\n创建报表，查询订单编号为10720~10730 活动后的运费价格\n\nSELECT   order_id,  customer_id,  ship_country,  CASE    WHEN ship_country = &#x27;USA&#x27; OR ship_country = &#x27;Canada&#x27; THEN 0.0  END AS shipping_costFROM ordersWHERE order_id BETWEEN 10720 AND 10730;\n\n上面的SQL中，只定义了美国和加拿大的运费，并没有处理其他目的地的运费信息\n\n练习17\n\n\n运行上面的SQL 观察 ship_country 和 shipping_cost 列，除了美国和加拿大之外，其他行的 shipping_cost  的值为NULL\n\n\n在上面的案例中，除了北美地区的以外的订单，运费统计为NULL, 如果将其他地区的运费设置为10美元，那么可以用如下方式处理：\nSELECT   order_id,  customer_id,  ship_country,  CASE    WHEN ship_country = &#x27;USA&#x27; OR ship_country = &#x27;Canada&#x27; THEN 0.0    ELSE 10.0  END AS shipping_costFROM ordersWHERE order_id BETWEEN 10720 AND 10730;\n\n我们在CASE WHEN结构中添加了ELSE\n如果不满足其他条件，则执行ELSE。 因此，所有其他国家/地区的 shipping_cost都将变为“ 10.0”，而不是NULL。\n\n\n\n练习18\n\n需求：创建客户基本信息报表\n包含字段：\n\n客户id customer_id\n公司名字 company_name\n所在国家 country\n使用语言language\n\n\n使用语言language 的取值按如下规则\n\nGermany, Switzerland, and Austria 语言为德语 'German'\nUK, Canada, the USA, and Ireland 语言为英语 'English'\n其他所有国家 'Other'\n\n\n\nSELECT   customer_id,  company_name,  country,  CASE    WHEN country IN (&#x27;Germany&#x27;, &#x27;Switzerland&#x27;, &#x27;Austria&#x27;) THEN &#x27;German&#x27;    WHEN country IN (&#x27;UK&#x27;, &#x27;Canada&#x27;, &#x27;USA&#x27;, &#x27;Ireland&#x27;) THEN &#x27;English&#x27;    ELSE &#x27;Other&#x27;  END AS languageFROM customers;\n练习19\n\n需求：创建报表将所有产品划分为素食和非素食两类\n报表中包含如下字段：\n\n产品名字 product_name\n类别名称 category_name\n膳食类型 diet_type:\n\n非素食 'Non-vegetarian'  商品类别字段的值为 'Meat/Poultry' 和 'Seafood'.\n素食\n\n\n\n\n\nSELECT  product_name,  category_name,  CASE    WHEN category_name IN (&#x27;Meat/Poultry&#x27;, &#x27;Seafood&#x27;) THEN &#x27;Non-vegetarian&#x27;    ELSE &#x27;Vegetarian&#x27;  END AS diet_typeFROM categories cJOIN products p  ON c.category_id = p.category_id;\n3.3 在GROUP BY中使用CASE WHEN\n\n在引入北美地区免运费的促销策略时，我们也想知道运送到北美地区和其它国家地区的订单数量\n\nSELECT   CASE    WHEN ship_country = &#x27;USA&#x27; OR ship_country = &#x27;Canada&#x27; THEN 0.0    ELSE 10.0  END AS shipping_cost,  COUNT(*) AS order_countFROM ordersGROUP BY  CASE    WHEN ship_country = &#x27;USA&#x27; OR ship_country = &#x27;Canada&#x27; THEN 0.0    ELSE 10.0  END;\n\n在SELECT子句和GROUP BY子句中，有相同的CASE WHEN出现在GROUP BY子句中\n这里并没有使用别名shipping_cost。 虽然在SELECT子句中指定了别名（shipping_cost），但标准SQL不允许在GROUP BY子句中引用别名，所以这里CASE WHEN 写了两次\nMySQL允许 在GROUP BY中使用列别名，在本案例中两种写法都可以\n注意：CASE WHEN语句在GROUP BY和SELECT` 子句中，写法必须相同\n\n练习20\n\n需求：创建报表统计供应商来自那个大洲\n报表中包含两个字段：供应商来自哪个大洲（supplier_continent ）和 供应产品种类数量（product_count）\n供应商来自哪个大洲（supplier_continent ）包含如下取值：\n\n'North America' （供应商来自 'USA' 和 'Canada'.）\n'Asia' （供应商来自 'Japan' 和 'Singapore')\n'Other' (其它国家)\n\n\n\nSELECT   CASE    WHEN country IN (&#x27;USA&#x27;, &#x27;Canada&#x27;) THEN &#x27;North America&#x27;    WHEN country IN (&#x27;Japan&#x27;, &#x27;Singapore&#x27;) THEN &#x27;Asia&#x27;    ELSE &#x27;Other&#x27;  END AS supplier_continent,  COUNT(*) AS product_countFROM products pJOIN suppliers s  ON p.supplier_id = s.supplier_idGROUP BY  CASE    WHEN country IN (&#x27;USA&#x27;, &#x27;Canada&#x27;) THEN &#x27;North America&#x27;    WHEN country IN (&#x27;Japan&#x27;, &#x27;Singapore&#x27;) THEN &#x27;Asia&#x27;    ELSE &#x27;Other&#x27;  END;\n练习21\n\n需求：创建一个简单的报表来统计员工的年龄情况\n报表中包含如下字段\n\n年龄（ age ）：生日大于1980年1月1日 'young' ，其余'old'\n员工数量 （ employee_count）\n\n\n\nSELECT  CASE    WHEN birth_date &gt; &#x27;1980-01-01&#x27; THEN &#x27;young&#x27;    ELSE &#x27;old&#x27;  END AS age,  COUNT(*) AS employee_countFROM employeesGROUP BY  CASE    WHEN birth_date &gt; &#x27;1980-01-01&#x27; THEN &#x27;young&#x27;    ELSE &#x27;old&#x27;  END;\n3.4 CASE WHEN 和 COUNT\n\n可以将 CASE WHEN 和 COUNT 结合使用，自定义分组并统计每组数据数量\n\nSELECT   COUNT(CASE     WHEN ship_country = &#x27;USA&#x27; OR ship_country = &#x27;Canada&#x27; THEN order_id   END) AS free_shipping,  COUNT(CASE    WHEN ship_country != &#x27;USA&#x27; AND ship_country != &#x27;Canada&#x27; THEN order_id  END) AS paid_shippingFROM orders;\n在上面的查询中，在COUNT（）函数中包含了一个CASE WHEN子句。\n\n对于每一行，CASE WHEN子句会检查ship_country中的值。 如果是“ USA”或“ Canada”，则将order_id传递给COUNT（）并进行计数。\n如果ship_country中的值不同，则CASE WHEN将返回NULL, COUNT（）不会统计NULL值。 free_shipping列将仅计算运往美国或加拿大的订单”\n paid_shipping列的构建方式与上述方式类似\n\n练习22\n\n需求：统计客户的contact_title 字段值为 ’Owner’ 的客户数量\n查询结果有两个字段：represented_by_owner 和 not_represented_by_owner\n\nSELECT   COUNT(CASE    WHEN contact_title = &#x27;Owner&#x27; THEN customer_id  END) AS represented_by_owner,  COUNT(CASE    WHEN contact_title != &#x27;Owner&#x27; THEN customer_id  END) AS not_represented_by_ownerFROM customers;\n练习23\n\n需求：Washington (WA) 是 Northwind的主要运营地区，统计有多少订单是由华盛顿地区的员工处理的，多少订单是有其它地区的员工处理的\n结果字段： orders_wa_employees 和 orders_not_wa_employees\n\nSELECT   COUNT(CASE    WHEN region = &#x27;WA&#x27; THEN order_id  END) AS orders_wa_employees,  COUNT(CASE    WHEN region != &#x27;WA&#x27; THEN order_id  END) AS orders_not_wa_employeesFROM employees eJOIN orders o  ON e.employee_id = o.employee_id;\n3.5 GROUP BY 和 CASE WHEN组合使用\nSELECT   ship_country,  COUNT(CASE    WHEN freight &lt; 40.0 THEN order_id  END) AS low_freight,  COUNT(CASE    WHEN freight &gt;= 40.0 AND freight &lt; 80.0 THEN order_id  END) AS avg_freight,  COUNT(CASE    WHEN freight &gt;= 80.0 THEN order_id  END) AS high_freightFROM ordersGROUP BY ship_country;\n\n将COUNT(CASE WHEN...) 和 GROUP BY 组合使用，可以创建更复杂的报表，在报表中，我们将运输到不同国家的订单根据运费高低进一步分成三组，并统计每组数量\n\n练习24\n\n需求：创建报表，统计不同类别产品的库存量，将库存量分成两类 &gt;30 和 &lt;=30 两档,分别统计这两档的商品数量\n报表包含三个字段\n\n类别名称  category_name,\n库存充足  high_availability\n库存紧张 low_availability\n\n\n\nSELECT   c.category_name,  COUNT(CASE    WHEN units_in_stock &gt; 30 THEN product_id  END) AS high_availability,  COUNT(CASE    WHEN units_in_stock &lt;= 30 THEN product_id  END) AS low_availabilityFROM products pJOIN categories c  ON p.category_id = c.category_idGROUP BY c.category_id,  c.category_name;\n3.6 SUM中使用CASE WHEN\n\n上面通过我们通过  COUNT() 函数 和CASE WHEN子句联合使用来创建的报表，也可以通过  SUM() 来替代 COUNT()\n\nSELECT   SUM(CASE    WHEN ship_country = &#x27;USA&#x27; OR ship_country = &#x27;Canada&#x27; THEN 1  END) AS free_shipping,  SUM(CASE    WHEN ship_country != &#x27;USA&#x27; AND ship_country != &#x27;Canada&#x27; THEN 1  END) AS paid_shippingFROM orders;\n\n在上面的查询中，我们将SUM（）与CASE WHEN一起使用，结果与使用 COUNT()相同\n\n练习25\nSELECT   COUNT(CASE    WHEN region = &#x27;WA&#x27; THEN order_id  END) AS orders_wa_employees,  COUNT(CASE    WHEN region != &#x27;WA&#x27; THEN order_id  END) AS orders_not_wa_employeesFROM employees eJOIN orders o  ON e.employee_id = o.employee_id;\n\n将上面的SQL修改成用 SUM（） 函数实现\n\nSELECT   SUM(CASE    WHEN region = &#x27;WA&#x27; THEN 1  END) AS orders_wa_employees,  SUM(CASE    WHEN region != &#x27;WA&#x27; THEN 1  END) AS orders_not_wa_employeesFROM employees eJOIN orders o  ON e.employee_id = o.employee_id;\n练习26\n\n需求：创建报表统计运输到法国的的订单中，打折和未打折订单的总数量\n结果包含两个字段：full_price （原价）和 discounted_price（打折）\n\nSELECT  SUM(CASE    WHEN discount = 0 THEN 1  END) AS full_price,  SUM(CASE    WHEN discount != 0 THEN 1  END) AS discounted_priceFROM orders oJOIN order_items oi  ON o.order_id = oi.order_idWHERE ship_country = &#x27;France&#x27;;\n3.7 SUM中使用CASE WHEN进行复杂计算\n\n我们现在要统计每个订单的总付款额以及非素食产品的总付款额。\n\n\n注: 非素食产品的产品ID （ category_id） 是 6 和 8\n\nSELECT  o.order_id,  SUM(oi.quantity * oi.unit_price * (1 - oi.discount)) AS total_price,  SUM(CASE    WHEN p.category_id in (6, 8) THEN oi.quantity * oi.unit_price * (1 - oi.discount)    ELSE 0  END) AS non_vegetarian_priceFROM orders oJOIN order_items oi  ON o.order_id = oi.order_idJOIN products p  ON p.product_id = oi.product_idGROUP BY o.order_id;\n\n之前的场景中，我们可以通过SUM(CASE WHEN...) 来替换COUNT(CASE WHEN...) ，但在上面的例子中，我们只能使用SUM(CASE WHEN...) ，因为涉及到不同值的累加，不能通过COUNT计数替代\n\n练习27\n\n需求：输出报表，统计不同供应商供应商品的总库存量，以及高价值商品的库存量（单价超过40定义为高价值）\n结果显示四列：\n\n供应商ID supplier_id\n供应商公司名 company_name\n由该供应商提供的总库存 all_units\n由该供应商提供的高价值商品库存 expensive_units\n\n\n\nSELECT   s.supplier_id,  s.company_name,  SUM(units_in_stock) AS all_units,  SUM(CASE    WHEN unit_price &gt; 40.0 THEN units_in_stock    ELSE 0  END) AS expensive_unitsFROM products pJOIN suppliers s  ON p.supplier_id = s.supplier_idGROUP BY s.supplier_id,  s.company_name;\n小结\n\n\nCASE WHEN语句检查一个或多个条件，并在找到第一个匹配条件时返回一个值。 如果没有ELSE子句并且没有匹配条件，则CASE WHEN返回NULL。\nCASE  WHEN condition_1 THEN result_1  WHEN condition_2 THEN result_2  ...  ELSE resultEND\n\n\n要添加新列，从而对业务数据进行自定义分组，可以在SELECT子句中使用CASE WHEN：\nSELECT   CASE    WHEN ... THEN ...  END AS sample_columnFROM table;\n\n\n可以在“ GROUP BY”子句中使用“ CASE WHEN”来创建自己的分组。 同样的CASE WHEN子句也必须出现在SELECT子句中：\nSELECT   CASE    WHEN ... THEN ...  END AS sample_column,  COUNT(*) AS sample_countFROM table  ...GROUP BY  CASE WHEN ... THEN ...  END;\n\n\n可以在COUNT()或SUM()函数内使用CASE WHEN来创建业务对象的自定义计数：\nSELECT   COUNT(CASE    WHEN ... THEN column_name  END) AS count_columnFROM table;\nSELECT   SUM(CASE    WHEN ... THEN 1  END) AS count_columnFROM table;\n\n\n练习28\n\n需求：创建报表来为每种商品添加价格标签，贵、中等、便宜\n结果包含如下字段：product_id, product_name, unit_price, 和 price_level\n价格等级price_level的取值说明：\n\n'expensive'  单价高于100的产品\n'average'  单价高于40但不超过100的产品\n'cheap'  其他产品\n\n\n\nSELECT   product_id,  product_name,  unit_price,  CASE    WHEN unit_price &gt; 100 THEN &#x27;expensive&#x27;    WHEN unit_price &gt; 40 THEN &#x27;average&#x27;    ELSE &#x27;cheap&#x27;  END AS price_levelFROM products;\n练习29\n\n需求：制作报表统计所有订单的总价（不计任何折扣）对它们进行分类。\n包含一下字段：\n\norder_id\ntotal_price（折扣前）\nprice_group\n\n\n字段 price_group 取值说明：\n\n总价超过2000美元\n'average'，总价在$ 600到$ 2,000之间，包括两端\n'low' 总价低于$ 600\n\n\n\nSELECT  order_id,  SUM(unit_price * quantity) AS total_price,  CASE    WHEN SUM(unit_price * quantity) &gt; 2000 THEN &#x27;high&#x27;    WHEN SUM(unit_price * quantity) &gt; 600 THEN &#x27;average&#x27;    ELSE &#x27;low&#x27;  END AS price_groupFROM order_itemsGROUP BY order_id;\n练习30\n\n需求：统计所有订单的运费，将运费高低分为三档\n报表中包含三个字段\n\nlow_freight freight值小于“ 40.0”的订单数\navg_freight  freight值大于或等于“ 40.0”但小于“ 80.0”的订单数\nhigh_freight   freight值大于或等于“ 80.0”的订单数\n\n\n\nSELECT  COUNT(CASE    WHEN freight &gt;= 80.0 THEN order_id  END) AS high_freight,  COUNT(CASE    WHEN freight &lt; 40.0 THEN order_id  END) AS low_freight,  COUNT(CASE    WHEN freight &gt;= 40.0 AND freight &lt; 80.0 THEN order_id  END) AS avg_freightFROM orders;\n数据\n/* Navicat Premium Data Transfer Source Server         : localhost Source Server Type    : MySQL Source Server Version : 80022 Source Host           : localhost:3306 Source Schema         : test Target Server Type    : MySQL Target Server Version : 80022 File Encoding         : 65001 Date: 27/04/2021 19:38:18*/SET NAMES utf8mb4;SET FOREIGN_KEY_CHECKS = 0;-- ------------------------------ Table structure for categories-- ----------------------------DROP TABLE IF EXISTS `categories`;CREATE TABLE `categories` (  `category_id` int NOT NULL,  `category_name` varchar(15) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,  `description` text CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci,  PRIMARY KEY (`category_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;-- ------------------------------ Records of categories-- ----------------------------BEGIN;INSERT INTO `categories` VALUES (1, &#x27;Beverages&#x27;, &#x27;Soft drinks, coffees, teas, beers, and ales&#x27;);INSERT INTO `categories` VALUES (2, &#x27;Condiments&#x27;, &#x27;Sweet and savory sauces, relishes, spreads, and seasonings&#x27;);INSERT INTO `categories` VALUES (3, &#x27;Confections&#x27;, &#x27;Desserts, candies, and sweet breads&#x27;);INSERT INTO `categories` VALUES (4, &#x27;Dairy Products&#x27;, &#x27;Cheeses&#x27;);INSERT INTO `categories` VALUES (5, &#x27;Grains/Cereals&#x27;, &#x27;Breads, crackers, pasta, and cereal&#x27;);INSERT INTO `categories` VALUES (6, &#x27;Meat/Poultry&#x27;, &#x27;Prepared meats&#x27;);INSERT INTO `categories` VALUES (7, &#x27;Produce&#x27;, &#x27;Dried fruit and bean curd&#x27;);INSERT INTO `categories` VALUES (8, &#x27;Seafood&#x27;, &#x27;Seaweed and fish&#x27;);COMMIT;-- ------------------------------ Table structure for customers-- ----------------------------DROP TABLE IF EXISTS `customers`;CREATE TABLE `customers` (  `customer_id` varchar(5) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL,  `company_name` varchar(40) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,  `contact_name` varchar(30) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,  `contact_title` varchar(30) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,  `address` varchar(60) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,  `city` varchar(15) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,  `region` varchar(15) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,  `postal_code` varchar(10) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,  `country` varchar(15) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,  `fax` varchar(24) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,  PRIMARY KEY (`customer_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;-- ------------------------------ Records of customers-- ----------------------------BEGIN;INSERT INTO `customers` VALUES (&#x27;ALFKI&#x27;, &#x27;Alfreds Futterkiste&#x27;, &#x27;Maria Anders&#x27;, &#x27;Sales Representative&#x27;, &#x27;Obere Str. 57&#x27;, &#x27;Berlin&#x27;, NULL, &#x27;12209&#x27;, &#x27;Germany&#x27;, &#x27;030-0076545&#x27;);INSERT INTO `customers` VALUES (&#x27;ANATR&#x27;, &#x27;Ana Trujillo Emparedados y helados&#x27;, &#x27;Ana Trujillo&#x27;, &#x27;Owner&#x27;, &#x27;Avda. de la Constitución 2222&#x27;, &#x27;México D.F.&#x27;, NULL, &#x27;5021&#x27;, &#x27;Mexico&#x27;, &#x27;(5) 555-3745&#x27;);INSERT INTO `customers` VALUES (&#x27;ANTON&#x27;, &#x27;Antonio Moreno Taquería&#x27;, &#x27;Antonio Moreno&#x27;, &#x27;Owner&#x27;, &#x27;Mataderos 2312&#x27;, &#x27;México D.F.&#x27;, NULL, &#x27;5023&#x27;, &#x27;Mexico&#x27;, NULL);INSERT INTO `customers` VALUES (&#x27;AROUT&#x27;, &#x27;Around the Horn&#x27;, &#x27;Thomas Hardy&#x27;, &#x27;Sales Representative&#x27;, &#x27;120 Hanover Sq.&#x27;, &#x27;London&#x27;, NULL, &#x27;WA1 1DP&#x27;, &#x27;UK&#x27;, &#x27;(171) 555-6750&#x27;);INSERT INTO `customers` VALUES (&#x27;BERGS&#x27;, &#x27;Berglunds snabbköp&#x27;, &#x27;Christina Berglund&#x27;, &#x27;Order Administrator&#x27;, &#x27;Berguvsvägen 8&#x27;, &#x27;Luleå&#x27;, NULL, &#x27;S-958 22&#x27;, &#x27;Sweden&#x27;, &#x27;0921-12 34 67&#x27;);INSERT INTO `customers` VALUES (&#x27;BLAUS&#x27;, &#x27;Blauer See Delikatessen&#x27;, &#x27;Hanna Moos&#x27;, &#x27;Sales Representative&#x27;, &#x27;Forsterstr. 57&#x27;, &#x27;Mannheim&#x27;, NULL, &#x27;68306&#x27;, &#x27;Germany&#x27;, &#x27;0621-08924&#x27;);INSERT INTO `customers` VALUES (&#x27;BLONP&#x27;, &#x27;Blondesddsl père et fils&#x27;, &#x27;Frédérique Citeaux&#x27;, &#x27;Marketing Manager&#x27;, &#x27;24, place Kléber&#x27;, &#x27;Strasbourg&#x27;, NULL, &#x27;67000&#x27;, &#x27;France&#x27;, &#x27;88.60.15.32&#x27;);INSERT INTO `customers` VALUES (&#x27;BOLID&#x27;, &#x27;Bólido Comidas preparadas&#x27;, &#x27;Martín Sommer&#x27;, &#x27;Owner&#x27;, &#x27;C/ Araquil, 67&#x27;, &#x27;Madrid&#x27;, NULL, &#x27;28023&#x27;, &#x27;Spain&#x27;, &#x27;(91) 555 91 99&#x27;);INSERT INTO `customers` VALUES (&#x27;BONAP&#x27;, &#x27;Bon app\\&#x27;&#x27;, &#x27;Laurence Lebihan&#x27;, &#x27;Owner&#x27;, &#x27;12, rue des Bouchers&#x27;, &#x27;Marseille&#x27;, NULL, &#x27;13008&#x27;, &#x27;France&#x27;, &#x27;91.24.45.41&#x27;);INSERT INTO `customers` VALUES (&#x27;BOTTM&#x27;, &#x27;Bottom-Dollar Markets&#x27;, &#x27;Elizabeth Lincoln&#x27;, &#x27;Accounting Manager&#x27;, &#x27;23 Tsawassen Blvd.&#x27;, &#x27;Tsawassen&#x27;, &#x27;BC&#x27;, &#x27;T2F 8M4&#x27;, &#x27;Canada&#x27;, &#x27;(604) 555-3745&#x27;);INSERT INTO `customers` VALUES (&#x27;BSBEV&#x27;, &#x27;B\\&#x27;s Beverages&#x27;, &#x27;Victoria Ashworth&#x27;, &#x27;Sales Representative&#x27;, &#x27;Fauntleroy Circus&#x27;, &#x27;London&#x27;, NULL, &#x27;EC2 5NT&#x27;, &#x27;UK&#x27;, NULL);INSERT INTO `customers` VALUES (&#x27;CACTU&#x27;, &#x27;Cactus Comidas para llevar&#x27;, &#x27;Patricio Simpson&#x27;, &#x27;Sales Agent&#x27;, &#x27;Cerrito 333&#x27;, &#x27;Buenos Aires&#x27;, NULL, &#x27;1010&#x27;, &#x27;Argentina&#x27;, &#x27;(1) 135-4892&#x27;);INSERT INTO `customers` VALUES (&#x27;CENTC&#x27;, &#x27;Centro comercial Moctezuma&#x27;, &#x27;Francisco Chang&#x27;, &#x27;Marketing Manager&#x27;, &#x27;Sierras de Granada 9993&#x27;, &#x27;México D.F.&#x27;, NULL, &#x27;5022&#x27;, &#x27;Mexico&#x27;, &#x27;(5) 555-7293&#x27;);INSERT INTO `customers` VALUES (&#x27;CHOPS&#x27;, &#x27;Chop-suey Chinese&#x27;, &#x27;Yang Wang&#x27;, &#x27;Owner&#x27;, &#x27;Hauptstr. 29&#x27;, &#x27;Bern&#x27;, NULL, &#x27;3012&#x27;, &#x27;Switzerland&#x27;, NULL);INSERT INTO `customers` VALUES (&#x27;COMMI&#x27;, &#x27;Comércio Mineiro&#x27;, &#x27;Pedro Afonso&#x27;, &#x27;Sales Associate&#x27;, &#x27;Av. dos Lusíadas, 23&#x27;, &#x27;Sao Paulo&#x27;, &#x27;SP&#x27;, &#x27;05432-043&#x27;, &#x27;Brazil&#x27;, NULL);INSERT INTO `customers` VALUES (&#x27;CONSH&#x27;, &#x27;Consolidated Holdings&#x27;, &#x27;Elizabeth Brown&#x27;, &#x27;Sales Representative&#x27;, &#x27;Berkeley Gardens 12 Brewery&#x27;, &#x27;London&#x27;, NULL, &#x27;WX1 6LT&#x27;, &#x27;UK&#x27;, &#x27;(171) 555-9199&#x27;);INSERT INTO `customers` VALUES (&#x27;DRACD&#x27;, &#x27;Drachenblut Delikatessen&#x27;, &#x27;Sven Ottlieb&#x27;, &#x27;Order Administrator&#x27;, &#x27;Walserweg 21&#x27;, &#x27;Aachen&#x27;, NULL, &#x27;52066&#x27;, &#x27;Germany&#x27;, &#x27;0241-059428&#x27;);INSERT INTO `customers` VALUES (&#x27;DUMON&#x27;, &#x27;Du monde entier&#x27;, &#x27;Janine Labrune&#x27;, &#x27;Owner&#x27;, &#x27;67, rue des Cinquante Otages&#x27;, &#x27;Nantes&#x27;, NULL, &#x27;44000&#x27;, &#x27;France&#x27;, &#x27;40.67.89.89&#x27;);INSERT INTO `customers` VALUES (&#x27;EASTC&#x27;, &#x27;Eastern Connection&#x27;, &#x27;Ann Devon&#x27;, &#x27;Sales Agent&#x27;, &#x27;35 King George&#x27;, &#x27;London&#x27;, NULL, &#x27;WX3 6FW&#x27;, &#x27;UK&#x27;, &#x27;(171) 555-3373&#x27;);INSERT INTO `customers` VALUES (&#x27;ERNSH&#x27;, &#x27;Ernst Handel&#x27;, &#x27;Roland Mendel&#x27;, &#x27;Sales Manager&#x27;, &#x27;Kirchgasse 6&#x27;, &#x27;Graz&#x27;, NULL, &#x27;8010&#x27;, &#x27;Austria&#x27;, &#x27;7675-3426&#x27;);INSERT INTO `customers` VALUES (&#x27;FAMIA&#x27;, &#x27;Familia Arquibaldo&#x27;, &#x27;Aria Cruz&#x27;, &#x27;Marketing Assistant&#x27;, &#x27;Rua Orós, 92&#x27;, &#x27;Sao Paulo&#x27;, &#x27;SP&#x27;, &#x27;05442-030&#x27;, &#x27;Brazil&#x27;, NULL);INSERT INTO `customers` VALUES (&#x27;FISSA&#x27;, &#x27;FISSA Fabrica Inter. Salchichas S.A.&#x27;, &#x27;Diego Roel&#x27;, &#x27;Accounting Manager&#x27;, &#x27;C/ Moralzarzal, 86&#x27;, &#x27;Madrid&#x27;, NULL, &#x27;28034&#x27;, &#x27;Spain&#x27;, &#x27;(91) 555 55 93&#x27;);INSERT INTO `customers` VALUES (&#x27;FOLIG&#x27;, &#x27;Folies gourmandes&#x27;, &#x27;Martine Rancé&#x27;, &#x27;Assistant Sales Agent&#x27;, &#x27;184, chaussée de Tournai&#x27;, &#x27;Lille&#x27;, NULL, &#x27;59000&#x27;, &#x27;France&#x27;, &#x27;20.16.10.17&#x27;);INSERT INTO `customers` VALUES (&#x27;FOLKO&#x27;, &#x27;Folk och fä HB&#x27;, &#x27;Maria Larsson&#x27;, &#x27;Owner&#x27;, &#x27;Åkergatan 24&#x27;, &#x27;Bräcke&#x27;, NULL, &#x27;S-844 67&#x27;, &#x27;Sweden&#x27;, NULL);INSERT INTO `customers` VALUES (&#x27;FRANK&#x27;, &#x27;Frankenversand&#x27;, &#x27;Peter Franken&#x27;, &#x27;Marketing Manager&#x27;, &#x27;Berliner Platz 43&#x27;, &#x27;München&#x27;, NULL, &#x27;80805&#x27;, &#x27;Germany&#x27;, &#x27;089-0877451&#x27;);INSERT INTO `customers` VALUES (&#x27;FRANR&#x27;, &#x27;France restauration&#x27;, &#x27;Carine Schmitt&#x27;, &#x27;Marketing Manager&#x27;, &#x27;54, rue Royale&#x27;, &#x27;Nantes&#x27;, NULL, &#x27;44000&#x27;, &#x27;France&#x27;, &#x27;40.32.21.20&#x27;);INSERT INTO `customers` VALUES (&#x27;FRANS&#x27;, &#x27;Franchi S.p.A.&#x27;, &#x27;Paolo Accorti&#x27;, &#x27;Sales Representative&#x27;, &#x27;Via Monte Bianco 34&#x27;, &#x27;Torino&#x27;, NULL, &#x27;10100&#x27;, &#x27;Italy&#x27;, &#x27;011-4988261&#x27;);INSERT INTO `customers` VALUES (&#x27;FURIB&#x27;, &#x27;Furia Bacalhau e Frutos do Mar&#x27;, &#x27;Lino Rodriguez&#x27;, &#x27;Sales Manager&#x27;, &#x27;Jardim das rosas n. 32&#x27;, &#x27;Lisboa&#x27;, NULL, &#x27;1675&#x27;, &#x27;Portugal&#x27;, &#x27;(1) 354-2535&#x27;);INSERT INTO `customers` VALUES (&#x27;GALED&#x27;, &#x27;Galería del gastrónomo&#x27;, &#x27;Eduardo Saavedra&#x27;, &#x27;Marketing Manager&#x27;, &#x27;Rambla de Cataluña, 23&#x27;, &#x27;Barcelona&#x27;, NULL, &#x27;8022&#x27;, &#x27;Spain&#x27;, &#x27;(93) 203 4561&#x27;);INSERT INTO `customers` VALUES (&#x27;GODOS&#x27;, &#x27;Godos Cocina Típica&#x27;, &#x27;José Pedro Freyre&#x27;, &#x27;Sales Manager&#x27;, &#x27;C/ Romero, 33&#x27;, &#x27;Sevilla&#x27;, NULL, &#x27;41101&#x27;, &#x27;Spain&#x27;, NULL);INSERT INTO `customers` VALUES (&#x27;GOURL&#x27;, &#x27;Gourmet Lanchonetes&#x27;, &#x27;André Fonseca&#x27;, &#x27;Sales Associate&#x27;, &#x27;Av. Brasil, 442&#x27;, &#x27;Campinas&#x27;, &#x27;SP&#x27;, &#x27;04876-786&#x27;, &#x27;Brazil&#x27;, NULL);INSERT INTO `customers` VALUES (&#x27;GREAL&#x27;, &#x27;Great Lakes Food Market&#x27;, &#x27;Howard Snyder&#x27;, &#x27;Marketing Manager&#x27;, &#x27;2732 Baker Blvd.&#x27;, &#x27;Eugene&#x27;, &#x27;OR&#x27;, &#x27;97403&#x27;, &#x27;USA&#x27;, NULL);INSERT INTO `customers` VALUES (&#x27;GROSR&#x27;, &#x27;GROSELLA-Restaurante&#x27;, &#x27;Manuel Pereira&#x27;, &#x27;Owner&#x27;, &#x27;5ª Ave. Los Palos Grandes&#x27;, &#x27;Caracas&#x27;, &#x27;DF&#x27;, &#x27;1081&#x27;, &#x27;Venezuela&#x27;, &#x27;(2) 283-3397&#x27;);INSERT INTO `customers` VALUES (&#x27;HANAR&#x27;, &#x27;Hanari Carnes&#x27;, &#x27;Mario Pontes&#x27;, &#x27;Accounting Manager&#x27;, &#x27;Rua do Paço, 67&#x27;, &#x27;Rio de Janeiro&#x27;, &#x27;RJ&#x27;, &#x27;05454-876&#x27;, &#x27;Brazil&#x27;, &#x27;(21) 555-8765&#x27;);INSERT INTO `customers` VALUES (&#x27;HILAA&#x27;, &#x27;HILARION-Abastos&#x27;, &#x27;Carlos Hernández&#x27;, &#x27;Sales Representative&#x27;, &#x27;Carrera 22 con Ave. Carlos Soublette #8-35&#x27;, &#x27;San Cristóbal&#x27;, &#x27;Táchira&#x27;, &#x27;5022&#x27;, &#x27;Venezuela&#x27;, &#x27;(5) 555-1948&#x27;);INSERT INTO `customers` VALUES (&#x27;HUNGC&#x27;, &#x27;Hungry Coyote Import Store&#x27;, &#x27;Yoshi Latimer&#x27;, &#x27;Sales Representative&#x27;, &#x27;City Center Plaza 516 Main St.&#x27;, &#x27;Elgin&#x27;, &#x27;OR&#x27;, &#x27;97827&#x27;, &#x27;USA&#x27;, &#x27;(503) 555-2376&#x27;);INSERT INTO `customers` VALUES (&#x27;HUNGO&#x27;, &#x27;Hungry Owl All-Night Grocers&#x27;, &#x27;Patricia McKenna&#x27;, &#x27;Sales Associate&#x27;, &#x27;8 Johnstown Road&#x27;, &#x27;Cork&#x27;, &#x27;Co. Cork&#x27;, &#x27;null&#x27;, &#x27;Ireland&#x27;, &#x27;2967 3333&#x27;);INSERT INTO `customers` VALUES (&#x27;ISLAT&#x27;, &#x27;Island Trading&#x27;, &#x27;Helen Bennett&#x27;, &#x27;Marketing Manager&#x27;, &#x27;Garden House Crowther Way&#x27;, &#x27;Cowes&#x27;, &#x27;Isle of Wight&#x27;, &#x27;PO31 7PJ&#x27;, &#x27;UK&#x27;, NULL);INSERT INTO `customers` VALUES (&#x27;KOENE&#x27;, &#x27;Königlich Essen&#x27;, &#x27;Philip Cramer&#x27;, &#x27;Sales Associate&#x27;, &#x27;Maubelstr. 90&#x27;, &#x27;Brandenburg&#x27;, NULL, &#x27;14776&#x27;, &#x27;Germany&#x27;, NULL);INSERT INTO `customers` VALUES (&#x27;LACOR&#x27;, &#x27;La corne d\\&#x27;abondance&#x27;, &#x27;Daniel Tonini&#x27;, &#x27;Sales Representative&#x27;, &#x27;67, avenue de l\\&#x27;Europe&#x27;, &#x27;Versailles&#x27;, NULL, &#x27;78000&#x27;, &#x27;France&#x27;, &#x27;30.59.85.11&#x27;);INSERT INTO `customers` VALUES (&#x27;LAMAI&#x27;, &#x27;La maison d\\&#x27;Asie&#x27;, &#x27;Annette Roulet&#x27;, &#x27;Sales Manager&#x27;, &#x27;1 rue Alsace-Lorraine&#x27;, &#x27;Toulouse&#x27;, NULL, &#x27;31000&#x27;, &#x27;France&#x27;, &#x27;61.77.61.11&#x27;);INSERT INTO `customers` VALUES (&#x27;LAUGB&#x27;, &#x27;Laughing Bacchus Wine Cellars&#x27;, &#x27;Yoshi Tannamuri&#x27;, &#x27;Marketing Assistant&#x27;, &#x27;1900 Oak St.&#x27;, &#x27;Vancouver&#x27;, &#x27;BC&#x27;, &#x27;V3F 2K1&#x27;, &#x27;Canada&#x27;, &#x27;(604) 555-7293&#x27;);INSERT INTO `customers` VALUES (&#x27;LAZYK&#x27;, &#x27;Lazy K Kountry Store&#x27;, &#x27;John Steel&#x27;, &#x27;Marketing Manager&#x27;, &#x27;12 Orchestra Terrace&#x27;, &#x27;Walla Walla&#x27;, &#x27;WA&#x27;, &#x27;99362&#x27;, &#x27;USA&#x27;, &#x27;(509) 555-6221&#x27;);INSERT INTO `customers` VALUES (&#x27;LEHMS&#x27;, &#x27;Lehmanns Marktstand&#x27;, &#x27;Renate Messner&#x27;, &#x27;Sales Representative&#x27;, &#x27;Magazinweg 7&#x27;, &#x27;Frankfurt a.M.&#x27;, NULL, &#x27;60528&#x27;, &#x27;Germany&#x27;, &#x27;069-0245874&#x27;);INSERT INTO `customers` VALUES (&#x27;LETSS&#x27;, &#x27;Let\\&#x27;s Stop N Shop&#x27;, &#x27;Jaime Yorres&#x27;, &#x27;Owner&#x27;, &#x27;87 Polk St. Suite 5&#x27;, &#x27;San Francisco&#x27;, &#x27;CA&#x27;, &#x27;94117&#x27;, &#x27;USA&#x27;, NULL);INSERT INTO `customers` VALUES (&#x27;LILAS&#x27;, &#x27;LILA-Supermercado&#x27;, &#x27;Carlos González&#x27;, &#x27;Accounting Manager&#x27;, &#x27;Carrera 52 con Ave. Bolívar #65-98 Llano Largo&#x27;, &#x27;Barquisimeto&#x27;, &#x27;Lara&#x27;, &#x27;3508&#x27;, &#x27;Venezuela&#x27;, &#x27;(9) 331-7256&#x27;);INSERT INTO `customers` VALUES (&#x27;LINOD&#x27;, &#x27;LINO-Delicateses&#x27;, &#x27;Felipe Izquierdo&#x27;, &#x27;Owner&#x27;, &#x27;Ave. 5 de Mayo Porlamar&#x27;, &#x27;I. de Margarita&#x27;, &#x27;Nueva Esparta&#x27;, &#x27;4980&#x27;, &#x27;Venezuela&#x27;, &#x27;(8) 34-93-93&#x27;);INSERT INTO `customers` VALUES (&#x27;LONEP&#x27;, &#x27;Lonesome Pine Restaurant&#x27;, &#x27;Fran Wilson&#x27;, &#x27;Sales Manager&#x27;, &#x27;89 Chiaroscuro Rd.&#x27;, &#x27;Portland&#x27;, &#x27;OR&#x27;, &#x27;97219&#x27;, &#x27;USA&#x27;, &#x27;(503) 555-9646&#x27;);INSERT INTO `customers` VALUES (&#x27;MAGAA&#x27;, &#x27;Magazzini Alimentari Riuniti&#x27;, &#x27;Giovanni Rovelli&#x27;, &#x27;Marketing Manager&#x27;, &#x27;Via Ludovico il Moro 22&#x27;, &#x27;Bergamo&#x27;, NULL, &#x27;24100&#x27;, &#x27;Italy&#x27;, &#x27;035-640231&#x27;);INSERT INTO `customers` VALUES (&#x27;MAISD&#x27;, &#x27;Maison Dewey&#x27;, &#x27;Catherine Dewey&#x27;, &#x27;Sales Agent&#x27;, &#x27;Rue Joseph-Bens 532&#x27;, &#x27;Bruxelles&#x27;, NULL, &#x27;B-1180&#x27;, &#x27;Belgium&#x27;, &#x27;(02) 201 24 68&#x27;);INSERT INTO `customers` VALUES (&#x27;MEREP&#x27;, &#x27;Mère Paillarde&#x27;, &#x27;Jean Fresnière&#x27;, &#x27;Marketing Assistant&#x27;, &#x27;43 rue St. Laurent&#x27;, &#x27;Montréal&#x27;, &#x27;Québec&#x27;, &#x27;H1J 1C3&#x27;, &#x27;Canada&#x27;, &#x27;(514) 555-8055&#x27;);INSERT INTO `customers` VALUES (&#x27;MORGK&#x27;, &#x27;Morgenstern Gesundkost&#x27;, &#x27;Alexander Feuer&#x27;, &#x27;Marketing Assistant&#x27;, &#x27;Heerstr. 22&#x27;, &#x27;Leipzig&#x27;, NULL, &#x27;4179&#x27;, &#x27;Germany&#x27;, NULL);INSERT INTO `customers` VALUES (&#x27;NORTS&#x27;, &#x27;North/South&#x27;, &#x27;Simon Crowther&#x27;, &#x27;Sales Associate&#x27;, &#x27;South House 300 Queensbridge&#x27;, &#x27;London&#x27;, NULL, &#x27;SW7 1RZ&#x27;, &#x27;UK&#x27;, &#x27;(171) 555-2530&#x27;);INSERT INTO `customers` VALUES (&#x27;OCEAN&#x27;, &#x27;Océano Atlántico Ltda.&#x27;, &#x27;Yvonne Moncada&#x27;, &#x27;Sales Agent&#x27;, &#x27;Ing. Gustavo Moncada 8585 Piso 20-A&#x27;, &#x27;Buenos Aires&#x27;, NULL, &#x27;1010&#x27;, &#x27;Argentina&#x27;, &#x27;(1) 135-5535&#x27;);INSERT INTO `customers` VALUES (&#x27;OLDWO&#x27;, &#x27;Old World Delicatessen&#x27;, &#x27;Rene Phillips&#x27;, &#x27;Sales Representative&#x27;, &#x27;2743 Bering St.&#x27;, &#x27;Anchorage&#x27;, &#x27;AK&#x27;, &#x27;99508&#x27;, &#x27;USA&#x27;, &#x27;(907) 555-2880&#x27;);INSERT INTO `customers` VALUES (&#x27;OTTIK&#x27;, &#x27;Ottilies Käseladen&#x27;, &#x27;Henriette Pfalzheim&#x27;, &#x27;Owner&#x27;, &#x27;Mehrheimerstr. 369&#x27;, &#x27;Köln&#x27;, NULL, &#x27;50739&#x27;, &#x27;Germany&#x27;, &#x27;0221-0765721&#x27;);INSERT INTO `customers` VALUES (&#x27;PARIS&#x27;, &#x27;Paris spécialités&#x27;, &#x27;Marie Bertrand&#x27;, &#x27;Owner&#x27;, &#x27;265, boulevard Charonne&#x27;, &#x27;Paris&#x27;, NULL, &#x27;75012&#x27;, &#x27;France&#x27;, &#x27;(1) 42.34.22.77&#x27;);INSERT INTO `customers` VALUES (&#x27;PERIC&#x27;, &#x27;Pericles Comidas clásicas&#x27;, &#x27;Guillermo Fernández&#x27;, &#x27;Sales Representative&#x27;, &#x27;Calle Dr. Jorge Cash 321&#x27;, &#x27;México D.F.&#x27;, NULL, &#x27;5033&#x27;, &#x27;Mexico&#x27;, &#x27;(5) 545-3745&#x27;);INSERT INTO `customers` VALUES (&#x27;PICCO&#x27;, &#x27;Piccolo und mehr&#x27;, &#x27;Georg Pipps&#x27;, &#x27;Sales Manager&#x27;, &#x27;Geislweg 14&#x27;, &#x27;Salzburg&#x27;, NULL, &#x27;5020&#x27;, &#x27;Austria&#x27;, &#x27;6562-9723&#x27;);INSERT INTO `customers` VALUES (&#x27;PRINI&#x27;, &#x27;Princesa Isabel Vinhos&#x27;, &#x27;Isabel de Castro&#x27;, &#x27;Sales Representative&#x27;, &#x27;Estrada da saúde n. 58&#x27;, &#x27;Lisboa&#x27;, NULL, &#x27;1756&#x27;, &#x27;Portugal&#x27;, NULL);INSERT INTO `customers` VALUES (&#x27;QUEDE&#x27;, &#x27;Que Delícia&#x27;, &#x27;Bernardo Batista&#x27;, &#x27;Accounting Manager&#x27;, &#x27;Rua da Panificadora, 12&#x27;, &#x27;Rio de Janeiro&#x27;, &#x27;RJ&#x27;, &#x27;02389-673&#x27;, &#x27;Brazil&#x27;, &#x27;(21) 555-4545&#x27;);INSERT INTO `customers` VALUES (&#x27;QUEEN&#x27;, &#x27;Queen Cozinha&#x27;, &#x27;Lúcia Carvalho&#x27;, &#x27;Marketing Assistant&#x27;, &#x27;Alameda dos Canàrios, 891&#x27;, &#x27;Sao Paulo&#x27;, &#x27;SP&#x27;, &#x27;05487-020&#x27;, &#x27;Brazil&#x27;, NULL);INSERT INTO `customers` VALUES (&#x27;QUICK&#x27;, &#x27;QUICK-Stop&#x27;, &#x27;Horst Kloss&#x27;, &#x27;Accounting Manager&#x27;, &#x27;Taucherstraße 10&#x27;, &#x27;Cunewalde&#x27;, NULL, &#x27;1307&#x27;, &#x27;Germany&#x27;, NULL);INSERT INTO `customers` VALUES (&#x27;RANCH&#x27;, &#x27;Rancho grande&#x27;, &#x27;Sergio Gutiérrez&#x27;, &#x27;Sales Representative&#x27;, &#x27;Av. del Libertador 900&#x27;, &#x27;Buenos Aires&#x27;, NULL, &#x27;1010&#x27;, &#x27;Argentina&#x27;, &#x27;(1) 123-5556&#x27;);INSERT INTO `customers` VALUES (&#x27;RATTC&#x27;, &#x27;Rattlesnake Canyon Grocery&#x27;, &#x27;Paula Wilson&#x27;, &#x27;Assistant Sales Representative&#x27;, &#x27;2817 Milton Dr.&#x27;, &#x27;Albuquerque&#x27;, &#x27;NM&#x27;, &#x27;87110&#x27;, &#x27;USA&#x27;, &#x27;(505) 555-3620&#x27;);INSERT INTO `customers` VALUES (&#x27;REGGC&#x27;, &#x27;Reggiani Caseifici&#x27;, &#x27;Maurizio Moroni&#x27;, &#x27;Sales Associate&#x27;, &#x27;Strada Provinciale 124&#x27;, &#x27;Reggio Emilia&#x27;, NULL, &#x27;42100&#x27;, &#x27;Italy&#x27;, &#x27;0522-556722&#x27;);INSERT INTO `customers` VALUES (&#x27;RICAR&#x27;, &#x27;Ricardo Adocicados&#x27;, &#x27;Janete Limeira&#x27;, &#x27;Assistant Sales Agent&#x27;, &#x27;Av. Copacabana, 267&#x27;, &#x27;Rio de Janeiro&#x27;, &#x27;RJ&#x27;, &#x27;02389-890&#x27;, &#x27;Brazil&#x27;, NULL);INSERT INTO `customers` VALUES (&#x27;RICSU&#x27;, &#x27;Richter Supermarkt&#x27;, &#x27;Michael Holz&#x27;, &#x27;Sales Manager&#x27;, &#x27;Grenzacherweg 237&#x27;, &#x27;Genève&#x27;, NULL, &#x27;1203&#x27;, &#x27;Switzerland&#x27;, NULL);INSERT INTO `customers` VALUES (&#x27;ROMEY&#x27;, &#x27;Romero y tomillo&#x27;, &#x27;Alejandra Camino&#x27;, &#x27;Accounting Manager&#x27;, &#x27;Gran Vía, 1&#x27;, &#x27;Madrid&#x27;, NULL, &#x27;28001&#x27;, &#x27;Spain&#x27;, &#x27;(91) 745 6210&#x27;);INSERT INTO `customers` VALUES (&#x27;SANTG&#x27;, &#x27;Santé Gourmet&#x27;, &#x27;Jonas Bergulfsen&#x27;, &#x27;Owner&#x27;, &#x27;Erling Skakkes gate 78&#x27;, &#x27;Stavern&#x27;, NULL, &#x27;4110&#x27;, &#x27;Norway&#x27;, &#x27;07-98 92 47&#x27;);INSERT INTO `customers` VALUES (&#x27;SAVEA&#x27;, &#x27;Save-a-lot Markets&#x27;, &#x27;Jose Pavarotti&#x27;, &#x27;Sales Representative&#x27;, &#x27;187 Suffolk Ln.&#x27;, &#x27;Boise&#x27;, &#x27;ID&#x27;, &#x27;83720&#x27;, &#x27;USA&#x27;, NULL);INSERT INTO `customers` VALUES (&#x27;SEVES&#x27;, &#x27;Seven Seas Imports&#x27;, &#x27;Hari Kumar&#x27;, &#x27;Sales Manager&#x27;, &#x27;90 Wadhurst Rd.&#x27;, &#x27;London&#x27;, NULL, &#x27;OX15 4NB&#x27;, &#x27;UK&#x27;, &#x27;(171) 555-5646&#x27;);INSERT INTO `customers` VALUES (&#x27;SIMOB&#x27;, &#x27;Simons bistro&#x27;, &#x27;Jytte Petersen&#x27;, &#x27;Owner&#x27;, &#x27;Vinbæltet 34&#x27;, &#x27;Kobenhavn&#x27;, NULL, &#x27;1734&#x27;, &#x27;Denmark&#x27;, &#x27;31 13 35 57&#x27;);INSERT INTO `customers` VALUES (&#x27;SPECD&#x27;, &#x27;Spécialités du monde&#x27;, &#x27;Dominique Perrier&#x27;, &#x27;Marketing Manager&#x27;, &#x27;25, rue Lauriston&#x27;, &#x27;Paris&#x27;, NULL, &#x27;75016&#x27;, &#x27;France&#x27;, &#x27;(1) 47.55.60.20&#x27;);INSERT INTO `customers` VALUES (&#x27;SPLIR&#x27;, &#x27;Split Rail Beer &amp; Ale&#x27;, &#x27;Art Braunschweiger&#x27;, &#x27;Sales Manager&#x27;, &#x27;P.O. Box 555&#x27;, &#x27;Lander&#x27;, &#x27;WY&#x27;, &#x27;82520&#x27;, &#x27;USA&#x27;, &#x27;(307) 555-6525&#x27;);INSERT INTO `customers` VALUES (&#x27;SUPRD&#x27;, &#x27;Suprêmes délices&#x27;, &#x27;Pascale Cartrain&#x27;, &#x27;Accounting Manager&#x27;, &#x27;Boulevard Tirou, 255&#x27;, &#x27;Charleroi&#x27;, NULL, &#x27;B-6000&#x27;, &#x27;Belgium&#x27;, &#x27;(071) 23 67 22 21&#x27;);INSERT INTO `customers` VALUES (&#x27;THEBI&#x27;, &#x27;The Big Cheese&#x27;, &#x27;Liz Nixon&#x27;, &#x27;Marketing Manager&#x27;, &#x27;89 Jefferson Way Suite 2&#x27;, &#x27;Portland&#x27;, &#x27;OR&#x27;, &#x27;97201&#x27;, &#x27;USA&#x27;, NULL);INSERT INTO `customers` VALUES (&#x27;THECR&#x27;, &#x27;The Cracker Box&#x27;, &#x27;Liu Wong&#x27;, &#x27;Marketing Assistant&#x27;, &#x27;55 Grizzly Peak Rd.&#x27;, &#x27;Butte&#x27;, &#x27;MT&#x27;, &#x27;59801&#x27;, &#x27;USA&#x27;, &#x27;(406) 555-8083&#x27;);INSERT INTO `customers` VALUES (&#x27;TOMSP&#x27;, &#x27;Toms Spezialitäten&#x27;, &#x27;Karin Josephs&#x27;, &#x27;Marketing Manager&#x27;, &#x27;Luisenstr. 48&#x27;, &#x27;Münster&#x27;, NULL, &#x27;44087&#x27;, &#x27;Germany&#x27;, &#x27;0251-035695&#x27;);INSERT INTO `customers` VALUES (&#x27;TORTU&#x27;, &#x27;Tortuga Restaurante&#x27;, &#x27;Miguel Angel Paolino&#x27;, &#x27;Owner&#x27;, &#x27;Avda. Azteca 123&#x27;, &#x27;México D.F.&#x27;, NULL, &#x27;5033&#x27;, &#x27;Mexico&#x27;, NULL);INSERT INTO `customers` VALUES (&#x27;TRADH&#x27;, &#x27;Tradição Hipermercados&#x27;, &#x27;Anabela Domingues&#x27;, &#x27;Sales Representative&#x27;, &#x27;Av. Inês de Castro, 414&#x27;, &#x27;Sao Paulo&#x27;, &#x27;SP&#x27;, &#x27;05634-030&#x27;, &#x27;Brazil&#x27;, &#x27;(11) 555-2168&#x27;);INSERT INTO `customers` VALUES (&#x27;TRAIH&#x27;, &#x27;Trail\\&#x27;s Head Gourmet Provisioners&#x27;, &#x27;Helvetius Nagy&#x27;, &#x27;Sales Associate&#x27;, &#x27;722 DaVinci Blvd.&#x27;, &#x27;Kirkland&#x27;, &#x27;WA&#x27;, &#x27;98034&#x27;, &#x27;USA&#x27;, &#x27;(206) 555-2174&#x27;);INSERT INTO `customers` VALUES (&#x27;VAFFE&#x27;, &#x27;Vaffeljernet&#x27;, &#x27;Palle Ibsen&#x27;, &#x27;Sales Manager&#x27;, &#x27;Smagsloget 45&#x27;, &#x27;Århus&#x27;, NULL, &#x27;8200&#x27;, &#x27;Denmark&#x27;, &#x27;86 22 33 44&#x27;);INSERT INTO `customers` VALUES (&#x27;VICTE&#x27;, &#x27;Victuailles en stock&#x27;, &#x27;Mary Saveley&#x27;, &#x27;Sales Agent&#x27;, &#x27;2, rue du Commerce&#x27;, &#x27;Lyon&#x27;, NULL, &#x27;69004&#x27;, &#x27;France&#x27;, &#x27;78.32.54.87&#x27;);INSERT INTO `customers` VALUES (&#x27;VINET&#x27;, &#x27;Vins et alcools Chevalier&#x27;, &#x27;Paul Henriot&#x27;, &#x27;Accounting Manager&#x27;, &#x27;59 rue de l\\&#x27;Abbaye&#x27;, &#x27;Reims&#x27;, NULL, &#x27;51100&#x27;, &#x27;France&#x27;, &#x27;26.47.15.11&#x27;);INSERT INTO `customers` VALUES (&#x27;WANDK&#x27;, &#x27;Die Wandernde Kuh&#x27;, &#x27;Rita Müller&#x27;, &#x27;Sales Representative&#x27;, &#x27;Adenauerallee 900&#x27;, &#x27;Stuttgart&#x27;, NULL, &#x27;70563&#x27;, &#x27;Germany&#x27;, &#x27;0711-035428&#x27;);INSERT INTO `customers` VALUES (&#x27;WARTH&#x27;, &#x27;Wartian Herkku&#x27;, &#x27;Pirkko Koskitalo&#x27;, &#x27;Accounting Manager&#x27;, &#x27;Torikatu 38&#x27;, &#x27;Oulu&#x27;, NULL, &#x27;90110&#x27;, &#x27;Finland&#x27;, &#x27;981-443655&#x27;);INSERT INTO `customers` VALUES (&#x27;WELLI&#x27;, &#x27;Wellington Importadora&#x27;, &#x27;Paula Parente&#x27;, &#x27;Sales Manager&#x27;, &#x27;Rua do Mercado, 12&#x27;, &#x27;Resende&#x27;, &#x27;SP&#x27;, &#x27;08737-363&#x27;, &#x27;Brazil&#x27;, NULL);INSERT INTO `customers` VALUES (&#x27;WHITC&#x27;, &#x27;White Clover Markets&#x27;, &#x27;Karl Jablonski&#x27;, &#x27;Owner&#x27;, &#x27;305 - 14th Ave. S. Suite 3B&#x27;, &#x27;Seattle&#x27;, &#x27;WA&#x27;, &#x27;98128&#x27;, &#x27;USA&#x27;, &#x27;(206) 555-4115&#x27;);INSERT INTO `customers` VALUES (&#x27;WILMK&#x27;, &#x27;Wilman Kala&#x27;, &#x27;Matti Karttunen&#x27;, &#x27;Owner/Marketing Assistant&#x27;, &#x27;Keskuskatu 45&#x27;, &#x27;Helsinki&#x27;, NULL, &#x27;21240&#x27;, &#x27;Finland&#x27;, &#x27;90-224 8858&#x27;);INSERT INTO `customers` VALUES (&#x27;WOLZA&#x27;, &#x27;Wolski Zajazd&#x27;, &#x27;Zbyszek Piestrzeniewicz&#x27;, &#x27;Owner&#x27;, &#x27;ul. Filtrowa 68&#x27;, &#x27;Warszawa&#x27;, NULL, &#x27;01-012&#x27;, &#x27;Poland&#x27;, &#x27;(26) 642-7012&#x27;);COMMIT;-- ------------------------------ Table structure for employees-- ----------------------------DROP TABLE IF EXISTS `employees`;CREATE TABLE `employees` (  `employee_id` int NOT NULL,  `last_name` varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,  `first_name` varchar(10) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,  `title` varchar(30) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,  `birth_date` datetime DEFAULT NULL,  `hire_date` datetime DEFAULT NULL,  `address` varchar(60) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,  `city` varchar(15) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,  `region` varchar(15) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,  `postal_code` varchar(10) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,  `country` varchar(15) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,  `reports_to` varchar(10) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,  PRIMARY KEY (`employee_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;-- ------------------------------ Records of employees-- ----------------------------BEGIN;INSERT INTO `employees` VALUES (1, &#x27;Davolio&#x27;, &#x27;Nancy&#x27;, &#x27;Sales Representative&#x27;, &#x27;1968-12-08 00:00:00&#x27;, &#x27;2012-05-01 00:00:00&#x27;, &#x27;507 - 20th Ave. E. Apt. 2A&#x27;, &#x27;Seattle&#x27;, &#x27;WA&#x27;, &#x27;98122&#x27;, &#x27;USA&#x27;, &#x27;2&#x27;);INSERT INTO `employees` VALUES (2, &#x27;Fuller&#x27;, &#x27;Andrew&#x27;, &#x27;Vice President, Sales&#x27;, &#x27;1972-02-19 00:00:00&#x27;, &#x27;2012-08-14 00:00:00&#x27;, &#x27;908 W. Capital Way&#x27;, &#x27;Tacoma&#x27;, &#x27;WA&#x27;, &#x27;98401&#x27;, &#x27;USA&#x27;, NULL);INSERT INTO `employees` VALUES (3, &#x27;Smith&#x27;, &#x27;John&#x27;, &#x27;Sales Representative&#x27;, &#x27;1983-08-30 00:00:00&#x27;, &#x27;2012-04-01 00:00:00&#x27;, &#x27;722 Moss Bay Blvd.&#x27;, &#x27;Kirkland&#x27;, &#x27;WA&#x27;, &#x27;98033&#x27;, &#x27;USA&#x27;, &#x27;2&#x27;);INSERT INTO `employees` VALUES (4, &#x27;Peacock&#x27;, &#x27;Margaret&#x27;, &#x27;Sales Representative&#x27;, &#x27;1957-09-19 00:00:00&#x27;, &#x27;2013-05-03 00:00:00&#x27;, &#x27;4110 Old Redmond Rd.&#x27;, &#x27;Redmond&#x27;, &#x27;WA&#x27;, &#x27;98052&#x27;, &#x27;USA&#x27;, &#x27;2&#x27;);INSERT INTO `employees` VALUES (5, &#x27;Buchanan&#x27;, &#x27;Steven&#x27;, &#x27;Sales Manager&#x27;, &#x27;1975-03-04 00:00:00&#x27;, &#x27;2013-10-17 00:00:00&#x27;, &#x27;14 Garrett Hill&#x27;, &#x27;London&#x27;, &#x27;null&#x27;, &#x27;SW1 8JR&#x27;, &#x27;UK&#x27;, &#x27;2&#x27;);INSERT INTO `employees` VALUES (6, &#x27;Suyama&#x27;, &#x27;Michael&#x27;, &#x27;Sales Representative&#x27;, &#x27;1983-07-02 00:00:00&#x27;, &#x27;2013-10-17 00:00:00&#x27;, &#x27;Coventry House Miner Rd.&#x27;, &#x27;London&#x27;, &#x27;null&#x27;, &#x27;EC2 7JR&#x27;, &#x27;UK&#x27;, &#x27;5&#x27;);INSERT INTO `employees` VALUES (7, &#x27;King&#x27;, &#x27;Robert&#x27;, &#x27;Sales Representative&#x27;, &#x27;1980-05-29 00:00:00&#x27;, &#x27;2014-01-02 00:00:00&#x27;, &#x27;Edgeham Hollow Winchester Way&#x27;, &#x27;London&#x27;, &#x27;null&#x27;, &#x27;RG1 9SP&#x27;, &#x27;UK&#x27;, &#x27;5&#x27;);INSERT INTO `employees` VALUES (8, &#x27;Callahan&#x27;, &#x27;Laura&#x27;, &#x27;Inside Sales Coordinator&#x27;, &#x27;1978-01-09 00:00:00&#x27;, &#x27;2014-03-05 00:00:00&#x27;, &#x27;4726 - 11th Ave. N.E.&#x27;, &#x27;Seattle&#x27;, &#x27;WA&#x27;, &#x27;98105&#x27;, &#x27;USA&#x27;, &#x27;2&#x27;);INSERT INTO `employees` VALUES (9, &#x27;Dodsworth&#x27;, &#x27;Anne&#x27;, &#x27;Sales Representative&#x27;, &#x27;1986-01-27 00:00:00&#x27;, &#x27;2014-11-15 00:00:00&#x27;, &#x27;7 Houndstooth Rd.&#x27;, &#x27;London&#x27;, &#x27;null&#x27;, &#x27;WG2 7LT&#x27;, &#x27;UK&#x27;, &#x27;5&#x27;);INSERT INTO `employees` VALUES (10, &#x27;Smith&#x27;, &#x27;John&#x27;, &#x27;Sales Representative&#x27;, &#x27;1994-08-30 00:00:00&#x27;, &#x27;2017-03-21 00:00:00&#x27;, &#x27;22 Abbey Rd&#x27;, &#x27;London&#x27;, &#x27;null&#x27;, &#x27;NW6 5JG&#x27;, &#x27;UK&#x27;, &#x27;2&#x27;);COMMIT;-- ------------------------------ Table structure for order_items-- ----------------------------DROP TABLE IF EXISTS `order_items`;CREATE TABLE `order_items` (  `order_id` int NOT NULL,  `product_id` int NOT NULL,  `unit_price` decimal(10,2) DEFAULT NULL,  `quantity` smallint DEFAULT NULL,  `discount` double(24,2) DEFAULT NULL,  PRIMARY KEY (`order_id`,`product_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;-- ------------------------------ Records of order_items-- ----------------------------BEGIN;INSERT INTO `order_items` VALUES (10248, 11, 14.00, 12, 0.00);INSERT INTO `order_items` VALUES (10248, 42, 9.80, 10, 0.00);INSERT INTO `order_items` VALUES (10248, 72, 34.80, 5, 0.00);INSERT INTO `order_items` VALUES (10249, 14, 18.60, 9, 0.00);INSERT INTO `order_items` VALUES (10249, 51, 42.40, 40, 0.00);INSERT INTO `order_items` VALUES (10250, 41, 7.70, 10, 0.00);INSERT INTO `order_items` VALUES (10250, 51, 42.40, 35, 0.15);INSERT INTO `order_items` VALUES (10250, 65, 16.80, 15, 0.15);INSERT INTO `order_items` VALUES (10251, 22, 16.80, 6, 0.05);INSERT INTO `order_items` VALUES (10251, 57, 15.60, 15, 0.05);INSERT INTO `order_items` VALUES (10251, 65, 16.80, 20, 0.00);INSERT INTO `order_items` VALUES (10252, 20, 64.80, 40, 0.05);INSERT INTO `order_items` VALUES (10252, 33, 2.00, 25, 0.05);INSERT INTO `order_items` VALUES (10252, 60, 27.20, 40, 0.00);INSERT INTO `order_items` VALUES (10253, 31, 10.00, 20, 0.00);INSERT INTO `order_items` VALUES (10253, 39, 14.40, 42, 0.00);INSERT INTO `order_items` VALUES (10253, 49, 16.00, 40, 0.00);INSERT INTO `order_items` VALUES (10254, 24, 3.60, 15, 0.15);INSERT INTO `order_items` VALUES (10254, 55, 19.20, 21, 0.15);INSERT INTO `order_items` VALUES (10254, 74, 8.00, 21, 0.00);INSERT INTO `order_items` VALUES (10255, 2, 15.20, 20, 0.00);INSERT INTO `order_items` VALUES (10255, 16, 13.90, 35, 0.00);INSERT INTO `order_items` VALUES (10255, 36, 15.20, 25, 0.00);INSERT INTO `order_items` VALUES (10255, 59, 44.00, 30, 0.00);INSERT INTO `order_items` VALUES (10256, 53, 26.20, 15, 0.00);INSERT INTO `order_items` VALUES (10256, 77, 10.40, 12, 0.00);INSERT INTO `order_items` VALUES (10257, 27, 35.10, 25, 0.00);INSERT INTO `order_items` VALUES (10257, 39, 14.40, 6, 0.00);INSERT INTO `order_items` VALUES (10257, 77, 10.40, 15, 0.00);INSERT INTO `order_items` VALUES (10258, 2, 15.20, 50, 0.20);INSERT INTO `order_items` VALUES (10258, 5, 17.00, 65, 0.20);INSERT INTO `order_items` VALUES (10258, 32, 25.60, 6, 0.20);INSERT INTO `order_items` VALUES (10259, 21, 8.00, 10, 0.00);INSERT INTO `order_items` VALUES (10259, 37, 20.80, 1, 0.00);INSERT INTO `order_items` VALUES (10260, 41, 7.70, 16, 0.25);INSERT INTO `order_items` VALUES (10260, 57, 15.60, 50, 0.00);INSERT INTO `order_items` VALUES (10260, 62, 39.40, 15, 0.25);INSERT INTO `order_items` VALUES (10260, 70, 12.00, 21, 0.25);INSERT INTO `order_items` VALUES (10261, 21, 8.00, 20, 0.00);INSERT INTO `order_items` VALUES (10261, 35, 14.40, 20, 0.00);INSERT INTO `order_items` VALUES (10262, 5, 17.00, 12, 0.20);INSERT INTO `order_items` VALUES (10262, 7, 24.00, 15, 0.00);INSERT INTO `order_items` VALUES (10262, 56, 30.40, 2, 0.00);INSERT INTO `order_items` VALUES (10263, 16, 13.90, 60, 0.25);INSERT INTO `order_items` VALUES (10263, 24, 3.60, 28, 0.00);INSERT INTO `order_items` VALUES (10263, 30, 20.70, 60, 0.25);INSERT INTO `order_items` VALUES (10263, 74, 8.00, 36, 0.25);INSERT INTO `order_items` VALUES (10264, 2, 15.20, 35, 0.00);INSERT INTO `order_items` VALUES (10264, 41, 7.70, 25, 0.15);INSERT INTO `order_items` VALUES (10265, 17, 31.20, 30, 0.00);INSERT INTO `order_items` VALUES (10265, 70, 12.00, 20, 0.00);INSERT INTO `order_items` VALUES (10266, 12, 30.40, 12, 0.05);INSERT INTO `order_items` VALUES (10267, 40, 14.70, 50, 0.00);INSERT INTO `order_items` VALUES (10267, 59, 44.00, 70, 0.15);INSERT INTO `order_items` VALUES (10267, 76, 14.40, 15, 0.15);INSERT INTO `order_items` VALUES (10268, 29, 99.00, 10, 0.00);INSERT INTO `order_items` VALUES (10268, 72, 27.80, 4, 0.00);INSERT INTO `order_items` VALUES (10269, 33, 2.00, 60, 0.05);INSERT INTO `order_items` VALUES (10269, 72, 27.80, 20, 0.05);INSERT INTO `order_items` VALUES (10270, 36, 15.20, 30, 0.00);INSERT INTO `order_items` VALUES (10270, 43, 36.80, 25, 0.00);INSERT INTO `order_items` VALUES (10271, 33, 2.00, 24, 0.00);INSERT INTO `order_items` VALUES (10272, 20, 64.80, 6, 0.00);INSERT INTO `order_items` VALUES (10272, 31, 10.00, 40, 0.00);INSERT INTO `order_items` VALUES (10272, 72, 27.80, 24, 0.00);INSERT INTO `order_items` VALUES (10273, 10, 24.80, 24, 0.05);INSERT INTO `order_items` VALUES (10273, 31, 10.00, 15, 0.05);INSERT INTO `order_items` VALUES (10273, 33, 2.00, 20, 0.00);INSERT INTO `order_items` VALUES (10273, 40, 14.70, 60, 0.05);INSERT INTO `order_items` VALUES (10273, 76, 14.40, 33, 0.05);INSERT INTO `order_items` VALUES (10274, 71, 17.20, 20, 0.00);INSERT INTO `order_items` VALUES (10274, 72, 27.80, 7, 0.00);INSERT INTO `order_items` VALUES (10275, 24, 3.60, 12, 0.05);INSERT INTO `order_items` VALUES (10275, 59, 44.00, 6, 0.05);INSERT INTO `order_items` VALUES (10276, 10, 24.80, 15, 0.00);INSERT INTO `order_items` VALUES (10276, 13, 4.80, 10, 0.00);INSERT INTO `order_items` VALUES (10277, 28, 36.40, 20, 0.00);INSERT INTO `order_items` VALUES (10277, 62, 39.40, 12, 0.00);INSERT INTO `order_items` VALUES (10278, 44, 15.50, 16, 0.00);INSERT INTO `order_items` VALUES (10278, 59, 44.00, 15, 0.00);INSERT INTO `order_items` VALUES (10278, 63, 35.10, 8, 0.00);INSERT INTO `order_items` VALUES (10278, 73, 12.00, 25, 0.00);INSERT INTO `order_items` VALUES (10279, 17, 31.20, 15, 0.25);INSERT INTO `order_items` VALUES (10280, 24, 3.60, 12, 0.00);INSERT INTO `order_items` VALUES (10280, 55, 19.20, 20, 0.00);INSERT INTO `order_items` VALUES (10280, 75, 6.20, 30, 0.00);INSERT INTO `order_items` VALUES (10281, 19, 7.30, 1, 0.00);INSERT INTO `order_items` VALUES (10281, 24, 3.60, 6, 0.00);INSERT INTO `order_items` VALUES (10281, 35, 14.40, 4, 0.00);INSERT INTO `order_items` VALUES (10282, 30, 20.70, 6, 0.00);INSERT INTO `order_items` VALUES (10282, 57, 15.60, 2, 0.00);INSERT INTO `order_items` VALUES (10283, 15, 12.40, 20, 0.00);INSERT INTO `order_items` VALUES (10283, 19, 7.30, 18, 0.00);INSERT INTO `order_items` VALUES (10283, 60, 27.20, 35, 0.00);INSERT INTO `order_items` VALUES (10283, 72, 27.80, 3, 0.00);INSERT INTO `order_items` VALUES (10284, 27, 35.10, 15, 0.25);INSERT INTO `order_items` VALUES (10284, 44, 15.50, 21, 0.00);INSERT INTO `order_items` VALUES (10284, 60, 27.20, 20, 0.25);INSERT INTO `order_items` VALUES (10284, 67, 11.20, 5, 0.25);INSERT INTO `order_items` VALUES (10285, 1, 14.40, 45, 0.20);INSERT INTO `order_items` VALUES (10285, 40, 14.70, 40, 0.20);INSERT INTO `order_items` VALUES (10285, 53, 26.20, 36, 0.20);INSERT INTO `order_items` VALUES (10286, 35, 14.40, 100, 0.00);INSERT INTO `order_items` VALUES (10286, 62, 39.40, 40, 0.00);INSERT INTO `order_items` VALUES (10287, 16, 13.90, 40, 0.15);INSERT INTO `order_items` VALUES (10287, 34, 11.20, 20, 0.00);INSERT INTO `order_items` VALUES (10287, 46, 9.60, 15, 0.15);INSERT INTO `order_items` VALUES (10288, 54, 5.90, 10, 0.10);INSERT INTO `order_items` VALUES (10288, 68, 10.00, 3, 0.10);INSERT INTO `order_items` VALUES (10289, 3, 8.00, 30, 0.00);INSERT INTO `order_items` VALUES (10289, 64, 26.60, 9, 0.00);INSERT INTO `order_items` VALUES (10290, 5, 17.00, 20, 0.00);INSERT INTO `order_items` VALUES (10290, 29, 99.00, 15, 0.00);INSERT INTO `order_items` VALUES (10290, 49, 16.00, 15, 0.00);INSERT INTO `order_items` VALUES (10290, 77, 10.40, 10, 0.00);INSERT INTO `order_items` VALUES (10291, 13, 4.80, 20, 0.10);INSERT INTO `order_items` VALUES (10291, 44, 15.50, 24, 0.10);INSERT INTO `order_items` VALUES (10291, 51, 42.40, 2, 0.10);INSERT INTO `order_items` VALUES (10292, 20, 64.80, 20, 0.00);INSERT INTO `order_items` VALUES (10293, 18, 50.00, 12, 0.00);INSERT INTO `order_items` VALUES (10293, 24, 3.60, 10, 0.00);INSERT INTO `order_items` VALUES (10293, 63, 35.10, 5, 0.00);INSERT INTO `order_items` VALUES (10293, 75, 6.20, 6, 0.00);INSERT INTO `order_items` VALUES (10294, 1, 14.40, 18, 0.00);INSERT INTO `order_items` VALUES (10294, 17, 31.20, 15, 0.00);INSERT INTO `order_items` VALUES (10294, 43, 36.80, 15, 0.00);INSERT INTO `order_items` VALUES (10294, 60, 27.20, 21, 0.00);INSERT INTO `order_items` VALUES (10294, 75, 6.20, 6, 0.00);INSERT INTO `order_items` VALUES (10295, 56, 30.40, 4, 0.00);INSERT INTO `order_items` VALUES (10296, 11, 16.80, 12, 0.00);INSERT INTO `order_items` VALUES (10296, 16, 13.90, 30, 0.00);INSERT INTO `order_items` VALUES (10296, 69, 28.80, 15, 0.00);INSERT INTO `order_items` VALUES (10297, 39, 14.40, 60, 0.00);INSERT INTO `order_items` VALUES (10297, 72, 27.80, 20, 0.00);INSERT INTO `order_items` VALUES (10298, 2, 15.20, 40, 0.00);INSERT INTO `order_items` VALUES (10298, 36, 15.20, 40, 0.25);INSERT INTO `order_items` VALUES (10298, 59, 44.00, 30, 0.25);INSERT INTO `order_items` VALUES (10298, 62, 39.40, 15, 0.00);INSERT INTO `order_items` VALUES (10299, 19, 7.30, 15, 0.00);INSERT INTO `order_items` VALUES (10299, 70, 12.00, 20, 0.00);INSERT INTO `order_items` VALUES (10300, 66, 13.60, 30, 0.00);INSERT INTO `order_items` VALUES (10300, 68, 10.00, 20, 0.00);INSERT INTO `order_items` VALUES (10301, 40, 14.70, 10, 0.00);INSERT INTO `order_items` VALUES (10301, 56, 30.40, 20, 0.00);INSERT INTO `order_items` VALUES (10302, 17, 31.20, 40, 0.00);INSERT INTO `order_items` VALUES (10302, 28, 36.40, 28, 0.00);INSERT INTO `order_items` VALUES (10302, 43, 36.80, 12, 0.00);INSERT INTO `order_items` VALUES (10303, 40, 14.70, 40, 0.10);INSERT INTO `order_items` VALUES (10303, 65, 16.80, 30, 0.10);INSERT INTO `order_items` VALUES (10303, 68, 10.00, 15, 0.10);INSERT INTO `order_items` VALUES (10304, 49, 16.00, 30, 0.00);INSERT INTO `order_items` VALUES (10304, 59, 44.00, 10, 0.00);INSERT INTO `order_items` VALUES (10304, 71, 17.20, 2, 0.00);INSERT INTO `order_items` VALUES (10305, 18, 50.00, 25, 0.10);INSERT INTO `order_items` VALUES (10305, 29, 99.00, 25, 0.10);INSERT INTO `order_items` VALUES (10305, 39, 14.40, 30, 0.10);INSERT INTO `order_items` VALUES (10306, 30, 20.70, 10, 0.00);INSERT INTO `order_items` VALUES (10306, 53, 26.20, 10, 0.00);INSERT INTO `order_items` VALUES (10306, 54, 5.90, 5, 0.00);INSERT INTO `order_items` VALUES (10307, 62, 39.40, 10, 0.00);INSERT INTO `order_items` VALUES (10307, 68, 10.00, 3, 0.00);INSERT INTO `order_items` VALUES (10308, 69, 28.80, 1, 0.00);INSERT INTO `order_items` VALUES (10308, 70, 12.00, 5, 0.00);INSERT INTO `order_items` VALUES (10309, 4, 17.60, 20, 0.00);INSERT INTO `order_items` VALUES (10309, 6, 20.00, 30, 0.00);INSERT INTO `order_items` VALUES (10309, 42, 11.20, 2, 0.00);INSERT INTO `order_items` VALUES (10309, 43, 36.80, 20, 0.00);INSERT INTO `order_items` VALUES (10309, 71, 17.20, 3, 0.00);INSERT INTO `order_items` VALUES (10310, 16, 13.90, 10, 0.00);INSERT INTO `order_items` VALUES (10310, 62, 39.40, 5, 0.00);INSERT INTO `order_items` VALUES (10311, 42, 11.20, 6, 0.00);INSERT INTO `order_items` VALUES (10311, 69, 28.80, 7, 0.00);INSERT INTO `order_items` VALUES (10312, 28, 36.40, 4, 0.00);INSERT INTO `order_items` VALUES (10312, 43, 36.80, 24, 0.00);INSERT INTO `order_items` VALUES (10312, 53, 26.20, 20, 0.00);INSERT INTO `order_items` VALUES (10312, 75, 6.20, 10, 0.00);INSERT INTO `order_items` VALUES (10313, 36, 15.20, 12, 0.00);INSERT INTO `order_items` VALUES (10314, 32, 25.60, 40, 0.10);INSERT INTO `order_items` VALUES (10314, 58, 10.60, 30, 0.10);INSERT INTO `order_items` VALUES (10314, 62, 39.40, 25, 0.10);INSERT INTO `order_items` VALUES (10315, 34, 11.20, 14, 0.00);INSERT INTO `order_items` VALUES (10315, 70, 12.00, 30, 0.00);INSERT INTO `order_items` VALUES (10316, 41, 7.70, 10, 0.00);INSERT INTO `order_items` VALUES (10316, 62, 39.40, 70, 0.00);INSERT INTO `order_items` VALUES (10317, 1, 14.40, 20, 0.00);INSERT INTO `order_items` VALUES (10318, 41, 7.70, 20, 0.00);INSERT INTO `order_items` VALUES (10318, 76, 14.40, 6, 0.00);INSERT INTO `order_items` VALUES (10319, 17, 31.20, 8, 0.00);INSERT INTO `order_items` VALUES (10319, 28, 36.40, 14, 0.00);INSERT INTO `order_items` VALUES (10319, 76, 14.40, 30, 0.00);INSERT INTO `order_items` VALUES (10320, 71, 17.20, 30, 0.00);INSERT INTO `order_items` VALUES (10321, 35, 14.40, 10, 0.00);INSERT INTO `order_items` VALUES (10322, 52, 5.60, 20, 0.00);INSERT INTO `order_items` VALUES (10323, 15, 12.40, 5, 0.00);INSERT INTO `order_items` VALUES (10323, 25, 11.20, 4, 0.00);INSERT INTO `order_items` VALUES (10323, 39, 14.40, 4, 0.00);INSERT INTO `order_items` VALUES (10324, 16, 13.90, 21, 0.15);INSERT INTO `order_items` VALUES (10324, 35, 14.40, 70, 0.15);INSERT INTO `order_items` VALUES (10324, 46, 9.60, 30, 0.00);INSERT INTO `order_items` VALUES (10324, 59, 44.00, 40, 0.15);INSERT INTO `order_items` VALUES (10324, 63, 35.10, 80, 0.15);INSERT INTO `order_items` VALUES (10325, 6, 20.00, 6, 0.00);INSERT INTO `order_items` VALUES (10325, 13, 4.80, 12, 0.00);INSERT INTO `order_items` VALUES (10325, 14, 18.60, 9, 0.00);INSERT INTO `order_items` VALUES (10325, 31, 10.00, 4, 0.00);INSERT INTO `order_items` VALUES (10325, 72, 27.80, 40, 0.00);INSERT INTO `order_items` VALUES (10326, 4, 17.60, 24, 0.00);INSERT INTO `order_items` VALUES (10326, 57, 15.60, 16, 0.00);INSERT INTO `order_items` VALUES (10326, 75, 6.20, 50, 0.00);INSERT INTO `order_items` VALUES (10327, 2, 15.20, 25, 0.20);INSERT INTO `order_items` VALUES (10327, 11, 16.80, 50, 0.20);INSERT INTO `order_items` VALUES (10327, 30, 20.70, 35, 0.20);INSERT INTO `order_items` VALUES (10327, 58, 10.60, 30, 0.20);INSERT INTO `order_items` VALUES (10328, 59, 44.00, 9, 0.00);INSERT INTO `order_items` VALUES (10328, 65, 16.80, 40, 0.00);INSERT INTO `order_items` VALUES (10328, 68, 10.00, 10, 0.00);INSERT INTO `order_items` VALUES (10329, 19, 7.30, 10, 0.05);INSERT INTO `order_items` VALUES (10329, 30, 20.70, 8, 0.05);INSERT INTO `order_items` VALUES (10329, 38, 210.80, 20, 0.05);INSERT INTO `order_items` VALUES (10329, 56, 30.40, 12, 0.05);INSERT INTO `order_items` VALUES (10330, 26, 24.90, 50, 0.15);INSERT INTO `order_items` VALUES (10330, 72, 27.80, 25, 0.15);INSERT INTO `order_items` VALUES (10331, 54, 5.90, 15, 0.00);INSERT INTO `order_items` VALUES (10332, 18, 50.00, 40, 0.20);INSERT INTO `order_items` VALUES (10332, 42, 11.20, 10, 0.20);INSERT INTO `order_items` VALUES (10332, 47, 7.60, 16, 0.20);INSERT INTO `order_items` VALUES (10333, 14, 18.60, 10, 0.00);INSERT INTO `order_items` VALUES (10333, 21, 8.00, 10, 0.10);INSERT INTO `order_items` VALUES (10333, 71, 17.20, 40, 0.10);INSERT INTO `order_items` VALUES (10334, 52, 5.60, 8, 0.00);INSERT INTO `order_items` VALUES (10334, 68, 10.00, 10, 0.00);INSERT INTO `order_items` VALUES (10335, 2, 15.20, 7, 0.20);INSERT INTO `order_items` VALUES (10335, 31, 10.00, 25, 0.20);INSERT INTO `order_items` VALUES (10335, 32, 25.60, 6, 0.20);INSERT INTO `order_items` VALUES (10335, 51, 42.40, 48, 0.20);INSERT INTO `order_items` VALUES (10336, 4, 17.60, 18, 0.10);INSERT INTO `order_items` VALUES (10337, 23, 7.20, 40, 0.00);INSERT INTO `order_items` VALUES (10337, 26, 24.90, 24, 0.00);INSERT INTO `order_items` VALUES (10337, 36, 15.20, 20, 0.00);INSERT INTO `order_items` VALUES (10337, 37, 20.80, 28, 0.00);INSERT INTO `order_items` VALUES (10337, 72, 27.80, 25, 0.00);INSERT INTO `order_items` VALUES (10338, 17, 31.20, 20, 0.00);INSERT INTO `order_items` VALUES (10338, 30, 20.70, 15, 0.00);INSERT INTO `order_items` VALUES (10339, 4, 17.60, 10, 0.00);INSERT INTO `order_items` VALUES (10339, 17, 31.20, 70, 0.05);INSERT INTO `order_items` VALUES (10339, 62, 39.40, 28, 0.00);INSERT INTO `order_items` VALUES (10340, 18, 50.00, 20, 0.05);INSERT INTO `order_items` VALUES (10340, 41, 7.70, 12, 0.05);INSERT INTO `order_items` VALUES (10340, 43, 36.80, 40, 0.05);INSERT INTO `order_items` VALUES (10341, 33, 2.00, 8, 0.00);INSERT INTO `order_items` VALUES (10341, 59, 44.00, 9, 0.15);INSERT INTO `order_items` VALUES (10342, 2, 15.20, 24, 0.20);INSERT INTO `order_items` VALUES (10342, 31, 10.00, 56, 0.20);INSERT INTO `order_items` VALUES (10342, 36, 15.20, 40, 0.20);INSERT INTO `order_items` VALUES (10342, 55, 19.20, 40, 0.20);INSERT INTO `order_items` VALUES (10343, 64, 26.60, 50, 0.00);INSERT INTO `order_items` VALUES (10343, 68, 10.00, 4, 0.05);INSERT INTO `order_items` VALUES (10343, 76, 14.40, 15, 0.00);INSERT INTO `order_items` VALUES (10344, 4, 17.60, 35, 0.00);INSERT INTO `order_items` VALUES (10344, 8, 32.00, 70, 0.25);INSERT INTO `order_items` VALUES (10345, 8, 32.00, 70, 0.00);INSERT INTO `order_items` VALUES (10345, 19, 7.30, 80, 0.00);INSERT INTO `order_items` VALUES (10345, 42, 11.20, 9, 0.00);INSERT INTO `order_items` VALUES (10346, 17, 31.20, 36, 0.10);INSERT INTO `order_items` VALUES (10346, 56, 30.40, 20, 0.00);INSERT INTO `order_items` VALUES (10347, 25, 11.20, 10, 0.00);INSERT INTO `order_items` VALUES (10347, 39, 14.40, 50, 0.15);INSERT INTO `order_items` VALUES (10347, 40, 14.70, 4, 0.00);INSERT INTO `order_items` VALUES (10347, 75, 6.20, 6, 0.15);INSERT INTO `order_items` VALUES (10348, 1, 14.40, 15, 0.15);INSERT INTO `order_items` VALUES (10348, 23, 7.20, 25, 0.00);INSERT INTO `order_items` VALUES (10349, 54, 5.90, 24, 0.00);INSERT INTO `order_items` VALUES (10350, 50, 13.00, 15, 0.10);INSERT INTO `order_items` VALUES (10350, 69, 28.80, 18, 0.10);INSERT INTO `order_items` VALUES (10351, 38, 210.80, 20, 0.05);INSERT INTO `order_items` VALUES (10351, 41, 7.70, 13, 0.00);INSERT INTO `order_items` VALUES (10351, 44, 15.50, 77, 0.05);INSERT INTO `order_items` VALUES (10351, 65, 16.80, 10, 0.05);INSERT INTO `order_items` VALUES (10352, 24, 3.60, 10, 0.00);INSERT INTO `order_items` VALUES (10352, 54, 5.90, 20, 0.15);INSERT INTO `order_items` VALUES (10353, 11, 16.80, 12, 0.20);INSERT INTO `order_items` VALUES (10353, 38, 210.80, 50, 0.20);INSERT INTO `order_items` VALUES (10354, 1, 14.40, 12, 0.00);INSERT INTO `order_items` VALUES (10354, 29, 99.00, 4, 0.00);INSERT INTO `order_items` VALUES (10355, 24, 3.60, 25, 0.00);INSERT INTO `order_items` VALUES (10355, 57, 15.60, 25, 0.00);INSERT INTO `order_items` VALUES (10356, 31, 10.00, 30, 0.00);INSERT INTO `order_items` VALUES (10356, 55, 19.20, 12, 0.00);INSERT INTO `order_items` VALUES (10356, 69, 28.80, 20, 0.00);INSERT INTO `order_items` VALUES (10357, 10, 24.80, 30, 0.20);INSERT INTO `order_items` VALUES (10357, 26, 24.90, 16, 0.00);INSERT INTO `order_items` VALUES (10357, 60, 27.20, 8, 0.20);INSERT INTO `order_items` VALUES (10358, 24, 3.60, 10, 0.05);INSERT INTO `order_items` VALUES (10358, 34, 11.20, 10, 0.05);INSERT INTO `order_items` VALUES (10358, 36, 15.20, 20, 0.05);INSERT INTO `order_items` VALUES (10359, 16, 13.90, 56, 0.05);INSERT INTO `order_items` VALUES (10359, 31, 10.00, 70, 0.05);INSERT INTO `order_items` VALUES (10359, 60, 27.20, 80, 0.05);INSERT INTO `order_items` VALUES (10360, 28, 36.40, 30, 0.00);INSERT INTO `order_items` VALUES (10360, 29, 99.00, 35, 0.00);INSERT INTO `order_items` VALUES (10360, 38, 210.80, 10, 0.00);INSERT INTO `order_items` VALUES (10360, 49, 16.00, 35, 0.00);INSERT INTO `order_items` VALUES (10360, 54, 5.90, 28, 0.00);INSERT INTO `order_items` VALUES (10361, 39, 14.40, 54, 0.10);INSERT INTO `order_items` VALUES (10361, 60, 27.20, 55, 0.10);INSERT INTO `order_items` VALUES (10362, 25, 11.20, 50, 0.00);INSERT INTO `order_items` VALUES (10362, 51, 42.40, 20, 0.00);INSERT INTO `order_items` VALUES (10362, 54, 5.90, 24, 0.00);INSERT INTO `order_items` VALUES (10363, 31, 10.00, 20, 0.00);INSERT INTO `order_items` VALUES (10363, 75, 6.20, 12, 0.00);INSERT INTO `order_items` VALUES (10363, 76, 14.40, 12, 0.00);INSERT INTO `order_items` VALUES (10364, 69, 28.80, 30, 0.00);INSERT INTO `order_items` VALUES (10364, 71, 17.20, 5, 0.00);INSERT INTO `order_items` VALUES (10365, 11, 16.80, 24, 0.00);INSERT INTO `order_items` VALUES (10366, 65, 16.80, 5, 0.00);INSERT INTO `order_items` VALUES (10366, 77, 10.40, 5, 0.00);INSERT INTO `order_items` VALUES (10367, 34, 11.20, 36, 0.00);INSERT INTO `order_items` VALUES (10367, 54, 5.90, 18, 0.00);INSERT INTO `order_items` VALUES (10367, 65, 16.80, 15, 0.00);INSERT INTO `order_items` VALUES (10367, 77, 10.40, 7, 0.00);INSERT INTO `order_items` VALUES (10368, 21, 8.00, 5, 0.10);INSERT INTO `order_items` VALUES (10368, 28, 36.40, 13, 0.10);INSERT INTO `order_items` VALUES (10368, 57, 15.60, 25, 0.00);INSERT INTO `order_items` VALUES (10368, 64, 26.60, 35, 0.10);INSERT INTO `order_items` VALUES (10369, 29, 99.00, 20, 0.00);INSERT INTO `order_items` VALUES (10369, 56, 30.40, 18, 0.25);INSERT INTO `order_items` VALUES (10370, 1, 14.40, 15, 0.15);INSERT INTO `order_items` VALUES (10370, 64, 26.60, 30, 0.00);INSERT INTO `order_items` VALUES (10370, 74, 8.00, 20, 0.15);INSERT INTO `order_items` VALUES (10371, 36, 15.20, 6, 0.20);INSERT INTO `order_items` VALUES (10372, 20, 64.80, 12, 0.25);INSERT INTO `order_items` VALUES (10372, 38, 210.80, 40, 0.25);INSERT INTO `order_items` VALUES (10372, 60, 27.20, 70, 0.25);INSERT INTO `order_items` VALUES (10372, 72, 27.80, 42, 0.25);INSERT INTO `order_items` VALUES (10373, 58, 10.60, 80, 0.20);INSERT INTO `order_items` VALUES (10373, 71, 17.20, 50, 0.20);INSERT INTO `order_items` VALUES (10374, 31, 10.00, 30, 0.00);INSERT INTO `order_items` VALUES (10374, 58, 10.60, 15, 0.00);INSERT INTO `order_items` VALUES (10375, 14, 18.60, 15, 0.00);INSERT INTO `order_items` VALUES (10375, 54, 5.90, 10, 0.00);INSERT INTO `order_items` VALUES (10376, 31, 10.00, 42, 0.05);INSERT INTO `order_items` VALUES (10377, 28, 36.40, 20, 0.15);INSERT INTO `order_items` VALUES (10377, 39, 14.40, 20, 0.15);INSERT INTO `order_items` VALUES (10378, 71, 17.20, 6, 0.00);INSERT INTO `order_items` VALUES (10379, 41, 7.70, 8, 0.10);INSERT INTO `order_items` VALUES (10379, 63, 35.10, 16, 0.10);INSERT INTO `order_items` VALUES (10379, 65, 16.80, 20, 0.10);INSERT INTO `order_items` VALUES (10380, 30, 20.70, 18, 0.10);INSERT INTO `order_items` VALUES (10380, 53, 26.20, 20, 0.10);INSERT INTO `order_items` VALUES (10380, 60, 27.20, 6, 0.10);INSERT INTO `order_items` VALUES (10380, 70, 12.00, 30, 0.00);INSERT INTO `order_items` VALUES (10381, 74, 8.00, 14, 0.00);INSERT INTO `order_items` VALUES (10382, 5, 17.00, 32, 0.00);INSERT INTO `order_items` VALUES (10382, 18, 50.00, 9, 0.00);INSERT INTO `order_items` VALUES (10382, 29, 99.00, 14, 0.00);INSERT INTO `order_items` VALUES (10382, 33, 2.00, 60, 0.00);INSERT INTO `order_items` VALUES (10382, 74, 8.00, 50, 0.00);INSERT INTO `order_items` VALUES (10383, 13, 4.80, 20, 0.00);INSERT INTO `order_items` VALUES (10383, 50, 13.00, 15, 0.00);INSERT INTO `order_items` VALUES (10383, 56, 30.40, 20, 0.00);INSERT INTO `order_items` VALUES (10384, 20, 64.80, 28, 0.00);INSERT INTO `order_items` VALUES (10384, 60, 27.20, 15, 0.00);INSERT INTO `order_items` VALUES (10385, 7, 24.00, 10, 0.20);INSERT INTO `order_items` VALUES (10385, 60, 27.20, 20, 0.20);INSERT INTO `order_items` VALUES (10385, 68, 10.00, 8, 0.20);INSERT INTO `order_items` VALUES (10386, 24, 3.60, 15, 0.00);INSERT INTO `order_items` VALUES (10386, 34, 11.20, 10, 0.00);INSERT INTO `order_items` VALUES (10387, 24, 3.60, 15, 0.00);INSERT INTO `order_items` VALUES (10387, 28, 36.40, 6, 0.00);INSERT INTO `order_items` VALUES (10387, 59, 44.00, 12, 0.00);INSERT INTO `order_items` VALUES (10387, 71, 17.20, 15, 0.00);INSERT INTO `order_items` VALUES (10388, 45, 7.60, 15, 0.20);INSERT INTO `order_items` VALUES (10388, 52, 5.60, 20, 0.20);INSERT INTO `order_items` VALUES (10388, 53, 26.20, 40, 0.00);INSERT INTO `order_items` VALUES (10389, 10, 24.80, 16, 0.00);INSERT INTO `order_items` VALUES (10389, 55, 19.20, 15, 0.00);INSERT INTO `order_items` VALUES (10389, 62, 39.40, 20, 0.00);INSERT INTO `order_items` VALUES (10389, 70, 12.00, 30, 0.00);INSERT INTO `order_items` VALUES (10390, 31, 10.00, 60, 0.10);INSERT INTO `order_items` VALUES (10390, 35, 14.40, 40, 0.10);INSERT INTO `order_items` VALUES (10390, 46, 9.60, 45, 0.00);INSERT INTO `order_items` VALUES (10390, 72, 27.80, 24, 0.10);INSERT INTO `order_items` VALUES (10391, 13, 4.80, 18, 0.00);INSERT INTO `order_items` VALUES (10392, 69, 28.80, 50, 0.00);INSERT INTO `order_items` VALUES (10393, 2, 15.20, 25, 0.25);INSERT INTO `order_items` VALUES (10393, 14, 18.60, 42, 0.25);INSERT INTO `order_items` VALUES (10393, 25, 11.20, 7, 0.25);INSERT INTO `order_items` VALUES (10393, 26, 24.90, 70, 0.25);INSERT INTO `order_items` VALUES (10393, 31, 10.00, 32, 0.00);INSERT INTO `order_items` VALUES (10394, 13, 4.80, 10, 0.00);INSERT INTO `order_items` VALUES (10394, 62, 39.40, 10, 0.00);INSERT INTO `order_items` VALUES (10395, 46, 9.60, 28, 0.10);INSERT INTO `order_items` VALUES (10395, 53, 26.20, 70, 0.10);INSERT INTO `order_items` VALUES (10395, 69, 28.80, 8, 0.00);INSERT INTO `order_items` VALUES (10396, 23, 7.20, 40, 0.00);INSERT INTO `order_items` VALUES (10396, 71, 17.20, 60, 0.00);INSERT INTO `order_items` VALUES (10396, 72, 27.80, 21, 0.00);INSERT INTO `order_items` VALUES (10397, 21, 8.00, 10, 0.15);INSERT INTO `order_items` VALUES (10397, 51, 42.40, 18, 0.15);INSERT INTO `order_items` VALUES (10398, 35, 14.40, 30, 0.00);INSERT INTO `order_items` VALUES (10398, 55, 19.20, 120, 0.10);INSERT INTO `order_items` VALUES (10399, 68, 10.00, 60, 0.00);INSERT INTO `order_items` VALUES (10399, 71, 17.20, 30, 0.00);INSERT INTO `order_items` VALUES (10399, 76, 14.40, 35, 0.00);INSERT INTO `order_items` VALUES (10399, 77, 10.40, 14, 0.00);INSERT INTO `order_items` VALUES (10400, 29, 99.00, 21, 0.00);INSERT INTO `order_items` VALUES (10400, 35, 14.40, 35, 0.00);INSERT INTO `order_items` VALUES (10400, 49, 16.00, 30, 0.00);INSERT INTO `order_items` VALUES (10401, 30, 20.70, 18, 0.00);INSERT INTO `order_items` VALUES (10401, 56, 30.40, 70, 0.00);INSERT INTO `order_items` VALUES (10401, 65, 16.80, 20, 0.00);INSERT INTO `order_items` VALUES (10401, 71, 17.20, 60, 0.00);INSERT INTO `order_items` VALUES (10402, 23, 7.20, 60, 0.00);INSERT INTO `order_items` VALUES (10402, 63, 35.10, 65, 0.00);INSERT INTO `order_items` VALUES (10403, 16, 13.90, 21, 0.15);INSERT INTO `order_items` VALUES (10403, 48, 10.20, 70, 0.15);INSERT INTO `order_items` VALUES (10404, 26, 24.90, 30, 0.05);INSERT INTO `order_items` VALUES (10404, 42, 11.20, 40, 0.05);INSERT INTO `order_items` VALUES (10404, 49, 16.00, 30, 0.05);INSERT INTO `order_items` VALUES (10405, 3, 8.00, 50, 0.00);INSERT INTO `order_items` VALUES (10406, 1, 14.40, 10, 0.00);INSERT INTO `order_items` VALUES (10406, 21, 8.00, 30, 0.10);INSERT INTO `order_items` VALUES (10406, 28, 36.40, 42, 0.10);INSERT INTO `order_items` VALUES (10406, 36, 15.20, 5, 0.10);INSERT INTO `order_items` VALUES (10406, 40, 14.70, 2, 0.10);INSERT INTO `order_items` VALUES (10407, 11, 16.80, 30, 0.00);INSERT INTO `order_items` VALUES (10407, 69, 28.80, 15, 0.00);INSERT INTO `order_items` VALUES (10407, 71, 17.20, 15, 0.00);INSERT INTO `order_items` VALUES (10408, 37, 20.80, 10, 0.00);INSERT INTO `order_items` VALUES (10408, 54, 5.90, 6, 0.00);INSERT INTO `order_items` VALUES (10408, 62, 39.40, 35, 0.00);INSERT INTO `order_items` VALUES (10409, 14, 18.60, 12, 0.00);INSERT INTO `order_items` VALUES (10409, 21, 8.00, 12, 0.00);INSERT INTO `order_items` VALUES (10410, 33, 2.00, 49, 0.00);INSERT INTO `order_items` VALUES (10410, 59, 44.00, 16, 0.00);INSERT INTO `order_items` VALUES (10411, 41, 7.70, 25, 0.20);INSERT INTO `order_items` VALUES (10411, 44, 15.50, 40, 0.20);INSERT INTO `order_items` VALUES (10411, 59, 44.00, 9, 0.20);INSERT INTO `order_items` VALUES (10412, 14, 18.60, 20, 0.10);INSERT INTO `order_items` VALUES (10413, 1, 14.40, 24, 0.00);INSERT INTO `order_items` VALUES (10413, 62, 39.40, 40, 0.00);INSERT INTO `order_items` VALUES (10413, 76, 14.40, 14, 0.00);INSERT INTO `order_items` VALUES (10414, 19, 7.30, 18, 0.05);INSERT INTO `order_items` VALUES (10414, 33, 2.00, 50, 0.00);INSERT INTO `order_items` VALUES (10415, 17, 31.20, 2, 0.00);INSERT INTO `order_items` VALUES (10415, 33, 2.00, 20, 0.00);INSERT INTO `order_items` VALUES (10416, 19, 7.30, 20, 0.00);INSERT INTO `order_items` VALUES (10416, 53, 26.20, 10, 0.00);INSERT INTO `order_items` VALUES (10416, 57, 15.60, 20, 0.00);INSERT INTO `order_items` VALUES (10417, 38, 210.80, 50, 0.00);INSERT INTO `order_items` VALUES (10417, 46, 9.60, 2, 0.25);INSERT INTO `order_items` VALUES (10417, 68, 10.00, 36, 0.25);INSERT INTO `order_items` VALUES (10417, 77, 10.40, 35, 0.00);INSERT INTO `order_items` VALUES (10418, 2, 15.20, 60, 0.00);INSERT INTO `order_items` VALUES (10418, 47, 7.60, 55, 0.00);INSERT INTO `order_items` VALUES (10418, 61, 22.80, 16, 0.00);INSERT INTO `order_items` VALUES (10418, 74, 8.00, 15, 0.00);INSERT INTO `order_items` VALUES (10419, 60, 27.20, 60, 0.05);INSERT INTO `order_items` VALUES (10419, 69, 28.80, 20, 0.05);INSERT INTO `order_items` VALUES (10420, 9, 77.60, 20, 0.10);INSERT INTO `order_items` VALUES (10420, 13, 4.80, 2, 0.10);INSERT INTO `order_items` VALUES (10420, 70, 12.00, 8, 0.10);INSERT INTO `order_items` VALUES (10420, 73, 12.00, 20, 0.10);INSERT INTO `order_items` VALUES (10421, 19, 7.30, 4, 0.15);INSERT INTO `order_items` VALUES (10421, 26, 24.90, 30, 0.00);INSERT INTO `order_items` VALUES (10421, 53, 26.20, 15, 0.15);INSERT INTO `order_items` VALUES (10421, 77, 10.40, 10, 0.15);INSERT INTO `order_items` VALUES (10422, 26, 24.90, 2, 0.00);INSERT INTO `order_items` VALUES (10423, 31, 10.00, 14, 0.00);INSERT INTO `order_items` VALUES (10423, 59, 44.00, 20, 0.00);INSERT INTO `order_items` VALUES (10424, 35, 14.40, 60, 0.20);INSERT INTO `order_items` VALUES (10424, 38, 210.80, 49, 0.20);INSERT INTO `order_items` VALUES (10424, 68, 10.00, 30, 0.20);INSERT INTO `order_items` VALUES (10425, 55, 19.20, 10, 0.25);INSERT INTO `order_items` VALUES (10425, 76, 14.40, 20, 0.25);INSERT INTO `order_items` VALUES (10426, 56, 30.40, 5, 0.00);INSERT INTO `order_items` VALUES (10426, 64, 26.60, 7, 0.00);INSERT INTO `order_items` VALUES (10427, 14, 18.60, 35, 0.00);INSERT INTO `order_items` VALUES (10428, 46, 9.60, 20, 0.00);INSERT INTO `order_items` VALUES (10429, 50, 13.00, 40, 0.00);INSERT INTO `order_items` VALUES (10429, 63, 35.10, 35, 0.25);INSERT INTO `order_items` VALUES (10430, 17, 31.20, 45, 0.20);INSERT INTO `order_items` VALUES (10430, 21, 8.00, 50, 0.00);INSERT INTO `order_items` VALUES (10430, 56, 30.40, 30, 0.00);INSERT INTO `order_items` VALUES (10430, 59, 44.00, 70, 0.20);INSERT INTO `order_items` VALUES (10431, 17, 31.20, 50, 0.25);INSERT INTO `order_items` VALUES (10431, 40, 14.70, 50, 0.25);INSERT INTO `order_items` VALUES (10431, 47, 7.60, 30, 0.25);INSERT INTO `order_items` VALUES (10432, 26, 24.90, 10, 0.00);INSERT INTO `order_items` VALUES (10432, 54, 5.90, 40, 0.00);INSERT INTO `order_items` VALUES (10433, 56, 30.40, 28, 0.00);INSERT INTO `order_items` VALUES (10434, 11, 16.80, 6, 0.00);INSERT INTO `order_items` VALUES (10434, 76, 14.40, 18, 0.15);INSERT INTO `order_items` VALUES (10435, 2, 15.20, 10, 0.00);INSERT INTO `order_items` VALUES (10435, 22, 16.80, 12, 0.00);INSERT INTO `order_items` VALUES (10435, 72, 27.80, 10, 0.00);INSERT INTO `order_items` VALUES (10436, 46, 9.60, 5, 0.00);INSERT INTO `order_items` VALUES (10436, 56, 30.40, 40, 0.10);INSERT INTO `order_items` VALUES (10436, 64, 26.60, 30, 0.10);INSERT INTO `order_items` VALUES (10436, 75, 6.20, 24, 0.10);INSERT INTO `order_items` VALUES (10437, 53, 26.20, 15, 0.00);INSERT INTO `order_items` VALUES (10438, 19, 7.30, 15, 0.20);INSERT INTO `order_items` VALUES (10438, 34, 11.20, 20, 0.20);INSERT INTO `order_items` VALUES (10438, 57, 15.60, 15, 0.20);INSERT INTO `order_items` VALUES (10439, 12, 30.40, 15, 0.00);INSERT INTO `order_items` VALUES (10439, 16, 13.90, 16, 0.00);INSERT INTO `order_items` VALUES (10439, 64, 26.60, 6, 0.00);INSERT INTO `order_items` VALUES (10439, 74, 8.00, 30, 0.00);INSERT INTO `order_items` VALUES (10440, 2, 15.20, 45, 0.15);INSERT INTO `order_items` VALUES (10440, 16, 13.90, 49, 0.15);INSERT INTO `order_items` VALUES (10440, 29, 99.00, 24, 0.15);INSERT INTO `order_items` VALUES (10440, 61, 22.80, 90, 0.15);INSERT INTO `order_items` VALUES (10441, 27, 35.10, 50, 0.00);INSERT INTO `order_items` VALUES (10442, 11, 16.80, 30, 0.00);INSERT INTO `order_items` VALUES (10442, 54, 5.90, 80, 0.00);INSERT INTO `order_items` VALUES (10442, 66, 13.60, 60, 0.00);INSERT INTO `order_items` VALUES (10443, 11, 16.80, 6, 0.20);INSERT INTO `order_items` VALUES (10443, 28, 36.40, 12, 0.00);INSERT INTO `order_items` VALUES (10444, 17, 31.20, 10, 0.00);INSERT INTO `order_items` VALUES (10444, 26, 24.90, 15, 0.00);INSERT INTO `order_items` VALUES (10444, 35, 14.40, 8, 0.00);INSERT INTO `order_items` VALUES (10444, 41, 7.70, 30, 0.00);INSERT INTO `order_items` VALUES (10445, 39, 14.40, 6, 0.00);INSERT INTO `order_items` VALUES (10445, 54, 5.90, 15, 0.00);INSERT INTO `order_items` VALUES (10446, 19, 7.30, 12, 0.10);INSERT INTO `order_items` VALUES (10446, 24, 3.60, 20, 0.10);INSERT INTO `order_items` VALUES (10446, 31, 10.00, 3, 0.10);INSERT INTO `order_items` VALUES (10446, 52, 5.60, 15, 0.10);INSERT INTO `order_items` VALUES (10447, 19, 7.30, 40, 0.00);INSERT INTO `order_items` VALUES (10447, 65, 16.80, 35, 0.00);INSERT INTO `order_items` VALUES (10447, 71, 17.20, 2, 0.00);INSERT INTO `order_items` VALUES (10448, 26, 24.90, 6, 0.00);INSERT INTO `order_items` VALUES (10448, 40, 14.70, 20, 0.00);INSERT INTO `order_items` VALUES (10449, 10, 24.80, 14, 0.00);INSERT INTO `order_items` VALUES (10449, 52, 5.60, 20, 0.00);INSERT INTO `order_items` VALUES (10449, 62, 39.40, 35, 0.00);INSERT INTO `order_items` VALUES (10450, 10, 24.80, 20, 0.20);INSERT INTO `order_items` VALUES (10450, 54, 5.90, 6, 0.20);INSERT INTO `order_items` VALUES (10451, 55, 19.20, 120, 0.10);INSERT INTO `order_items` VALUES (10451, 64, 26.60, 35, 0.10);INSERT INTO `order_items` VALUES (10451, 65, 16.80, 28, 0.10);INSERT INTO `order_items` VALUES (10451, 77, 10.40, 55, 0.10);INSERT INTO `order_items` VALUES (10452, 28, 36.40, 15, 0.00);INSERT INTO `order_items` VALUES (10452, 44, 15.50, 100, 0.05);INSERT INTO `order_items` VALUES (10453, 48, 10.20, 15, 0.10);INSERT INTO `order_items` VALUES (10453, 70, 12.00, 25, 0.10);INSERT INTO `order_items` VALUES (10454, 16, 13.90, 20, 0.20);INSERT INTO `order_items` VALUES (10454, 33, 2.00, 20, 0.20);INSERT INTO `order_items` VALUES (10454, 46, 9.60, 10, 0.20);INSERT INTO `order_items` VALUES (10455, 39, 14.40, 20, 0.00);INSERT INTO `order_items` VALUES (10455, 53, 26.20, 50, 0.00);INSERT INTO `order_items` VALUES (10455, 61, 22.80, 25, 0.00);INSERT INTO `order_items` VALUES (10455, 71, 17.20, 30, 0.00);INSERT INTO `order_items` VALUES (10456, 21, 8.00, 40, 0.15);INSERT INTO `order_items` VALUES (10456, 49, 16.00, 21, 0.15);INSERT INTO `order_items` VALUES (10457, 59, 44.00, 36, 0.00);INSERT INTO `order_items` VALUES (10458, 26, 24.90, 30, 0.00);INSERT INTO `order_items` VALUES (10458, 28, 36.40, 30, 0.00);INSERT INTO `order_items` VALUES (10458, 43, 36.80, 20, 0.00);INSERT INTO `order_items` VALUES (10458, 56, 30.40, 15, 0.00);INSERT INTO `order_items` VALUES (10458, 71, 17.20, 50, 0.00);INSERT INTO `order_items` VALUES (10459, 7, 24.00, 16, 0.05);INSERT INTO `order_items` VALUES (10459, 46, 9.60, 20, 0.05);INSERT INTO `order_items` VALUES (10459, 72, 27.80, 40, 0.00);INSERT INTO `order_items` VALUES (10460, 68, 10.00, 21, 0.25);INSERT INTO `order_items` VALUES (10460, 75, 6.20, 4, 0.25);INSERT INTO `order_items` VALUES (10461, 21, 8.00, 40, 0.25);INSERT INTO `order_items` VALUES (10461, 30, 20.70, 28, 0.25);INSERT INTO `order_items` VALUES (10461, 55, 19.20, 60, 0.25);INSERT INTO `order_items` VALUES (10462, 13, 4.80, 1, 0.00);INSERT INTO `order_items` VALUES (10462, 23, 7.20, 21, 0.00);INSERT INTO `order_items` VALUES (10463, 19, 7.30, 21, 0.00);INSERT INTO `order_items` VALUES (10463, 42, 11.20, 50, 0.00);INSERT INTO `order_items` VALUES (10464, 4, 17.60, 16, 0.20);INSERT INTO `order_items` VALUES (10464, 43, 36.80, 3, 0.00);INSERT INTO `order_items` VALUES (10464, 56, 30.40, 30, 0.20);INSERT INTO `order_items` VALUES (10464, 60, 27.20, 20, 0.00);INSERT INTO `order_items` VALUES (10465, 24, 3.60, 25, 0.00);INSERT INTO `order_items` VALUES (10465, 29, 99.00, 18, 0.10);INSERT INTO `order_items` VALUES (10465, 40, 14.70, 20, 0.00);INSERT INTO `order_items` VALUES (10465, 45, 7.60, 30, 0.10);INSERT INTO `order_items` VALUES (10465, 50, 13.00, 25, 0.00);INSERT INTO `order_items` VALUES (10466, 11, 16.80, 10, 0.00);INSERT INTO `order_items` VALUES (10466, 46, 9.60, 5, 0.00);INSERT INTO `order_items` VALUES (10467, 24, 3.60, 28, 0.00);INSERT INTO `order_items` VALUES (10467, 25, 11.20, 12, 0.00);INSERT INTO `order_items` VALUES (10468, 30, 20.70, 8, 0.00);INSERT INTO `order_items` VALUES (10468, 43, 36.80, 15, 0.00);INSERT INTO `order_items` VALUES (10469, 2, 15.20, 40, 0.15);INSERT INTO `order_items` VALUES (10469, 16, 13.90, 35, 0.15);INSERT INTO `order_items` VALUES (10469, 44, 15.50, 2, 0.15);INSERT INTO `order_items` VALUES (10470, 18, 50.00, 30, 0.00);INSERT INTO `order_items` VALUES (10470, 23, 7.20, 15, 0.00);INSERT INTO `order_items` VALUES (10470, 64, 26.60, 8, 0.00);INSERT INTO `order_items` VALUES (10471, 7, 24.00, 30, 0.00);INSERT INTO `order_items` VALUES (10471, 56, 30.40, 20, 0.00);INSERT INTO `order_items` VALUES (10472, 24, 3.60, 80, 0.05);INSERT INTO `order_items` VALUES (10472, 51, 42.40, 18, 0.00);INSERT INTO `order_items` VALUES (10473, 33, 2.00, 12, 0.00);INSERT INTO `order_items` VALUES (10473, 71, 17.20, 12, 0.00);INSERT INTO `order_items` VALUES (10474, 14, 18.60, 12, 0.00);INSERT INTO `order_items` VALUES (10474, 28, 36.40, 18, 0.00);INSERT INTO `order_items` VALUES (10474, 40, 14.70, 21, 0.00);INSERT INTO `order_items` VALUES (10474, 75, 6.20, 10, 0.00);INSERT INTO `order_items` VALUES (10475, 31, 10.00, 35, 0.15);INSERT INTO `order_items` VALUES (10475, 66, 13.60, 60, 0.15);INSERT INTO `order_items` VALUES (10475, 76, 14.40, 42, 0.15);INSERT INTO `order_items` VALUES (10476, 55, 19.20, 2, 0.05);INSERT INTO `order_items` VALUES (10476, 70, 12.00, 12, 0.00);INSERT INTO `order_items` VALUES (10477, 1, 14.40, 15, 0.00);INSERT INTO `order_items` VALUES (10477, 21, 8.00, 21, 0.25);INSERT INTO `order_items` VALUES (10477, 39, 14.40, 20, 0.25);INSERT INTO `order_items` VALUES (10478, 10, 24.80, 20, 0.05);INSERT INTO `order_items` VALUES (10479, 38, 210.80, 30, 0.00);INSERT INTO `order_items` VALUES (10479, 53, 26.20, 28, 0.00);INSERT INTO `order_items` VALUES (10479, 59, 44.00, 60, 0.00);INSERT INTO `order_items` VALUES (10479, 64, 26.60, 30, 0.00);INSERT INTO `order_items` VALUES (10480, 47, 7.60, 30, 0.00);INSERT INTO `order_items` VALUES (10480, 59, 44.00, 12, 0.00);INSERT INTO `order_items` VALUES (10481, 49, 16.00, 24, 0.00);INSERT INTO `order_items` VALUES (10481, 60, 27.20, 40, 0.00);INSERT INTO `order_items` VALUES (10482, 40, 14.70, 10, 0.00);INSERT INTO `order_items` VALUES (10483, 34, 11.20, 35, 0.05);INSERT INTO `order_items` VALUES (10483, 77, 10.40, 30, 0.05);INSERT INTO `order_items` VALUES (10484, 21, 8.00, 14, 0.00);INSERT INTO `order_items` VALUES (10484, 40, 14.70, 10, 0.00);INSERT INTO `order_items` VALUES (10484, 51, 42.40, 3, 0.00);INSERT INTO `order_items` VALUES (10485, 2, 15.20, 20, 0.10);INSERT INTO `order_items` VALUES (10485, 3, 8.00, 20, 0.10);INSERT INTO `order_items` VALUES (10485, 55, 19.20, 30, 0.10);INSERT INTO `order_items` VALUES (10485, 70, 12.00, 60, 0.10);INSERT INTO `order_items` VALUES (10486, 11, 16.80, 5, 0.00);INSERT INTO `order_items` VALUES (10486, 51, 42.40, 25, 0.00);INSERT INTO `order_items` VALUES (10486, 74, 8.00, 16, 0.00);INSERT INTO `order_items` VALUES (10487, 19, 7.30, 5, 0.00);INSERT INTO `order_items` VALUES (10487, 26, 24.90, 30, 0.00);INSERT INTO `order_items` VALUES (10487, 54, 5.90, 24, 0.25);INSERT INTO `order_items` VALUES (10488, 59, 44.00, 30, 0.00);INSERT INTO `order_items` VALUES (10488, 73, 12.00, 20, 0.20);INSERT INTO `order_items` VALUES (10489, 11, 16.80, 15, 0.25);INSERT INTO `order_items` VALUES (10489, 16, 13.90, 18, 0.00);INSERT INTO `order_items` VALUES (10490, 59, 44.00, 60, 0.00);INSERT INTO `order_items` VALUES (10490, 68, 10.00, 30, 0.00);INSERT INTO `order_items` VALUES (10490, 75, 6.20, 36, 0.00);INSERT INTO `order_items` VALUES (10491, 44, 15.50, 15, 0.15);INSERT INTO `order_items` VALUES (10491, 77, 10.40, 7, 0.15);INSERT INTO `order_items` VALUES (10492, 25, 11.20, 60, 0.05);INSERT INTO `order_items` VALUES (10492, 42, 11.20, 20, 0.05);INSERT INTO `order_items` VALUES (10493, 65, 16.80, 15, 0.10);INSERT INTO `order_items` VALUES (10493, 66, 13.60, 10, 0.10);INSERT INTO `order_items` VALUES (10493, 69, 28.80, 10, 0.10);INSERT INTO `order_items` VALUES (10494, 56, 30.40, 30, 0.00);INSERT INTO `order_items` VALUES (10495, 23, 7.20, 10, 0.00);INSERT INTO `order_items` VALUES (10495, 41, 7.70, 20, 0.00);INSERT INTO `order_items` VALUES (10495, 77, 10.40, 5, 0.00);INSERT INTO `order_items` VALUES (10496, 31, 10.00, 20, 0.05);INSERT INTO `order_items` VALUES (10497, 56, 30.40, 14, 0.00);INSERT INTO `order_items` VALUES (10497, 72, 27.80, 25, 0.00);INSERT INTO `order_items` VALUES (10497, 77, 10.40, 25, 0.00);INSERT INTO `order_items` VALUES (10498, 24, 4.50, 14, 0.00);INSERT INTO `order_items` VALUES (10498, 40, 18.40, 5, 0.00);INSERT INTO `order_items` VALUES (10498, 42, 14.00, 30, 0.00);INSERT INTO `order_items` VALUES (10499, 28, 45.60, 20, 0.00);INSERT INTO `order_items` VALUES (10499, 49, 20.00, 25, 0.00);INSERT INTO `order_items` VALUES (10500, 15, 15.50, 12, 0.05);INSERT INTO `order_items` VALUES (10500, 28, 45.60, 8, 0.05);INSERT INTO `order_items` VALUES (10501, 54, 7.45, 20, 0.00);INSERT INTO `order_items` VALUES (10502, 45, 9.50, 21, 0.00);INSERT INTO `order_items` VALUES (10502, 53, 32.80, 6, 0.00);INSERT INTO `order_items` VALUES (10502, 67, 14.00, 30, 0.00);INSERT INTO `order_items` VALUES (10503, 14, 23.25, 70, 0.00);INSERT INTO `order_items` VALUES (10503, 65, 21.05, 20, 0.00);INSERT INTO `order_items` VALUES (10504, 2, 19.00, 12, 0.00);INSERT INTO `order_items` VALUES (10504, 21, 10.00, 12, 0.00);INSERT INTO `order_items` VALUES (10504, 53, 32.80, 10, 0.00);INSERT INTO `order_items` VALUES (10504, 61, 28.50, 25, 0.00);INSERT INTO `order_items` VALUES (10505, 62, 49.30, 3, 0.00);INSERT INTO `order_items` VALUES (10506, 25, 14.00, 18, 0.10);INSERT INTO `order_items` VALUES (10506, 70, 15.00, 14, 0.10);INSERT INTO `order_items` VALUES (10507, 43, 46.00, 15, 0.15);INSERT INTO `order_items` VALUES (10507, 48, 12.75, 15, 0.15);INSERT INTO `order_items` VALUES (10508, 13, 6.00, 10, 0.00);INSERT INTO `order_items` VALUES (10508, 39, 18.00, 10, 0.00);INSERT INTO `order_items` VALUES (10509, 28, 45.60, 3, 0.00);INSERT INTO `order_items` VALUES (10510, 29, 123.79, 36, 0.00);INSERT INTO `order_items` VALUES (10510, 75, 7.75, 36, 0.10);INSERT INTO `order_items` VALUES (10511, 4, 22.00, 50, 0.15);INSERT INTO `order_items` VALUES (10511, 7, 30.00, 50, 0.15);INSERT INTO `order_items` VALUES (10511, 8, 40.00, 10, 0.15);INSERT INTO `order_items` VALUES (10512, 24, 4.50, 10, 0.15);INSERT INTO `order_items` VALUES (10512, 46, 12.00, 9, 0.15);INSERT INTO `order_items` VALUES (10512, 47, 9.50, 6, 0.15);INSERT INTO `order_items` VALUES (10512, 60, 34.00, 12, 0.15);INSERT INTO `order_items` VALUES (10513, 21, 10.00, 40, 0.20);INSERT INTO `order_items` VALUES (10513, 32, 32.00, 50, 0.20);INSERT INTO `order_items` VALUES (10513, 61, 28.50, 15, 0.20);INSERT INTO `order_items` VALUES (10514, 20, 81.00, 39, 0.00);INSERT INTO `order_items` VALUES (10514, 28, 45.60, 35, 0.00);INSERT INTO `order_items` VALUES (10514, 56, 38.00, 70, 0.00);INSERT INTO `order_items` VALUES (10514, 65, 21.05, 39, 0.00);INSERT INTO `order_items` VALUES (10514, 75, 7.75, 50, 0.00);INSERT INTO `order_items` VALUES (10515, 9, 97.00, 16, 0.15);INSERT INTO `order_items` VALUES (10515, 16, 17.45, 50, 0.00);INSERT INTO `order_items` VALUES (10515, 27, 43.90, 120, 0.00);INSERT INTO `order_items` VALUES (10515, 33, 2.50, 16, 0.15);INSERT INTO `order_items` VALUES (10515, 60, 34.00, 84, 0.15);INSERT INTO `order_items` VALUES (10516, 18, 62.50, 25, 0.10);INSERT INTO `order_items` VALUES (10516, 41, 9.65, 80, 0.10);INSERT INTO `order_items` VALUES (10516, 42, 14.00, 20, 0.00);INSERT INTO `order_items` VALUES (10517, 52, 7.00, 6, 0.00);INSERT INTO `order_items` VALUES (10517, 59, 55.00, 4, 0.00);INSERT INTO `order_items` VALUES (10517, 70, 15.00, 6, 0.00);INSERT INTO `order_items` VALUES (10518, 24, 4.50, 5, 0.00);INSERT INTO `order_items` VALUES (10518, 38, 263.50, 15, 0.00);INSERT INTO `order_items` VALUES (10518, 44, 19.45, 9, 0.00);INSERT INTO `order_items` VALUES (10519, 10, 31.00, 16, 0.05);INSERT INTO `order_items` VALUES (10519, 56, 38.00, 40, 0.00);INSERT INTO `order_items` VALUES (10519, 60, 34.00, 10, 0.05);INSERT INTO `order_items` VALUES (10520, 24, 4.50, 8, 0.00);INSERT INTO `order_items` VALUES (10520, 53, 32.80, 5, 0.00);INSERT INTO `order_items` VALUES (10521, 35, 18.00, 3, 0.00);INSERT INTO `order_items` VALUES (10521, 41, 9.65, 10, 0.00);INSERT INTO `order_items` VALUES (10521, 68, 12.50, 6, 0.00);INSERT INTO `order_items` VALUES (10522, 1, 18.00, 40, 0.20);INSERT INTO `order_items` VALUES (10522, 8, 40.00, 24, 0.00);INSERT INTO `order_items` VALUES (10522, 30, 25.89, 20, 0.20);INSERT INTO `order_items` VALUES (10522, 40, 18.40, 25, 0.20);INSERT INTO `order_items` VALUES (10523, 17, 39.00, 25, 0.10);INSERT INTO `order_items` VALUES (10523, 20, 81.00, 15, 0.10);INSERT INTO `order_items` VALUES (10523, 37, 26.00, 18, 0.10);INSERT INTO `order_items` VALUES (10523, 41, 9.65, 6, 0.10);INSERT INTO `order_items` VALUES (10524, 10, 31.00, 2, 0.00);INSERT INTO `order_items` VALUES (10524, 30, 25.89, 10, 0.00);INSERT INTO `order_items` VALUES (10524, 43, 46.00, 60, 0.00);INSERT INTO `order_items` VALUES (10524, 54, 7.45, 15, 0.00);INSERT INTO `order_items` VALUES (10525, 36, 19.00, 30, 0.00);INSERT INTO `order_items` VALUES (10525, 40, 18.40, 15, 0.10);INSERT INTO `order_items` VALUES (10526, 1, 18.00, 8, 0.15);INSERT INTO `order_items` VALUES (10526, 13, 6.00, 10, 0.00);INSERT INTO `order_items` VALUES (10526, 56, 38.00, 30, 0.15);INSERT INTO `order_items` VALUES (10527, 4, 22.00, 50, 0.10);INSERT INTO `order_items` VALUES (10527, 36, 19.00, 30, 0.10);INSERT INTO `order_items` VALUES (10528, 11, 21.00, 3, 0.00);INSERT INTO `order_items` VALUES (10528, 33, 2.50, 8, 0.20);INSERT INTO `order_items` VALUES (10528, 72, 34.80, 9, 0.00);INSERT INTO `order_items` VALUES (10529, 55, 24.00, 14, 0.00);INSERT INTO `order_items` VALUES (10529, 68, 12.50, 20, 0.00);INSERT INTO `order_items` VALUES (10529, 69, 36.00, 10, 0.00);INSERT INTO `order_items` VALUES (10530, 17, 39.00, 40, 0.00);INSERT INTO `order_items` VALUES (10530, 43, 46.00, 25, 0.00);INSERT INTO `order_items` VALUES (10530, 61, 28.50, 20, 0.00);INSERT INTO `order_items` VALUES (10530, 76, 18.00, 50, 0.00);INSERT INTO `order_items` VALUES (10531, 59, 55.00, 2, 0.00);INSERT INTO `order_items` VALUES (10532, 30, 25.89, 15, 0.00);INSERT INTO `order_items` VALUES (10532, 66, 17.00, 24, 0.00);INSERT INTO `order_items` VALUES (10533, 4, 22.00, 50, 0.05);INSERT INTO `order_items` VALUES (10533, 72, 34.80, 24, 0.00);INSERT INTO `order_items` VALUES (10533, 73, 15.00, 24, 0.05);INSERT INTO `order_items` VALUES (10534, 30, 25.89, 10, 0.00);INSERT INTO `order_items` VALUES (10534, 40, 18.40, 10, 0.20);INSERT INTO `order_items` VALUES (10534, 54, 7.45, 10, 0.20);INSERT INTO `order_items` VALUES (10535, 11, 21.00, 50, 0.10);INSERT INTO `order_items` VALUES (10535, 40, 18.40, 10, 0.10);INSERT INTO `order_items` VALUES (10535, 57, 19.50, 5, 0.10);INSERT INTO `order_items` VALUES (10535, 59, 55.00, 15, 0.10);INSERT INTO `order_items` VALUES (10536, 12, 38.00, 15, 0.25);INSERT INTO `order_items` VALUES (10536, 31, 12.50, 20, 0.00);INSERT INTO `order_items` VALUES (10536, 33, 2.50, 30, 0.00);INSERT INTO `order_items` VALUES (10536, 60, 34.00, 35, 0.25);INSERT INTO `order_items` VALUES (10537, 31, 12.50, 30, 0.00);INSERT INTO `order_items` VALUES (10537, 51, 53.00, 6, 0.00);INSERT INTO `order_items` VALUES (10537, 58, 13.25, 20, 0.00);INSERT INTO `order_items` VALUES (10537, 72, 34.80, 21, 0.00);INSERT INTO `order_items` VALUES (10537, 73, 15.00, 9, 0.00);INSERT INTO `order_items` VALUES (10538, 70, 15.00, 7, 0.00);INSERT INTO `order_items` VALUES (10538, 72, 34.80, 1, 0.00);INSERT INTO `order_items` VALUES (10539, 13, 6.00, 8, 0.00);INSERT INTO `order_items` VALUES (10539, 21, 10.00, 15, 0.00);INSERT INTO `order_items` VALUES (10539, 33, 2.50, 15, 0.00);INSERT INTO `order_items` VALUES (10539, 49, 20.00, 6, 0.00);INSERT INTO `order_items` VALUES (10540, 3, 10.00, 60, 0.00);INSERT INTO `order_items` VALUES (10540, 26, 31.23, 40, 0.00);INSERT INTO `order_items` VALUES (10540, 38, 263.50, 30, 0.00);INSERT INTO `order_items` VALUES (10540, 68, 12.50, 35, 0.00);INSERT INTO `order_items` VALUES (10541, 24, 4.50, 35, 0.10);INSERT INTO `order_items` VALUES (10541, 38, 263.50, 4, 0.10);INSERT INTO `order_items` VALUES (10541, 65, 21.05, 36, 0.10);INSERT INTO `order_items` VALUES (10541, 71, 21.50, 9, 0.10);INSERT INTO `order_items` VALUES (10542, 11, 21.00, 15, 0.05);INSERT INTO `order_items` VALUES (10542, 54, 7.45, 24, 0.05);INSERT INTO `order_items` VALUES (10543, 12, 38.00, 30, 0.15);INSERT INTO `order_items` VALUES (10543, 23, 9.00, 70, 0.15);INSERT INTO `order_items` VALUES (10544, 28, 45.60, 7, 0.00);INSERT INTO `order_items` VALUES (10544, 67, 14.00, 7, 0.00);INSERT INTO `order_items` VALUES (10545, 11, 21.00, 10, 0.00);INSERT INTO `order_items` VALUES (10546, 7, 30.00, 10, 0.00);INSERT INTO `order_items` VALUES (10546, 35, 18.00, 30, 0.00);INSERT INTO `order_items` VALUES (10546, 62, 49.30, 40, 0.00);INSERT INTO `order_items` VALUES (10547, 32, 32.00, 24, 0.15);INSERT INTO `order_items` VALUES (10547, 36, 19.00, 60, 0.00);INSERT INTO `order_items` VALUES (10548, 34, 14.00, 10, 0.25);INSERT INTO `order_items` VALUES (10548, 41, 9.65, 14, 0.00);INSERT INTO `order_items` VALUES (10549, 31, 12.50, 55, 0.15);INSERT INTO `order_items` VALUES (10549, 45, 9.50, 100, 0.15);INSERT INTO `order_items` VALUES (10549, 51, 53.00, 48, 0.15);INSERT INTO `order_items` VALUES (10550, 17, 39.00, 8, 0.10);INSERT INTO `order_items` VALUES (10550, 19, 9.20, 10, 0.00);INSERT INTO `order_items` VALUES (10550, 21, 10.00, 6, 0.10);INSERT INTO `order_items` VALUES (10550, 61, 28.50, 10, 0.10);INSERT INTO `order_items` VALUES (10551, 16, 17.45, 40, 0.15);INSERT INTO `order_items` VALUES (10551, 35, 18.00, 20, 0.15);INSERT INTO `order_items` VALUES (10551, 44, 19.45, 40, 0.00);INSERT INTO `order_items` VALUES (10552, 69, 36.00, 18, 0.00);INSERT INTO `order_items` VALUES (10552, 75, 7.75, 30, 0.00);INSERT INTO `order_items` VALUES (10553, 11, 21.00, 15, 0.00);INSERT INTO `order_items` VALUES (10553, 16, 17.45, 14, 0.00);INSERT INTO `order_items` VALUES (10553, 22, 21.00, 24, 0.00);INSERT INTO `order_items` VALUES (10553, 31, 12.50, 30, 0.00);INSERT INTO `order_items` VALUES (10553, 35, 18.00, 6, 0.00);INSERT INTO `order_items` VALUES (10554, 16, 17.45, 30, 0.05);INSERT INTO `order_items` VALUES (10554, 23, 9.00, 20, 0.05);INSERT INTO `order_items` VALUES (10554, 62, 49.30, 20, 0.05);INSERT INTO `order_items` VALUES (10554, 77, 13.00, 10, 0.05);INSERT INTO `order_items` VALUES (10555, 14, 23.25, 30, 0.20);INSERT INTO `order_items` VALUES (10555, 19, 9.20, 35, 0.20);INSERT INTO `order_items` VALUES (10555, 24, 4.50, 18, 0.20);INSERT INTO `order_items` VALUES (10555, 51, 53.00, 20, 0.20);INSERT INTO `order_items` VALUES (10555, 56, 38.00, 40, 0.20);INSERT INTO `order_items` VALUES (10556, 72, 34.80, 24, 0.00);INSERT INTO `order_items` VALUES (10557, 64, 33.25, 30, 0.00);INSERT INTO `order_items` VALUES (10557, 75, 7.75, 20, 0.00);INSERT INTO `order_items` VALUES (10558, 47, 9.50, 25, 0.00);INSERT INTO `order_items` VALUES (10558, 51, 53.00, 20, 0.00);INSERT INTO `order_items` VALUES (10558, 52, 7.00, 30, 0.00);INSERT INTO `order_items` VALUES (10558, 53, 32.80, 18, 0.00);INSERT INTO `order_items` VALUES (10558, 73, 15.00, 3, 0.00);INSERT INTO `order_items` VALUES (10559, 41, 9.65, 12, 0.05);INSERT INTO `order_items` VALUES (10559, 55, 24.00, 18, 0.05);INSERT INTO `order_items` VALUES (10560, 30, 25.89, 20, 0.00);INSERT INTO `order_items` VALUES (10560, 62, 49.30, 15, 0.25);INSERT INTO `order_items` VALUES (10561, 44, 19.45, 10, 0.00);INSERT INTO `order_items` VALUES (10561, 51, 53.00, 50, 0.00);INSERT INTO `order_items` VALUES (10562, 33, 2.50, 20, 0.10);INSERT INTO `order_items` VALUES (10562, 62, 49.30, 10, 0.10);INSERT INTO `order_items` VALUES (10563, 36, 19.00, 25, 0.00);INSERT INTO `order_items` VALUES (10563, 52, 7.00, 70, 0.00);INSERT INTO `order_items` VALUES (10564, 17, 39.00, 16, 0.05);INSERT INTO `order_items` VALUES (10564, 31, 12.50, 6, 0.05);INSERT INTO `order_items` VALUES (10564, 55, 24.00, 25, 0.05);INSERT INTO `order_items` VALUES (10565, 24, 4.50, 25, 0.10);INSERT INTO `order_items` VALUES (10565, 64, 33.25, 18, 0.10);INSERT INTO `order_items` VALUES (10566, 11, 21.00, 35, 0.15);INSERT INTO `order_items` VALUES (10566, 18, 62.50, 18, 0.15);INSERT INTO `order_items` VALUES (10566, 76, 18.00, 10, 0.00);INSERT INTO `order_items` VALUES (10567, 31, 12.50, 60, 0.20);INSERT INTO `order_items` VALUES (10567, 51, 53.00, 3, 0.00);INSERT INTO `order_items` VALUES (10567, 59, 55.00, 40, 0.20);INSERT INTO `order_items` VALUES (10568, 10, 31.00, 5, 0.00);INSERT INTO `order_items` VALUES (10569, 31, 12.50, 35, 0.20);INSERT INTO `order_items` VALUES (10569, 76, 18.00, 30, 0.00);INSERT INTO `order_items` VALUES (10570, 11, 21.00, 15, 0.05);INSERT INTO `order_items` VALUES (10570, 56, 38.00, 60, 0.05);INSERT INTO `order_items` VALUES (10571, 14, 23.25, 11, 0.15);INSERT INTO `order_items` VALUES (10571, 42, 14.00, 28, 0.15);INSERT INTO `order_items` VALUES (10572, 16, 17.45, 12, 0.10);INSERT INTO `order_items` VALUES (10572, 32, 32.00, 10, 0.10);INSERT INTO `order_items` VALUES (10572, 40, 18.40, 50, 0.00);INSERT INTO `order_items` VALUES (10572, 75, 7.75, 15, 0.10);INSERT INTO `order_items` VALUES (10573, 17, 39.00, 18, 0.00);INSERT INTO `order_items` VALUES (10573, 34, 14.00, 40, 0.00);INSERT INTO `order_items` VALUES (10573, 53, 32.80, 25, 0.00);INSERT INTO `order_items` VALUES (10574, 33, 2.50, 14, 0.00);INSERT INTO `order_items` VALUES (10574, 40, 18.40, 2, 0.00);INSERT INTO `order_items` VALUES (10574, 62, 49.30, 10, 0.00);INSERT INTO `order_items` VALUES (10574, 64, 33.25, 6, 0.00);INSERT INTO `order_items` VALUES (10575, 59, 55.00, 12, 0.00);INSERT INTO `order_items` VALUES (10575, 63, 43.90, 6, 0.00);INSERT INTO `order_items` VALUES (10575, 72, 34.80, 30, 0.00);INSERT INTO `order_items` VALUES (10575, 76, 18.00, 10, 0.00);INSERT INTO `order_items` VALUES (10576, 1, 18.00, 10, 0.00);INSERT INTO `order_items` VALUES (10576, 31, 12.50, 20, 0.00);INSERT INTO `order_items` VALUES (10576, 44, 19.45, 21, 0.00);INSERT INTO `order_items` VALUES (10577, 39, 18.00, 10, 0.00);INSERT INTO `order_items` VALUES (10577, 75, 7.75, 20, 0.00);INSERT INTO `order_items` VALUES (10577, 77, 13.00, 18, 0.00);INSERT INTO `order_items` VALUES (10578, 35, 18.00, 20, 0.00);INSERT INTO `order_items` VALUES (10578, 57, 19.50, 6, 0.00);INSERT INTO `order_items` VALUES (10579, 15, 15.50, 10, 0.00);INSERT INTO `order_items` VALUES (10579, 75, 7.75, 21, 0.00);INSERT INTO `order_items` VALUES (10580, 14, 23.25, 15, 0.05);INSERT INTO `order_items` VALUES (10580, 41, 9.65, 9, 0.05);INSERT INTO `order_items` VALUES (10580, 65, 21.05, 30, 0.05);INSERT INTO `order_items` VALUES (10581, 75, 7.75, 50, 0.20);INSERT INTO `order_items` VALUES (10582, 57, 19.50, 4, 0.00);INSERT INTO `order_items` VALUES (10582, 76, 18.00, 14, 0.00);INSERT INTO `order_items` VALUES (10583, 29, 123.79, 10, 0.00);INSERT INTO `order_items` VALUES (10583, 60, 34.00, 24, 0.15);INSERT INTO `order_items` VALUES (10583, 69, 36.00, 10, 0.15);INSERT INTO `order_items` VALUES (10584, 31, 12.50, 50, 0.05);INSERT INTO `order_items` VALUES (10585, 47, 9.50, 15, 0.00);INSERT INTO `order_items` VALUES (10586, 52, 7.00, 4, 0.15);INSERT INTO `order_items` VALUES (10587, 26, 31.23, 6, 0.00);INSERT INTO `order_items` VALUES (10587, 35, 18.00, 20, 0.00);INSERT INTO `order_items` VALUES (10587, 77, 13.00, 20, 0.00);INSERT INTO `order_items` VALUES (10588, 18, 62.50, 40, 0.20);INSERT INTO `order_items` VALUES (10588, 42, 14.00, 100, 0.20);INSERT INTO `order_items` VALUES (10589, 35, 18.00, 4, 0.00);INSERT INTO `order_items` VALUES (10590, 1, 18.00, 20, 0.00);INSERT INTO `order_items` VALUES (10590, 77, 13.00, 60, 0.05);INSERT INTO `order_items` VALUES (10591, 3, 10.00, 14, 0.00);INSERT INTO `order_items` VALUES (10591, 7, 30.00, 10, 0.00);INSERT INTO `order_items` VALUES (10591, 54, 7.45, 50, 0.00);INSERT INTO `order_items` VALUES (10592, 15, 15.50, 25, 0.05);INSERT INTO `order_items` VALUES (10592, 26, 31.23, 5, 0.05);INSERT INTO `order_items` VALUES (10593, 20, 81.00, 21, 0.20);INSERT INTO `order_items` VALUES (10593, 69, 36.00, 20, 0.20);INSERT INTO `order_items` VALUES (10593, 76, 18.00, 4, 0.20);INSERT INTO `order_items` VALUES (10594, 52, 7.00, 24, 0.00);INSERT INTO `order_items` VALUES (10594, 58, 13.25, 30, 0.00);INSERT INTO `order_items` VALUES (10595, 35, 18.00, 30, 0.25);INSERT INTO `order_items` VALUES (10595, 61, 28.50, 120, 0.25);INSERT INTO `order_items` VALUES (10595, 69, 36.00, 65, 0.25);INSERT INTO `order_items` VALUES (10596, 56, 38.00, 5, 0.20);INSERT INTO `order_items` VALUES (10596, 63, 43.90, 24, 0.20);INSERT INTO `order_items` VALUES (10596, 75, 7.75, 30, 0.20);INSERT INTO `order_items` VALUES (10597, 24, 4.50, 35, 0.20);INSERT INTO `order_items` VALUES (10597, 57, 19.50, 20, 0.00);INSERT INTO `order_items` VALUES (10597, 65, 21.05, 12, 0.20);INSERT INTO `order_items` VALUES (10598, 27, 43.90, 50, 0.00);INSERT INTO `order_items` VALUES (10598, 71, 21.50, 9, 0.00);INSERT INTO `order_items` VALUES (10599, 62, 49.30, 10, 0.00);INSERT INTO `order_items` VALUES (10600, 54, 7.45, 4, 0.00);INSERT INTO `order_items` VALUES (10600, 73, 15.00, 30, 0.00);INSERT INTO `order_items` VALUES (10601, 13, 6.00, 60, 0.00);INSERT INTO `order_items` VALUES (10601, 59, 55.00, 35, 0.00);INSERT INTO `order_items` VALUES (10602, 77, 13.00, 5, 0.25);INSERT INTO `order_items` VALUES (10603, 22, 21.00, 48, 0.00);INSERT INTO `order_items` VALUES (10603, 49, 20.00, 25, 0.05);INSERT INTO `order_items` VALUES (10604, 48, 12.75, 6, 0.10);INSERT INTO `order_items` VALUES (10604, 76, 18.00, 10, 0.10);INSERT INTO `order_items` VALUES (10605, 16, 17.45, 30, 0.05);INSERT INTO `order_items` VALUES (10605, 59, 55.00, 20, 0.05);INSERT INTO `order_items` VALUES (10605, 60, 34.00, 70, 0.05);INSERT INTO `order_items` VALUES (10605, 71, 21.50, 15, 0.05);INSERT INTO `order_items` VALUES (10606, 4, 22.00, 20, 0.20);INSERT INTO `order_items` VALUES (10606, 55, 24.00, 20, 0.20);INSERT INTO `order_items` VALUES (10606, 62, 49.30, 10, 0.20);INSERT INTO `order_items` VALUES (10607, 7, 30.00, 45, 0.00);INSERT INTO `order_items` VALUES (10607, 17, 39.00, 100, 0.00);INSERT INTO `order_items` VALUES (10607, 33, 2.50, 14, 0.00);INSERT INTO `order_items` VALUES (10607, 40, 18.40, 42, 0.00);INSERT INTO `order_items` VALUES (10607, 72, 34.80, 12, 0.00);INSERT INTO `order_items` VALUES (10608, 56, 38.00, 28, 0.00);INSERT INTO `order_items` VALUES (10609, 1, 18.00, 3, 0.00);INSERT INTO `order_items` VALUES (10609, 10, 31.00, 10, 0.00);INSERT INTO `order_items` VALUES (10609, 21, 10.00, 6, 0.00);INSERT INTO `order_items` VALUES (10610, 36, 19.00, 21, 0.25);INSERT INTO `order_items` VALUES (10611, 1, 18.00, 6, 0.00);INSERT INTO `order_items` VALUES (10611, 2, 19.00, 10, 0.00);INSERT INTO `order_items` VALUES (10611, 60, 34.00, 15, 0.00);INSERT INTO `order_items` VALUES (10612, 10, 31.00, 70, 0.00);INSERT INTO `order_items` VALUES (10612, 36, 19.00, 55, 0.00);INSERT INTO `order_items` VALUES (10612, 49, 20.00, 18, 0.00);INSERT INTO `order_items` VALUES (10612, 60, 34.00, 40, 0.00);INSERT INTO `order_items` VALUES (10612, 76, 18.00, 80, 0.00);INSERT INTO `order_items` VALUES (10613, 13, 6.00, 8, 0.10);INSERT INTO `order_items` VALUES (10613, 75, 7.75, 40, 0.00);INSERT INTO `order_items` VALUES (10614, 11, 21.00, 14, 0.00);INSERT INTO `order_items` VALUES (10614, 21, 10.00, 8, 0.00);INSERT INTO `order_items` VALUES (10614, 39, 18.00, 5, 0.00);INSERT INTO `order_items` VALUES (10615, 55, 24.00, 5, 0.00);INSERT INTO `order_items` VALUES (10616, 38, 263.50, 15, 0.05);INSERT INTO `order_items` VALUES (10616, 56, 38.00, 14, 0.00);INSERT INTO `order_items` VALUES (10616, 70, 15.00, 15, 0.05);INSERT INTO `order_items` VALUES (10616, 71, 21.50, 15, 0.05);INSERT INTO `order_items` VALUES (10617, 59, 55.00, 30, 0.15);INSERT INTO `order_items` VALUES (10618, 6, 25.00, 70, 0.00);INSERT INTO `order_items` VALUES (10618, 56, 38.00, 20, 0.00);INSERT INTO `order_items` VALUES (10618, 68, 12.50, 15, 0.00);INSERT INTO `order_items` VALUES (10619, 21, 10.00, 42, 0.00);INSERT INTO `order_items` VALUES (10619, 22, 21.00, 40, 0.00);INSERT INTO `order_items` VALUES (10620, 24, 4.50, 5, 0.00);INSERT INTO `order_items` VALUES (10620, 52, 7.00, 5, 0.00);INSERT INTO `order_items` VALUES (10621, 19, 9.20, 5, 0.00);INSERT INTO `order_items` VALUES (10621, 23, 9.00, 10, 0.00);INSERT INTO `order_items` VALUES (10621, 70, 15.00, 20, 0.00);INSERT INTO `order_items` VALUES (10621, 71, 21.50, 15, 0.00);INSERT INTO `order_items` VALUES (10622, 2, 19.00, 20, 0.00);INSERT INTO `order_items` VALUES (10622, 68, 12.50, 18, 0.20);INSERT INTO `order_items` VALUES (10623, 14, 23.25, 21, 0.00);INSERT INTO `order_items` VALUES (10623, 19, 9.20, 15, 0.10);INSERT INTO `order_items` VALUES (10623, 21, 10.00, 25, 0.10);INSERT INTO `order_items` VALUES (10623, 24, 4.50, 3, 0.00);INSERT INTO `order_items` VALUES (10623, 35, 18.00, 30, 0.10);INSERT INTO `order_items` VALUES (10624, 28, 45.60, 10, 0.00);INSERT INTO `order_items` VALUES (10624, 29, 123.79, 6, 0.00);INSERT INTO `order_items` VALUES (10624, 44, 19.45, 10, 0.00);INSERT INTO `order_items` VALUES (10625, 14, 23.25, 3, 0.00);INSERT INTO `order_items` VALUES (10625, 42, 14.00, 5, 0.00);INSERT INTO `order_items` VALUES (10625, 60, 34.00, 10, 0.00);INSERT INTO `order_items` VALUES (10626, 53, 32.80, 12, 0.00);INSERT INTO `order_items` VALUES (10626, 60, 34.00, 20, 0.00);INSERT INTO `order_items` VALUES (10626, 71, 21.50, 20, 0.00);INSERT INTO `order_items` VALUES (10627, 62, 49.30, 15, 0.00);INSERT INTO `order_items` VALUES (10627, 73, 15.00, 35, 0.15);INSERT INTO `order_items` VALUES (10628, 1, 18.00, 25, 0.00);INSERT INTO `order_items` VALUES (10629, 29, 123.79, 20, 0.00);INSERT INTO `order_items` VALUES (10629, 64, 33.25, 9, 0.00);INSERT INTO `order_items` VALUES (10630, 55, 24.00, 12, 0.05);INSERT INTO `order_items` VALUES (10630, 76, 18.00, 35, 0.00);INSERT INTO `order_items` VALUES (10631, 75, 7.75, 8, 0.10);INSERT INTO `order_items` VALUES (10632, 2, 19.00, 30, 0.05);INSERT INTO `order_items` VALUES (10632, 33, 2.50, 20, 0.05);INSERT INTO `order_items` VALUES (10633, 12, 38.00, 36, 0.15);INSERT INTO `order_items` VALUES (10633, 13, 6.00, 13, 0.15);INSERT INTO `order_items` VALUES (10633, 26, 31.23, 35, 0.15);INSERT INTO `order_items` VALUES (10633, 62, 49.30, 80, 0.15);INSERT INTO `order_items` VALUES (10634, 7, 30.00, 35, 0.00);INSERT INTO `order_items` VALUES (10634, 18, 62.50, 50, 0.00);INSERT INTO `order_items` VALUES (10634, 51, 53.00, 15, 0.00);INSERT INTO `order_items` VALUES (10634, 75, 7.75, 2, 0.00);INSERT INTO `order_items` VALUES (10635, 4, 22.00, 10, 0.10);INSERT INTO `order_items` VALUES (10635, 5, 21.35, 15, 0.10);INSERT INTO `order_items` VALUES (10635, 22, 21.00, 40, 0.00);INSERT INTO `order_items` VALUES (10636, 4, 22.00, 25, 0.00);INSERT INTO `order_items` VALUES (10636, 58, 13.25, 6, 0.00);INSERT INTO `order_items` VALUES (10637, 11, 21.00, 10, 0.00);INSERT INTO `order_items` VALUES (10637, 50, 16.25, 25, 0.05);INSERT INTO `order_items` VALUES (10637, 56, 38.00, 60, 0.05);INSERT INTO `order_items` VALUES (10638, 45, 9.50, 20, 0.00);INSERT INTO `order_items` VALUES (10638, 65, 21.05, 21, 0.00);INSERT INTO `order_items` VALUES (10638, 72, 34.80, 60, 0.00);INSERT INTO `order_items` VALUES (10639, 18, 62.50, 8, 0.00);INSERT INTO `order_items` VALUES (10640, 69, 36.00, 20, 0.25);INSERT INTO `order_items` VALUES (10640, 70, 15.00, 15, 0.25);INSERT INTO `order_items` VALUES (10641, 2, 19.00, 50, 0.00);INSERT INTO `order_items` VALUES (10641, 40, 18.40, 60, 0.00);INSERT INTO `order_items` VALUES (10642, 21, 10.00, 30, 0.20);INSERT INTO `order_items` VALUES (10642, 61, 28.50, 20, 0.20);INSERT INTO `order_items` VALUES (10643, 28, 45.60, 15, 0.25);INSERT INTO `order_items` VALUES (10643, 39, 18.00, 21, 0.25);INSERT INTO `order_items` VALUES (10643, 46, 12.00, 2, 0.25);INSERT INTO `order_items` VALUES (10644, 18, 62.50, 4, 0.10);INSERT INTO `order_items` VALUES (10644, 43, 46.00, 20, 0.00);INSERT INTO `order_items` VALUES (10644, 46, 12.00, 21, 0.10);INSERT INTO `order_items` VALUES (10645, 18, 62.50, 20, 0.00);INSERT INTO `order_items` VALUES (10645, 36, 19.00, 15, 0.00);INSERT INTO `order_items` VALUES (10646, 1, 18.00, 15, 0.25);INSERT INTO `order_items` VALUES (10646, 10, 31.00, 18, 0.25);INSERT INTO `order_items` VALUES (10646, 71, 21.50, 30, 0.25);INSERT INTO `order_items` VALUES (10646, 77, 13.00, 35, 0.25);INSERT INTO `order_items` VALUES (10647, 19, 9.20, 30, 0.00);INSERT INTO `order_items` VALUES (10647, 39, 18.00, 20, 0.00);INSERT INTO `order_items` VALUES (10648, 22, 21.00, 15, 0.00);INSERT INTO `order_items` VALUES (10648, 24, 4.50, 15, 0.15);INSERT INTO `order_items` VALUES (10649, 28, 45.60, 20, 0.00);INSERT INTO `order_items` VALUES (10649, 72, 34.80, 15, 0.00);INSERT INTO `order_items` VALUES (10650, 30, 25.89, 30, 0.00);INSERT INTO `order_items` VALUES (10650, 53, 32.80, 25, 0.05);INSERT INTO `order_items` VALUES (10650, 54, 7.45, 30, 0.00);INSERT INTO `order_items` VALUES (10651, 19, 9.20, 12, 0.25);INSERT INTO `order_items` VALUES (10651, 22, 21.00, 20, 0.25);INSERT INTO `order_items` VALUES (10652, 30, 25.89, 2, 0.25);INSERT INTO `order_items` VALUES (10652, 42, 14.00, 20, 0.00);INSERT INTO `order_items` VALUES (10653, 16, 17.45, 30, 0.10);INSERT INTO `order_items` VALUES (10653, 60, 34.00, 20, 0.10);INSERT INTO `order_items` VALUES (10654, 4, 22.00, 12, 0.10);INSERT INTO `order_items` VALUES (10654, 39, 18.00, 20, 0.10);INSERT INTO `order_items` VALUES (10654, 54, 7.45, 6, 0.10);INSERT INTO `order_items` VALUES (10655, 41, 9.65, 20, 0.20);INSERT INTO `order_items` VALUES (10656, 14, 23.25, 3, 0.10);INSERT INTO `order_items` VALUES (10656, 44, 19.45, 28, 0.10);INSERT INTO `order_items` VALUES (10656, 47, 9.50, 6, 0.10);INSERT INTO `order_items` VALUES (10657, 15, 15.50, 50, 0.00);INSERT INTO `order_items` VALUES (10657, 41, 9.65, 24, 0.00);INSERT INTO `order_items` VALUES (10657, 46, 12.00, 45, 0.00);INSERT INTO `order_items` VALUES (10657, 47, 9.50, 10, 0.00);INSERT INTO `order_items` VALUES (10657, 56, 38.00, 45, 0.00);INSERT INTO `order_items` VALUES (10657, 60, 34.00, 30, 0.00);INSERT INTO `order_items` VALUES (10658, 21, 10.00, 60, 0.00);INSERT INTO `order_items` VALUES (10658, 40, 18.40, 70, 0.05);INSERT INTO `order_items` VALUES (10658, 60, 34.00, 55, 0.05);INSERT INTO `order_items` VALUES (10658, 77, 13.00, 70, 0.05);INSERT INTO `order_items` VALUES (10659, 31, 12.50, 20, 0.05);INSERT INTO `order_items` VALUES (10659, 40, 18.40, 24, 0.05);INSERT INTO `order_items` VALUES (10659, 70, 15.00, 40, 0.05);INSERT INTO `order_items` VALUES (10660, 20, 81.00, 21, 0.00);INSERT INTO `order_items` VALUES (10661, 39, 18.00, 3, 0.20);INSERT INTO `order_items` VALUES (10661, 58, 13.25, 49, 0.20);INSERT INTO `order_items` VALUES (10662, 68, 12.50, 10, 0.00);INSERT INTO `order_items` VALUES (10663, 40, 18.40, 30, 0.05);INSERT INTO `order_items` VALUES (10663, 42, 14.00, 30, 0.05);INSERT INTO `order_items` VALUES (10663, 51, 53.00, 20, 0.05);INSERT INTO `order_items` VALUES (10664, 10, 31.00, 24, 0.15);INSERT INTO `order_items` VALUES (10664, 56, 38.00, 12, 0.15);INSERT INTO `order_items` VALUES (10664, 65, 21.05, 15, 0.15);INSERT INTO `order_items` VALUES (10665, 51, 53.00, 20, 0.00);INSERT INTO `order_items` VALUES (10665, 59, 55.00, 1, 0.00);INSERT INTO `order_items` VALUES (10665, 76, 18.00, 10, 0.00);INSERT INTO `order_items` VALUES (10666, 29, 123.79, 36, 0.00);INSERT INTO `order_items` VALUES (10666, 65, 21.05, 10, 0.00);INSERT INTO `order_items` VALUES (10667, 69, 36.00, 45, 0.20);INSERT INTO `order_items` VALUES (10667, 71, 21.50, 14, 0.20);INSERT INTO `order_items` VALUES (10668, 31, 12.50, 8, 0.10);INSERT INTO `order_items` VALUES (10668, 55, 24.00, 4, 0.10);INSERT INTO `order_items` VALUES (10668, 64, 33.25, 15, 0.10);INSERT INTO `order_items` VALUES (10669, 36, 19.00, 30, 0.00);INSERT INTO `order_items` VALUES (10670, 23, 9.00, 32, 0.00);INSERT INTO `order_items` VALUES (10670, 46, 12.00, 60, 0.00);INSERT INTO `order_items` VALUES (10670, 67, 14.00, 25, 0.00);INSERT INTO `order_items` VALUES (10670, 73, 15.00, 50, 0.00);INSERT INTO `order_items` VALUES (10670, 75, 7.75, 25, 0.00);INSERT INTO `order_items` VALUES (10671, 16, 17.45, 10, 0.00);INSERT INTO `order_items` VALUES (10671, 62, 49.30, 10, 0.00);INSERT INTO `order_items` VALUES (10671, 65, 21.05, 12, 0.00);INSERT INTO `order_items` VALUES (10672, 38, 263.50, 15, 0.10);INSERT INTO `order_items` VALUES (10672, 71, 21.50, 12, 0.00);INSERT INTO `order_items` VALUES (10673, 16, 17.45, 3, 0.00);INSERT INTO `order_items` VALUES (10673, 42, 14.00, 6, 0.00);INSERT INTO `order_items` VALUES (10673, 43, 46.00, 6, 0.00);INSERT INTO `order_items` VALUES (10674, 23, 9.00, 5, 0.00);INSERT INTO `order_items` VALUES (10675, 14, 23.25, 30, 0.00);INSERT INTO `order_items` VALUES (10675, 53, 32.80, 10, 0.00);INSERT INTO `order_items` VALUES (10675, 58, 13.25, 30, 0.00);INSERT INTO `order_items` VALUES (10676, 10, 31.00, 2, 0.00);INSERT INTO `order_items` VALUES (10676, 19, 9.20, 7, 0.00);INSERT INTO `order_items` VALUES (10676, 44, 19.45, 21, 0.00);INSERT INTO `order_items` VALUES (10677, 26, 31.23, 30, 0.15);INSERT INTO `order_items` VALUES (10677, 33, 2.50, 8, 0.15);INSERT INTO `order_items` VALUES (10678, 12, 38.00, 100, 0.00);INSERT INTO `order_items` VALUES (10678, 33, 2.50, 30, 0.00);INSERT INTO `order_items` VALUES (10678, 41, 9.65, 120, 0.00);INSERT INTO `order_items` VALUES (10678, 54, 7.45, 30, 0.00);INSERT INTO `order_items` VALUES (10679, 59, 55.00, 12, 0.00);INSERT INTO `order_items` VALUES (10680, 16, 17.45, 50, 0.25);INSERT INTO `order_items` VALUES (10680, 31, 12.50, 20, 0.25);INSERT INTO `order_items` VALUES (10680, 42, 14.00, 40, 0.25);INSERT INTO `order_items` VALUES (10681, 19, 9.20, 30, 0.10);INSERT INTO `order_items` VALUES (10681, 21, 10.00, 12, 0.10);INSERT INTO `order_items` VALUES (10681, 64, 33.25, 28, 0.00);INSERT INTO `order_items` VALUES (10682, 33, 2.50, 30, 0.00);INSERT INTO `order_items` VALUES (10682, 66, 17.00, 4, 0.00);INSERT INTO `order_items` VALUES (10682, 75, 7.75, 30, 0.00);INSERT INTO `order_items` VALUES (10683, 52, 7.00, 9, 0.00);INSERT INTO `order_items` VALUES (10684, 40, 18.40, 20, 0.00);INSERT INTO `order_items` VALUES (10684, 47, 9.50, 40, 0.00);INSERT INTO `order_items` VALUES (10684, 60, 34.00, 30, 0.00);INSERT INTO `order_items` VALUES (10685, 10, 31.00, 20, 0.00);INSERT INTO `order_items` VALUES (10685, 41, 9.65, 4, 0.00);INSERT INTO `order_items` VALUES (10685, 47, 9.50, 15, 0.00);INSERT INTO `order_items` VALUES (10686, 17, 39.00, 30, 0.20);INSERT INTO `order_items` VALUES (10686, 26, 31.23, 15, 0.00);INSERT INTO `order_items` VALUES (10687, 9, 97.00, 50, 0.25);INSERT INTO `order_items` VALUES (10687, 29, 123.79, 10, 0.00);INSERT INTO `order_items` VALUES (10687, 36, 19.00, 6, 0.25);INSERT INTO `order_items` VALUES (10688, 10, 31.00, 18, 0.10);INSERT INTO `order_items` VALUES (10688, 28, 45.60, 60, 0.10);INSERT INTO `order_items` VALUES (10688, 34, 14.00, 14, 0.00);INSERT INTO `order_items` VALUES (10689, 1, 18.00, 35, 0.25);INSERT INTO `order_items` VALUES (10690, 56, 38.00, 20, 0.25);INSERT INTO `order_items` VALUES (10690, 77, 13.00, 30, 0.25);INSERT INTO `order_items` VALUES (10691, 1, 18.00, 30, 0.00);INSERT INTO `order_items` VALUES (10691, 29, 123.79, 40, 0.00);INSERT INTO `order_items` VALUES (10691, 43, 46.00, 40, 0.00);INSERT INTO `order_items` VALUES (10691, 44, 19.45, 24, 0.00);INSERT INTO `order_items` VALUES (10691, 62, 49.30, 48, 0.00);INSERT INTO `order_items` VALUES (10692, 63, 43.90, 20, 0.00);INSERT INTO `order_items` VALUES (10693, 9, 97.00, 6, 0.00);INSERT INTO `order_items` VALUES (10693, 54, 7.45, 60, 0.15);INSERT INTO `order_items` VALUES (10693, 69, 36.00, 30, 0.15);INSERT INTO `order_items` VALUES (10693, 73, 15.00, 15, 0.15);INSERT INTO `order_items` VALUES (10694, 7, 30.00, 90, 0.00);INSERT INTO `order_items` VALUES (10694, 59, 55.00, 25, 0.00);INSERT INTO `order_items` VALUES (10694, 70, 15.00, 50, 0.00);INSERT INTO `order_items` VALUES (10695, 8, 40.00, 10, 0.00);INSERT INTO `order_items` VALUES (10695, 12, 38.00, 4, 0.00);INSERT INTO `order_items` VALUES (10695, 24, 4.50, 20, 0.00);INSERT INTO `order_items` VALUES (10696, 17, 39.00, 20, 0.00);INSERT INTO `order_items` VALUES (10696, 46, 12.00, 18, 0.00);INSERT INTO `order_items` VALUES (10697, 19, 9.20, 7, 0.25);INSERT INTO `order_items` VALUES (10697, 35, 18.00, 9, 0.25);INSERT INTO `order_items` VALUES (10697, 58, 13.25, 30, 0.25);INSERT INTO `order_items` VALUES (10697, 70, 15.00, 30, 0.25);INSERT INTO `order_items` VALUES (10698, 11, 21.00, 15, 0.00);INSERT INTO `order_items` VALUES (10698, 17, 39.00, 8, 0.05);INSERT INTO `order_items` VALUES (10698, 29, 123.79, 12, 0.05);INSERT INTO `order_items` VALUES (10698, 65, 21.05, 65, 0.05);INSERT INTO `order_items` VALUES (10698, 70, 15.00, 8, 0.05);INSERT INTO `order_items` VALUES (10699, 47, 9.50, 12, 0.00);INSERT INTO `order_items` VALUES (10700, 1, 18.00, 5, 0.20);INSERT INTO `order_items` VALUES (10700, 34, 14.00, 12, 0.20);INSERT INTO `order_items` VALUES (10700, 68, 12.50, 40, 0.20);INSERT INTO `order_items` VALUES (10700, 71, 21.50, 60, 0.20);INSERT INTO `order_items` VALUES (10701, 59, 55.00, 42, 0.15);INSERT INTO `order_items` VALUES (10701, 71, 21.50, 20, 0.15);INSERT INTO `order_items` VALUES (10701, 76, 18.00, 35, 0.15);INSERT INTO `order_items` VALUES (10702, 3, 10.00, 6, 0.00);INSERT INTO `order_items` VALUES (10702, 76, 18.00, 15, 0.00);INSERT INTO `order_items` VALUES (10703, 2, 19.00, 5, 0.00);INSERT INTO `order_items` VALUES (10703, 59, 55.00, 35, 0.00);INSERT INTO `order_items` VALUES (10703, 73, 15.00, 35, 0.00);INSERT INTO `order_items` VALUES (10704, 4, 22.00, 6, 0.00);INSERT INTO `order_items` VALUES (10704, 24, 4.50, 35, 0.00);INSERT INTO `order_items` VALUES (10704, 48, 12.75, 24, 0.00);INSERT INTO `order_items` VALUES (10705, 31, 12.50, 20, 0.00);INSERT INTO `order_items` VALUES (10705, 32, 32.00, 4, 0.00);INSERT INTO `order_items` VALUES (10706, 16, 17.45, 20, 0.00);INSERT INTO `order_items` VALUES (10706, 43, 46.00, 24, 0.00);INSERT INTO `order_items` VALUES (10706, 59, 55.00, 8, 0.00);INSERT INTO `order_items` VALUES (10707, 55, 24.00, 21, 0.00);INSERT INTO `order_items` VALUES (10707, 57, 19.50, 40, 0.00);INSERT INTO `order_items` VALUES (10707, 70, 15.00, 28, 0.15);INSERT INTO `order_items` VALUES (10708, 5, 21.35, 4, 0.00);INSERT INTO `order_items` VALUES (10708, 36, 19.00, 5, 0.00);INSERT INTO `order_items` VALUES (10709, 8, 40.00, 40, 0.00);INSERT INTO `order_items` VALUES (10709, 51, 53.00, 28, 0.00);INSERT INTO `order_items` VALUES (10709, 60, 34.00, 10, 0.00);INSERT INTO `order_items` VALUES (10710, 19, 9.20, 5, 0.00);INSERT INTO `order_items` VALUES (10710, 47, 9.50, 5, 0.00);INSERT INTO `order_items` VALUES (10711, 19, 9.20, 12, 0.00);INSERT INTO `order_items` VALUES (10711, 41, 9.65, 42, 0.00);INSERT INTO `order_items` VALUES (10711, 53, 32.80, 120, 0.00);INSERT INTO `order_items` VALUES (10712, 53, 32.80, 3, 0.05);INSERT INTO `order_items` VALUES (10712, 56, 38.00, 30, 0.00);INSERT INTO `order_items` VALUES (10713, 10, 31.00, 18, 0.00);INSERT INTO `order_items` VALUES (10713, 26, 31.23, 30, 0.00);INSERT INTO `order_items` VALUES (10713, 45, 9.50, 110, 0.00);INSERT INTO `order_items` VALUES (10713, 46, 12.00, 24, 0.00);INSERT INTO `order_items` VALUES (10714, 2, 19.00, 30, 0.25);INSERT INTO `order_items` VALUES (10714, 17, 39.00, 27, 0.25);INSERT INTO `order_items` VALUES (10714, 47, 9.50, 50, 0.25);INSERT INTO `order_items` VALUES (10714, 56, 38.00, 18, 0.25);INSERT INTO `order_items` VALUES (10714, 58, 13.25, 12, 0.25);INSERT INTO `order_items` VALUES (10715, 10, 31.00, 21, 0.00);INSERT INTO `order_items` VALUES (10715, 71, 21.50, 30, 0.00);INSERT INTO `order_items` VALUES (10716, 21, 10.00, 5, 0.00);INSERT INTO `order_items` VALUES (10716, 51, 53.00, 7, 0.00);INSERT INTO `order_items` VALUES (10716, 61, 28.50, 10, 0.00);INSERT INTO `order_items` VALUES (10717, 21, 10.00, 32, 0.05);INSERT INTO `order_items` VALUES (10717, 54, 7.45, 15, 0.00);INSERT INTO `order_items` VALUES (10717, 69, 36.00, 25, 0.05);INSERT INTO `order_items` VALUES (10718, 12, 38.00, 36, 0.00);INSERT INTO `order_items` VALUES (10718, 16, 17.45, 20, 0.00);INSERT INTO `order_items` VALUES (10718, 36, 19.00, 40, 0.00);INSERT INTO `order_items` VALUES (10718, 62, 49.30, 20, 0.00);INSERT INTO `order_items` VALUES (10719, 18, 62.50, 12, 0.25);INSERT INTO `order_items` VALUES (10719, 30, 25.89, 3, 0.25);INSERT INTO `order_items` VALUES (10719, 54, 7.45, 40, 0.25);INSERT INTO `order_items` VALUES (10720, 35, 18.00, 21, 0.00);INSERT INTO `order_items` VALUES (10720, 71, 21.50, 8, 0.00);INSERT INTO `order_items` VALUES (10721, 44, 19.45, 50, 0.05);INSERT INTO `order_items` VALUES (10722, 2, 19.00, 3, 0.00);INSERT INTO `order_items` VALUES (10722, 31, 12.50, 50, 0.00);INSERT INTO `order_items` VALUES (10722, 68, 12.50, 45, 0.00);INSERT INTO `order_items` VALUES (10722, 75, 7.75, 42, 0.00);INSERT INTO `order_items` VALUES (10723, 26, 31.23, 15, 0.00);INSERT INTO `order_items` VALUES (10724, 10, 31.00, 16, 0.00);INSERT INTO `order_items` VALUES (10724, 61, 28.50, 5, 0.00);INSERT INTO `order_items` VALUES (10725, 41, 9.65, 12, 0.00);INSERT INTO `order_items` VALUES (10725, 52, 7.00, 4, 0.00);INSERT INTO `order_items` VALUES (10725, 55, 24.00, 6, 0.00);INSERT INTO `order_items` VALUES (10726, 4, 22.00, 25, 0.00);INSERT INTO `order_items` VALUES (10726, 11, 21.00, 5, 0.00);INSERT INTO `order_items` VALUES (10727, 17, 39.00, 20, 0.05);INSERT INTO `order_items` VALUES (10727, 56, 38.00, 10, 0.05);INSERT INTO `order_items` VALUES (10727, 59, 55.00, 10, 0.05);INSERT INTO `order_items` VALUES (10728, 30, 25.89, 15, 0.00);INSERT INTO `order_items` VALUES (10728, 40, 18.40, 6, 0.00);INSERT INTO `order_items` VALUES (10728, 55, 24.00, 12, 0.00);INSERT INTO `order_items` VALUES (10728, 60, 34.00, 15, 0.00);INSERT INTO `order_items` VALUES (10729, 1, 18.00, 50, 0.00);INSERT INTO `order_items` VALUES (10729, 21, 10.00, 30, 0.00);INSERT INTO `order_items` VALUES (10729, 50, 16.25, 40, 0.00);INSERT INTO `order_items` VALUES (10730, 16, 17.45, 15, 0.05);INSERT INTO `order_items` VALUES (10730, 31, 12.50, 3, 0.05);INSERT INTO `order_items` VALUES (10730, 65, 21.05, 10, 0.05);INSERT INTO `order_items` VALUES (10731, 21, 10.00, 40, 0.05);INSERT INTO `order_items` VALUES (10731, 51, 53.00, 30, 0.05);INSERT INTO `order_items` VALUES (10732, 76, 18.00, 20, 0.00);INSERT INTO `order_items` VALUES (10733, 14, 23.25, 16, 0.00);INSERT INTO `order_items` VALUES (10733, 28, 45.60, 20, 0.00);INSERT INTO `order_items` VALUES (10733, 52, 7.00, 25, 0.00);INSERT INTO `order_items` VALUES (10734, 6, 25.00, 30, 0.00);INSERT INTO `order_items` VALUES (10734, 30, 25.89, 15, 0.00);INSERT INTO `order_items` VALUES (10734, 76, 18.00, 20, 0.00);INSERT INTO `order_items` VALUES (10735, 61, 28.50, 20, 0.10);INSERT INTO `order_items` VALUES (10735, 77, 13.00, 2, 0.10);INSERT INTO `order_items` VALUES (10736, 65, 21.05, 40, 0.00);INSERT INTO `order_items` VALUES (10736, 75, 7.75, 20, 0.00);INSERT INTO `order_items` VALUES (10737, 13, 6.00, 4, 0.00);INSERT INTO `order_items` VALUES (10737, 41, 9.65, 12, 0.00);INSERT INTO `order_items` VALUES (10738, 16, 17.45, 3, 0.00);INSERT INTO `order_items` VALUES (10739, 36, 19.00, 6, 0.00);INSERT INTO `order_items` VALUES (10739, 52, 7.00, 18, 0.00);INSERT INTO `order_items` VALUES (10740, 28, 45.60, 5, 0.20);INSERT INTO `order_items` VALUES (10740, 35, 18.00, 35, 0.20);INSERT INTO `order_items` VALUES (10740, 45, 9.50, 40, 0.20);INSERT INTO `order_items` VALUES (10740, 56, 38.00, 14, 0.20);INSERT INTO `order_items` VALUES (10741, 2, 19.00, 15, 0.20);INSERT INTO `order_items` VALUES (10742, 3, 10.00, 20, 0.00);INSERT INTO `order_items` VALUES (10742, 60, 34.00, 50, 0.00);INSERT INTO `order_items` VALUES (10742, 72, 34.80, 35, 0.00);INSERT INTO `order_items` VALUES (10743, 46, 12.00, 28, 0.05);INSERT INTO `order_items` VALUES (10744, 40, 18.40, 50, 0.20);INSERT INTO `order_items` VALUES (10745, 18, 62.50, 24, 0.00);INSERT INTO `order_items` VALUES (10745, 44, 19.45, 16, 0.00);INSERT INTO `order_items` VALUES (10745, 59, 55.00, 45, 0.00);INSERT INTO `order_items` VALUES (10745, 72, 34.80, 7, 0.00);INSERT INTO `order_items` VALUES (10746, 13, 6.00, 6, 0.00);INSERT INTO `order_items` VALUES (10746, 42, 14.00, 28, 0.00);INSERT INTO `order_items` VALUES (10746, 62, 49.30, 9, 0.00);INSERT INTO `order_items` VALUES (10746, 69, 36.00, 40, 0.00);INSERT INTO `order_items` VALUES (10747, 31, 12.50, 8, 0.00);INSERT INTO `order_items` VALUES (10747, 41, 9.65, 35, 0.00);INSERT INTO `order_items` VALUES (10747, 63, 43.90, 9, 0.00);INSERT INTO `order_items` VALUES (10747, 69, 36.00, 30, 0.00);INSERT INTO `order_items` VALUES (10748, 23, 9.00, 44, 0.00);INSERT INTO `order_items` VALUES (10748, 40, 18.40, 40, 0.00);INSERT INTO `order_items` VALUES (10748, 56, 38.00, 28, 0.00);INSERT INTO `order_items` VALUES (10749, 56, 38.00, 15, 0.00);INSERT INTO `order_items` VALUES (10749, 59, 55.00, 6, 0.00);INSERT INTO `order_items` VALUES (10749, 76, 18.00, 10, 0.00);INSERT INTO `order_items` VALUES (10750, 14, 23.25, 5, 0.15);INSERT INTO `order_items` VALUES (10750, 45, 9.50, 40, 0.15);INSERT INTO `order_items` VALUES (10750, 59, 55.00, 25, 0.15);INSERT INTO `order_items` VALUES (10751, 26, 31.23, 12, 0.10);INSERT INTO `order_items` VALUES (10751, 30, 25.89, 30, 0.00);INSERT INTO `order_items` VALUES (10751, 50, 16.25, 20, 0.10);INSERT INTO `order_items` VALUES (10751, 73, 15.00, 15, 0.00);INSERT INTO `order_items` VALUES (10752, 1, 18.00, 8, 0.00);INSERT INTO `order_items` VALUES (10752, 69, 36.00, 3, 0.00);INSERT INTO `order_items` VALUES (10753, 45, 9.50, 4, 0.00);INSERT INTO `order_items` VALUES (10753, 74, 10.00, 5, 0.00);INSERT INTO `order_items` VALUES (10754, 40, 18.40, 3, 0.00);INSERT INTO `order_items` VALUES (10755, 47, 9.50, 30, 0.25);INSERT INTO `order_items` VALUES (10755, 56, 38.00, 30, 0.25);INSERT INTO `order_items` VALUES (10755, 57, 19.50, 14, 0.25);INSERT INTO `order_items` VALUES (10755, 69, 36.00, 25, 0.25);INSERT INTO `order_items` VALUES (10756, 18, 62.50, 21, 0.20);INSERT INTO `order_items` VALUES (10756, 36, 19.00, 20, 0.20);INSERT INTO `order_items` VALUES (10756, 68, 12.50, 6, 0.20);INSERT INTO `order_items` VALUES (10756, 69, 36.00, 20, 0.20);INSERT INTO `order_items` VALUES (10757, 34, 14.00, 30, 0.00);INSERT INTO `order_items` VALUES (10757, 59, 55.00, 7, 0.00);INSERT INTO `order_items` VALUES (10757, 62, 49.30, 30, 0.00);INSERT INTO `order_items` VALUES (10757, 64, 33.25, 24, 0.00);INSERT INTO `order_items` VALUES (10758, 26, 31.23, 20, 0.00);INSERT INTO `order_items` VALUES (10758, 52, 7.00, 60, 0.00);INSERT INTO `order_items` VALUES (10758, 70, 15.00, 40, 0.00);INSERT INTO `order_items` VALUES (10759, 32, 32.00, 10, 0.00);INSERT INTO `order_items` VALUES (10760, 25, 14.00, 12, 0.25);INSERT INTO `order_items` VALUES (10760, 27, 43.90, 40, 0.00);INSERT INTO `order_items` VALUES (10760, 43, 46.00, 30, 0.25);INSERT INTO `order_items` VALUES (10761, 25, 14.00, 35, 0.25);INSERT INTO `order_items` VALUES (10761, 75, 7.75, 18, 0.00);INSERT INTO `order_items` VALUES (10762, 39, 18.00, 16, 0.00);INSERT INTO `order_items` VALUES (10762, 47, 9.50, 30, 0.00);INSERT INTO `order_items` VALUES (10762, 51, 53.00, 28, 0.00);INSERT INTO `order_items` VALUES (10762, 56, 38.00, 60, 0.00);INSERT INTO `order_items` VALUES (10763, 21, 10.00, 40, 0.00);INSERT INTO `order_items` VALUES (10763, 22, 21.00, 6, 0.00);INSERT INTO `order_items` VALUES (10763, 24, 4.50, 20, 0.00);INSERT INTO `order_items` VALUES (10764, 3, 10.00, 20, 0.10);INSERT INTO `order_items` VALUES (10764, 39, 18.00, 130, 0.10);INSERT INTO `order_items` VALUES (10765, 65, 21.05, 80, 0.10);INSERT INTO `order_items` VALUES (10766, 2, 19.00, 40, 0.00);INSERT INTO `order_items` VALUES (10766, 7, 30.00, 35, 0.00);INSERT INTO `order_items` VALUES (10766, 68, 12.50, 40, 0.00);INSERT INTO `order_items` VALUES (10767, 42, 14.00, 2, 0.00);INSERT INTO `order_items` VALUES (10768, 22, 21.00, 4, 0.00);INSERT INTO `order_items` VALUES (10768, 31, 12.50, 50, 0.00);INSERT INTO `order_items` VALUES (10768, 60, 34.00, 15, 0.00);INSERT INTO `order_items` VALUES (10768, 71, 21.50, 12, 0.00);INSERT INTO `order_items` VALUES (10769, 41, 9.65, 30, 0.05);INSERT INTO `order_items` VALUES (10769, 52, 7.00, 15, 0.05);INSERT INTO `order_items` VALUES (10769, 61, 28.50, 20, 0.00);INSERT INTO `order_items` VALUES (10769, 62, 49.30, 15, 0.00);INSERT INTO `order_items` VALUES (10770, 11, 21.00, 15, 0.25);INSERT INTO `order_items` VALUES (10771, 71, 21.50, 16, 0.00);INSERT INTO `order_items` VALUES (10772, 29, 123.79, 18, 0.00);INSERT INTO `order_items` VALUES (10772, 59, 55.00, 25, 0.00);INSERT INTO `order_items` VALUES (10773, 17, 39.00, 33, 0.00);INSERT INTO `order_items` VALUES (10773, 31, 12.50, 70, 0.20);INSERT INTO `order_items` VALUES (10773, 75, 7.75, 7, 0.20);INSERT INTO `order_items` VALUES (10774, 31, 12.50, 2, 0.25);INSERT INTO `order_items` VALUES (10774, 66, 17.00, 50, 0.00);INSERT INTO `order_items` VALUES (10775, 10, 31.00, 6, 0.00);INSERT INTO `order_items` VALUES (10775, 67, 14.00, 3, 0.00);INSERT INTO `order_items` VALUES (10776, 31, 12.50, 16, 0.05);INSERT INTO `order_items` VALUES (10776, 42, 14.00, 12, 0.05);INSERT INTO `order_items` VALUES (10776, 45, 9.50, 27, 0.05);INSERT INTO `order_items` VALUES (10776, 51, 53.00, 120, 0.05);INSERT INTO `order_items` VALUES (10777, 42, 14.00, 20, 0.20);INSERT INTO `order_items` VALUES (10778, 41, 9.65, 10, 0.00);INSERT INTO `order_items` VALUES (10779, 16, 17.45, 20, 0.00);INSERT INTO `order_items` VALUES (10779, 62, 49.30, 20, 0.00);INSERT INTO `order_items` VALUES (10780, 70, 15.00, 35, 0.00);INSERT INTO `order_items` VALUES (10780, 77, 13.00, 15, 0.00);INSERT INTO `order_items` VALUES (10781, 54, 7.45, 3, 0.20);INSERT INTO `order_items` VALUES (10781, 56, 38.00, 20, 0.20);INSERT INTO `order_items` VALUES (10781, 74, 10.00, 35, 0.00);INSERT INTO `order_items` VALUES (10782, 31, 12.50, 1, 0.00);INSERT INTO `order_items` VALUES (10783, 31, 12.50, 10, 0.00);INSERT INTO `order_items` VALUES (10783, 38, 263.50, 5, 0.00);INSERT INTO `order_items` VALUES (10784, 36, 19.00, 30, 0.00);INSERT INTO `order_items` VALUES (10784, 39, 18.00, 2, 0.15);INSERT INTO `order_items` VALUES (10784, 72, 34.80, 30, 0.15);INSERT INTO `order_items` VALUES (10785, 10, 31.00, 10, 0.00);INSERT INTO `order_items` VALUES (10785, 75, 7.75, 10, 0.00);INSERT INTO `order_items` VALUES (10786, 8, 40.00, 30, 0.20);INSERT INTO `order_items` VALUES (10786, 30, 25.89, 15, 0.20);INSERT INTO `order_items` VALUES (10786, 75, 7.75, 42, 0.20);INSERT INTO `order_items` VALUES (10787, 2, 19.00, 15, 0.05);INSERT INTO `order_items` VALUES (10787, 29, 123.79, 20, 0.05);INSERT INTO `order_items` VALUES (10788, 19, 9.20, 50, 0.05);INSERT INTO `order_items` VALUES (10788, 75, 7.75, 40, 0.05);INSERT INTO `order_items` VALUES (10789, 18, 62.50, 30, 0.00);INSERT INTO `order_items` VALUES (10789, 35, 18.00, 15, 0.00);INSERT INTO `order_items` VALUES (10789, 63, 43.90, 30, 0.00);INSERT INTO `order_items` VALUES (10789, 68, 12.50, 18, 0.00);INSERT INTO `order_items` VALUES (10790, 7, 30.00, 3, 0.15);INSERT INTO `order_items` VALUES (10790, 56, 38.00, 20, 0.15);INSERT INTO `order_items` VALUES (10791, 29, 123.79, 14, 0.05);INSERT INTO `order_items` VALUES (10791, 41, 9.65, 20, 0.05);INSERT INTO `order_items` VALUES (10792, 2, 19.00, 10, 0.00);INSERT INTO `order_items` VALUES (10792, 54, 7.45, 3, 0.00);INSERT INTO `order_items` VALUES (10792, 68, 12.50, 15, 0.00);INSERT INTO `order_items` VALUES (10793, 41, 9.65, 14, 0.00);INSERT INTO `order_items` VALUES (10793, 52, 7.00, 8, 0.00);INSERT INTO `order_items` VALUES (10794, 14, 23.25, 15, 0.20);INSERT INTO `order_items` VALUES (10794, 54, 7.45, 6, 0.20);INSERT INTO `order_items` VALUES (10795, 16, 17.45, 65, 0.00);INSERT INTO `order_items` VALUES (10795, 17, 39.00, 35, 0.25);INSERT INTO `order_items` VALUES (10796, 26, 31.23, 21, 0.20);INSERT INTO `order_items` VALUES (10796, 44, 19.45, 10, 0.00);INSERT INTO `order_items` VALUES (10796, 64, 33.25, 35, 0.20);INSERT INTO `order_items` VALUES (10796, 69, 36.00, 24, 0.20);INSERT INTO `order_items` VALUES (10797, 11, 21.00, 20, 0.00);INSERT INTO `order_items` VALUES (10798, 62, 49.30, 2, 0.00);INSERT INTO `order_items` VALUES (10798, 72, 34.80, 10, 0.00);INSERT INTO `order_items` VALUES (10799, 13, 6.00, 20, 0.15);INSERT INTO `order_items` VALUES (10799, 24, 4.50, 20, 0.15);INSERT INTO `order_items` VALUES (10799, 59, 55.00, 25, 0.00);INSERT INTO `order_items` VALUES (10800, 11, 21.00, 50, 0.10);INSERT INTO `order_items` VALUES (10800, 51, 53.00, 10, 0.10);INSERT INTO `order_items` VALUES (10800, 54, 7.45, 7, 0.10);INSERT INTO `order_items` VALUES (10801, 17, 39.00, 40, 0.25);INSERT INTO `order_items` VALUES (10801, 29, 123.79, 20, 0.25);INSERT INTO `order_items` VALUES (10802, 30, 25.89, 25, 0.25);INSERT INTO `order_items` VALUES (10802, 51, 53.00, 30, 0.25);INSERT INTO `order_items` VALUES (10802, 55, 24.00, 60, 0.25);INSERT INTO `order_items` VALUES (10802, 62, 49.30, 5, 0.25);INSERT INTO `order_items` VALUES (10803, 19, 9.20, 24, 0.05);INSERT INTO `order_items` VALUES (10803, 25, 14.00, 15, 0.05);INSERT INTO `order_items` VALUES (10803, 59, 55.00, 15, 0.05);INSERT INTO `order_items` VALUES (10804, 10, 31.00, 36, 0.00);INSERT INTO `order_items` VALUES (10804, 28, 45.60, 24, 0.00);INSERT INTO `order_items` VALUES (10804, 49, 20.00, 4, 0.15);INSERT INTO `order_items` VALUES (10805, 34, 14.00, 10, 0.00);INSERT INTO `order_items` VALUES (10805, 38, 263.50, 10, 0.00);INSERT INTO `order_items` VALUES (10806, 2, 19.00, 20, 0.25);INSERT INTO `order_items` VALUES (10806, 65, 21.05, 2, 0.00);INSERT INTO `order_items` VALUES (10806, 74, 10.00, 15, 0.25);INSERT INTO `order_items` VALUES (10807, 40, 18.40, 1, 0.00);INSERT INTO `order_items` VALUES (10808, 56, 38.00, 20, 0.15);INSERT INTO `order_items` VALUES (10808, 76, 18.00, 50, 0.15);INSERT INTO `order_items` VALUES (10809, 52, 7.00, 20, 0.00);INSERT INTO `order_items` VALUES (10810, 13, 6.00, 7, 0.00);INSERT INTO `order_items` VALUES (10810, 25, 14.00, 5, 0.00);INSERT INTO `order_items` VALUES (10810, 70, 15.00, 5, 0.00);INSERT INTO `order_items` VALUES (10811, 19, 9.20, 15, 0.00);INSERT INTO `order_items` VALUES (10811, 23, 9.00, 18, 0.00);INSERT INTO `order_items` VALUES (10811, 40, 18.40, 30, 0.00);INSERT INTO `order_items` VALUES (10812, 31, 12.50, 16, 0.10);INSERT INTO `order_items` VALUES (10812, 72, 34.80, 40, 0.10);INSERT INTO `order_items` VALUES (10812, 77, 13.00, 20, 0.00);INSERT INTO `order_items` VALUES (10813, 2, 19.00, 12, 0.20);INSERT INTO `order_items` VALUES (10813, 46, 12.00, 35, 0.00);INSERT INTO `order_items` VALUES (10814, 41, 9.65, 20, 0.00);INSERT INTO `order_items` VALUES (10814, 43, 46.00, 20, 0.15);INSERT INTO `order_items` VALUES (10814, 48, 12.75, 8, 0.15);INSERT INTO `order_items` VALUES (10814, 61, 28.50, 30, 0.15);INSERT INTO `order_items` VALUES (10815, 33, 2.50, 16, 0.00);INSERT INTO `order_items` VALUES (10816, 38, 263.50, 30, 0.05);INSERT INTO `order_items` VALUES (10816, 62, 49.30, 20, 0.05);INSERT INTO `order_items` VALUES (10817, 26, 31.23, 40, 0.15);INSERT INTO `order_items` VALUES (10817, 38, 263.50, 30, 0.00);INSERT INTO `order_items` VALUES (10817, 40, 18.40, 60, 0.15);INSERT INTO `order_items` VALUES (10817, 62, 49.30, 25, 0.15);INSERT INTO `order_items` VALUES (10818, 32, 32.00, 20, 0.00);INSERT INTO `order_items` VALUES (10818, 41, 9.65, 20, 0.00);INSERT INTO `order_items` VALUES (10819, 43, 46.00, 7, 0.00);INSERT INTO `order_items` VALUES (10819, 75, 7.75, 20, 0.00);INSERT INTO `order_items` VALUES (10820, 56, 38.00, 30, 0.00);INSERT INTO `order_items` VALUES (10821, 35, 18.00, 20, 0.00);INSERT INTO `order_items` VALUES (10821, 51, 53.00, 6, 0.00);INSERT INTO `order_items` VALUES (10822, 62, 49.30, 3, 0.00);INSERT INTO `order_items` VALUES (10822, 70, 15.00, 6, 0.00);INSERT INTO `order_items` VALUES (10823, 11, 21.00, 20, 0.10);INSERT INTO `order_items` VALUES (10823, 57, 19.50, 15, 0.00);INSERT INTO `order_items` VALUES (10823, 59, 55.00, 40, 0.10);INSERT INTO `order_items` VALUES (10823, 77, 13.00, 15, 0.10);INSERT INTO `order_items` VALUES (10824, 41, 9.65, 12, 0.00);INSERT INTO `order_items` VALUES (10824, 70, 15.00, 9, 0.00);INSERT INTO `order_items` VALUES (10825, 26, 31.23, 12, 0.00);INSERT INTO `order_items` VALUES (10825, 53, 32.80, 20, 0.00);INSERT INTO `order_items` VALUES (10826, 31, 12.50, 35, 0.00);INSERT INTO `order_items` VALUES (10826, 57, 19.50, 15, 0.00);INSERT INTO `order_items` VALUES (10827, 10, 31.00, 15, 0.00);INSERT INTO `order_items` VALUES (10827, 39, 18.00, 21, 0.00);INSERT INTO `order_items` VALUES (10828, 20, 81.00, 5, 0.00);INSERT INTO `order_items` VALUES (10828, 38, 263.50, 2, 0.00);INSERT INTO `order_items` VALUES (10829, 2, 19.00, 10, 0.00);INSERT INTO `order_items` VALUES (10829, 8, 40.00, 20, 0.00);INSERT INTO `order_items` VALUES (10829, 13, 6.00, 10, 0.00);INSERT INTO `order_items` VALUES (10829, 60, 34.00, 21, 0.00);INSERT INTO `order_items` VALUES (10830, 6, 25.00, 6, 0.00);INSERT INTO `order_items` VALUES (10830, 39, 18.00, 28, 0.00);INSERT INTO `order_items` VALUES (10830, 60, 34.00, 30, 0.00);INSERT INTO `order_items` VALUES (10830, 68, 12.50, 24, 0.00);INSERT INTO `order_items` VALUES (10831, 19, 9.20, 2, 0.00);INSERT INTO `order_items` VALUES (10831, 35, 18.00, 8, 0.00);INSERT INTO `order_items` VALUES (10831, 38, 263.50, 8, 0.00);INSERT INTO `order_items` VALUES (10831, 43, 46.00, 9, 0.00);INSERT INTO `order_items` VALUES (10832, 13, 6.00, 3, 0.20);INSERT INTO `order_items` VALUES (10832, 25, 14.00, 10, 0.20);INSERT INTO `order_items` VALUES (10832, 44, 19.45, 16, 0.20);INSERT INTO `order_items` VALUES (10832, 64, 33.25, 3, 0.00);INSERT INTO `order_items` VALUES (10833, 7, 30.00, 20, 0.10);INSERT INTO `order_items` VALUES (10833, 31, 12.50, 9, 0.10);INSERT INTO `order_items` VALUES (10833, 53, 32.80, 9, 0.10);INSERT INTO `order_items` VALUES (10834, 29, 123.79, 8, 0.05);INSERT INTO `order_items` VALUES (10834, 30, 25.89, 20, 0.05);INSERT INTO `order_items` VALUES (10835, 59, 55.00, 15, 0.00);INSERT INTO `order_items` VALUES (10835, 77, 13.00, 2, 0.20);INSERT INTO `order_items` VALUES (10836, 22, 21.00, 52, 0.00);INSERT INTO `order_items` VALUES (10836, 35, 18.00, 6, 0.00);INSERT INTO `order_items` VALUES (10836, 57, 19.50, 24, 0.00);INSERT INTO `order_items` VALUES (10836, 60, 34.00, 60, 0.00);INSERT INTO `order_items` VALUES (10836, 64, 33.25, 30, 0.00);INSERT INTO `order_items` VALUES (10837, 13, 6.00, 6, 0.00);INSERT INTO `order_items` VALUES (10837, 40, 18.40, 25, 0.00);INSERT INTO `order_items` VALUES (10837, 47, 9.50, 40, 0.25);INSERT INTO `order_items` VALUES (10837, 76, 18.00, 21, 0.25);INSERT INTO `order_items` VALUES (10838, 1, 18.00, 4, 0.25);INSERT INTO `order_items` VALUES (10838, 18, 62.50, 25, 0.25);INSERT INTO `order_items` VALUES (10838, 36, 19.00, 50, 0.25);INSERT INTO `order_items` VALUES (10839, 58, 13.25, 30, 0.10);INSERT INTO `order_items` VALUES (10839, 72, 34.80, 15, 0.10);INSERT INTO `order_items` VALUES (10840, 25, 14.00, 6, 0.20);INSERT INTO `order_items` VALUES (10840, 39, 18.00, 10, 0.20);INSERT INTO `order_items` VALUES (10841, 10, 31.00, 16, 0.00);INSERT INTO `order_items` VALUES (10841, 56, 38.00, 30, 0.00);INSERT INTO `order_items` VALUES (10841, 59, 55.00, 50, 0.00);INSERT INTO `order_items` VALUES (10841, 77, 13.00, 15, 0.00);INSERT INTO `order_items` VALUES (10842, 11, 21.00, 15, 0.00);INSERT INTO `order_items` VALUES (10842, 43, 46.00, 5, 0.00);INSERT INTO `order_items` VALUES (10842, 68, 12.50, 20, 0.00);INSERT INTO `order_items` VALUES (10842, 70, 15.00, 12, 0.00);INSERT INTO `order_items` VALUES (10843, 51, 53.00, 4, 0.25);INSERT INTO `order_items` VALUES (10844, 22, 21.00, 35, 0.00);INSERT INTO `order_items` VALUES (10845, 23, 9.00, 70, 0.10);INSERT INTO `order_items` VALUES (10845, 35, 18.00, 25, 0.10);INSERT INTO `order_items` VALUES (10845, 42, 14.00, 42, 0.10);INSERT INTO `order_items` VALUES (10845, 58, 13.25, 60, 0.10);INSERT INTO `order_items` VALUES (10845, 64, 33.25, 48, 0.00);INSERT INTO `order_items` VALUES (10846, 4, 22.00, 21, 0.00);INSERT INTO `order_items` VALUES (10846, 70, 15.00, 30, 0.00);INSERT INTO `order_items` VALUES (10846, 74, 10.00, 20, 0.00);INSERT INTO `order_items` VALUES (10847, 1, 18.00, 80, 0.20);INSERT INTO `order_items` VALUES (10847, 19, 9.20, 12, 0.20);INSERT INTO `order_items` VALUES (10847, 37, 26.00, 60, 0.20);INSERT INTO `order_items` VALUES (10847, 45, 9.50, 36, 0.20);INSERT INTO `order_items` VALUES (10847, 60, 34.00, 45, 0.20);INSERT INTO `order_items` VALUES (10847, 71, 21.50, 55, 0.20);INSERT INTO `order_items` VALUES (10848, 5, 21.35, 30, 0.00);INSERT INTO `order_items` VALUES (10848, 9, 97.00, 3, 0.00);INSERT INTO `order_items` VALUES (10849, 3, 10.00, 49, 0.00);INSERT INTO `order_items` VALUES (10849, 26, 31.23, 18, 0.15);INSERT INTO `order_items` VALUES (10850, 25, 14.00, 20, 0.15);INSERT INTO `order_items` VALUES (10850, 33, 2.50, 4, 0.15);INSERT INTO `order_items` VALUES (10850, 70, 15.00, 30, 0.15);INSERT INTO `order_items` VALUES (10851, 2, 19.00, 5, 0.05);INSERT INTO `order_items` VALUES (10851, 25, 14.00, 10, 0.05);INSERT INTO `order_items` VALUES (10851, 57, 19.50, 10, 0.05);INSERT INTO `order_items` VALUES (10851, 59, 55.00, 42, 0.05);INSERT INTO `order_items` VALUES (10852, 2, 19.00, 15, 0.00);INSERT INTO `order_items` VALUES (10852, 17, 39.00, 6, 0.00);INSERT INTO `order_items` VALUES (10852, 62, 49.30, 50, 0.00);INSERT INTO `order_items` VALUES (10853, 18, 62.50, 10, 0.00);INSERT INTO `order_items` VALUES (10854, 10, 31.00, 100, 0.15);INSERT INTO `order_items` VALUES (10854, 13, 6.00, 65, 0.15);INSERT INTO `order_items` VALUES (10855, 16, 17.45, 50, 0.00);INSERT INTO `order_items` VALUES (10855, 31, 12.50, 14, 0.00);INSERT INTO `order_items` VALUES (10855, 56, 38.00, 24, 0.00);INSERT INTO `order_items` VALUES (10855, 65, 21.05, 15, 0.15);INSERT INTO `order_items` VALUES (10856, 2, 19.00, 20, 0.00);INSERT INTO `order_items` VALUES (10856, 42, 14.00, 20, 0.00);INSERT INTO `order_items` VALUES (10857, 3, 10.00, 30, 0.00);INSERT INTO `order_items` VALUES (10857, 26, 31.23, 35, 0.25);INSERT INTO `order_items` VALUES (10857, 29, 123.79, 10, 0.25);INSERT INTO `order_items` VALUES (10858, 7, 30.00, 5, 0.00);INSERT INTO `order_items` VALUES (10858, 27, 43.90, 10, 0.00);INSERT INTO `order_items` VALUES (10858, 70, 15.00, 4, 0.00);INSERT INTO `order_items` VALUES (10859, 24, 4.50, 40, 0.25);INSERT INTO `order_items` VALUES (10859, 54, 7.45, 35, 0.25);INSERT INTO `order_items` VALUES (10859, 64, 33.25, 30, 0.25);INSERT INTO `order_items` VALUES (10860, 51, 53.00, 3, 0.00);INSERT INTO `order_items` VALUES (10860, 76, 18.00, 20, 0.00);INSERT INTO `order_items` VALUES (10861, 17, 39.00, 42, 0.00);INSERT INTO `order_items` VALUES (10861, 18, 62.50, 20, 0.00);INSERT INTO `order_items` VALUES (10861, 21, 10.00, 40, 0.00);INSERT INTO `order_items` VALUES (10861, 33, 2.50, 35, 0.00);INSERT INTO `order_items` VALUES (10861, 62, 49.30, 3, 0.00);INSERT INTO `order_items` VALUES (10862, 11, 21.00, 25, 0.00);INSERT INTO `order_items` VALUES (10862, 52, 7.00, 8, 0.00);INSERT INTO `order_items` VALUES (10863, 1, 18.00, 20, 0.15);INSERT INTO `order_items` VALUES (10863, 58, 13.25, 12, 0.15);INSERT INTO `order_items` VALUES (10864, 35, 18.00, 4, 0.00);INSERT INTO `order_items` VALUES (10864, 67, 14.00, 15, 0.00);INSERT INTO `order_items` VALUES (10865, 38, 263.50, 60, 0.05);INSERT INTO `order_items` VALUES (10865, 39, 18.00, 80, 0.05);INSERT INTO `order_items` VALUES (10866, 2, 19.00, 21, 0.25);INSERT INTO `order_items` VALUES (10866, 24, 4.50, 6, 0.25);INSERT INTO `order_items` VALUES (10866, 30, 25.89, 40, 0.25);INSERT INTO `order_items` VALUES (10867, 53, 32.80, 3, 0.00);INSERT INTO `order_items` VALUES (10868, 26, 31.23, 20, 0.00);INSERT INTO `order_items` VALUES (10868, 35, 18.00, 30, 0.00);INSERT INTO `order_items` VALUES (10868, 49, 20.00, 42, 0.10);INSERT INTO `order_items` VALUES (10869, 1, 18.00, 40, 0.00);INSERT INTO `order_items` VALUES (10869, 11, 21.00, 10, 0.00);INSERT INTO `order_items` VALUES (10869, 23, 9.00, 50, 0.00);INSERT INTO `order_items` VALUES (10869, 68, 12.50, 20, 0.00);INSERT INTO `order_items` VALUES (10870, 35, 18.00, 3, 0.00);INSERT INTO `order_items` VALUES (10870, 51, 53.00, 2, 0.00);INSERT INTO `order_items` VALUES (10871, 6, 25.00, 50, 0.05);INSERT INTO `order_items` VALUES (10871, 16, 17.45, 12, 0.05);INSERT INTO `order_items` VALUES (10871, 17, 39.00, 16, 0.05);INSERT INTO `order_items` VALUES (10872, 55, 24.00, 10, 0.05);INSERT INTO `order_items` VALUES (10872, 62, 49.30, 20, 0.05);INSERT INTO `order_items` VALUES (10872, 64, 33.25, 15, 0.05);INSERT INTO `order_items` VALUES (10872, 65, 21.05, 21, 0.05);INSERT INTO `order_items` VALUES (10873, 21, 10.00, 20, 0.00);INSERT INTO `order_items` VALUES (10873, 28, 45.60, 3, 0.00);INSERT INTO `order_items` VALUES (10874, 10, 31.00, 10, 0.00);INSERT INTO `order_items` VALUES (10875, 19, 9.20, 25, 0.00);INSERT INTO `order_items` VALUES (10875, 47, 9.50, 21, 0.10);INSERT INTO `order_items` VALUES (10875, 49, 20.00, 15, 0.00);INSERT INTO `order_items` VALUES (10876, 46, 12.00, 21, 0.00);INSERT INTO `order_items` VALUES (10876, 64, 33.25, 20, 0.00);INSERT INTO `order_items` VALUES (10877, 16, 17.45, 30, 0.25);INSERT INTO `order_items` VALUES (10877, 18, 62.50, 25, 0.00);INSERT INTO `order_items` VALUES (10878, 20, 81.00, 20, 0.05);INSERT INTO `order_items` VALUES (10879, 40, 18.40, 12, 0.00);INSERT INTO `order_items` VALUES (10879, 65, 21.05, 10, 0.00);INSERT INTO `order_items` VALUES (10879, 76, 18.00, 10, 0.00);INSERT INTO `order_items` VALUES (10880, 23, 9.00, 30, 0.20);INSERT INTO `order_items` VALUES (10880, 61, 28.50, 30, 0.20);INSERT INTO `order_items` VALUES (10880, 70, 15.00, 50, 0.20);INSERT INTO `order_items` VALUES (10881, 73, 15.00, 10, 0.00);INSERT INTO `order_items` VALUES (10882, 42, 14.00, 25, 0.00);INSERT INTO `order_items` VALUES (10882, 49, 20.00, 20, 0.15);INSERT INTO `order_items` VALUES (10882, 54, 7.45, 32, 0.15);INSERT INTO `order_items` VALUES (10883, 24, 4.50, 8, 0.00);INSERT INTO `order_items` VALUES (10884, 21, 10.00, 40, 0.05);INSERT INTO `order_items` VALUES (10884, 56, 38.00, 21, 0.05);INSERT INTO `order_items` VALUES (10884, 65, 21.05, 12, 0.05);INSERT INTO `order_items` VALUES (10885, 2, 19.00, 20, 0.00);INSERT INTO `order_items` VALUES (10885, 24, 4.50, 12, 0.00);INSERT INTO `order_items` VALUES (10885, 70, 15.00, 30, 0.00);INSERT INTO `order_items` VALUES (10885, 77, 13.00, 25, 0.00);INSERT INTO `order_items` VALUES (10886, 10, 31.00, 70, 0.00);INSERT INTO `order_items` VALUES (10886, 31, 12.50, 35, 0.00);INSERT INTO `order_items` VALUES (10886, 77, 13.00, 40, 0.00);INSERT INTO `order_items` VALUES (10887, 25, 14.00, 5, 0.00);INSERT INTO `order_items` VALUES (10888, 2, 19.00, 20, 0.00);INSERT INTO `order_items` VALUES (10888, 68, 12.50, 18, 0.00);INSERT INTO `order_items` VALUES (10889, 11, 21.00, 40, 0.00);INSERT INTO `order_items` VALUES (10889, 38, 263.50, 40, 0.00);INSERT INTO `order_items` VALUES (10890, 17, 39.00, 15, 0.00);INSERT INTO `order_items` VALUES (10890, 34, 14.00, 10, 0.00);INSERT INTO `order_items` VALUES (10890, 41, 9.65, 14, 0.00);INSERT INTO `order_items` VALUES (10891, 30, 25.89, 15, 0.05);INSERT INTO `order_items` VALUES (10892, 59, 55.00, 40, 0.05);INSERT INTO `order_items` VALUES (10893, 8, 40.00, 30, 0.00);INSERT INTO `order_items` VALUES (10893, 24, 4.50, 10, 0.00);INSERT INTO `order_items` VALUES (10893, 29, 123.79, 24, 0.00);INSERT INTO `order_items` VALUES (10893, 30, 25.89, 35, 0.00);INSERT INTO `order_items` VALUES (10893, 36, 19.00, 20, 0.00);INSERT INTO `order_items` VALUES (10894, 13, 6.00, 28, 0.05);INSERT INTO `order_items` VALUES (10894, 69, 36.00, 50, 0.05);INSERT INTO `order_items` VALUES (10894, 75, 7.75, 120, 0.05);INSERT INTO `order_items` VALUES (10895, 24, 4.50, 110, 0.00);INSERT INTO `order_items` VALUES (10895, 39, 18.00, 45, 0.00);INSERT INTO `order_items` VALUES (10895, 40, 18.40, 91, 0.00);INSERT INTO `order_items` VALUES (10895, 60, 34.00, 100, 0.00);INSERT INTO `order_items` VALUES (10896, 45, 9.50, 15, 0.00);INSERT INTO `order_items` VALUES (10896, 56, 38.00, 16, 0.00);INSERT INTO `order_items` VALUES (10897, 29, 123.79, 80, 0.00);INSERT INTO `order_items` VALUES (10897, 30, 25.89, 36, 0.00);INSERT INTO `order_items` VALUES (10898, 13, 6.00, 5, 0.00);INSERT INTO `order_items` VALUES (10899, 39, 18.00, 8, 0.15);INSERT INTO `order_items` VALUES (10900, 70, 15.00, 3, 0.25);INSERT INTO `order_items` VALUES (10901, 41, 9.65, 30, 0.00);INSERT INTO `order_items` VALUES (10901, 71, 21.50, 30, 0.00);INSERT INTO `order_items` VALUES (10902, 55, 24.00, 30, 0.15);INSERT INTO `order_items` VALUES (10902, 62, 49.30, 6, 0.15);INSERT INTO `order_items` VALUES (10903, 13, 6.00, 40, 0.00);INSERT INTO `order_items` VALUES (10903, 65, 21.05, 21, 0.00);INSERT INTO `order_items` VALUES (10903, 68, 12.50, 20, 0.00);INSERT INTO `order_items` VALUES (10904, 58, 13.25, 15, 0.00);INSERT INTO `order_items` VALUES (10904, 62, 49.30, 35, 0.00);INSERT INTO `order_items` VALUES (10905, 1, 18.00, 20, 0.05);INSERT INTO `order_items` VALUES (10906, 61, 28.50, 15, 0.00);INSERT INTO `order_items` VALUES (10907, 75, 7.75, 14, 0.00);INSERT INTO `order_items` VALUES (10908, 7, 30.00, 20, 0.05);INSERT INTO `order_items` VALUES (10908, 52, 7.00, 14, 0.05);INSERT INTO `order_items` VALUES (10909, 7, 30.00, 12, 0.00);INSERT INTO `order_items` VALUES (10909, 16, 17.45, 15, 0.00);INSERT INTO `order_items` VALUES (10909, 41, 9.65, 5, 0.00);INSERT INTO `order_items` VALUES (10910, 19, 9.20, 12, 0.00);INSERT INTO `order_items` VALUES (10910, 49, 20.00, 10, 0.00);INSERT INTO `order_items` VALUES (10910, 61, 28.50, 5, 0.00);INSERT INTO `order_items` VALUES (10911, 1, 18.00, 10, 0.00);INSERT INTO `order_items` VALUES (10911, 17, 39.00, 12, 0.00);INSERT INTO `order_items` VALUES (10911, 67, 14.00, 15, 0.00);INSERT INTO `order_items` VALUES (10912, 11, 21.00, 40, 0.25);INSERT INTO `order_items` VALUES (10912, 29, 123.79, 60, 0.25);INSERT INTO `order_items` VALUES (10913, 4, 22.00, 30, 0.25);INSERT INTO `order_items` VALUES (10913, 33, 2.50, 40, 0.25);INSERT INTO `order_items` VALUES (10913, 58, 13.25, 15, 0.00);INSERT INTO `order_items` VALUES (10914, 71, 21.50, 25, 0.00);INSERT INTO `order_items` VALUES (10915, 17, 39.00, 10, 0.00);INSERT INTO `order_items` VALUES (10915, 33, 2.50, 30, 0.00);INSERT INTO `order_items` VALUES (10915, 54, 7.45, 10, 0.00);INSERT INTO `order_items` VALUES (10916, 16, 17.45, 6, 0.00);INSERT INTO `order_items` VALUES (10916, 32, 32.00, 6, 0.00);INSERT INTO `order_items` VALUES (10916, 57, 19.50, 20, 0.00);INSERT INTO `order_items` VALUES (10917, 30, 25.89, 1, 0.00);INSERT INTO `order_items` VALUES (10917, 60, 34.00, 10, 0.00);INSERT INTO `order_items` VALUES (10918, 1, 18.00, 60, 0.25);INSERT INTO `order_items` VALUES (10918, 60, 34.00, 25, 0.25);INSERT INTO `order_items` VALUES (10919, 16, 17.45, 24, 0.00);INSERT INTO `order_items` VALUES (10919, 25, 14.00, 24, 0.00);INSERT INTO `order_items` VALUES (10919, 40, 18.40, 20, 0.00);INSERT INTO `order_items` VALUES (10920, 50, 16.25, 24, 0.00);INSERT INTO `order_items` VALUES (10921, 35, 18.00, 10, 0.00);INSERT INTO `order_items` VALUES (10921, 63, 43.90, 40, 0.00);INSERT INTO `order_items` VALUES (10922, 17, 39.00, 15, 0.00);INSERT INTO `order_items` VALUES (10922, 24, 4.50, 35, 0.00);INSERT INTO `order_items` VALUES (10923, 42, 14.00, 10, 0.20);INSERT INTO `order_items` VALUES (10923, 43, 46.00, 10, 0.20);INSERT INTO `order_items` VALUES (10923, 67, 14.00, 24, 0.20);INSERT INTO `order_items` VALUES (10924, 10, 31.00, 20, 0.10);INSERT INTO `order_items` VALUES (10924, 28, 45.60, 30, 0.10);INSERT INTO `order_items` VALUES (10924, 75, 7.75, 6, 0.00);INSERT INTO `order_items` VALUES (10925, 36, 19.00, 25, 0.15);INSERT INTO `order_items` VALUES (10925, 52, 7.00, 12, 0.15);INSERT INTO `order_items` VALUES (10926, 11, 21.00, 2, 0.00);INSERT INTO `order_items` VALUES (10926, 13, 6.00, 10, 0.00);INSERT INTO `order_items` VALUES (10926, 19, 9.20, 7, 0.00);INSERT INTO `order_items` VALUES (10926, 72, 34.80, 10, 0.00);INSERT INTO `order_items` VALUES (10927, 20, 81.00, 5, 0.00);INSERT INTO `order_items` VALUES (10927, 52, 7.00, 5, 0.00);INSERT INTO `order_items` VALUES (10927, 76, 18.00, 20, 0.00);INSERT INTO `order_items` VALUES (10928, 47, 9.50, 5, 0.00);INSERT INTO `order_items` VALUES (10928, 76, 18.00, 5, 0.00);INSERT INTO `order_items` VALUES (10929, 21, 10.00, 60, 0.00);INSERT INTO `order_items` VALUES (10929, 75, 7.75, 49, 0.00);INSERT INTO `order_items` VALUES (10929, 77, 13.00, 15, 0.00);INSERT INTO `order_items` VALUES (10930, 21, 10.00, 36, 0.00);INSERT INTO `order_items` VALUES (10930, 27, 43.90, 25, 0.00);INSERT INTO `order_items` VALUES (10930, 55, 24.00, 25, 0.20);INSERT INTO `order_items` VALUES (10930, 58, 13.25, 30, 0.20);INSERT INTO `order_items` VALUES (10931, 13, 6.00, 42, 0.15);INSERT INTO `order_items` VALUES (10931, 57, 19.50, 30, 0.00);INSERT INTO `order_items` VALUES (10932, 16, 17.45, 30, 0.10);INSERT INTO `order_items` VALUES (10932, 62, 49.30, 14, 0.10);INSERT INTO `order_items` VALUES (10932, 72, 34.80, 16, 0.00);INSERT INTO `order_items` VALUES (10932, 75, 7.75, 20, 0.10);INSERT INTO `order_items` VALUES (10933, 53, 32.80, 2, 0.00);INSERT INTO `order_items` VALUES (10933, 61, 28.50, 30, 0.00);INSERT INTO `order_items` VALUES (10934, 6, 25.00, 20, 0.00);INSERT INTO `order_items` VALUES (10935, 1, 18.00, 21, 0.00);INSERT INTO `order_items` VALUES (10935, 18, 62.50, 4, 0.25);INSERT INTO `order_items` VALUES (10935, 23, 9.00, 8, 0.25);INSERT INTO `order_items` VALUES (10936, 36, 19.00, 30, 0.20);INSERT INTO `order_items` VALUES (10937, 28, 45.60, 8, 0.00);INSERT INTO `order_items` VALUES (10937, 34, 14.00, 20, 0.00);INSERT INTO `order_items` VALUES (10938, 13, 6.00, 20, 0.25);INSERT INTO `order_items` VALUES (10938, 43, 46.00, 24, 0.25);INSERT INTO `order_items` VALUES (10938, 60, 34.00, 49, 0.25);INSERT INTO `order_items` VALUES (10938, 71, 21.50, 35, 0.25);INSERT INTO `order_items` VALUES (10939, 2, 19.00, 10, 0.15);INSERT INTO `order_items` VALUES (10939, 67, 14.00, 40, 0.15);INSERT INTO `order_items` VALUES (10940, 7, 30.00, 8, 0.00);INSERT INTO `order_items` VALUES (10940, 13, 6.00, 20, 0.00);INSERT INTO `order_items` VALUES (10941, 31, 12.50, 44, 0.25);INSERT INTO `order_items` VALUES (10941, 62, 49.30, 30, 0.25);INSERT INTO `order_items` VALUES (10941, 68, 12.50, 80, 0.25);INSERT INTO `order_items` VALUES (10941, 72, 34.80, 50, 0.00);INSERT INTO `order_items` VALUES (10942, 49, 20.00, 28, 0.00);INSERT INTO `order_items` VALUES (10943, 13, 6.00, 15, 0.00);INSERT INTO `order_items` VALUES (10943, 22, 21.00, 21, 0.00);INSERT INTO `order_items` VALUES (10943, 46, 12.00, 15, 0.00);INSERT INTO `order_items` VALUES (10944, 11, 21.00, 5, 0.25);INSERT INTO `order_items` VALUES (10944, 44, 19.45, 18, 0.25);INSERT INTO `order_items` VALUES (10944, 56, 38.00, 18, 0.00);INSERT INTO `order_items` VALUES (10945, 13, 6.00, 20, 0.00);INSERT INTO `order_items` VALUES (10945, 31, 12.50, 10, 0.00);INSERT INTO `order_items` VALUES (10946, 10, 31.00, 25, 0.00);INSERT INTO `order_items` VALUES (10946, 24, 4.50, 25, 0.00);INSERT INTO `order_items` VALUES (10946, 77, 13.00, 40, 0.00);INSERT INTO `order_items` VALUES (10947, 59, 55.00, 4, 0.00);INSERT INTO `order_items` VALUES (10948, 50, 16.25, 9, 0.00);INSERT INTO `order_items` VALUES (10948, 51, 53.00, 40, 0.00);INSERT INTO `order_items` VALUES (10948, 55, 24.00, 4, 0.00);INSERT INTO `order_items` VALUES (10949, 6, 25.00, 12, 0.00);INSERT INTO `order_items` VALUES (10949, 10, 31.00, 30, 0.00);INSERT INTO `order_items` VALUES (10949, 17, 39.00, 6, 0.00);INSERT INTO `order_items` VALUES (10949, 62, 49.30, 60, 0.00);INSERT INTO `order_items` VALUES (10950, 4, 22.00, 5, 0.00);INSERT INTO `order_items` VALUES (10951, 33, 2.50, 15, 0.05);INSERT INTO `order_items` VALUES (10951, 41, 9.65, 6, 0.05);INSERT INTO `order_items` VALUES (10951, 75, 7.75, 50, 0.05);INSERT INTO `order_items` VALUES (10952, 6, 25.00, 16, 0.05);INSERT INTO `order_items` VALUES (10952, 28, 45.60, 2, 0.00);INSERT INTO `order_items` VALUES (10953, 20, 81.00, 50, 0.05);INSERT INTO `order_items` VALUES (10953, 31, 12.50, 50, 0.05);INSERT INTO `order_items` VALUES (10954, 16, 17.45, 28, 0.15);INSERT INTO `order_items` VALUES (10954, 31, 12.50, 25, 0.15);INSERT INTO `order_items` VALUES (10954, 45, 9.50, 30, 0.00);INSERT INTO `order_items` VALUES (10954, 60, 34.00, 24, 0.15);INSERT INTO `order_items` VALUES (10955, 75, 7.75, 12, 0.20);INSERT INTO `order_items` VALUES (10956, 21, 10.00, 12, 0.00);INSERT INTO `order_items` VALUES (10956, 47, 9.50, 14, 0.00);INSERT INTO `order_items` VALUES (10956, 51, 53.00, 8, 0.00);INSERT INTO `order_items` VALUES (10957, 30, 25.89, 30, 0.00);INSERT INTO `order_items` VALUES (10957, 35, 18.00, 40, 0.00);INSERT INTO `order_items` VALUES (10957, 64, 33.25, 8, 0.00);INSERT INTO `order_items` VALUES (10958, 5, 21.35, 20, 0.00);INSERT INTO `order_items` VALUES (10958, 7, 30.00, 6, 0.00);INSERT INTO `order_items` VALUES (10958, 72, 34.80, 5, 0.00);INSERT INTO `order_items` VALUES (10959, 75, 7.75, 20, 0.15);INSERT INTO `order_items` VALUES (10960, 24, 4.50, 10, 0.25);INSERT INTO `order_items` VALUES (10960, 41, 9.65, 24, 0.00);INSERT INTO `order_items` VALUES (10961, 52, 7.00, 6, 0.05);INSERT INTO `order_items` VALUES (10961, 76, 18.00, 60, 0.00);INSERT INTO `order_items` VALUES (10962, 7, 30.00, 45, 0.00);INSERT INTO `order_items` VALUES (10962, 13, 6.00, 77, 0.00);INSERT INTO `order_items` VALUES (10962, 53, 32.80, 20, 0.00);INSERT INTO `order_items` VALUES (10962, 69, 36.00, 9, 0.00);INSERT INTO `order_items` VALUES (10962, 76, 18.00, 44, 0.00);INSERT INTO `order_items` VALUES (10963, 60, 34.00, 2, 0.15);INSERT INTO `order_items` VALUES (10964, 18, 62.50, 6, 0.00);INSERT INTO `order_items` VALUES (10964, 38, 263.50, 5, 0.00);INSERT INTO `order_items` VALUES (10964, 69, 36.00, 10, 0.00);INSERT INTO `order_items` VALUES (10965, 51, 53.00, 16, 0.00);INSERT INTO `order_items` VALUES (10966, 37, 26.00, 8, 0.00);INSERT INTO `order_items` VALUES (10966, 56, 38.00, 12, 0.15);INSERT INTO `order_items` VALUES (10966, 62, 49.30, 12, 0.15);INSERT INTO `order_items` VALUES (10967, 19, 9.20, 12, 0.00);INSERT INTO `order_items` VALUES (10967, 49, 20.00, 40, 0.00);INSERT INTO `order_items` VALUES (10968, 12, 38.00, 30, 0.00);INSERT INTO `order_items` VALUES (10968, 24, 4.50, 30, 0.00);INSERT INTO `order_items` VALUES (10968, 64, 33.25, 4, 0.00);INSERT INTO `order_items` VALUES (10969, 46, 12.00, 9, 0.00);INSERT INTO `order_items` VALUES (10970, 52, 7.00, 40, 0.20);INSERT INTO `order_items` VALUES (10971, 29, 123.79, 14, 0.00);INSERT INTO `order_items` VALUES (10972, 17, 39.00, 6, 0.00);INSERT INTO `order_items` VALUES (10972, 33, 2.50, 7, 0.00);INSERT INTO `order_items` VALUES (10973, 26, 31.23, 5, 0.00);INSERT INTO `order_items` VALUES (10973, 41, 9.65, 6, 0.00);INSERT INTO `order_items` VALUES (10973, 75, 7.75, 10, 0.00);INSERT INTO `order_items` VALUES (10974, 63, 43.90, 10, 0.00);INSERT INTO `order_items` VALUES (10975, 8, 40.00, 16, 0.00);INSERT INTO `order_items` VALUES (10975, 75, 7.75, 10, 0.00);INSERT INTO `order_items` VALUES (10976, 28, 45.60, 20, 0.00);INSERT INTO `order_items` VALUES (10977, 39, 18.00, 30, 0.00);INSERT INTO `order_items` VALUES (10977, 47, 9.50, 30, 0.00);INSERT INTO `order_items` VALUES (10977, 51, 53.00, 10, 0.00);INSERT INTO `order_items` VALUES (10977, 63, 43.90, 20, 0.00);INSERT INTO `order_items` VALUES (10978, 8, 40.00, 20, 0.15);INSERT INTO `order_items` VALUES (10978, 21, 10.00, 40, 0.15);INSERT INTO `order_items` VALUES (10978, 40, 18.40, 10, 0.00);INSERT INTO `order_items` VALUES (10978, 44, 19.45, 6, 0.15);INSERT INTO `order_items` VALUES (10979, 7, 30.00, 18, 0.00);INSERT INTO `order_items` VALUES (10979, 12, 38.00, 20, 0.00);INSERT INTO `order_items` VALUES (10979, 24, 4.50, 80, 0.00);INSERT INTO `order_items` VALUES (10979, 27, 43.90, 30, 0.00);INSERT INTO `order_items` VALUES (10979, 31, 12.50, 24, 0.00);INSERT INTO `order_items` VALUES (10979, 63, 43.90, 35, 0.00);INSERT INTO `order_items` VALUES (10980, 75, 7.75, 40, 0.20);INSERT INTO `order_items` VALUES (10981, 38, 263.50, 60, 0.00);INSERT INTO `order_items` VALUES (10982, 7, 30.00, 20, 0.00);INSERT INTO `order_items` VALUES (10982, 43, 46.00, 9, 0.00);INSERT INTO `order_items` VALUES (10983, 13, 6.00, 84, 0.15);INSERT INTO `order_items` VALUES (10983, 57, 19.50, 15, 0.00);INSERT INTO `order_items` VALUES (10984, 16, 17.45, 55, 0.00);INSERT INTO `order_items` VALUES (10984, 24, 4.50, 20, 0.00);INSERT INTO `order_items` VALUES (10984, 36, 19.00, 40, 0.00);INSERT INTO `order_items` VALUES (10985, 16, 17.45, 36, 0.10);INSERT INTO `order_items` VALUES (10985, 18, 62.50, 8, 0.10);INSERT INTO `order_items` VALUES (10985, 32, 32.00, 35, 0.10);INSERT INTO `order_items` VALUES (10986, 11, 21.00, 30, 0.00);INSERT INTO `order_items` VALUES (10986, 20, 81.00, 15, 0.00);INSERT INTO `order_items` VALUES (10986, 76, 18.00, 10, 0.00);INSERT INTO `order_items` VALUES (10986, 77, 13.00, 15, 0.00);INSERT INTO `order_items` VALUES (10987, 7, 30.00, 60, 0.00);INSERT INTO `order_items` VALUES (10987, 43, 46.00, 6, 0.00);INSERT INTO `order_items` VALUES (10987, 72, 34.80, 20, 0.00);INSERT INTO `order_items` VALUES (10988, 7, 30.00, 60, 0.00);INSERT INTO `order_items` VALUES (10988, 62, 49.30, 40, 0.10);INSERT INTO `order_items` VALUES (10989, 6, 25.00, 40, 0.00);INSERT INTO `order_items` VALUES (10989, 11, 21.00, 15, 0.00);INSERT INTO `order_items` VALUES (10989, 41, 9.65, 4, 0.00);INSERT INTO `order_items` VALUES (10990, 21, 10.00, 65, 0.00);INSERT INTO `order_items` VALUES (10990, 34, 14.00, 60, 0.15);INSERT INTO `order_items` VALUES (10990, 55, 24.00, 65, 0.15);INSERT INTO `order_items` VALUES (10990, 61, 28.50, 66, 0.15);INSERT INTO `order_items` VALUES (10991, 2, 19.00, 50, 0.20);INSERT INTO `order_items` VALUES (10991, 70, 15.00, 20, 0.20);INSERT INTO `order_items` VALUES (10991, 76, 18.00, 90, 0.20);INSERT INTO `order_items` VALUES (10992, 72, 34.80, 2, 0.00);INSERT INTO `order_items` VALUES (10993, 29, 123.79, 50, 0.25);INSERT INTO `order_items` VALUES (10993, 41, 9.65, 35, 0.25);INSERT INTO `order_items` VALUES (10994, 59, 55.00, 18, 0.05);INSERT INTO `order_items` VALUES (10995, 51, 53.00, 20, 0.00);INSERT INTO `order_items` VALUES (10995, 60, 34.00, 4, 0.00);INSERT INTO `order_items` VALUES (10996, 42, 14.00, 40, 0.00);INSERT INTO `order_items` VALUES (10997, 32, 32.00, 50, 0.00);INSERT INTO `order_items` VALUES (10997, 46, 12.00, 20, 0.25);INSERT INTO `order_items` VALUES (10997, 52, 7.00, 20, 0.25);INSERT INTO `order_items` VALUES (10998, 24, 4.50, 12, 0.00);INSERT INTO `order_items` VALUES (10998, 61, 28.50, 7, 0.00);INSERT INTO `order_items` VALUES (10998, 74, 10.00, 20, 0.00);INSERT INTO `order_items` VALUES (10998, 75, 7.75, 30, 0.00);INSERT INTO `order_items` VALUES (10999, 41, 9.65, 20, 0.05);INSERT INTO `order_items` VALUES (10999, 51, 53.00, 15, 0.05);INSERT INTO `order_items` VALUES (10999, 77, 13.00, 21, 0.05);INSERT INTO `order_items` VALUES (11000, 4, 22.00, 25, 0.25);INSERT INTO `order_items` VALUES (11000, 24, 4.50, 30, 0.25);INSERT INTO `order_items` VALUES (11000, 77, 13.00, 30, 0.00);INSERT INTO `order_items` VALUES (11001, 7, 30.00, 60, 0.00);INSERT INTO `order_items` VALUES (11001, 22, 21.00, 25, 0.00);INSERT INTO `order_items` VALUES (11001, 46, 12.00, 25, 0.00);INSERT INTO `order_items` VALUES (11001, 55, 24.00, 6, 0.00);INSERT INTO `order_items` VALUES (11002, 13, 6.00, 56, 0.00);INSERT INTO `order_items` VALUES (11002, 35, 18.00, 15, 0.15);INSERT INTO `order_items` VALUES (11002, 42, 14.00, 24, 0.15);INSERT INTO `order_items` VALUES (11002, 55, 24.00, 40, 0.00);INSERT INTO `order_items` VALUES (11003, 1, 18.00, 4, 0.00);INSERT INTO `order_items` VALUES (11003, 40, 18.40, 10, 0.00);INSERT INTO `order_items` VALUES (11003, 52, 7.00, 10, 0.00);INSERT INTO `order_items` VALUES (11004, 26, 31.23, 6, 0.00);INSERT INTO `order_items` VALUES (11004, 76, 18.00, 6, 0.00);INSERT INTO `order_items` VALUES (11005, 1, 18.00, 2, 0.00);INSERT INTO `order_items` VALUES (11005, 59, 55.00, 10, 0.00);INSERT INTO `order_items` VALUES (11006, 1, 18.00, 8, 0.00);INSERT INTO `order_items` VALUES (11006, 29, 123.79, 2, 0.25);INSERT INTO `order_items` VALUES (11007, 8, 40.00, 30, 0.00);INSERT INTO `order_items` VALUES (11007, 29, 123.79, 10, 0.00);INSERT INTO `order_items` VALUES (11007, 42, 14.00, 14, 0.00);INSERT INTO `order_items` VALUES (11008, 28, 45.60, 70, 0.05);INSERT INTO `order_items` VALUES (11008, 34, 14.00, 90, 0.05);INSERT INTO `order_items` VALUES (11008, 71, 21.50, 21, 0.00);INSERT INTO `order_items` VALUES (11009, 24, 4.50, 12, 0.00);INSERT INTO `order_items` VALUES (11009, 36, 19.00, 18, 0.25);INSERT INTO `order_items` VALUES (11009, 60, 34.00, 9, 0.00);INSERT INTO `order_items` VALUES (11010, 7, 30.00, 20, 0.00);INSERT INTO `order_items` VALUES (11010, 24, 4.50, 10, 0.00);INSERT INTO `order_items` VALUES (11011, 58, 13.25, 40, 0.05);INSERT INTO `order_items` VALUES (11011, 71, 21.50, 20, 0.00);INSERT INTO `order_items` VALUES (11012, 19, 9.20, 50, 0.05);INSERT INTO `order_items` VALUES (11012, 60, 34.00, 36, 0.05);INSERT INTO `order_items` VALUES (11012, 71, 21.50, 60, 0.05);INSERT INTO `order_items` VALUES (11013, 23, 9.00, 10, 0.00);INSERT INTO `order_items` VALUES (11013, 42, 14.00, 4, 0.00);INSERT INTO `order_items` VALUES (11013, 45, 9.50, 20, 0.00);INSERT INTO `order_items` VALUES (11013, 68, 12.50, 2, 0.00);INSERT INTO `order_items` VALUES (11014, 41, 9.65, 28, 0.10);INSERT INTO `order_items` VALUES (11015, 30, 25.89, 15, 0.00);INSERT INTO `order_items` VALUES (11015, 77, 13.00, 18, 0.00);INSERT INTO `order_items` VALUES (11016, 31, 12.50, 15, 0.00);INSERT INTO `order_items` VALUES (11016, 36, 19.00, 16, 0.00);INSERT INTO `order_items` VALUES (11017, 3, 10.00, 25, 0.00);INSERT INTO `order_items` VALUES (11017, 59, 55.00, 110, 0.00);INSERT INTO `order_items` VALUES (11017, 70, 15.00, 30, 0.00);INSERT INTO `order_items` VALUES (11018, 12, 38.00, 20, 0.00);INSERT INTO `order_items` VALUES (11018, 18, 62.50, 10, 0.00);INSERT INTO `order_items` VALUES (11018, 56, 38.00, 5, 0.00);INSERT INTO `order_items` VALUES (11019, 46, 12.00, 3, 0.00);INSERT INTO `order_items` VALUES (11019, 49, 20.00, 2, 0.00);INSERT INTO `order_items` VALUES (11020, 10, 31.00, 24, 0.15);INSERT INTO `order_items` VALUES (11021, 2, 19.00, 11, 0.25);INSERT INTO `order_items` VALUES (11021, 20, 81.00, 15, 0.00);INSERT INTO `order_items` VALUES (11021, 26, 31.23, 63, 0.00);INSERT INTO `order_items` VALUES (11021, 51, 53.00, 44, 0.25);INSERT INTO `order_items` VALUES (11021, 72, 34.80, 35, 0.00);INSERT INTO `order_items` VALUES (11022, 19, 9.20, 35, 0.00);INSERT INTO `order_items` VALUES (11022, 69, 36.00, 30, 0.00);INSERT INTO `order_items` VALUES (11023, 7, 30.00, 4, 0.00);INSERT INTO `order_items` VALUES (11023, 43, 46.00, 30, 0.00);INSERT INTO `order_items` VALUES (11024, 26, 31.23, 12, 0.00);INSERT INTO `order_items` VALUES (11024, 33, 2.50, 30, 0.00);INSERT INTO `order_items` VALUES (11024, 65, 21.05, 21, 0.00);INSERT INTO `order_items` VALUES (11024, 71, 21.50, 50, 0.00);INSERT INTO `order_items` VALUES (11025, 1, 18.00, 10, 0.10);INSERT INTO `order_items` VALUES (11025, 13, 6.00, 20, 0.10);INSERT INTO `order_items` VALUES (11026, 18, 62.50, 8, 0.00);INSERT INTO `order_items` VALUES (11026, 51, 53.00, 10, 0.00);INSERT INTO `order_items` VALUES (11027, 24, 4.50, 30, 0.25);INSERT INTO `order_items` VALUES (11027, 62, 49.30, 21, 0.25);INSERT INTO `order_items` VALUES (11028, 55, 24.00, 35, 0.00);INSERT INTO `order_items` VALUES (11028, 59, 55.00, 24, 0.00);INSERT INTO `order_items` VALUES (11029, 56, 38.00, 20, 0.00);INSERT INTO `order_items` VALUES (11029, 63, 43.90, 12, 0.00);INSERT INTO `order_items` VALUES (11030, 2, 19.00, 100, 0.25);INSERT INTO `order_items` VALUES (11030, 5, 21.35, 70, 0.00);INSERT INTO `order_items` VALUES (11030, 29, 123.79, 60, 0.25);INSERT INTO `order_items` VALUES (11030, 59, 55.00, 100, 0.25);INSERT INTO `order_items` VALUES (11031, 1, 18.00, 45, 0.00);INSERT INTO `order_items` VALUES (11031, 13, 6.00, 80, 0.00);INSERT INTO `order_items` VALUES (11031, 24, 4.50, 21, 0.00);INSERT INTO `order_items` VALUES (11031, 64, 33.25, 20, 0.00);INSERT INTO `order_items` VALUES (11031, 71, 21.50, 16, 0.00);INSERT INTO `order_items` VALUES (11032, 36, 19.00, 35, 0.00);INSERT INTO `order_items` VALUES (11032, 38, 263.50, 25, 0.00);INSERT INTO `order_items` VALUES (11032, 59, 55.00, 30, 0.00);INSERT INTO `order_items` VALUES (11033, 53, 32.80, 70, 0.10);INSERT INTO `order_items` VALUES (11033, 69, 36.00, 36, 0.10);INSERT INTO `order_items` VALUES (11034, 21, 10.00, 15, 0.10);INSERT INTO `order_items` VALUES (11034, 44, 19.45, 12, 0.00);INSERT INTO `order_items` VALUES (11034, 61, 28.50, 6, 0.00);INSERT INTO `order_items` VALUES (11035, 1, 18.00, 10, 0.00);INSERT INTO `order_items` VALUES (11035, 35, 18.00, 60, 0.00);INSERT INTO `order_items` VALUES (11035, 42, 14.00, 30, 0.00);INSERT INTO `order_items` VALUES (11035, 54, 7.45, 10, 0.00);INSERT INTO `order_items` VALUES (11036, 13, 6.00, 7, 0.00);INSERT INTO `order_items` VALUES (11036, 59, 55.00, 30, 0.00);INSERT INTO `order_items` VALUES (11037, 70, 15.00, 4, 0.00);INSERT INTO `order_items` VALUES (11038, 40, 18.40, 5, 0.20);INSERT INTO `order_items` VALUES (11038, 52, 7.00, 2, 0.00);INSERT INTO `order_items` VALUES (11038, 71, 21.50, 30, 0.00);INSERT INTO `order_items` VALUES (11039, 28, 45.60, 20, 0.00);INSERT INTO `order_items` VALUES (11039, 35, 18.00, 24, 0.00);INSERT INTO `order_items` VALUES (11039, 49, 20.00, 60, 0.00);INSERT INTO `order_items` VALUES (11039, 57, 19.50, 28, 0.00);INSERT INTO `order_items` VALUES (11040, 21, 10.00, 20, 0.00);INSERT INTO `order_items` VALUES (11041, 2, 19.00, 30, 0.20);INSERT INTO `order_items` VALUES (11041, 63, 43.90, 30, 0.00);INSERT INTO `order_items` VALUES (11042, 44, 19.45, 15, 0.00);INSERT INTO `order_items` VALUES (11042, 61, 28.50, 4, 0.00);INSERT INTO `order_items` VALUES (11043, 11, 21.00, 10, 0.00);INSERT INTO `order_items` VALUES (11044, 62, 49.30, 12, 0.00);INSERT INTO `order_items` VALUES (11045, 33, 2.50, 15, 0.00);INSERT INTO `order_items` VALUES (11045, 51, 53.00, 24, 0.00);INSERT INTO `order_items` VALUES (11046, 12, 38.00, 20, 0.05);INSERT INTO `order_items` VALUES (11046, 32, 32.00, 15, 0.05);INSERT INTO `order_items` VALUES (11046, 35, 18.00, 18, 0.05);INSERT INTO `order_items` VALUES (11047, 1, 18.00, 25, 0.25);INSERT INTO `order_items` VALUES (11047, 5, 21.35, 30, 0.25);INSERT INTO `order_items` VALUES (11048, 68, 12.50, 42, 0.00);INSERT INTO `order_items` VALUES (11049, 2, 19.00, 10, 0.20);INSERT INTO `order_items` VALUES (11049, 12, 38.00, 4, 0.20);INSERT INTO `order_items` VALUES (11050, 76, 18.00, 50, 0.10);INSERT INTO `order_items` VALUES (11051, 24, 4.50, 10, 0.20);INSERT INTO `order_items` VALUES (11052, 43, 46.00, 30, 0.20);INSERT INTO `order_items` VALUES (11052, 61, 28.50, 10, 0.20);INSERT INTO `order_items` VALUES (11053, 18, 62.50, 35, 0.20);INSERT INTO `order_items` VALUES (11053, 32, 32.00, 20, 0.00);INSERT INTO `order_items` VALUES (11053, 64, 33.25, 25, 0.20);INSERT INTO `order_items` VALUES (11054, 33, 2.50, 10, 0.00);INSERT INTO `order_items` VALUES (11054, 67, 14.00, 20, 0.00);INSERT INTO `order_items` VALUES (11055, 24, 4.50, 15, 0.00);INSERT INTO `order_items` VALUES (11055, 25, 14.00, 15, 0.00);INSERT INTO `order_items` VALUES (11055, 51, 53.00, 20, 0.00);INSERT INTO `order_items` VALUES (11055, 57, 19.50, 20, 0.00);INSERT INTO `order_items` VALUES (11056, 7, 30.00, 40, 0.00);INSERT INTO `order_items` VALUES (11056, 55, 24.00, 35, 0.00);INSERT INTO `order_items` VALUES (11056, 60, 34.00, 50, 0.00);INSERT INTO `order_items` VALUES (11057, 70, 15.00, 3, 0.00);INSERT INTO `order_items` VALUES (11058, 21, 10.00, 3, 0.00);INSERT INTO `order_items` VALUES (11058, 60, 34.00, 21, 0.00);INSERT INTO `order_items` VALUES (11058, 61, 28.50, 4, 0.00);INSERT INTO `order_items` VALUES (11059, 13, 6.00, 30, 0.00);INSERT INTO `order_items` VALUES (11059, 17, 39.00, 12, 0.00);INSERT INTO `order_items` VALUES (11059, 60, 34.00, 35, 0.00);INSERT INTO `order_items` VALUES (11060, 60, 34.00, 4, 0.00);INSERT INTO `order_items` VALUES (11060, 77, 13.00, 10, 0.00);INSERT INTO `order_items` VALUES (11061, 60, 34.00, 15, 0.00);INSERT INTO `order_items` VALUES (11062, 53, 32.80, 10, 0.20);INSERT INTO `order_items` VALUES (11062, 70, 15.00, 12, 0.20);INSERT INTO `order_items` VALUES (11063, 34, 14.00, 30, 0.00);INSERT INTO `order_items` VALUES (11063, 40, 18.40, 40, 0.10);INSERT INTO `order_items` VALUES (11063, 41, 9.65, 30, 0.10);INSERT INTO `order_items` VALUES (11064, 17, 39.00, 77, 0.10);INSERT INTO `order_items` VALUES (11064, 41, 9.65, 12, 0.00);INSERT INTO `order_items` VALUES (11064, 53, 32.80, 25, 0.10);INSERT INTO `order_items` VALUES (11064, 55, 24.00, 4, 0.10);INSERT INTO `order_items` VALUES (11064, 68, 12.50, 55, 0.00);INSERT INTO `order_items` VALUES (11065, 30, 25.89, 4, 0.25);INSERT INTO `order_items` VALUES (11065, 54, 7.45, 20, 0.25);INSERT INTO `order_items` VALUES (11066, 16, 17.45, 3, 0.00);INSERT INTO `order_items` VALUES (11066, 19, 9.20, 42, 0.00);INSERT INTO `order_items` VALUES (11066, 34, 14.00, 35, 0.00);INSERT INTO `order_items` VALUES (11067, 41, 9.65, 9, 0.00);INSERT INTO `order_items` VALUES (11068, 28, 45.60, 8, 0.15);INSERT INTO `order_items` VALUES (11068, 43, 46.00, 36, 0.15);INSERT INTO `order_items` VALUES (11068, 77, 13.00, 28, 0.15);INSERT INTO `order_items` VALUES (11069, 39, 18.00, 20, 0.00);INSERT INTO `order_items` VALUES (11070, 1, 18.00, 40, 0.15);INSERT INTO `order_items` VALUES (11070, 2, 19.00, 20, 0.15);INSERT INTO `order_items` VALUES (11070, 16, 17.45, 30, 0.15);INSERT INTO `order_items` VALUES (11070, 31, 12.50, 20, 0.00);INSERT INTO `order_items` VALUES (11071, 7, 30.00, 15, 0.05);INSERT INTO `order_items` VALUES (11071, 13, 6.00, 10, 0.05);INSERT INTO `order_items` VALUES (11072, 2, 19.00, 8, 0.00);INSERT INTO `order_items` VALUES (11072, 41, 9.65, 40, 0.00);INSERT INTO `order_items` VALUES (11072, 50, 16.25, 22, 0.00);INSERT INTO `order_items` VALUES (11072, 64, 33.25, 130, 0.00);INSERT INTO `order_items` VALUES (11073, 11, 21.00, 10, 0.00);INSERT INTO `order_items` VALUES (11073, 24, 4.50, 20, 0.00);INSERT INTO `order_items` VALUES (11074, 16, 17.45, 14, 0.05);INSERT INTO `order_items` VALUES (11075, 2, 19.00, 10, 0.15);INSERT INTO `order_items` VALUES (11075, 46, 12.00, 30, 0.15);INSERT INTO `order_items` VALUES (11075, 76, 18.00, 2, 0.15);INSERT INTO `order_items` VALUES (11076, 6, 25.00, 20, 0.25);INSERT INTO `order_items` VALUES (11076, 14, 23.25, 20, 0.25);INSERT INTO `order_items` VALUES (11076, 19, 9.20, 10, 0.25);INSERT INTO `order_items` VALUES (11077, 2, 19.00, 24, 0.20);INSERT INTO `order_items` VALUES (11077, 3, 10.00, 4, 0.00);INSERT INTO `order_items` VALUES (11077, 4, 22.00, 1, 0.00);INSERT INTO `order_items` VALUES (11077, 6, 25.00, 1, 0.02);INSERT INTO `order_items` VALUES (11077, 7, 30.00, 1, 0.05);INSERT INTO `order_items` VALUES (11077, 8, 40.00, 2, 0.10);INSERT INTO `order_items` VALUES (11077, 10, 31.00, 1, 0.00);INSERT INTO `order_items` VALUES (11077, 12, 38.00, 2, 0.05);INSERT INTO `order_items` VALUES (11077, 13, 6.00, 4, 0.00);INSERT INTO `order_items` VALUES (11077, 14, 23.25, 1, 0.03);INSERT INTO `order_items` VALUES (11077, 16, 17.45, 2, 0.03);INSERT INTO `order_items` VALUES (11077, 20, 81.00, 1, 0.04);INSERT INTO `order_items` VALUES (11077, 23, 9.00, 2, 0.00);INSERT INTO `order_items` VALUES (11077, 32, 32.00, 1, 0.00);INSERT INTO `order_items` VALUES (11077, 39, 18.00, 2, 0.05);INSERT INTO `order_items` VALUES (11077, 41, 9.65, 3, 0.00);INSERT INTO `order_items` VALUES (11077, 46, 12.00, 3, 0.02);INSERT INTO `order_items` VALUES (11077, 52, 7.00, 2, 0.00);INSERT INTO `order_items` VALUES (11077, 55, 24.00, 2, 0.00);INSERT INTO `order_items` VALUES (11077, 60, 34.00, 2, 0.06);INSERT INTO `order_items` VALUES (11077, 64, 33.25, 2, 0.03);INSERT INTO `order_items` VALUES (11077, 66, 17.00, 1, 0.00);INSERT INTO `order_items` VALUES (11077, 73, 15.00, 2, 0.01);INSERT INTO `order_items` VALUES (11077, 75, 7.75, 4, 0.00);INSERT INTO `order_items` VALUES (11077, 77, 13.00, 2, 0.00);COMMIT;-- ------------------------------ Table structure for orders-- ----------------------------DROP TABLE IF EXISTS `orders`;CREATE TABLE `orders` (  `order_id` int NOT NULL,  `customer_id` varchar(5) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,  `employee_id` int DEFAULT NULL,  `order_date` datetime DEFAULT NULL,  `shipped_date` datetime DEFAULT NULL,  `ship_via` int DEFAULT NULL,  `freight` decimal(10,2) DEFAULT NULL,  `ship_address` varchar(60) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,  `ship_city` varchar(15) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,  `ship_region` varchar(15) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,  `ship_postal_code` varchar(10) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,  `ship_country` varchar(15) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,  PRIMARY KEY (`order_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;-- ------------------------------ Records of orders-- ----------------------------BEGIN;INSERT INTO `orders` VALUES (10248, &#x27;VINET&#x27;, 5, &#x27;2016-07-04 00:00:00&#x27;, &#x27;2016-07-16 00:00:00&#x27;, 3, 32.38, &#x27;59 rue de l\\&#x27;\\&#x27;Abbaye&#x27;, &#x27;Reims&#x27;, NULL, &#x27;51100&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10249, &#x27;TOMSP&#x27;, 6, &#x27;2016-07-05 00:00:00&#x27;, &#x27;2016-07-10 00:00:00&#x27;, 1, 11.61, &#x27;Luisenstr. 48&#x27;, &#x27;Münster&#x27;, NULL, &#x27;44087&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10250, &#x27;HANAR&#x27;, 4, &#x27;2016-07-08 00:00:00&#x27;, &#x27;2016-07-12 00:00:00&#x27;, 2, 65.83, &#x27;Rua do Paço-67&#x27;, &#x27;Rio de Janeiro&#x27;, &#x27;RJ&#x27;, &#x27;05454-876&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10251, &#x27;VICTE&#x27;, 3, &#x27;2016-07-08 00:00:00&#x27;, &#x27;2016-07-15 00:00:00&#x27;, 1, 41.34, &#x27;2-rue du Commerce&#x27;, &#x27;Lyo&#x27;, NULL, &#x27;69004&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10252, &#x27;SUPRD&#x27;, 4, &#x27;2016-07-09 00:00:00&#x27;, &#x27;2016-07-11 00:00:00&#x27;, 2, 51.30, &#x27;Boulevard Tirou-255&#x27;, &#x27;Charleroi&#x27;, NULL, &#x27;B-6000&#x27;, &#x27;Belgium&#x27;);INSERT INTO `orders` VALUES (10253, &#x27;HANAR&#x27;, 3, &#x27;2016-07-10 00:00:00&#x27;, &#x27;2016-07-16 00:00:00&#x27;, 2, 58.17, &#x27;Rua do Paço-67&#x27;, &#x27;Rio de Janeiro&#x27;, &#x27;RJ&#x27;, &#x27;05454-876&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10254, &#x27;CHOPS&#x27;, 5, &#x27;2016-07-11 00:00:00&#x27;, &#x27;2016-07-23 00:00:00&#x27;, 2, 22.98, &#x27;Hauptstr. 31&#x27;, &#x27;Ber&#x27;, NULL, &#x27;3012&#x27;, &#x27;Switzerland&#x27;);INSERT INTO `orders` VALUES (10255, &#x27;RICSU&#x27;, 9, &#x27;2016-07-12 00:00:00&#x27;, &#x27;2016-07-15 00:00:00&#x27;, 3, 148.33, &#x27;Starenweg 5&#x27;, &#x27;Genève&#x27;, NULL, &#x27;1204&#x27;, &#x27;Switzerland&#x27;);INSERT INTO `orders` VALUES (10256, &#x27;WELLI&#x27;, 3, &#x27;2016-07-15 00:00:00&#x27;, &#x27;2016-07-17 00:00:00&#x27;, 2, 13.97, &#x27;Rua do Mercado-12&#x27;, &#x27;Resende&#x27;, &#x27;SP&#x27;, &#x27;08737-363&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10257, &#x27;HILAA&#x27;, 4, &#x27;2016-07-16 00:00:00&#x27;, &#x27;2016-07-22 00:00:00&#x27;, 3, 81.91, &#x27;Carrera 22 con Ave. Carlos Soublette #8-35&#x27;, &#x27;San Cristóbal&#x27;, &#x27;Táchira&#x27;, &#x27;5022&#x27;, &#x27;Venezuela&#x27;);INSERT INTO `orders` VALUES (10258, &#x27;ERNSH&#x27;, 1, &#x27;2016-07-17 00:00:00&#x27;, &#x27;2016-07-23 00:00:00&#x27;, 1, 140.51, &#x27;Kirchgasse 6&#x27;, &#x27;Graz&#x27;, NULL, &#x27;8010&#x27;, &#x27;Austria&#x27;);INSERT INTO `orders` VALUES (10259, &#x27;CENTC&#x27;, 4, &#x27;2016-07-18 00:00:00&#x27;, &#x27;2016-07-25 00:00:00&#x27;, 3, 3.25, &#x27;Sierras de Granada 9993&#x27;, &#x27;México D.F.&#x27;, NULL, &#x27;05022&#x27;, &#x27;Mexico&#x27;);INSERT INTO `orders` VALUES (10260, &#x27;OTTIK&#x27;, 4, &#x27;2016-07-19 00:00:00&#x27;, &#x27;2016-07-29 00:00:00&#x27;, 1, 55.09, &#x27;Mehrheimerstr. 369&#x27;, &#x27;Köl&#x27;, NULL, &#x27;50739&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10261, &#x27;QUEDE&#x27;, 10, &#x27;2016-07-19 00:00:00&#x27;, &#x27;2016-07-30 00:00:00&#x27;, 2, 3.05, &#x27;Rua da Panificadora-12&#x27;, &#x27;Rio de Janeiro&#x27;, &#x27;RJ&#x27;, &#x27;02389-673&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10262, &#x27;RATTC&#x27;, 8, &#x27;2016-07-22 00:00:00&#x27;, &#x27;2016-07-25 00:00:00&#x27;, 3, 48.29, &#x27;2817 Milton Dr.&#x27;, &#x27;Albuquerque&#x27;, &#x27;NM&#x27;, &#x27;87110&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10263, &#x27;ERNSH&#x27;, 9, &#x27;2016-07-23 00:00:00&#x27;, &#x27;2016-07-31 00:00:00&#x27;, 3, 146.06, &#x27;Kirchgasse 6&#x27;, &#x27;Graz&#x27;, NULL, &#x27;8010&#x27;, &#x27;Austria&#x27;);INSERT INTO `orders` VALUES (10264, &#x27;FOLKO&#x27;, 6, &#x27;2016-07-24 00:00:00&#x27;, &#x27;2016-08-23 00:00:00&#x27;, 3, 3.67, &#x27;Åkergatan 24&#x27;, &#x27;Bräcke&#x27;, NULL, &#x27;S-844 67&#x27;, &#x27;Sweden&#x27;);INSERT INTO `orders` VALUES (10265, &#x27;BLONP&#x27;, 2, &#x27;2016-07-25 00:00:00&#x27;, &#x27;2016-08-12 00:00:00&#x27;, 1, 55.28, &#x27;24-place Kléber&#x27;, &#x27;Strasbourg&#x27;, NULL, &#x27;67000&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10266, &#x27;WARTH&#x27;, 3, &#x27;2016-07-26 00:00:00&#x27;, &#x27;2016-07-31 00:00:00&#x27;, 3, 25.73, &#x27;Torikatu 38&#x27;, &#x27;Oulu&#x27;, NULL, &#x27;90110&#x27;, &#x27;Finland&#x27;);INSERT INTO `orders` VALUES (10267, &#x27;FRANK&#x27;, 4, &#x27;2016-07-29 00:00:00&#x27;, &#x27;2016-08-06 00:00:00&#x27;, 1, 208.58, &#x27;Berliner Platz 43&#x27;, &#x27;Münche&#x27;, NULL, &#x27;80805&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10268, &#x27;GROSR&#x27;, 8, &#x27;2016-07-30 00:00:00&#x27;, &#x27;2016-08-02 00:00:00&#x27;, 3, 66.29, &#x27;5ª Ave. Los Palos Grandes&#x27;, &#x27;Caracas&#x27;, &#x27;DF&#x27;, &#x27;1081&#x27;, &#x27;Venezuela&#x27;);INSERT INTO `orders` VALUES (10269, &#x27;WHITC&#x27;, 5, &#x27;2016-07-31 00:00:00&#x27;, &#x27;2016-08-09 00:00:00&#x27;, 1, 4.56, &#x27;1029 - 12th Ave. S.&#x27;, &#x27;Seattle&#x27;, &#x27;WA&#x27;, &#x27;98124&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10270, &#x27;WARTH&#x27;, 1, &#x27;2016-08-01 00:00:00&#x27;, &#x27;2016-08-02 00:00:00&#x27;, 1, 136.54, &#x27;Torikatu 38&#x27;, &#x27;Oulu&#x27;, NULL, &#x27;90110&#x27;, &#x27;Finland&#x27;);INSERT INTO `orders` VALUES (10271, &#x27;SPLIR&#x27;, 6, &#x27;2016-08-01 00:00:00&#x27;, &#x27;2016-08-30 00:00:00&#x27;, 2, 4.54, &#x27;P.O. Box 555&#x27;, &#x27;Lander&#x27;, &#x27;WY&#x27;, &#x27;82520&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10272, &#x27;RATTC&#x27;, 6, &#x27;2016-08-02 00:00:00&#x27;, &#x27;2016-08-06 00:00:00&#x27;, 2, 98.03, &#x27;2817 Milton Dr.&#x27;, &#x27;Albuquerque&#x27;, &#x27;NM&#x27;, &#x27;87110&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10273, &#x27;QUICK&#x27;, 3, &#x27;2016-08-05 00:00:00&#x27;, &#x27;2016-08-12 00:00:00&#x27;, 3, 76.07, &#x27;Taucherstraße 10&#x27;, &#x27;Cunewalde&#x27;, NULL, &#x27;01307&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10274, &#x27;VINET&#x27;, 6, &#x27;2016-08-06 00:00:00&#x27;, &#x27;2016-08-16 00:00:00&#x27;, 1, 6.01, &#x27;59 rue de l\\&#x27;\\&#x27;Abbaye&#x27;, &#x27;Reims&#x27;, NULL, &#x27;51100&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10275, &#x27;MAGAA&#x27;, 1, &#x27;2016-08-07 00:00:00&#x27;, &#x27;2016-08-09 00:00:00&#x27;, 1, 26.93, &#x27;Via Ludovico il Moro 22&#x27;, &#x27;Bergamo&#x27;, NULL, &#x27;24100&#x27;, &#x27;Italy&#x27;);INSERT INTO `orders` VALUES (10276, &#x27;TORTU&#x27;, 8, &#x27;2016-08-08 00:00:00&#x27;, &#x27;2016-08-14 00:00:00&#x27;, 3, 13.84, &#x27;Avda. Azteca 123&#x27;, &#x27;México D.F.&#x27;, NULL, &#x27;05033&#x27;, &#x27;Mexico&#x27;);INSERT INTO `orders` VALUES (10277, &#x27;MORGK&#x27;, 2, &#x27;2016-08-09 00:00:00&#x27;, &#x27;2016-08-13 00:00:00&#x27;, 3, 125.77, &#x27;Heerstr. 22&#x27;, &#x27;Leipzig&#x27;, NULL, &#x27;04179&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10278, &#x27;BERGS&#x27;, 8, &#x27;2016-08-12 00:00:00&#x27;, &#x27;2016-08-16 00:00:00&#x27;, 2, 92.69, &#x27;Berguvsvägen  8&#x27;, &#x27;Luleå&#x27;, NULL, &#x27;S-958 22&#x27;, &#x27;Sweden&#x27;);INSERT INTO `orders` VALUES (10279, &#x27;LEHMS&#x27;, 8, &#x27;2016-08-13 00:00:00&#x27;, &#x27;2016-08-16 00:00:00&#x27;, 2, 25.83, &#x27;Magazinweg 7&#x27;, &#x27;Frankfurt a.M.&#x27;, NULL, &#x27;60528&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10280, &#x27;BERGS&#x27;, 2, &#x27;2016-08-14 00:00:00&#x27;, &#x27;2016-09-12 00:00:00&#x27;, 1, 8.98, &#x27;Berguvsvägen  8&#x27;, &#x27;Luleå&#x27;, NULL, &#x27;S-958 22&#x27;, &#x27;Sweden&#x27;);INSERT INTO `orders` VALUES (10281, &#x27;ROMEY&#x27;, 4, &#x27;2016-08-14 00:00:00&#x27;, &#x27;2016-08-21 00:00:00&#x27;, 1, 2.94, &#x27;Gran Vía-1&#x27;, &#x27;Madrid&#x27;, NULL, &#x27;28001&#x27;, &#x27;Spain&#x27;);INSERT INTO `orders` VALUES (10282, &#x27;ROMEY&#x27;, 4, &#x27;2016-08-15 00:00:00&#x27;, &#x27;2016-08-21 00:00:00&#x27;, 1, 12.69, &#x27;Gran Vía-1&#x27;, &#x27;Madrid&#x27;, NULL, &#x27;28001&#x27;, &#x27;Spain&#x27;);INSERT INTO `orders` VALUES (10283, &#x27;LILAS&#x27;, 3, &#x27;2016-08-16 00:00:00&#x27;, &#x27;2016-08-23 00:00:00&#x27;, 3, 84.81, &#x27;Carrera 52 con Ave. Bolívar #65-98 Llano Largo&#x27;, &#x27;Barquisimeto&#x27;, &#x27;Lara&#x27;, &#x27;3508&#x27;, &#x27;Venezuela&#x27;);INSERT INTO `orders` VALUES (10284, &#x27;LEHMS&#x27;, 4, &#x27;2016-08-19 00:00:00&#x27;, &#x27;2016-08-27 00:00:00&#x27;, 1, 76.56, &#x27;Magazinweg 7&#x27;, &#x27;Frankfurt a.M.&#x27;, NULL, &#x27;60528&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10285, &#x27;QUICK&#x27;, 1, &#x27;2016-08-20 00:00:00&#x27;, &#x27;2016-08-26 00:00:00&#x27;, 2, 76.83, &#x27;Taucherstraße 10&#x27;, &#x27;Cunewalde&#x27;, NULL, &#x27;01307&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10286, &#x27;QUICK&#x27;, 8, &#x27;2016-08-21 00:00:00&#x27;, &#x27;2016-08-30 00:00:00&#x27;, 3, 229.24, &#x27;Taucherstraße 10&#x27;, &#x27;Cunewalde&#x27;, NULL, &#x27;01307&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10287, &#x27;RICAR&#x27;, 8, &#x27;2016-08-22 00:00:00&#x27;, &#x27;2016-08-28 00:00:00&#x27;, 3, 12.76, &#x27;Av. Copacabana-267&#x27;, &#x27;Rio de Janeiro&#x27;, &#x27;RJ&#x27;, &#x27;02389-890&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10288, &#x27;REGGC&#x27;, 4, &#x27;2016-08-23 00:00:00&#x27;, &#x27;2016-09-03 00:00:00&#x27;, 1, 7.45, &#x27;Strada Provinciale 124&#x27;, &#x27;Reggio Emilia&#x27;, NULL, &#x27;42100&#x27;, &#x27;Italy&#x27;);INSERT INTO `orders` VALUES (10289, &#x27;BSBEV&#x27;, 7, &#x27;2016-08-26 00:00:00&#x27;, &#x27;2016-08-28 00:00:00&#x27;, 3, 22.77, &#x27;Fauntleroy Circus&#x27;, &#x27;Londo&#x27;, NULL, &#x27;EC2 5NT&#x27;, &#x27;UK&#x27;);INSERT INTO `orders` VALUES (10290, &#x27;COMMI&#x27;, 8, &#x27;2016-08-27 00:00:00&#x27;, &#x27;2016-09-03 00:00:00&#x27;, 1, 79.70, &#x27;Av. dos Lusíadas-23&#x27;, &#x27;Sao Paulo&#x27;, &#x27;SP&#x27;, &#x27;05432-043&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10291, &#x27;QUEDE&#x27;, 6, &#x27;2016-08-27 00:00:00&#x27;, &#x27;2016-09-04 00:00:00&#x27;, 2, 6.40, &#x27;Rua da Panificadora-12&#x27;, &#x27;Rio de Janeiro&#x27;, &#x27;RJ&#x27;, &#x27;02389-673&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10292, &#x27;TRADH&#x27;, 1, &#x27;2016-08-28 00:00:00&#x27;, &#x27;2016-09-02 00:00:00&#x27;, 2, 1.35, &#x27;Av. Inês de Castro-414&#x27;, &#x27;Sao Paulo&#x27;, &#x27;SP&#x27;, &#x27;05634-030&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10293, &#x27;TORTU&#x27;, 1, &#x27;2016-08-29 00:00:00&#x27;, &#x27;2016-09-11 00:00:00&#x27;, 3, 21.18, &#x27;Avda. Azteca 123&#x27;, &#x27;México D.F.&#x27;, NULL, &#x27;05033&#x27;, &#x27;Mexico&#x27;);INSERT INTO `orders` VALUES (10294, &#x27;RATTC&#x27;, 4, &#x27;2016-08-30 00:00:00&#x27;, &#x27;2016-09-05 00:00:00&#x27;, 2, 147.26, &#x27;2817 Milton Dr.&#x27;, &#x27;Albuquerque&#x27;, &#x27;NM&#x27;, &#x27;87110&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10295, &#x27;VINET&#x27;, 2, &#x27;2016-09-02 00:00:00&#x27;, &#x27;2016-09-10 00:00:00&#x27;, 2, 1.15, &#x27;59 rue de l\\&#x27;\\&#x27;Abbaye&#x27;, &#x27;Reims&#x27;, NULL, &#x27;51100&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10296, &#x27;LILAS&#x27;, 6, &#x27;2016-09-03 00:00:00&#x27;, &#x27;2016-09-11 00:00:00&#x27;, 1, 0.12, &#x27;Carrera 52 con Ave. Bolívar #65-98 Llano Largo&#x27;, &#x27;Barquisimeto&#x27;, &#x27;Lara&#x27;, &#x27;3508&#x27;, &#x27;Venezuela&#x27;);INSERT INTO `orders` VALUES (10297, &#x27;BLONP&#x27;, 5, &#x27;2016-09-04 00:00:00&#x27;, &#x27;2016-09-10 00:00:00&#x27;, 2, 5.74, &#x27;24-place Kléber&#x27;, &#x27;Strasbourg&#x27;, NULL, &#x27;67000&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10298, &#x27;HUNGO&#x27;, 6, &#x27;2016-09-05 00:00:00&#x27;, &#x27;2016-09-11 00:00:00&#x27;, 2, 168.22, &#x27;8 Johnstown Road&#x27;, &#x27;Cork&#x27;, &#x27;Co. Cork&#x27;, NULL, &#x27;Ireland&#x27;);INSERT INTO `orders` VALUES (10299, &#x27;RICAR&#x27;, 4, &#x27;2016-09-06 00:00:00&#x27;, &#x27;2016-09-13 00:00:00&#x27;, 2, 29.76, &#x27;Av. Copacabana-267&#x27;, &#x27;Rio de Janeiro&#x27;, &#x27;RJ&#x27;, &#x27;02389-890&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10300, &#x27;MAGAA&#x27;, 2, &#x27;2016-09-09 00:00:00&#x27;, &#x27;2016-09-18 00:00:00&#x27;, 2, 17.68, &#x27;Via Ludovico il Moro 22&#x27;, &#x27;Bergamo&#x27;, NULL, &#x27;24100&#x27;, &#x27;Italy&#x27;);INSERT INTO `orders` VALUES (10301, &#x27;WANDK&#x27;, 8, &#x27;2016-09-09 00:00:00&#x27;, &#x27;2016-09-17 00:00:00&#x27;, 2, 45.08, &#x27;Adenauerallee 900&#x27;, &#x27;Stuttgart&#x27;, NULL, &#x27;70563&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10302, &#x27;SUPRD&#x27;, 4, &#x27;2016-09-10 00:00:00&#x27;, &#x27;2016-10-09 00:00:00&#x27;, 2, 6.27, &#x27;Boulevard Tirou-255&#x27;, &#x27;Charleroi&#x27;, NULL, &#x27;B-6000&#x27;, &#x27;Belgium&#x27;);INSERT INTO `orders` VALUES (10303, &#x27;GODOS&#x27;, 7, &#x27;2016-09-11 00:00:00&#x27;, &#x27;2016-09-18 00:00:00&#x27;, 2, 107.83, &#x27;C/ Romero-33&#x27;, &#x27;Sevilla&#x27;, NULL, &#x27;41101&#x27;, &#x27;Spain&#x27;);INSERT INTO `orders` VALUES (10304, &#x27;TORTU&#x27;, 1, &#x27;2016-09-12 00:00:00&#x27;, &#x27;2016-09-17 00:00:00&#x27;, 2, 63.79, &#x27;Avda. Azteca 123&#x27;, &#x27;México D.F.&#x27;, NULL, &#x27;05033&#x27;, &#x27;Mexico&#x27;);INSERT INTO `orders` VALUES (10305, &#x27;OLDWO&#x27;, 8, &#x27;2016-09-13 00:00:00&#x27;, &#x27;2016-10-09 00:00:00&#x27;, 3, 257.62, &#x27;2743 Bering St.&#x27;, &#x27;Anchorage&#x27;, &#x27;AK&#x27;, &#x27;99508&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10306, &#x27;ROMEY&#x27;, 1, &#x27;2016-09-16 00:00:00&#x27;, &#x27;2016-09-23 00:00:00&#x27;, 3, 7.56, &#x27;Gran Vía-1&#x27;, &#x27;Madrid&#x27;, NULL, &#x27;28001&#x27;, &#x27;Spain&#x27;);INSERT INTO `orders` VALUES (10307, &#x27;LONEP&#x27;, 2, &#x27;2016-09-17 00:00:00&#x27;, &#x27;2016-09-25 00:00:00&#x27;, 2, 0.56, &#x27;89 Chiaroscuro Rd.&#x27;, &#x27;Portland&#x27;, &#x27;OR&#x27;, &#x27;97219&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10308, &#x27;ANATR&#x27;, 7, &#x27;2016-09-18 00:00:00&#x27;, &#x27;2016-09-24 00:00:00&#x27;, 3, 1.61, &#x27;Avda. de la Constitución 2222&#x27;, &#x27;México D.F.&#x27;, NULL, &#x27;05021&#x27;, &#x27;Mexico&#x27;);INSERT INTO `orders` VALUES (10309, &#x27;HUNGO&#x27;, 3, &#x27;2016-09-19 00:00:00&#x27;, &#x27;2016-10-23 00:00:00&#x27;, 1, 47.30, &#x27;8 Johnstown Road&#x27;, &#x27;Cork&#x27;, &#x27;Co. Cork&#x27;, NULL, &#x27;Ireland&#x27;);INSERT INTO `orders` VALUES (10310, &#x27;THEBI&#x27;, 8, &#x27;2016-09-20 00:00:00&#x27;, &#x27;2016-09-27 00:00:00&#x27;, 2, 17.52, &#x27;89 Jefferson Way Suite 2&#x27;, &#x27;Portland&#x27;, &#x27;OR&#x27;, &#x27;97201&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10311, &#x27;DUMO&#x27;, 1, &#x27;2016-09-20 00:00:00&#x27;, &#x27;2016-09-26 00:00:00&#x27;, 3, 24.69, &#x27;67-rue des Cinquante Otages&#x27;, &#x27;Nantes&#x27;, NULL, &#x27;44000&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10312, &#x27;WANDK&#x27;, 2, &#x27;2016-09-23 00:00:00&#x27;, &#x27;2016-10-03 00:00:00&#x27;, 2, 40.26, &#x27;Adenauerallee 900&#x27;, &#x27;Stuttgart&#x27;, NULL, &#x27;70563&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10313, &#x27;QUICK&#x27;, 2, &#x27;2016-09-24 00:00:00&#x27;, &#x27;2016-10-04 00:00:00&#x27;, 2, 1.96, &#x27;Taucherstraße 10&#x27;, &#x27;Cunewalde&#x27;, NULL, &#x27;01307&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10314, &#x27;RATTC&#x27;, 1, &#x27;2016-09-25 00:00:00&#x27;, &#x27;2016-10-04 00:00:00&#x27;, 2, 74.16, &#x27;2817 Milton Dr.&#x27;, &#x27;Albuquerque&#x27;, &#x27;NM&#x27;, &#x27;87110&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10315, &#x27;ISLAT&#x27;, 4, &#x27;2016-09-26 00:00:00&#x27;, &#x27;2016-10-03 00:00:00&#x27;, 2, 41.76, &#x27;Garden House Crowther Way&#x27;, &#x27;Cowes&#x27;, &#x27;Isle of Wight&#x27;, &#x27;PO31 7PJ&#x27;, &#x27;UK&#x27;);INSERT INTO `orders` VALUES (10316, &#x27;RATTC&#x27;, 1, &#x27;2016-09-27 00:00:00&#x27;, &#x27;2016-10-08 00:00:00&#x27;, 3, 150.15, &#x27;2817 Milton Dr.&#x27;, &#x27;Albuquerque&#x27;, &#x27;NM&#x27;, &#x27;87110&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10317, &#x27;LONEP&#x27;, 6, &#x27;2016-09-30 00:00:00&#x27;, &#x27;2016-10-10 00:00:00&#x27;, 1, 12.69, &#x27;89 Chiaroscuro Rd.&#x27;, &#x27;Portland&#x27;, &#x27;OR&#x27;, &#x27;97219&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10318, &#x27;ISLAT&#x27;, 8, &#x27;2016-10-01 00:00:00&#x27;, &#x27;2016-10-04 00:00:00&#x27;, 2, 4.73, &#x27;Garden House Crowther Way&#x27;, &#x27;Cowes&#x27;, &#x27;Isle of Wight&#x27;, &#x27;PO31 7PJ&#x27;, &#x27;UK&#x27;);INSERT INTO `orders` VALUES (10319, &#x27;TORTU&#x27;, 7, &#x27;2016-10-02 00:00:00&#x27;, &#x27;2016-10-11 00:00:00&#x27;, 3, 64.50, &#x27;Avda. Azteca 123&#x27;, &#x27;México D.F.&#x27;, NULL, &#x27;05033&#x27;, &#x27;Mexico&#x27;);INSERT INTO `orders` VALUES (10320, &#x27;WARTH&#x27;, 5, &#x27;2016-10-03 00:00:00&#x27;, &#x27;2016-10-18 00:00:00&#x27;, 3, 34.57, &#x27;Torikatu 38&#x27;, &#x27;Oulu&#x27;, NULL, &#x27;90110&#x27;, &#x27;Finland&#x27;);INSERT INTO `orders` VALUES (10321, &#x27;ISLAT&#x27;, 3, &#x27;2016-10-03 00:00:00&#x27;, &#x27;2016-10-11 00:00:00&#x27;, 2, 3.43, &#x27;Garden House Crowther Way&#x27;, &#x27;Cowes&#x27;, &#x27;Isle of Wight&#x27;, &#x27;PO31 7PJ&#x27;, &#x27;UK&#x27;);INSERT INTO `orders` VALUES (10322, &#x27;PERIC&#x27;, 7, &#x27;2016-10-04 00:00:00&#x27;, &#x27;2016-10-23 00:00:00&#x27;, 3, 0.40, &#x27;Calle Dr. Jorge Cash 321&#x27;, &#x27;México D.F.&#x27;, NULL, &#x27;05033&#x27;, &#x27;Mexico&#x27;);INSERT INTO `orders` VALUES (10323, &#x27;KOENE&#x27;, 4, &#x27;2016-10-07 00:00:00&#x27;, &#x27;2016-10-14 00:00:00&#x27;, 1, 4.88, &#x27;Maubelstr. 90&#x27;, &#x27;Brandenburg&#x27;, NULL, &#x27;14776&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10324, &#x27;SAVEA&#x27;, 9, &#x27;2016-10-08 00:00:00&#x27;, &#x27;2016-10-10 00:00:00&#x27;, 1, 214.27, &#x27;187 Suffolk Ln.&#x27;, &#x27;Boise&#x27;, &#x27;ID&#x27;, &#x27;83720&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10325, &#x27;KOENE&#x27;, 1, &#x27;2016-10-09 00:00:00&#x27;, &#x27;2016-10-14 00:00:00&#x27;, 3, 64.86, &#x27;Maubelstr. 90&#x27;, &#x27;Brandenburg&#x27;, NULL, &#x27;14776&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10326, &#x27;BOLID&#x27;, 4, &#x27;2016-10-10 00:00:00&#x27;, &#x27;2016-10-14 00:00:00&#x27;, 2, 77.92, &#x27;C/ Araquil-67&#x27;, &#x27;Madrid&#x27;, NULL, &#x27;28023&#x27;, &#x27;Spain&#x27;);INSERT INTO `orders` VALUES (10327, &#x27;FOLKO&#x27;, 2, &#x27;2016-10-11 00:00:00&#x27;, &#x27;2016-10-14 00:00:00&#x27;, 1, 63.36, &#x27;Åkergatan 24&#x27;, &#x27;Bräcke&#x27;, NULL, &#x27;S-844 67&#x27;, &#x27;Sweden&#x27;);INSERT INTO `orders` VALUES (10328, &#x27;FURIB&#x27;, 4, &#x27;2016-10-14 00:00:00&#x27;, &#x27;2016-10-17 00:00:00&#x27;, 3, 87.03, &#x27;Jardim das rosas n. 32&#x27;, &#x27;Lisboa&#x27;, NULL, &#x27;1675&#x27;, &#x27;Portugal&#x27;);INSERT INTO `orders` VALUES (10329, &#x27;SPLIR&#x27;, 4, &#x27;2016-10-15 00:00:00&#x27;, &#x27;2016-10-23 00:00:00&#x27;, 2, 191.67, &#x27;P.O. Box 555&#x27;, &#x27;Lander&#x27;, &#x27;WY&#x27;, &#x27;82520&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10330, &#x27;LILAS&#x27;, 3, &#x27;2016-10-16 00:00:00&#x27;, &#x27;2016-10-28 00:00:00&#x27;, 1, 12.75, &#x27;Carrera 52 con Ave. Bolívar #65-98 Llano Largo&#x27;, &#x27;Barquisimeto&#x27;, &#x27;Lara&#x27;, &#x27;3508&#x27;, &#x27;Venezuela&#x27;);INSERT INTO `orders` VALUES (10331, &#x27;BONAP&#x27;, 9, &#x27;2016-10-16 00:00:00&#x27;, &#x27;2016-10-21 00:00:00&#x27;, 1, 10.19, &#x27;12-rue des Bouchers&#x27;, &#x27;Marseille&#x27;, NULL, &#x27;13008&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10332, &#x27;MEREP&#x27;, 3, &#x27;2016-10-17 00:00:00&#x27;, &#x27;2016-10-21 00:00:00&#x27;, 2, 52.84, &#x27;43 rue St. Laurent&#x27;, &#x27;Montréal&#x27;, &#x27;Québec&#x27;, &#x27;H1J 1C3&#x27;, &#x27;Canada&#x27;);INSERT INTO `orders` VALUES (10333, &#x27;WARTH&#x27;, 5, &#x27;2016-10-18 00:00:00&#x27;, &#x27;2016-10-25 00:00:00&#x27;, 3, 0.59, &#x27;Torikatu 38&#x27;, &#x27;Oulu&#x27;, NULL, &#x27;90110&#x27;, &#x27;Finland&#x27;);INSERT INTO `orders` VALUES (10334, &#x27;VICTE&#x27;, 8, &#x27;2016-10-21 00:00:00&#x27;, &#x27;2016-10-28 00:00:00&#x27;, 2, 8.56, &#x27;2-rue du Commerce&#x27;, &#x27;Lyo&#x27;, NULL, &#x27;69004&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10335, &#x27;HUNGO&#x27;, 7, &#x27;2016-10-22 00:00:00&#x27;, &#x27;2016-10-24 00:00:00&#x27;, 2, 42.11, &#x27;8 Johnstown Road&#x27;, &#x27;Cork&#x27;, &#x27;Co. Cork&#x27;, NULL, &#x27;Ireland&#x27;);INSERT INTO `orders` VALUES (10336, &#x27;PRINI&#x27;, 7, &#x27;2016-10-23 00:00:00&#x27;, &#x27;2016-10-25 00:00:00&#x27;, 2, 15.51, &#x27;Estrada da saúde n. 58&#x27;, &#x27;Lisboa&#x27;, NULL, &#x27;1756&#x27;, &#x27;Portugal&#x27;);INSERT INTO `orders` VALUES (10337, &#x27;FRANK&#x27;, 4, &#x27;2016-10-24 00:00:00&#x27;, &#x27;2016-10-29 00:00:00&#x27;, 3, 108.26, &#x27;Berliner Platz 43&#x27;, &#x27;Münche&#x27;, NULL, &#x27;80805&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10338, &#x27;OLDWO&#x27;, 4, &#x27;2016-10-25 00:00:00&#x27;, &#x27;2016-10-29 00:00:00&#x27;, 3, 84.21, &#x27;2743 Bering St.&#x27;, &#x27;Anchorage&#x27;, &#x27;AK&#x27;, &#x27;99508&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10339, &#x27;MEREP&#x27;, 2, &#x27;2016-10-28 00:00:00&#x27;, &#x27;2016-11-04 00:00:00&#x27;, 2, 15.66, &#x27;43 rue St. Laurent&#x27;, &#x27;Montréal&#x27;, &#x27;Québec&#x27;, &#x27;H1J 1C3&#x27;, &#x27;Canada&#x27;);INSERT INTO `orders` VALUES (10340, &#x27;BONAP&#x27;, 1, &#x27;2016-10-29 00:00:00&#x27;, &#x27;2016-11-08 00:00:00&#x27;, 3, 166.31, &#x27;12-rue des Bouchers&#x27;, &#x27;Marseille&#x27;, NULL, &#x27;13008&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10341, &#x27;SIMOB&#x27;, 7, &#x27;2016-10-29 00:00:00&#x27;, &#x27;2016-11-05 00:00:00&#x27;, 3, 26.78, &#x27;Vinbæltet 34&#x27;, &#x27;Kobenhav&#x27;, NULL, &#x27;1734&#x27;, &#x27;Denmark&#x27;);INSERT INTO `orders` VALUES (10342, &#x27;FRANK&#x27;, 4, &#x27;2016-10-30 00:00:00&#x27;, &#x27;2016-11-04 00:00:00&#x27;, 2, 54.83, &#x27;Berliner Platz 43&#x27;, &#x27;Münche&#x27;, NULL, &#x27;80805&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10343, &#x27;LEHMS&#x27;, 4, &#x27;2016-10-31 00:00:00&#x27;, &#x27;2016-11-06 00:00:00&#x27;, 1, 110.37, &#x27;Magazinweg 7&#x27;, &#x27;Frankfurt a.M.&#x27;, NULL, &#x27;60528&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10344, &#x27;WHITC&#x27;, 4, &#x27;2016-11-01 00:00:00&#x27;, &#x27;2016-11-05 00:00:00&#x27;, 2, 23.29, &#x27;1029 - 12th Ave. S.&#x27;, &#x27;Seattle&#x27;, &#x27;WA&#x27;, &#x27;98124&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10345, &#x27;QUICK&#x27;, 2, &#x27;2016-11-04 00:00:00&#x27;, &#x27;2016-11-11 00:00:00&#x27;, 2, 249.06, &#x27;Taucherstraße 10&#x27;, &#x27;Cunewalde&#x27;, NULL, &#x27;01307&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10346, &#x27;RATTC&#x27;, 3, &#x27;2016-11-05 00:00:00&#x27;, &#x27;2016-11-08 00:00:00&#x27;, 3, 142.08, &#x27;2817 Milton Dr.&#x27;, &#x27;Albuquerque&#x27;, &#x27;NM&#x27;, &#x27;87110&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10347, &#x27;FAMIA&#x27;, 4, &#x27;2016-11-06 00:00:00&#x27;, &#x27;2016-11-08 00:00:00&#x27;, 3, 3.10, &#x27;Rua Orós-92&#x27;, &#x27;Sao Paulo&#x27;, &#x27;SP&#x27;, &#x27;05442-030&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10348, &#x27;WANDK&#x27;, 4, &#x27;2016-11-07 00:00:00&#x27;, &#x27;2016-11-15 00:00:00&#x27;, 2, 0.78, &#x27;Adenauerallee 900&#x27;, &#x27;Stuttgart&#x27;, NULL, &#x27;70563&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10349, &#x27;SPLIR&#x27;, 7, &#x27;2016-11-08 00:00:00&#x27;, &#x27;2016-11-15 00:00:00&#x27;, 1, 8.63, &#x27;P.O. Box 555&#x27;, &#x27;Lander&#x27;, &#x27;WY&#x27;, &#x27;82520&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10350, &#x27;LAMAI&#x27;, 6, &#x27;2016-11-11 00:00:00&#x27;, &#x27;2016-12-03 00:00:00&#x27;, 2, 64.19, &#x27;1 rue Alsace-Lorraine&#x27;, &#x27;Toulouse&#x27;, NULL, &#x27;31000&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10351, &#x27;ERNSH&#x27;, 1, &#x27;2016-11-11 00:00:00&#x27;, &#x27;2016-11-20 00:00:00&#x27;, 1, 162.33, &#x27;Kirchgasse 6&#x27;, &#x27;Graz&#x27;, NULL, &#x27;8010&#x27;, &#x27;Austria&#x27;);INSERT INTO `orders` VALUES (10352, &#x27;FURIB&#x27;, 3, &#x27;2016-11-12 00:00:00&#x27;, &#x27;2016-11-18 00:00:00&#x27;, 3, 1.30, &#x27;Jardim das rosas n. 32&#x27;, &#x27;Lisboa&#x27;, NULL, &#x27;1675&#x27;, &#x27;Portugal&#x27;);INSERT INTO `orders` VALUES (10353, &#x27;PICCO&#x27;, 7, &#x27;2016-11-13 00:00:00&#x27;, &#x27;2016-11-25 00:00:00&#x27;, 3, 360.63, &#x27;Geislweg 14&#x27;, &#x27;Salzburg&#x27;, NULL, &#x27;5020&#x27;, &#x27;Austria&#x27;);INSERT INTO `orders` VALUES (10354, &#x27;PERIC&#x27;, 8, &#x27;2016-11-14 00:00:00&#x27;, &#x27;2016-11-20 00:00:00&#x27;, 3, 53.80, &#x27;Calle Dr. Jorge Cash 321&#x27;, &#x27;México D.F.&#x27;, NULL, &#x27;05033&#x27;, &#x27;Mexico&#x27;);INSERT INTO `orders` VALUES (10355, &#x27;AROUT&#x27;, 6, &#x27;2016-11-15 00:00:00&#x27;, &#x27;2016-11-20 00:00:00&#x27;, 1, 41.95, &#x27;Brook Farm Stratford St. Mary&#x27;, &#x27;Colchester&#x27;, &#x27;Essex&#x27;, &#x27;CO7 6JX&#x27;, &#x27;UK&#x27;);INSERT INTO `orders` VALUES (10356, &#x27;WANDK&#x27;, 6, &#x27;2016-11-18 00:00:00&#x27;, &#x27;2016-11-27 00:00:00&#x27;, 2, 36.71, &#x27;Adenauerallee 900&#x27;, &#x27;Stuttgart&#x27;, NULL, &#x27;70563&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10357, &#x27;LILAS&#x27;, 1, &#x27;2016-11-19 00:00:00&#x27;, &#x27;2016-12-02 00:00:00&#x27;, 3, 34.88, &#x27;Carrera 52 con Ave. Bolívar #65-98 Llano Largo&#x27;, &#x27;Barquisimeto&#x27;, &#x27;Lara&#x27;, &#x27;3508&#x27;, &#x27;Venezuela&#x27;);INSERT INTO `orders` VALUES (10358, &#x27;LAMAI&#x27;, 5, &#x27;2016-11-20 00:00:00&#x27;, &#x27;2016-11-27 00:00:00&#x27;, 1, 19.64, &#x27;1 rue Alsace-Lorraine&#x27;, &#x27;Toulouse&#x27;, NULL, &#x27;31000&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10359, &#x27;SEVES&#x27;, 5, &#x27;2016-11-21 00:00:00&#x27;, &#x27;2016-11-26 00:00:00&#x27;, 3, 288.43, &#x27;90 Wadhurst Rd.&#x27;, &#x27;Londo&#x27;, NULL, &#x27;OX15 4NB&#x27;, &#x27;UK&#x27;);INSERT INTO `orders` VALUES (10360, &#x27;BLONP&#x27;, 4, &#x27;2016-11-22 00:00:00&#x27;, &#x27;2016-12-02 00:00:00&#x27;, 3, 131.70, &#x27;24-place Kléber&#x27;, &#x27;Strasbourg&#x27;, NULL, &#x27;67000&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10361, &#x27;QUICK&#x27;, 1, &#x27;2016-11-22 00:00:00&#x27;, &#x27;2016-12-03 00:00:00&#x27;, 2, 183.17, &#x27;Taucherstraße 10&#x27;, &#x27;Cunewalde&#x27;, NULL, &#x27;01307&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10362, &#x27;BONAP&#x27;, 3, &#x27;2016-11-25 00:00:00&#x27;, &#x27;2016-11-28 00:00:00&#x27;, 1, 96.04, &#x27;12-rue des Bouchers&#x27;, &#x27;Marseille&#x27;, NULL, &#x27;13008&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10363, &#x27;DRACD&#x27;, 4, &#x27;2016-11-26 00:00:00&#x27;, &#x27;2016-12-04 00:00:00&#x27;, 3, 30.54, &#x27;Walserweg 21&#x27;, &#x27;Aache&#x27;, NULL, &#x27;52066&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10364, &#x27;EASTC&#x27;, 1, &#x27;2016-11-26 00:00:00&#x27;, &#x27;2016-12-04 00:00:00&#x27;, 1, 71.97, &#x27;35 King George&#x27;, &#x27;Londo&#x27;, NULL, &#x27;WX3 6FW&#x27;, &#x27;UK&#x27;);INSERT INTO `orders` VALUES (10365, &#x27;ANTO&#x27;, 3, &#x27;2016-11-27 00:00:00&#x27;, &#x27;2016-12-02 00:00:00&#x27;, 2, 22.00, &#x27;Mataderos  2312&#x27;, &#x27;México D.F.&#x27;, NULL, &#x27;05023&#x27;, &#x27;Mexico&#x27;);INSERT INTO `orders` VALUES (10366, &#x27;GALED&#x27;, 8, &#x27;2016-11-28 00:00:00&#x27;, &#x27;2016-12-30 00:00:00&#x27;, 2, 10.14, &#x27;Rambla de Cataluña-23&#x27;, &#x27;Barcelona&#x27;, NULL, &#x27;8022&#x27;, &#x27;Spain&#x27;);INSERT INTO `orders` VALUES (10367, &#x27;VAFFE&#x27;, 7, &#x27;2016-11-28 00:00:00&#x27;, &#x27;2016-12-02 00:00:00&#x27;, 3, 13.55, &#x27;Smagsloget 45&#x27;, &#x27;Århus&#x27;, NULL, &#x27;8200&#x27;, &#x27;Denmark&#x27;);INSERT INTO `orders` VALUES (10368, &#x27;ERNSH&#x27;, 2, &#x27;2016-11-29 00:00:00&#x27;, &#x27;2016-12-02 00:00:00&#x27;, 2, 101.95, &#x27;Kirchgasse 6&#x27;, &#x27;Graz&#x27;, NULL, &#x27;8010&#x27;, &#x27;Austria&#x27;);INSERT INTO `orders` VALUES (10369, &#x27;SPLIR&#x27;, 8, &#x27;2016-12-02 00:00:00&#x27;, &#x27;2016-12-09 00:00:00&#x27;, 2, 195.68, &#x27;P.O. Box 555&#x27;, &#x27;Lander&#x27;, &#x27;WY&#x27;, &#x27;82520&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10370, &#x27;CHOPS&#x27;, 6, &#x27;2016-12-03 00:00:00&#x27;, &#x27;2016-12-27 00:00:00&#x27;, 2, 1.17, &#x27;Hauptstr. 31&#x27;, &#x27;Ber&#x27;, NULL, &#x27;3012&#x27;, &#x27;Switzerland&#x27;);INSERT INTO `orders` VALUES (10371, &#x27;LAMAI&#x27;, 1, &#x27;2016-12-03 00:00:00&#x27;, &#x27;2016-12-24 00:00:00&#x27;, 1, 0.45, &#x27;1 rue Alsace-Lorraine&#x27;, &#x27;Toulouse&#x27;, NULL, &#x27;31000&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10372, &#x27;QUEE&#x27;, 5, &#x27;2016-12-04 00:00:00&#x27;, &#x27;2016-12-09 00:00:00&#x27;, 2, 890.78, &#x27;Alameda dos Canàrios-891&#x27;, &#x27;Sao Paulo&#x27;, &#x27;SP&#x27;, &#x27;05487-020&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10373, &#x27;HUNGO&#x27;, 4, &#x27;2016-12-05 00:00:00&#x27;, &#x27;2016-12-11 00:00:00&#x27;, 3, 124.12, &#x27;8 Johnstown Road&#x27;, &#x27;Cork&#x27;, &#x27;Co. Cork&#x27;, NULL, &#x27;Ireland&#x27;);INSERT INTO `orders` VALUES (10374, &#x27;WOLZA&#x27;, 1, &#x27;2016-12-05 00:00:00&#x27;, &#x27;2016-12-09 00:00:00&#x27;, 3, 3.94, &#x27;ul. Filtrowa 68&#x27;, &#x27;Warszawa&#x27;, NULL, &#x27;01-012&#x27;, &#x27;Poland&#x27;);INSERT INTO `orders` VALUES (10375, &#x27;HUNGC&#x27;, 3, &#x27;2016-12-06 00:00:00&#x27;, &#x27;2016-12-09 00:00:00&#x27;, 2, 20.12, &#x27;City Center Plaza 516 Main St.&#x27;, &#x27;Elgi&#x27;, &#x27;OR&#x27;, &#x27;97827&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10376, &#x27;MEREP&#x27;, 1, &#x27;2016-12-09 00:00:00&#x27;, &#x27;2016-12-13 00:00:00&#x27;, 2, 20.39, &#x27;43 rue St. Laurent&#x27;, &#x27;Montréal&#x27;, &#x27;Québec&#x27;, &#x27;H1J 1C3&#x27;, &#x27;Canada&#x27;);INSERT INTO `orders` VALUES (10377, &#x27;SEVES&#x27;, 1, &#x27;2016-12-09 00:00:00&#x27;, &#x27;2016-12-13 00:00:00&#x27;, 3, 22.21, &#x27;90 Wadhurst Rd.&#x27;, &#x27;Londo&#x27;, NULL, &#x27;OX15 4NB&#x27;, &#x27;UK&#x27;);INSERT INTO `orders` VALUES (10378, &#x27;FOLKO&#x27;, 5, &#x27;2016-12-10 00:00:00&#x27;, &#x27;2016-12-19 00:00:00&#x27;, 3, 5.44, &#x27;Åkergatan 24&#x27;, &#x27;Bräcke&#x27;, NULL, &#x27;S-844 67&#x27;, &#x27;Sweden&#x27;);INSERT INTO `orders` VALUES (10379, &#x27;QUEDE&#x27;, 2, &#x27;2016-12-11 00:00:00&#x27;, &#x27;2016-12-13 00:00:00&#x27;, 1, 45.03, &#x27;Rua da Panificadora-12&#x27;, &#x27;Rio de Janeiro&#x27;, &#x27;RJ&#x27;, &#x27;02389-673&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10380, &#x27;HUNGO&#x27;, 8, &#x27;2016-12-12 00:00:00&#x27;, &#x27;2017-01-16 00:00:00&#x27;, 3, 35.03, &#x27;8 Johnstown Road&#x27;, &#x27;Cork&#x27;, &#x27;Co. Cork&#x27;, NULL, &#x27;Ireland&#x27;);INSERT INTO `orders` VALUES (10381, &#x27;LILAS&#x27;, 3, &#x27;2016-12-12 00:00:00&#x27;, &#x27;2016-12-13 00:00:00&#x27;, 3, 7.99, &#x27;Carrera 52 con Ave. Bolívar #65-98 Llano Largo&#x27;, &#x27;Barquisimeto&#x27;, &#x27;Lara&#x27;, &#x27;3508&#x27;, &#x27;Venezuela&#x27;);INSERT INTO `orders` VALUES (10382, &#x27;ERNSH&#x27;, 4, &#x27;2016-12-13 00:00:00&#x27;, &#x27;2016-12-16 00:00:00&#x27;, 1, 94.77, &#x27;Kirchgasse 6&#x27;, &#x27;Graz&#x27;, NULL, &#x27;8010&#x27;, &#x27;Austria&#x27;);INSERT INTO `orders` VALUES (10383, &#x27;AROUT&#x27;, 8, &#x27;2016-12-16 00:00:00&#x27;, &#x27;2016-12-18 00:00:00&#x27;, 3, 34.24, &#x27;Brook Farm Stratford St. Mary&#x27;, &#x27;Colchester&#x27;, &#x27;Essex&#x27;, &#x27;CO7 6JX&#x27;, &#x27;UK&#x27;);INSERT INTO `orders` VALUES (10384, &#x27;BERGS&#x27;, 3, &#x27;2016-12-16 00:00:00&#x27;, &#x27;2016-12-20 00:00:00&#x27;, 3, 168.64, &#x27;Berguvsvägen  8&#x27;, &#x27;Luleå&#x27;, NULL, &#x27;S-958 22&#x27;, &#x27;Sweden&#x27;);INSERT INTO `orders` VALUES (10385, &#x27;SPLIR&#x27;, 1, &#x27;2016-12-17 00:00:00&#x27;, &#x27;2016-12-23 00:00:00&#x27;, 2, 30.96, &#x27;P.O. Box 555&#x27;, &#x27;Lander&#x27;, &#x27;WY&#x27;, &#x27;82520&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10386, &#x27;FAMIA&#x27;, 9, &#x27;2016-12-18 00:00:00&#x27;, &#x27;2016-12-25 00:00:00&#x27;, 3, 13.99, &#x27;Rua Orós-92&#x27;, &#x27;Sao Paulo&#x27;, &#x27;SP&#x27;, &#x27;05442-030&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10387, &#x27;SANTG&#x27;, 1, &#x27;2016-12-18 00:00:00&#x27;, &#x27;2016-12-20 00:00:00&#x27;, 2, 93.63, &#x27;Erling Skakkes gate 78&#x27;, &#x27;Staver&#x27;, NULL, &#x27;4110&#x27;, &#x27;Norway&#x27;);INSERT INTO `orders` VALUES (10388, &#x27;SEVES&#x27;, 2, &#x27;2016-12-19 00:00:00&#x27;, &#x27;2016-12-20 00:00:00&#x27;, 1, 34.86, &#x27;90 Wadhurst Rd.&#x27;, &#x27;Londo&#x27;, NULL, &#x27;OX15 4NB&#x27;, &#x27;UK&#x27;);INSERT INTO `orders` VALUES (10389, &#x27;BOTTM&#x27;, 4, &#x27;2016-12-20 00:00:00&#x27;, &#x27;2016-12-24 00:00:00&#x27;, 2, 47.42, &#x27;23 Tsawassen Blvd.&#x27;, &#x27;Tsawasse&#x27;, &#x27;BC&#x27;, &#x27;T2F 8M4&#x27;, &#x27;Canada&#x27;);INSERT INTO `orders` VALUES (10390, &#x27;ERNSH&#x27;, 6, &#x27;2016-12-23 00:00:00&#x27;, &#x27;2016-12-26 00:00:00&#x27;, 1, 126.38, &#x27;Kirchgasse 6&#x27;, &#x27;Graz&#x27;, NULL, &#x27;8010&#x27;, &#x27;Austria&#x27;);INSERT INTO `orders` VALUES (10391, &#x27;DRACD&#x27;, 3, &#x27;2016-12-23 00:00:00&#x27;, &#x27;2016-12-31 00:00:00&#x27;, 3, 5.45, &#x27;Walserweg 21&#x27;, &#x27;Aache&#x27;, NULL, &#x27;52066&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10392, &#x27;PICCO&#x27;, 2, &#x27;2016-12-24 00:00:00&#x27;, &#x27;2017-01-01 00:00:00&#x27;, 3, 122.46, &#x27;Geislweg 14&#x27;, &#x27;Salzburg&#x27;, NULL, &#x27;5020&#x27;, &#x27;Austria&#x27;);INSERT INTO `orders` VALUES (10393, &#x27;SAVEA&#x27;, 1, &#x27;2016-12-25 00:00:00&#x27;, &#x27;2017-01-03 00:00:00&#x27;, 3, 126.56, &#x27;187 Suffolk Ln.&#x27;, &#x27;Boise&#x27;, &#x27;ID&#x27;, &#x27;83720&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10394, &#x27;HUNGC&#x27;, 1, &#x27;2016-12-25 00:00:00&#x27;, &#x27;2017-01-03 00:00:00&#x27;, 3, 30.34, &#x27;City Center Plaza 516 Main St.&#x27;, &#x27;Elgi&#x27;, &#x27;OR&#x27;, &#x27;97827&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10395, &#x27;HILAA&#x27;, 6, &#x27;2016-12-26 00:00:00&#x27;, &#x27;2017-01-03 00:00:00&#x27;, 1, 184.41, &#x27;Carrera 22 con Ave. Carlos Soublette #8-35&#x27;, &#x27;San Cristóbal&#x27;, &#x27;Táchira&#x27;, &#x27;5022&#x27;, &#x27;Venezuela&#x27;);INSERT INTO `orders` VALUES (10396, &#x27;FRANK&#x27;, 1, &#x27;2016-12-27 00:00:00&#x27;, &#x27;2017-01-06 00:00:00&#x27;, 3, 135.35, &#x27;Berliner Platz 43&#x27;, &#x27;Münche&#x27;, NULL, &#x27;80805&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10397, &#x27;PRINI&#x27;, 5, &#x27;2016-12-27 00:00:00&#x27;, &#x27;2017-01-02 00:00:00&#x27;, 1, 60.26, &#x27;Estrada da saúde n. 58&#x27;, &#x27;Lisboa&#x27;, NULL, &#x27;1756&#x27;, &#x27;Portugal&#x27;);INSERT INTO `orders` VALUES (10398, &#x27;SAVEA&#x27;, 2, &#x27;2016-12-30 00:00:00&#x27;, &#x27;2017-01-09 00:00:00&#x27;, 3, 89.16, &#x27;187 Suffolk Ln.&#x27;, &#x27;Boise&#x27;, &#x27;ID&#x27;, &#x27;83720&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10399, &#x27;VAFFE&#x27;, 8, &#x27;2016-12-31 00:00:00&#x27;, &#x27;2017-01-08 00:00:00&#x27;, 3, 27.36, &#x27;Smagsloget 45&#x27;, &#x27;Århus&#x27;, NULL, &#x27;8200&#x27;, &#x27;Denmark&#x27;);INSERT INTO `orders` VALUES (10400, &#x27;EASTC&#x27;, 1, &#x27;2017-01-01 00:00:00&#x27;, &#x27;2017-01-16 00:00:00&#x27;, 3, 83.93, &#x27;35 King George&#x27;, &#x27;Londo&#x27;, NULL, &#x27;WX3 6FW&#x27;, &#x27;UK&#x27;);INSERT INTO `orders` VALUES (10401, &#x27;RATTC&#x27;, 1, &#x27;2017-01-01 00:00:00&#x27;, &#x27;2017-01-10 00:00:00&#x27;, 1, 12.51, &#x27;2817 Milton Dr.&#x27;, &#x27;Albuquerque&#x27;, &#x27;NM&#x27;, &#x27;87110&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10402, &#x27;ERNSH&#x27;, 8, &#x27;2017-01-02 00:00:00&#x27;, &#x27;2017-01-10 00:00:00&#x27;, 2, 67.88, &#x27;Kirchgasse 6&#x27;, &#x27;Graz&#x27;, NULL, &#x27;8010&#x27;, &#x27;Austria&#x27;);INSERT INTO `orders` VALUES (10403, &#x27;ERNSH&#x27;, 4, &#x27;2017-01-03 00:00:00&#x27;, &#x27;2017-01-09 00:00:00&#x27;, 3, 73.79, &#x27;Kirchgasse 6&#x27;, &#x27;Graz&#x27;, NULL, &#x27;8010&#x27;, &#x27;Austria&#x27;);INSERT INTO `orders` VALUES (10404, &#x27;MAGAA&#x27;, 2, &#x27;2017-01-03 00:00:00&#x27;, &#x27;2017-01-08 00:00:00&#x27;, 1, 155.97, &#x27;Via Ludovico il Moro 22&#x27;, &#x27;Bergamo&#x27;, NULL, &#x27;24100&#x27;, &#x27;Italy&#x27;);INSERT INTO `orders` VALUES (10405, &#x27;LINOD&#x27;, 1, &#x27;2017-01-06 00:00:00&#x27;, &#x27;2017-01-22 00:00:00&#x27;, 1, 34.82, &#x27;Ave. 5 de Mayo Porlamar&#x27;, &#x27;I. de Margarita&#x27;, &#x27;Nueva Esparta&#x27;, &#x27;4980&#x27;, &#x27;Venezuela&#x27;);INSERT INTO `orders` VALUES (10406, &#x27;QUEE&#x27;, 7, &#x27;2017-01-07 00:00:00&#x27;, &#x27;2017-01-13 00:00:00&#x27;, 1, 108.04, &#x27;Alameda dos Canàrios-891&#x27;, &#x27;Sao Paulo&#x27;, &#x27;SP&#x27;, &#x27;05487-020&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10407, &#x27;OTTIK&#x27;, 2, &#x27;2017-01-07 00:00:00&#x27;, &#x27;2017-01-30 00:00:00&#x27;, 2, 91.48, &#x27;Mehrheimerstr. 369&#x27;, &#x27;Köl&#x27;, NULL, &#x27;50739&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10408, &#x27;FOLIG&#x27;, 8, &#x27;2017-01-08 00:00:00&#x27;, &#x27;2017-01-14 00:00:00&#x27;, 1, 11.26, &#x27;184-chaussée de Tournai&#x27;, &#x27;Lille&#x27;, NULL, &#x27;59000&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10409, &#x27;OCEA&#x27;, 3, &#x27;2017-01-09 00:00:00&#x27;, &#x27;2017-01-14 00:00:00&#x27;, 1, 29.83, &#x27;Ing. Gustavo Moncada 8585 Piso 20-A&#x27;, &#x27;Buenos Aires&#x27;, NULL, &#x27;1010&#x27;, &#x27;Argentina&#x27;);INSERT INTO `orders` VALUES (10410, &#x27;BOTTM&#x27;, 3, &#x27;2017-01-10 00:00:00&#x27;, &#x27;2017-01-15 00:00:00&#x27;, 3, 2.40, &#x27;23 Tsawassen Blvd.&#x27;, &#x27;Tsawasse&#x27;, &#x27;BC&#x27;, &#x27;T2F 8M4&#x27;, &#x27;Canada&#x27;);INSERT INTO `orders` VALUES (10411, &#x27;BOTTM&#x27;, 9, &#x27;2017-01-10 00:00:00&#x27;, &#x27;2017-01-21 00:00:00&#x27;, 3, 23.65, &#x27;23 Tsawassen Blvd.&#x27;, &#x27;Tsawasse&#x27;, &#x27;BC&#x27;, &#x27;T2F 8M4&#x27;, &#x27;Canada&#x27;);INSERT INTO `orders` VALUES (10412, &#x27;WARTH&#x27;, 8, &#x27;2017-01-13 00:00:00&#x27;, &#x27;2017-01-15 00:00:00&#x27;, 2, 3.77, &#x27;Torikatu 38&#x27;, &#x27;Oulu&#x27;, NULL, &#x27;90110&#x27;, &#x27;Finland&#x27;);INSERT INTO `orders` VALUES (10413, &#x27;LAMAI&#x27;, 3, &#x27;2017-01-14 00:00:00&#x27;, &#x27;2017-01-16 00:00:00&#x27;, 2, 95.66, &#x27;1 rue Alsace-Lorraine&#x27;, &#x27;Toulouse&#x27;, NULL, &#x27;31000&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10414, &#x27;FAMIA&#x27;, 2, &#x27;2017-01-14 00:00:00&#x27;, &#x27;2017-01-17 00:00:00&#x27;, 3, 21.48, &#x27;Rua Orós-92&#x27;, &#x27;Sao Paulo&#x27;, &#x27;SP&#x27;, &#x27;05442-030&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10415, &#x27;HUNGC&#x27;, 3, &#x27;2017-01-15 00:00:00&#x27;, &#x27;2017-01-24 00:00:00&#x27;, 1, 0.20, &#x27;City Center Plaza 516 Main St.&#x27;, &#x27;Elgi&#x27;, &#x27;OR&#x27;, &#x27;97827&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10416, &#x27;WARTH&#x27;, 8, &#x27;2017-01-16 00:00:00&#x27;, &#x27;2017-01-27 00:00:00&#x27;, 3, 22.72, &#x27;Torikatu 38&#x27;, &#x27;Oulu&#x27;, NULL, &#x27;90110&#x27;, &#x27;Finland&#x27;);INSERT INTO `orders` VALUES (10417, &#x27;SIMOB&#x27;, 4, &#x27;2017-01-16 00:00:00&#x27;, &#x27;2017-01-28 00:00:00&#x27;, 3, 70.29, &#x27;Vinbæltet 34&#x27;, &#x27;Kobenhav&#x27;, NULL, &#x27;1734&#x27;, &#x27;Denmark&#x27;);INSERT INTO `orders` VALUES (10418, &#x27;QUICK&#x27;, 4, &#x27;2017-01-17 00:00:00&#x27;, &#x27;2017-01-24 00:00:00&#x27;, 1, 17.55, &#x27;Taucherstraße 10&#x27;, &#x27;Cunewalde&#x27;, NULL, &#x27;01307&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10419, &#x27;RICSU&#x27;, 4, &#x27;2017-01-20 00:00:00&#x27;, &#x27;2017-01-30 00:00:00&#x27;, 2, 137.35, &#x27;Starenweg 5&#x27;, &#x27;Genève&#x27;, NULL, &#x27;1204&#x27;, &#x27;Switzerland&#x27;);INSERT INTO `orders` VALUES (10420, &#x27;WELLI&#x27;, 3, &#x27;2017-01-21 00:00:00&#x27;, &#x27;2017-01-27 00:00:00&#x27;, 1, 44.12, &#x27;Rua do Mercado-12&#x27;, &#x27;Resende&#x27;, &#x27;SP&#x27;, &#x27;08737-363&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10421, &#x27;QUEDE&#x27;, 8, &#x27;2017-01-21 00:00:00&#x27;, &#x27;2017-01-27 00:00:00&#x27;, 1, 99.23, &#x27;Rua da Panificadora-12&#x27;, &#x27;Rio de Janeiro&#x27;, &#x27;RJ&#x27;, &#x27;02389-673&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10422, &#x27;FRANS&#x27;, 2, &#x27;2017-01-22 00:00:00&#x27;, &#x27;2017-01-31 00:00:00&#x27;, 1, 3.02, &#x27;Via Monte Bianco 34&#x27;, &#x27;Torino&#x27;, NULL, &#x27;10100&#x27;, &#x27;Italy&#x27;);INSERT INTO `orders` VALUES (10423, &#x27;GOURL&#x27;, 6, &#x27;2017-01-23 00:00:00&#x27;, &#x27;2017-02-24 00:00:00&#x27;, 3, 24.50, &#x27;Av. Brasil-442&#x27;, &#x27;Campinas&#x27;, &#x27;SP&#x27;, &#x27;04876-786&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10424, &#x27;MEREP&#x27;, 7, &#x27;2017-01-23 00:00:00&#x27;, &#x27;2017-01-27 00:00:00&#x27;, 2, 370.61, &#x27;43 rue St. Laurent&#x27;, &#x27;Montréal&#x27;, &#x27;Québec&#x27;, &#x27;H1J 1C3&#x27;, &#x27;Canada&#x27;);INSERT INTO `orders` VALUES (10425, &#x27;LAMAI&#x27;, 6, &#x27;2017-01-24 00:00:00&#x27;, &#x27;2017-02-14 00:00:00&#x27;, 2, 7.93, &#x27;1 rue Alsace-Lorraine&#x27;, &#x27;Toulouse&#x27;, NULL, &#x27;31000&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10426, &#x27;GALED&#x27;, 4, &#x27;2017-01-27 00:00:00&#x27;, &#x27;2017-02-06 00:00:00&#x27;, 1, 18.69, &#x27;Rambla de Cataluña-23&#x27;, &#x27;Barcelona&#x27;, NULL, &#x27;8022&#x27;, &#x27;Spain&#x27;);INSERT INTO `orders` VALUES (10427, &#x27;PICCO&#x27;, 4, &#x27;2017-01-27 00:00:00&#x27;, &#x27;2017-03-03 00:00:00&#x27;, 2, 31.29, &#x27;Geislweg 14&#x27;, &#x27;Salzburg&#x27;, NULL, &#x27;5020&#x27;, &#x27;Austria&#x27;);INSERT INTO `orders` VALUES (10428, &#x27;REGGC&#x27;, 7, &#x27;2017-01-28 00:00:00&#x27;, &#x27;2017-02-04 00:00:00&#x27;, 1, 11.09, &#x27;Strada Provinciale 124&#x27;, &#x27;Reggio Emilia&#x27;, NULL, &#x27;42100&#x27;, &#x27;Italy&#x27;);INSERT INTO `orders` VALUES (10429, &#x27;HUNGO&#x27;, 3, &#x27;2017-01-29 00:00:00&#x27;, &#x27;2017-02-07 00:00:00&#x27;, 2, 56.63, &#x27;8 Johnstown Road&#x27;, &#x27;Cork&#x27;, &#x27;Co. Cork&#x27;, NULL, &#x27;Ireland&#x27;);INSERT INTO `orders` VALUES (10430, &#x27;ERNSH&#x27;, 4, &#x27;2017-01-30 00:00:00&#x27;, &#x27;2017-02-03 00:00:00&#x27;, 1, 458.78, &#x27;Kirchgasse 6&#x27;, &#x27;Graz&#x27;, NULL, &#x27;8010&#x27;, &#x27;Austria&#x27;);INSERT INTO `orders` VALUES (10431, &#x27;BOTTM&#x27;, 4, &#x27;2017-01-30 00:00:00&#x27;, &#x27;2017-02-07 00:00:00&#x27;, 2, 44.17, &#x27;23 Tsawassen Blvd.&#x27;, &#x27;Tsawasse&#x27;, &#x27;BC&#x27;, &#x27;T2F 8M4&#x27;, &#x27;Canada&#x27;);INSERT INTO `orders` VALUES (10432, &#x27;SPLIR&#x27;, 3, &#x27;2017-01-31 00:00:00&#x27;, &#x27;2017-02-07 00:00:00&#x27;, 2, 4.34, &#x27;P.O. Box 555&#x27;, &#x27;Lander&#x27;, &#x27;WY&#x27;, &#x27;82520&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10433, &#x27;PRINI&#x27;, 3, &#x27;2017-02-03 00:00:00&#x27;, &#x27;2017-03-04 00:00:00&#x27;, 3, 73.83, &#x27;Estrada da saúde n. 58&#x27;, &#x27;Lisboa&#x27;, NULL, &#x27;1756&#x27;, &#x27;Portugal&#x27;);INSERT INTO `orders` VALUES (10434, &#x27;FOLKO&#x27;, 3, &#x27;2017-02-03 00:00:00&#x27;, &#x27;2017-02-13 00:00:00&#x27;, 2, 17.92, &#x27;Åkergatan 24&#x27;, &#x27;Bräcke&#x27;, NULL, &#x27;S-844 67&#x27;, &#x27;Sweden&#x27;);INSERT INTO `orders` VALUES (10435, &#x27;CONSH&#x27;, 8, &#x27;2017-02-04 00:00:00&#x27;, &#x27;2017-02-07 00:00:00&#x27;, 2, 9.21, &#x27;Berkeley Gardens 12  Brewery&#x27;, &#x27;Londo&#x27;, NULL, &#x27;WX1 6LT&#x27;, &#x27;UK&#x27;);INSERT INTO `orders` VALUES (10436, &#x27;BLONP&#x27;, 3, &#x27;2017-02-05 00:00:00&#x27;, &#x27;2017-02-11 00:00:00&#x27;, 2, 156.66, &#x27;24-place Kléber&#x27;, &#x27;Strasbourg&#x27;, NULL, &#x27;67000&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10437, &#x27;WARTH&#x27;, 8, &#x27;2017-02-05 00:00:00&#x27;, &#x27;2017-02-12 00:00:00&#x27;, 1, 19.97, &#x27;Torikatu 38&#x27;, &#x27;Oulu&#x27;, NULL, &#x27;90110&#x27;, &#x27;Finland&#x27;);INSERT INTO `orders` VALUES (10438, &#x27;TOMSP&#x27;, 3, &#x27;2017-02-06 00:00:00&#x27;, &#x27;2017-02-14 00:00:00&#x27;, 2, 8.24, &#x27;Luisenstr. 48&#x27;, &#x27;Münster&#x27;, NULL, &#x27;44087&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10439, &#x27;MEREP&#x27;, 6, &#x27;2017-02-07 00:00:00&#x27;, &#x27;2017-02-10 00:00:00&#x27;, 3, 4.07, &#x27;43 rue St. Laurent&#x27;, &#x27;Montréal&#x27;, &#x27;Québec&#x27;, &#x27;H1J 1C3&#x27;, &#x27;Canada&#x27;);INSERT INTO `orders` VALUES (10440, &#x27;SAVEA&#x27;, 4, &#x27;2017-02-10 00:00:00&#x27;, &#x27;2017-02-28 00:00:00&#x27;, 2, 86.53, &#x27;187 Suffolk Ln.&#x27;, &#x27;Boise&#x27;, &#x27;ID&#x27;, &#x27;83720&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10441, &#x27;OLDWO&#x27;, 3, &#x27;2017-02-10 00:00:00&#x27;, &#x27;2017-03-14 00:00:00&#x27;, 2, 73.02, &#x27;2743 Bering St.&#x27;, &#x27;Anchorage&#x27;, &#x27;AK&#x27;, &#x27;99508&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10442, &#x27;ERNSH&#x27;, 3, &#x27;2017-02-11 00:00:00&#x27;, &#x27;2017-02-18 00:00:00&#x27;, 2, 47.94, &#x27;Kirchgasse 6&#x27;, &#x27;Graz&#x27;, NULL, &#x27;8010&#x27;, &#x27;Austria&#x27;);INSERT INTO `orders` VALUES (10443, &#x27;REGGC&#x27;, 8, &#x27;2017-02-12 00:00:00&#x27;, &#x27;2017-02-14 00:00:00&#x27;, 1, 13.95, &#x27;Strada Provinciale 124&#x27;, &#x27;Reggio Emilia&#x27;, NULL, &#x27;42100&#x27;, &#x27;Italy&#x27;);INSERT INTO `orders` VALUES (10444, &#x27;BERGS&#x27;, 3, &#x27;2017-02-12 00:00:00&#x27;, &#x27;2017-02-21 00:00:00&#x27;, 3, 3.50, &#x27;Berguvsvägen  8&#x27;, &#x27;Luleå&#x27;, NULL, &#x27;S-958 22&#x27;, &#x27;Sweden&#x27;);INSERT INTO `orders` VALUES (10445, &#x27;BERGS&#x27;, 3, &#x27;2017-02-13 00:00:00&#x27;, &#x27;2017-02-20 00:00:00&#x27;, 1, 9.30, &#x27;Berguvsvägen  8&#x27;, &#x27;Luleå&#x27;, NULL, &#x27;S-958 22&#x27;, &#x27;Sweden&#x27;);INSERT INTO `orders` VALUES (10446, &#x27;TOMSP&#x27;, 6, &#x27;2017-02-14 00:00:00&#x27;, &#x27;2017-02-19 00:00:00&#x27;, 1, 14.68, &#x27;Luisenstr. 48&#x27;, &#x27;Münster&#x27;, NULL, &#x27;44087&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10447, &#x27;RICAR&#x27;, 4, &#x27;2017-02-14 00:00:00&#x27;, &#x27;2017-03-07 00:00:00&#x27;, 2, 68.66, &#x27;Av. Copacabana-267&#x27;, &#x27;Rio de Janeiro&#x27;, &#x27;RJ&#x27;, &#x27;02389-890&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10448, &#x27;RANCH&#x27;, 4, &#x27;2017-02-17 00:00:00&#x27;, &#x27;2017-02-24 00:00:00&#x27;, 2, 38.82, &#x27;Av. del Libertador 900&#x27;, &#x27;Buenos Aires&#x27;, NULL, &#x27;1010&#x27;, &#x27;Argentina&#x27;);INSERT INTO `orders` VALUES (10449, &#x27;BLONP&#x27;, 3, &#x27;2017-02-18 00:00:00&#x27;, &#x27;2017-02-27 00:00:00&#x27;, 2, 53.30, &#x27;24-place Kléber&#x27;, &#x27;Strasbourg&#x27;, NULL, &#x27;67000&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10450, &#x27;VICTE&#x27;, 8, &#x27;2017-02-19 00:00:00&#x27;, &#x27;2017-03-11 00:00:00&#x27;, 2, 7.23, &#x27;2-rue du Commerce&#x27;, &#x27;Lyo&#x27;, NULL, &#x27;69004&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10451, &#x27;QUICK&#x27;, 4, &#x27;2017-02-19 00:00:00&#x27;, &#x27;2017-03-12 00:00:00&#x27;, 3, 189.09, &#x27;Taucherstraße 10&#x27;, &#x27;Cunewalde&#x27;, NULL, &#x27;01307&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10452, &#x27;SAVEA&#x27;, 8, &#x27;2017-02-20 00:00:00&#x27;, &#x27;2017-02-26 00:00:00&#x27;, 1, 140.26, &#x27;187 Suffolk Ln.&#x27;, &#x27;Boise&#x27;, &#x27;ID&#x27;, &#x27;83720&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10453, &#x27;AROUT&#x27;, 1, &#x27;2017-02-21 00:00:00&#x27;, &#x27;2017-02-26 00:00:00&#x27;, 2, 25.36, &#x27;Brook Farm Stratford St. Mary&#x27;, &#x27;Colchester&#x27;, &#x27;Essex&#x27;, &#x27;CO7 6JX&#x27;, &#x27;UK&#x27;);INSERT INTO `orders` VALUES (10454, &#x27;LAMAI&#x27;, 4, &#x27;2017-02-21 00:00:00&#x27;, &#x27;2017-02-25 00:00:00&#x27;, 3, 2.74, &#x27;1 rue Alsace-Lorraine&#x27;, &#x27;Toulouse&#x27;, NULL, &#x27;31000&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10455, &#x27;WARTH&#x27;, 8, &#x27;2017-02-24 00:00:00&#x27;, &#x27;2017-03-03 00:00:00&#x27;, 2, 180.45, &#x27;Torikatu 38&#x27;, &#x27;Oulu&#x27;, NULL, &#x27;90110&#x27;, &#x27;Finland&#x27;);INSERT INTO `orders` VALUES (10456, &#x27;KOENE&#x27;, 8, &#x27;2017-02-25 00:00:00&#x27;, &#x27;2017-02-28 00:00:00&#x27;, 2, 8.12, &#x27;Maubelstr. 90&#x27;, &#x27;Brandenburg&#x27;, NULL, &#x27;14776&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10457, &#x27;KOENE&#x27;, 2, &#x27;2017-02-25 00:00:00&#x27;, &#x27;2017-03-03 00:00:00&#x27;, 1, 11.57, &#x27;Maubelstr. 90&#x27;, &#x27;Brandenburg&#x27;, NULL, &#x27;14776&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10458, &#x27;SUPRD&#x27;, 7, &#x27;2017-02-26 00:00:00&#x27;, &#x27;2017-03-04 00:00:00&#x27;, 3, 147.06, &#x27;Boulevard Tirou-255&#x27;, &#x27;Charleroi&#x27;, NULL, &#x27;B-6000&#x27;, &#x27;Belgium&#x27;);INSERT INTO `orders` VALUES (10459, &#x27;VICTE&#x27;, 4, &#x27;2017-02-27 00:00:00&#x27;, &#x27;2017-02-28 00:00:00&#x27;, 2, 25.09, &#x27;2-rue du Commerce&#x27;, &#x27;Lyo&#x27;, NULL, &#x27;69004&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10460, &#x27;FOLKO&#x27;, 8, &#x27;2017-02-28 00:00:00&#x27;, &#x27;2017-03-03 00:00:00&#x27;, 1, 16.27, &#x27;Åkergatan 24&#x27;, &#x27;Bräcke&#x27;, NULL, &#x27;S-844 67&#x27;, &#x27;Sweden&#x27;);INSERT INTO `orders` VALUES (10461, &#x27;LILAS&#x27;, 1, &#x27;2017-02-28 00:00:00&#x27;, &#x27;2017-03-05 00:00:00&#x27;, 3, 148.61, &#x27;Carrera 52 con Ave. Bolívar #65-98 Llano Largo&#x27;, &#x27;Barquisimeto&#x27;, &#x27;Lara&#x27;, &#x27;3508&#x27;, &#x27;Venezuela&#x27;);INSERT INTO `orders` VALUES (10462, &#x27;CONSH&#x27;, 2, &#x27;2017-03-03 00:00:00&#x27;, &#x27;2017-03-18 00:00:00&#x27;, 1, 6.17, &#x27;Berkeley Gardens 12  Brewery&#x27;, &#x27;Londo&#x27;, NULL, &#x27;WX1 6LT&#x27;, &#x27;UK&#x27;);INSERT INTO `orders` VALUES (10463, &#x27;SUPRD&#x27;, 5, &#x27;2017-03-04 00:00:00&#x27;, &#x27;2017-03-06 00:00:00&#x27;, 3, 14.78, &#x27;Boulevard Tirou-255&#x27;, &#x27;Charleroi&#x27;, NULL, &#x27;B-6000&#x27;, &#x27;Belgium&#x27;);INSERT INTO `orders` VALUES (10464, &#x27;FURIB&#x27;, 4, &#x27;2017-03-04 00:00:00&#x27;, &#x27;2017-03-14 00:00:00&#x27;, 2, 89.00, &#x27;Jardim das rosas n. 32&#x27;, &#x27;Lisboa&#x27;, NULL, &#x27;1675&#x27;, &#x27;Portugal&#x27;);INSERT INTO `orders` VALUES (10465, &#x27;VAFFE&#x27;, 1, &#x27;2017-03-05 00:00:00&#x27;, &#x27;2017-03-14 00:00:00&#x27;, 3, 145.04, &#x27;Smagsloget 45&#x27;, &#x27;Århus&#x27;, NULL, &#x27;8200&#x27;, &#x27;Denmark&#x27;);INSERT INTO `orders` VALUES (10466, &#x27;COMMI&#x27;, 4, &#x27;2017-03-06 00:00:00&#x27;, &#x27;2017-03-13 00:00:00&#x27;, 1, 11.93, &#x27;Av. dos Lusíadas-23&#x27;, &#x27;Sao Paulo&#x27;, &#x27;SP&#x27;, &#x27;05432-043&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10467, &#x27;MAGAA&#x27;, 8, &#x27;2017-03-06 00:00:00&#x27;, &#x27;2017-03-11 00:00:00&#x27;, 2, 4.93, &#x27;Via Ludovico il Moro 22&#x27;, &#x27;Bergamo&#x27;, NULL, &#x27;24100&#x27;, &#x27;Italy&#x27;);INSERT INTO `orders` VALUES (10468, &#x27;KOENE&#x27;, 3, &#x27;2017-03-07 00:00:00&#x27;, &#x27;2017-03-12 00:00:00&#x27;, 3, 44.12, &#x27;Maubelstr. 90&#x27;, &#x27;Brandenburg&#x27;, NULL, &#x27;14776&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10469, &#x27;WHITC&#x27;, 1, &#x27;2017-03-10 00:00:00&#x27;, &#x27;2017-03-14 00:00:00&#x27;, 1, 60.18, &#x27;1029 - 12th Ave. S.&#x27;, &#x27;Seattle&#x27;, &#x27;WA&#x27;, &#x27;98124&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10470, &#x27;BONAP&#x27;, 4, &#x27;2017-03-11 00:00:00&#x27;, &#x27;2017-03-14 00:00:00&#x27;, 2, 64.56, &#x27;12-rue des Bouchers&#x27;, &#x27;Marseille&#x27;, NULL, &#x27;13008&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10471, &#x27;BSBEV&#x27;, 2, &#x27;2017-03-11 00:00:00&#x27;, &#x27;2017-03-18 00:00:00&#x27;, 3, 45.59, &#x27;Fauntleroy Circus&#x27;, &#x27;Londo&#x27;, NULL, &#x27;EC2 5NT&#x27;, &#x27;UK&#x27;);INSERT INTO `orders` VALUES (10472, &#x27;SEVES&#x27;, 8, &#x27;2017-03-12 00:00:00&#x27;, &#x27;2017-03-19 00:00:00&#x27;, 1, 4.20, &#x27;90 Wadhurst Rd.&#x27;, &#x27;Londo&#x27;, NULL, &#x27;OX15 4NB&#x27;, &#x27;UK&#x27;);INSERT INTO `orders` VALUES (10473, &#x27;ISLAT&#x27;, 1, &#x27;2017-03-13 00:00:00&#x27;, &#x27;2017-03-21 00:00:00&#x27;, 3, 16.37, &#x27;Garden House Crowther Way&#x27;, &#x27;Cowes&#x27;, &#x27;Isle of Wight&#x27;, &#x27;PO31 7PJ&#x27;, &#x27;UK&#x27;);INSERT INTO `orders` VALUES (10474, &#x27;PERIC&#x27;, 5, &#x27;2017-03-13 00:00:00&#x27;, &#x27;2017-03-21 00:00:00&#x27;, 2, 83.49, &#x27;Calle Dr. Jorge Cash 321&#x27;, &#x27;México D.F.&#x27;, NULL, &#x27;05033&#x27;, &#x27;Mexico&#x27;);INSERT INTO `orders` VALUES (10475, &#x27;SUPRD&#x27;, 9, &#x27;2017-03-14 00:00:00&#x27;, &#x27;2017-04-04 00:00:00&#x27;, 1, 68.52, &#x27;Boulevard Tirou-255&#x27;, &#x27;Charleroi&#x27;, NULL, &#x27;B-6000&#x27;, &#x27;Belgium&#x27;);INSERT INTO `orders` VALUES (10476, &#x27;HILAA&#x27;, 8, &#x27;2017-03-17 00:00:00&#x27;, &#x27;2017-03-24 00:00:00&#x27;, 3, 4.41, &#x27;Carrera 22 con Ave. Carlos Soublette #8-35&#x27;, &#x27;San Cristóbal&#x27;, &#x27;Táchira&#x27;, &#x27;5022&#x27;, &#x27;Venezuela&#x27;);INSERT INTO `orders` VALUES (10477, &#x27;PRINI&#x27;, 5, &#x27;2017-03-17 00:00:00&#x27;, &#x27;2017-03-25 00:00:00&#x27;, 2, 13.02, &#x27;Estrada da saúde n. 58&#x27;, &#x27;Lisboa&#x27;, NULL, &#x27;1756&#x27;, &#x27;Portugal&#x27;);INSERT INTO `orders` VALUES (10478, &#x27;VICTE&#x27;, 2, &#x27;2017-03-18 00:00:00&#x27;, &#x27;2017-03-26 00:00:00&#x27;, 3, 4.81, &#x27;2-rue du Commerce&#x27;, &#x27;Lyo&#x27;, NULL, &#x27;69004&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10479, &#x27;RATTC&#x27;, 3, &#x27;2017-03-19 00:00:00&#x27;, &#x27;2017-03-21 00:00:00&#x27;, 3, 708.95, &#x27;2817 Milton Dr.&#x27;, &#x27;Albuquerque&#x27;, &#x27;NM&#x27;, &#x27;87110&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10480, &#x27;FOLIG&#x27;, 6, &#x27;2017-03-20 00:00:00&#x27;, &#x27;2017-03-24 00:00:00&#x27;, 2, 1.35, &#x27;184-chaussée de Tournai&#x27;, &#x27;Lille&#x27;, NULL, &#x27;59000&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10481, &#x27;RICAR&#x27;, 8, &#x27;2017-03-20 00:00:00&#x27;, &#x27;2017-03-25 00:00:00&#x27;, 2, 64.33, &#x27;Av. Copacabana-267&#x27;, &#x27;Rio de Janeiro&#x27;, &#x27;RJ&#x27;, &#x27;02389-890&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10482, &#x27;LAZYK&#x27;, 1, &#x27;2017-03-21 00:00:00&#x27;, &#x27;2017-04-10 00:00:00&#x27;, 3, 7.48, &#x27;12 Orchestra Terrace&#x27;, &#x27;Walla Walla&#x27;, &#x27;WA&#x27;, &#x27;99362&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10483, &#x27;WHITC&#x27;, 7, &#x27;2017-03-24 00:00:00&#x27;, &#x27;2017-04-25 00:00:00&#x27;, 2, 15.28, &#x27;1029 - 12th Ave. S.&#x27;, &#x27;Seattle&#x27;, &#x27;WA&#x27;, &#x27;98124&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10484, &#x27;BSBEV&#x27;, 3, &#x27;2017-03-24 00:00:00&#x27;, &#x27;2017-04-01 00:00:00&#x27;, 3, 6.88, &#x27;Fauntleroy Circus&#x27;, &#x27;Londo&#x27;, NULL, &#x27;EC2 5NT&#x27;, &#x27;UK&#x27;);INSERT INTO `orders` VALUES (10485, &#x27;LINOD&#x27;, 4, &#x27;2017-03-25 00:00:00&#x27;, &#x27;2017-03-31 00:00:00&#x27;, 2, 64.45, &#x27;Ave. 5 de Mayo Porlamar&#x27;, &#x27;I. de Margarita&#x27;, &#x27;Nueva Esparta&#x27;, &#x27;4980&#x27;, &#x27;Venezuela&#x27;);INSERT INTO `orders` VALUES (10486, &#x27;HILAA&#x27;, 1, &#x27;2017-03-26 00:00:00&#x27;, &#x27;2017-04-02 00:00:00&#x27;, 2, 30.53, &#x27;Carrera 22 con Ave. Carlos Soublette #8-35&#x27;, &#x27;San Cristóbal&#x27;, &#x27;Táchira&#x27;, &#x27;5022&#x27;, &#x27;Venezuela&#x27;);INSERT INTO `orders` VALUES (10487, &#x27;QUEE&#x27;, 2, &#x27;2017-03-26 00:00:00&#x27;, &#x27;2017-03-28 00:00:00&#x27;, 2, 71.07, &#x27;Alameda dos Canàrios-891&#x27;, &#x27;Sao Paulo&#x27;, &#x27;SP&#x27;, &#x27;05487-020&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10488, &#x27;FRANK&#x27;, 8, &#x27;2017-03-27 00:00:00&#x27;, &#x27;2017-04-02 00:00:00&#x27;, 2, 4.93, &#x27;Berliner Platz 43&#x27;, &#x27;Münche&#x27;, NULL, &#x27;80805&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10489, &#x27;PICCO&#x27;, 6, &#x27;2017-03-28 00:00:00&#x27;, &#x27;2017-04-09 00:00:00&#x27;, 2, 5.29, &#x27;Geislweg 14&#x27;, &#x27;Salzburg&#x27;, NULL, &#x27;5020&#x27;, &#x27;Austria&#x27;);INSERT INTO `orders` VALUES (10490, &#x27;HILAA&#x27;, 7, &#x27;2017-03-31 00:00:00&#x27;, &#x27;2017-04-03 00:00:00&#x27;, 2, 210.19, &#x27;Carrera 22 con Ave. Carlos Soublette #8-35&#x27;, &#x27;San Cristóbal&#x27;, &#x27;Táchira&#x27;, &#x27;5022&#x27;, &#x27;Venezuela&#x27;);INSERT INTO `orders` VALUES (10491, &#x27;FURIB&#x27;, 8, &#x27;2017-03-31 00:00:00&#x27;, &#x27;2017-04-08 00:00:00&#x27;, 3, 16.96, &#x27;Jardim das rosas n. 32&#x27;, &#x27;Lisboa&#x27;, NULL, &#x27;1675&#x27;, &#x27;Portugal&#x27;);INSERT INTO `orders` VALUES (10492, &#x27;BOTTM&#x27;, 3, &#x27;2017-04-01 00:00:00&#x27;, &#x27;2017-04-11 00:00:00&#x27;, 1, 62.89, &#x27;23 Tsawassen Blvd.&#x27;, &#x27;Tsawasse&#x27;, &#x27;BC&#x27;, &#x27;T2F 8M4&#x27;, &#x27;Canada&#x27;);INSERT INTO `orders` VALUES (10493, &#x27;LAMAI&#x27;, 4, &#x27;2017-04-02 00:00:00&#x27;, &#x27;2017-04-10 00:00:00&#x27;, 3, 10.64, &#x27;1 rue Alsace-Lorraine&#x27;, &#x27;Toulouse&#x27;, NULL, &#x27;31000&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10494, &#x27;COMMI&#x27;, 4, &#x27;2017-04-02 00:00:00&#x27;, &#x27;2017-04-09 00:00:00&#x27;, 2, 65.99, &#x27;Av. dos Lusíadas-23&#x27;, &#x27;Sao Paulo&#x27;, &#x27;SP&#x27;, &#x27;05432-043&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10495, &#x27;LAUGB&#x27;, 3, &#x27;2017-04-03 00:00:00&#x27;, &#x27;2017-04-11 00:00:00&#x27;, 3, 4.65, &#x27;2319 Elm St.&#x27;, &#x27;Vancouver&#x27;, &#x27;BC&#x27;, &#x27;V3F 2K1&#x27;, &#x27;Canada&#x27;);INSERT INTO `orders` VALUES (10496, &#x27;TRADH&#x27;, 7, &#x27;2017-04-04 00:00:00&#x27;, &#x27;2017-04-07 00:00:00&#x27;, 2, 46.77, &#x27;Av. Inês de Castro-414&#x27;, &#x27;Sao Paulo&#x27;, &#x27;SP&#x27;, &#x27;05634-030&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10497, &#x27;LEHMS&#x27;, 7, &#x27;2017-04-04 00:00:00&#x27;, &#x27;2017-04-07 00:00:00&#x27;, 1, 36.21, &#x27;Magazinweg 7&#x27;, &#x27;Frankfurt a.M.&#x27;, NULL, &#x27;60528&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10498, &#x27;HILAA&#x27;, 8, &#x27;2017-04-07 00:00:00&#x27;, &#x27;2017-04-11 00:00:00&#x27;, 2, 29.75, &#x27;Carrera 22 con Ave. Carlos Soublette #8-35&#x27;, &#x27;San Cristóbal&#x27;, &#x27;Táchira&#x27;, &#x27;5022&#x27;, &#x27;Venezuela&#x27;);INSERT INTO `orders` VALUES (10499, &#x27;LILAS&#x27;, 4, &#x27;2017-04-08 00:00:00&#x27;, &#x27;2017-04-16 00:00:00&#x27;, 2, 102.02, &#x27;Carrera 52 con Ave. Bolívar #65-98 Llano Largo&#x27;, &#x27;Barquisimeto&#x27;, &#x27;Lara&#x27;, &#x27;3508&#x27;, &#x27;Venezuela&#x27;);INSERT INTO `orders` VALUES (10500, &#x27;LAMAI&#x27;, 6, &#x27;2017-04-09 00:00:00&#x27;, &#x27;2017-04-17 00:00:00&#x27;, 1, 42.68, &#x27;1 rue Alsace-Lorraine&#x27;, &#x27;Toulouse&#x27;, NULL, &#x27;31000&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10501, &#x27;BLAUS&#x27;, 9, &#x27;2017-04-09 00:00:00&#x27;, &#x27;2017-04-16 00:00:00&#x27;, 3, 8.85, &#x27;Forsterstr. 57&#x27;, &#x27;Mannheim&#x27;, NULL, &#x27;68306&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10502, &#x27;PERIC&#x27;, 2, &#x27;2017-04-10 00:00:00&#x27;, &#x27;2017-04-29 00:00:00&#x27;, 1, 69.32, &#x27;Calle Dr. Jorge Cash 321&#x27;, &#x27;México D.F.&#x27;, NULL, &#x27;05033&#x27;, &#x27;Mexico&#x27;);INSERT INTO `orders` VALUES (10503, &#x27;HUNGO&#x27;, 6, &#x27;2017-04-11 00:00:00&#x27;, &#x27;2017-04-16 00:00:00&#x27;, 2, 16.74, &#x27;8 Johnstown Road&#x27;, &#x27;Cork&#x27;, &#x27;Co. Cork&#x27;, NULL, &#x27;Ireland&#x27;);INSERT INTO `orders` VALUES (10504, &#x27;WHITC&#x27;, 4, &#x27;2017-04-11 00:00:00&#x27;, &#x27;2017-04-18 00:00:00&#x27;, 3, 59.13, &#x27;1029 - 12th Ave. S.&#x27;, &#x27;Seattle&#x27;, &#x27;WA&#x27;, &#x27;98124&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10505, &#x27;MEREP&#x27;, 3, &#x27;2017-04-14 00:00:00&#x27;, &#x27;2017-04-21 00:00:00&#x27;, 3, 7.13, &#x27;43 rue St. Laurent&#x27;, &#x27;Montréal&#x27;, &#x27;Québec&#x27;, &#x27;H1J 1C3&#x27;, &#x27;Canada&#x27;);INSERT INTO `orders` VALUES (10506, &#x27;KOENE&#x27;, 9, &#x27;2017-04-15 00:00:00&#x27;, &#x27;2017-05-02 00:00:00&#x27;, 2, 21.19, &#x27;Maubelstr. 90&#x27;, &#x27;Brandenburg&#x27;, NULL, &#x27;14776&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10507, &#x27;ANTO&#x27;, 7, &#x27;2017-04-15 00:00:00&#x27;, &#x27;2017-04-22 00:00:00&#x27;, 1, 47.45, &#x27;Mataderos  2312&#x27;, &#x27;México D.F.&#x27;, NULL, &#x27;05023&#x27;, &#x27;Mexico&#x27;);INSERT INTO `orders` VALUES (10508, &#x27;OTTIK&#x27;, 1, &#x27;2017-04-16 00:00:00&#x27;, &#x27;2017-05-13 00:00:00&#x27;, 2, 4.99, &#x27;Mehrheimerstr. 369&#x27;, &#x27;Köl&#x27;, NULL, &#x27;50739&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10509, &#x27;BLAUS&#x27;, 4, &#x27;2017-04-17 00:00:00&#x27;, &#x27;2017-04-29 00:00:00&#x27;, 1, 0.15, &#x27;Forsterstr. 57&#x27;, &#x27;Mannheim&#x27;, NULL, &#x27;68306&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10510, &#x27;SAVEA&#x27;, 6, &#x27;2017-04-18 00:00:00&#x27;, &#x27;2017-04-28 00:00:00&#x27;, 3, 367.63, &#x27;187 Suffolk Ln.&#x27;, &#x27;Boise&#x27;, &#x27;ID&#x27;, &#x27;83720&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10511, &#x27;BONAP&#x27;, 4, &#x27;2017-04-18 00:00:00&#x27;, &#x27;2017-04-21 00:00:00&#x27;, 3, 350.64, &#x27;12-rue des Bouchers&#x27;, &#x27;Marseille&#x27;, NULL, &#x27;13008&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10512, &#x27;FAMIA&#x27;, 7, &#x27;2017-04-21 00:00:00&#x27;, &#x27;2017-04-24 00:00:00&#x27;, 2, 3.53, &#x27;Rua Orós-92&#x27;, &#x27;Sao Paulo&#x27;, &#x27;SP&#x27;, &#x27;05442-030&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10513, &#x27;WANDK&#x27;, 7, &#x27;2017-04-22 00:00:00&#x27;, &#x27;2017-04-28 00:00:00&#x27;, 1, 105.65, &#x27;Adenauerallee 900&#x27;, &#x27;Stuttgart&#x27;, NULL, &#x27;70563&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10514, &#x27;ERNSH&#x27;, 3, &#x27;2017-04-22 00:00:00&#x27;, &#x27;2017-05-16 00:00:00&#x27;, 2, 789.95, &#x27;Kirchgasse 6&#x27;, &#x27;Graz&#x27;, NULL, &#x27;8010&#x27;, &#x27;Austria&#x27;);INSERT INTO `orders` VALUES (10515, &#x27;QUICK&#x27;, 2, &#x27;2017-04-23 00:00:00&#x27;, &#x27;2017-05-23 00:00:00&#x27;, 1, 204.47, &#x27;Taucherstraße 10&#x27;, &#x27;Cunewalde&#x27;, NULL, &#x27;01307&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10516, &#x27;HUNGO&#x27;, 2, &#x27;2017-04-24 00:00:00&#x27;, &#x27;2017-05-01 00:00:00&#x27;, 3, 62.78, &#x27;8 Johnstown Road&#x27;, &#x27;Cork&#x27;, &#x27;Co. Cork&#x27;, NULL, &#x27;Ireland&#x27;);INSERT INTO `orders` VALUES (10517, &#x27;NORTS&#x27;, 3, &#x27;2017-04-24 00:00:00&#x27;, &#x27;2017-04-29 00:00:00&#x27;, 3, 32.07, &#x27;South House 300 Queensbridge&#x27;, &#x27;Londo&#x27;, NULL, &#x27;SW7 1RZ&#x27;, &#x27;UK&#x27;);INSERT INTO `orders` VALUES (10518, &#x27;TORTU&#x27;, 4, &#x27;2017-04-25 00:00:00&#x27;, &#x27;2017-05-05 00:00:00&#x27;, 2, 218.15, &#x27;Avda. Azteca 123&#x27;, &#x27;México D.F.&#x27;, NULL, &#x27;05033&#x27;, &#x27;Mexico&#x27;);INSERT INTO `orders` VALUES (10519, &#x27;CHOPS&#x27;, 6, &#x27;2017-04-28 00:00:00&#x27;, &#x27;2017-05-01 00:00:00&#x27;, 3, 91.76, &#x27;Hauptstr. 31&#x27;, &#x27;Ber&#x27;, NULL, &#x27;3012&#x27;, &#x27;Switzerland&#x27;);INSERT INTO `orders` VALUES (10520, &#x27;SANTG&#x27;, 7, &#x27;2017-04-29 00:00:00&#x27;, &#x27;2017-05-01 00:00:00&#x27;, 1, 13.37, &#x27;Erling Skakkes gate 78&#x27;, &#x27;Staver&#x27;, NULL, &#x27;4110&#x27;, &#x27;Norway&#x27;);INSERT INTO `orders` VALUES (10521, &#x27;CACTU&#x27;, 8, &#x27;2017-04-29 00:00:00&#x27;, &#x27;2017-05-02 00:00:00&#x27;, 2, 17.22, &#x27;Cerrito 333&#x27;, &#x27;Buenos Aires&#x27;, NULL, &#x27;1010&#x27;, &#x27;Argentina&#x27;);INSERT INTO `orders` VALUES (10522, &#x27;LEHMS&#x27;, 4, &#x27;2017-04-30 00:00:00&#x27;, &#x27;2017-05-06 00:00:00&#x27;, 1, 45.33, &#x27;Magazinweg 7&#x27;, &#x27;Frankfurt a.M.&#x27;, NULL, &#x27;60528&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10523, &#x27;SEVES&#x27;, 7, &#x27;2017-05-01 00:00:00&#x27;, &#x27;2017-05-30 00:00:00&#x27;, 2, 77.63, &#x27;90 Wadhurst Rd.&#x27;, &#x27;Londo&#x27;, NULL, &#x27;OX15 4NB&#x27;, &#x27;UK&#x27;);INSERT INTO `orders` VALUES (10524, &#x27;BERGS&#x27;, 1, &#x27;2017-05-01 00:00:00&#x27;, &#x27;2017-05-07 00:00:00&#x27;, 2, 244.79, &#x27;Berguvsvägen  8&#x27;, &#x27;Luleå&#x27;, NULL, &#x27;S-958 22&#x27;, &#x27;Sweden&#x27;);INSERT INTO `orders` VALUES (10525, &#x27;BONAP&#x27;, 1, &#x27;2017-05-02 00:00:00&#x27;, &#x27;2017-05-23 00:00:00&#x27;, 2, 11.06, &#x27;12-rue des Bouchers&#x27;, &#x27;Marseille&#x27;, NULL, &#x27;13008&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10526, &#x27;WARTH&#x27;, 4, &#x27;2017-05-05 00:00:00&#x27;, &#x27;2017-05-15 00:00:00&#x27;, 2, 58.59, &#x27;Torikatu 38&#x27;, &#x27;Oulu&#x27;, NULL, &#x27;90110&#x27;, &#x27;Finland&#x27;);INSERT INTO `orders` VALUES (10527, &#x27;QUICK&#x27;, 7, &#x27;2017-05-05 00:00:00&#x27;, &#x27;2017-05-07 00:00:00&#x27;, 1, 41.90, &#x27;Taucherstraße 10&#x27;, &#x27;Cunewalde&#x27;, NULL, &#x27;01307&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10528, &#x27;GREAL&#x27;, 6, &#x27;2017-05-06 00:00:00&#x27;, &#x27;2017-05-09 00:00:00&#x27;, 2, 3.35, &#x27;2732 Baker Blvd.&#x27;, &#x27;Eugene&#x27;, &#x27;OR&#x27;, &#x27;97403&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10529, &#x27;MAISD&#x27;, 5, &#x27;2017-05-07 00:00:00&#x27;, &#x27;2017-05-09 00:00:00&#x27;, 2, 66.69, &#x27;Rue Joseph-Bens 532&#x27;, &#x27;Bruxelles&#x27;, NULL, &#x27;B-1180&#x27;, &#x27;Belgium&#x27;);INSERT INTO `orders` VALUES (10530, &#x27;PICCO&#x27;, 3, &#x27;2017-05-08 00:00:00&#x27;, &#x27;2017-05-12 00:00:00&#x27;, 2, 339.22, &#x27;Geislweg 14&#x27;, &#x27;Salzburg&#x27;, NULL, &#x27;5020&#x27;, &#x27;Austria&#x27;);INSERT INTO `orders` VALUES (10531, &#x27;OCEA&#x27;, 7, &#x27;2017-05-08 00:00:00&#x27;, &#x27;2017-05-19 00:00:00&#x27;, 1, 8.12, &#x27;Ing. Gustavo Moncada 8585 Piso 20-A&#x27;, &#x27;Buenos Aires&#x27;, NULL, &#x27;1010&#x27;, &#x27;Argentina&#x27;);INSERT INTO `orders` VALUES (10532, &#x27;EASTC&#x27;, 7, &#x27;2017-05-09 00:00:00&#x27;, &#x27;2017-05-12 00:00:00&#x27;, 3, 74.46, &#x27;35 King George&#x27;, &#x27;Londo&#x27;, NULL, &#x27;WX3 6FW&#x27;, &#x27;UK&#x27;);INSERT INTO `orders` VALUES (10533, &#x27;FOLKO&#x27;, 8, &#x27;2017-05-12 00:00:00&#x27;, &#x27;2017-05-22 00:00:00&#x27;, 1, 188.04, &#x27;Åkergatan 24&#x27;, &#x27;Bräcke&#x27;, NULL, &#x27;S-844 67&#x27;, &#x27;Sweden&#x27;);INSERT INTO `orders` VALUES (10534, &#x27;LEHMS&#x27;, 8, &#x27;2017-05-12 00:00:00&#x27;, &#x27;2017-05-14 00:00:00&#x27;, 2, 27.94, &#x27;Magazinweg 7&#x27;, &#x27;Frankfurt a.M.&#x27;, NULL, &#x27;60528&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10535, &#x27;ANTO&#x27;, 4, &#x27;2017-05-13 00:00:00&#x27;, &#x27;2017-05-21 00:00:00&#x27;, 1, 15.64, &#x27;Mataderos  2312&#x27;, &#x27;México D.F.&#x27;, NULL, &#x27;05023&#x27;, &#x27;Mexico&#x27;);INSERT INTO `orders` VALUES (10536, &#x27;LEHMS&#x27;, 3, &#x27;2017-05-14 00:00:00&#x27;, &#x27;2017-06-06 00:00:00&#x27;, 2, 58.88, &#x27;Magazinweg 7&#x27;, &#x27;Frankfurt a.M.&#x27;, NULL, &#x27;60528&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10537, &#x27;RICSU&#x27;, 1, &#x27;2017-05-14 00:00:00&#x27;, &#x27;2017-05-19 00:00:00&#x27;, 1, 78.85, &#x27;Starenweg 5&#x27;, &#x27;Genève&#x27;, NULL, &#x27;1204&#x27;, &#x27;Switzerland&#x27;);INSERT INTO `orders` VALUES (10538, &#x27;BSBEV&#x27;, 9, &#x27;2017-05-15 00:00:00&#x27;, &#x27;2017-05-16 00:00:00&#x27;, 3, 4.87, &#x27;Fauntleroy Circus&#x27;, &#x27;Londo&#x27;, NULL, &#x27;EC2 5NT&#x27;, &#x27;UK&#x27;);INSERT INTO `orders` VALUES (10539, &#x27;BSBEV&#x27;, 6, &#x27;2017-05-16 00:00:00&#x27;, &#x27;2017-05-23 00:00:00&#x27;, 3, 12.36, &#x27;Fauntleroy Circus&#x27;, &#x27;Londo&#x27;, NULL, &#x27;EC2 5NT&#x27;, &#x27;UK&#x27;);INSERT INTO `orders` VALUES (10540, &#x27;QUICK&#x27;, 3, &#x27;2017-05-19 00:00:00&#x27;, &#x27;2017-06-13 00:00:00&#x27;, 3, 1007.64, &#x27;Taucherstraße 10&#x27;, &#x27;Cunewalde&#x27;, NULL, &#x27;01307&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10541, &#x27;HANAR&#x27;, 2, &#x27;2017-05-19 00:00:00&#x27;, &#x27;2017-05-29 00:00:00&#x27;, 1, 68.65, &#x27;Rua do Paço-67&#x27;, &#x27;Rio de Janeiro&#x27;, &#x27;RJ&#x27;, &#x27;05454-876&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10542, &#x27;KOENE&#x27;, 1, &#x27;2017-05-20 00:00:00&#x27;, &#x27;2017-05-26 00:00:00&#x27;, 3, 10.95, &#x27;Maubelstr. 90&#x27;, &#x27;Brandenburg&#x27;, NULL, &#x27;14776&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10543, &#x27;LILAS&#x27;, 8, &#x27;2017-05-21 00:00:00&#x27;, &#x27;2017-05-23 00:00:00&#x27;, 2, 48.17, &#x27;Carrera 52 con Ave. Bolívar #65-98 Llano Largo&#x27;, &#x27;Barquisimeto&#x27;, &#x27;Lara&#x27;, &#x27;3508&#x27;, &#x27;Venezuela&#x27;);INSERT INTO `orders` VALUES (10544, &#x27;LONEP&#x27;, 4, &#x27;2017-05-21 00:00:00&#x27;, &#x27;2017-05-30 00:00:00&#x27;, 1, 24.91, &#x27;89 Chiaroscuro Rd.&#x27;, &#x27;Portland&#x27;, &#x27;OR&#x27;, &#x27;97219&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10545, &#x27;LAZYK&#x27;, 8, &#x27;2017-05-22 00:00:00&#x27;, &#x27;2017-06-26 00:00:00&#x27;, 2, 11.92, &#x27;12 Orchestra Terrace&#x27;, &#x27;Walla Walla&#x27;, &#x27;WA&#x27;, &#x27;99362&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10546, &#x27;VICTE&#x27;, 1, &#x27;2017-05-23 00:00:00&#x27;, &#x27;2017-05-27 00:00:00&#x27;, 3, 194.72, &#x27;2-rue du Commerce&#x27;, &#x27;Lyo&#x27;, NULL, &#x27;69004&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10547, &#x27;SEVES&#x27;, 3, &#x27;2017-05-23 00:00:00&#x27;, &#x27;2017-06-02 00:00:00&#x27;, 2, 178.43, &#x27;90 Wadhurst Rd.&#x27;, &#x27;Londo&#x27;, NULL, &#x27;OX15 4NB&#x27;, &#x27;UK&#x27;);INSERT INTO `orders` VALUES (10548, &#x27;TOMSP&#x27;, 3, &#x27;2017-05-26 00:00:00&#x27;, &#x27;2017-06-02 00:00:00&#x27;, 2, 1.43, &#x27;Luisenstr. 48&#x27;, &#x27;Münster&#x27;, NULL, &#x27;44087&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10549, &#x27;QUICK&#x27;, 5, &#x27;2017-05-27 00:00:00&#x27;, &#x27;2017-05-30 00:00:00&#x27;, 1, 171.24, &#x27;Taucherstraße 10&#x27;, &#x27;Cunewalde&#x27;, NULL, &#x27;01307&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10550, &#x27;GODOS&#x27;, 7, &#x27;2017-05-28 00:00:00&#x27;, &#x27;2017-06-06 00:00:00&#x27;, 3, 4.32, &#x27;C/ Romero-33&#x27;, &#x27;Sevilla&#x27;, NULL, &#x27;41101&#x27;, &#x27;Spain&#x27;);INSERT INTO `orders` VALUES (10551, &#x27;FURIB&#x27;, 4, &#x27;2017-05-28 00:00:00&#x27;, &#x27;2017-06-06 00:00:00&#x27;, 3, 72.95, &#x27;Jardim das rosas n. 32&#x27;, &#x27;Lisboa&#x27;, NULL, &#x27;1675&#x27;, &#x27;Portugal&#x27;);INSERT INTO `orders` VALUES (10552, &#x27;HILAA&#x27;, 2, &#x27;2017-05-29 00:00:00&#x27;, &#x27;2017-06-05 00:00:00&#x27;, 1, 83.22, &#x27;Carrera 22 con Ave. Carlos Soublette #8-35&#x27;, &#x27;San Cristóbal&#x27;, &#x27;Táchira&#x27;, &#x27;5022&#x27;, &#x27;Venezuela&#x27;);INSERT INTO `orders` VALUES (10553, &#x27;WARTH&#x27;, 2, &#x27;2017-05-30 00:00:00&#x27;, &#x27;2017-06-03 00:00:00&#x27;, 2, 149.49, &#x27;Torikatu 38&#x27;, &#x27;Oulu&#x27;, NULL, &#x27;90110&#x27;, &#x27;Finland&#x27;);INSERT INTO `orders` VALUES (10554, &#x27;OTTIK&#x27;, 4, &#x27;2017-05-30 00:00:00&#x27;, &#x27;2017-06-05 00:00:00&#x27;, 3, 120.97, &#x27;Mehrheimerstr. 369&#x27;, &#x27;Köl&#x27;, NULL, &#x27;50739&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10555, &#x27;SAVEA&#x27;, 6, &#x27;2017-06-02 00:00:00&#x27;, &#x27;2017-06-04 00:00:00&#x27;, 3, 252.49, &#x27;187 Suffolk Ln.&#x27;, &#x27;Boise&#x27;, &#x27;ID&#x27;, &#x27;83720&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10556, &#x27;SIMOB&#x27;, 2, &#x27;2017-06-03 00:00:00&#x27;, &#x27;2017-06-13 00:00:00&#x27;, 1, 9.80, &#x27;Vinbæltet 34&#x27;, &#x27;Kobenhav&#x27;, NULL, &#x27;1734&#x27;, &#x27;Denmark&#x27;);INSERT INTO `orders` VALUES (10557, &#x27;LEHMS&#x27;, 9, &#x27;2017-06-03 00:00:00&#x27;, &#x27;2017-06-06 00:00:00&#x27;, 2, 96.72, &#x27;Magazinweg 7&#x27;, &#x27;Frankfurt a.M.&#x27;, NULL, &#x27;60528&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10558, &#x27;AROUT&#x27;, 1, &#x27;2017-06-04 00:00:00&#x27;, &#x27;2017-06-10 00:00:00&#x27;, 2, 72.97, &#x27;Brook Farm Stratford St. Mary&#x27;, &#x27;Colchester&#x27;, &#x27;Essex&#x27;, &#x27;CO7 6JX&#x27;, &#x27;UK&#x27;);INSERT INTO `orders` VALUES (10559, &#x27;BLONP&#x27;, 6, &#x27;2017-06-05 00:00:00&#x27;, &#x27;2017-06-13 00:00:00&#x27;, 1, 8.05, &#x27;24-place Kléber&#x27;, &#x27;Strasbourg&#x27;, NULL, &#x27;67000&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10560, &#x27;FRANK&#x27;, 8, &#x27;2017-06-06 00:00:00&#x27;, &#x27;2017-06-09 00:00:00&#x27;, 1, 36.65, &#x27;Berliner Platz 43&#x27;, &#x27;Münche&#x27;, NULL, &#x27;80805&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10561, &#x27;FOLKO&#x27;, 2, &#x27;2017-06-06 00:00:00&#x27;, &#x27;2017-06-09 00:00:00&#x27;, 2, 242.21, &#x27;Åkergatan 24&#x27;, &#x27;Bräcke&#x27;, NULL, &#x27;S-844 67&#x27;, &#x27;Sweden&#x27;);INSERT INTO `orders` VALUES (10562, &#x27;REGGC&#x27;, 1, &#x27;2017-06-09 00:00:00&#x27;, &#x27;2017-06-12 00:00:00&#x27;, 1, 22.95, &#x27;Strada Provinciale 124&#x27;, &#x27;Reggio Emilia&#x27;, NULL, &#x27;42100&#x27;, &#x27;Italy&#x27;);INSERT INTO `orders` VALUES (10563, &#x27;RICAR&#x27;, 2, &#x27;2017-06-10 00:00:00&#x27;, &#x27;2017-06-24 00:00:00&#x27;, 2, 60.43, &#x27;Av. Copacabana-267&#x27;, &#x27;Rio de Janeiro&#x27;, &#x27;RJ&#x27;, &#x27;02389-890&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10564, &#x27;RATTC&#x27;, 4, &#x27;2017-06-10 00:00:00&#x27;, &#x27;2017-06-16 00:00:00&#x27;, 3, 13.75, &#x27;2817 Milton Dr.&#x27;, &#x27;Albuquerque&#x27;, &#x27;NM&#x27;, &#x27;87110&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10565, &#x27;MEREP&#x27;, 8, &#x27;2017-06-11 00:00:00&#x27;, &#x27;2017-06-18 00:00:00&#x27;, 2, 7.15, &#x27;43 rue St. Laurent&#x27;, &#x27;Montréal&#x27;, &#x27;Québec&#x27;, &#x27;H1J 1C3&#x27;, &#x27;Canada&#x27;);INSERT INTO `orders` VALUES (10566, &#x27;BLONP&#x27;, 9, &#x27;2017-06-12 00:00:00&#x27;, &#x27;2017-06-18 00:00:00&#x27;, 1, 88.40, &#x27;24-place Kléber&#x27;, &#x27;Strasbourg&#x27;, NULL, &#x27;67000&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10567, &#x27;HUNGO&#x27;, 1, &#x27;2017-06-12 00:00:00&#x27;, &#x27;2017-06-17 00:00:00&#x27;, 1, 33.97, &#x27;8 Johnstown Road&#x27;, &#x27;Cork&#x27;, &#x27;Co. Cork&#x27;, NULL, &#x27;Ireland&#x27;);INSERT INTO `orders` VALUES (10568, &#x27;GALED&#x27;, 3, &#x27;2017-06-13 00:00:00&#x27;, &#x27;2017-07-09 00:00:00&#x27;, 3, 6.54, &#x27;Rambla de Cataluña-23&#x27;, &#x27;Barcelona&#x27;, NULL, &#x27;8022&#x27;, &#x27;Spain&#x27;);INSERT INTO `orders` VALUES (10569, &#x27;RATTC&#x27;, 5, &#x27;2017-06-16 00:00:00&#x27;, &#x27;2017-07-11 00:00:00&#x27;, 1, 58.98, &#x27;2817 Milton Dr.&#x27;, &#x27;Albuquerque&#x27;, &#x27;NM&#x27;, &#x27;87110&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10570, &#x27;MEREP&#x27;, 3, &#x27;2017-06-17 00:00:00&#x27;, &#x27;2017-06-19 00:00:00&#x27;, 3, 188.99, &#x27;43 rue St. Laurent&#x27;, &#x27;Montréal&#x27;, &#x27;Québec&#x27;, &#x27;H1J 1C3&#x27;, &#x27;Canada&#x27;);INSERT INTO `orders` VALUES (10571, &#x27;ERNSH&#x27;, 8, &#x27;2017-06-17 00:00:00&#x27;, &#x27;2017-07-04 00:00:00&#x27;, 3, 26.06, &#x27;Kirchgasse 6&#x27;, &#x27;Graz&#x27;, NULL, &#x27;8010&#x27;, &#x27;Austria&#x27;);INSERT INTO `orders` VALUES (10572, &#x27;BERGS&#x27;, 3, &#x27;2017-06-18 00:00:00&#x27;, &#x27;2017-06-25 00:00:00&#x27;, 2, 116.43, &#x27;Berguvsvägen  8&#x27;, &#x27;Luleå&#x27;, NULL, &#x27;S-958 22&#x27;, &#x27;Sweden&#x27;);INSERT INTO `orders` VALUES (10573, &#x27;ANTO&#x27;, 7, &#x27;2017-06-19 00:00:00&#x27;, &#x27;2017-06-20 00:00:00&#x27;, 3, 84.84, &#x27;Mataderos  2312&#x27;, &#x27;México D.F.&#x27;, NULL, &#x27;05023&#x27;, &#x27;Mexico&#x27;);INSERT INTO `orders` VALUES (10574, &#x27;TRAIH&#x27;, 4, &#x27;2017-06-19 00:00:00&#x27;, &#x27;2017-06-30 00:00:00&#x27;, 2, 37.60, &#x27;722 DaVinci Blvd.&#x27;, &#x27;Kirkland&#x27;, &#x27;WA&#x27;, &#x27;98034&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10575, &#x27;MORGK&#x27;, 5, &#x27;2017-06-20 00:00:00&#x27;, &#x27;2017-06-30 00:00:00&#x27;, 1, 127.34, &#x27;Heerstr. 22&#x27;, &#x27;Leipzig&#x27;, NULL, &#x27;04179&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10576, &#x27;TORTU&#x27;, 3, &#x27;2017-06-23 00:00:00&#x27;, &#x27;2017-06-30 00:00:00&#x27;, 3, 18.56, &#x27;Avda. Azteca 123&#x27;, &#x27;México D.F.&#x27;, NULL, &#x27;05033&#x27;, &#x27;Mexico&#x27;);INSERT INTO `orders` VALUES (10577, &#x27;TRAIH&#x27;, 9, &#x27;2017-06-23 00:00:00&#x27;, &#x27;2017-06-30 00:00:00&#x27;, 2, 25.41, &#x27;722 DaVinci Blvd.&#x27;, &#x27;Kirkland&#x27;, &#x27;WA&#x27;, &#x27;98034&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10578, &#x27;BSBEV&#x27;, 4, &#x27;2017-06-24 00:00:00&#x27;, &#x27;2017-07-25 00:00:00&#x27;, 3, 29.60, &#x27;Fauntleroy Circus&#x27;, &#x27;Londo&#x27;, NULL, &#x27;EC2 5NT&#x27;, &#x27;UK&#x27;);INSERT INTO `orders` VALUES (10579, &#x27;LETSS&#x27;, 1, &#x27;2017-06-25 00:00:00&#x27;, &#x27;2017-07-04 00:00:00&#x27;, 2, 13.73, &#x27;87 Polk St. Suite 5&#x27;, &#x27;San Francisco&#x27;, &#x27;CA&#x27;, &#x27;94117&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10580, &#x27;OTTIK&#x27;, 4, &#x27;2017-06-26 00:00:00&#x27;, &#x27;2017-07-01 00:00:00&#x27;, 3, 75.89, &#x27;Mehrheimerstr. 369&#x27;, &#x27;Köl&#x27;, NULL, &#x27;50739&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10581, &#x27;FAMIA&#x27;, 3, &#x27;2017-06-26 00:00:00&#x27;, &#x27;2017-07-02 00:00:00&#x27;, 1, 3.01, &#x27;Rua Orós-92&#x27;, &#x27;Sao Paulo&#x27;, &#x27;SP&#x27;, &#x27;05442-030&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10582, &#x27;BLAUS&#x27;, 3, &#x27;2017-06-27 00:00:00&#x27;, &#x27;2017-07-14 00:00:00&#x27;, 2, 27.71, &#x27;Forsterstr. 57&#x27;, &#x27;Mannheim&#x27;, NULL, &#x27;68306&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10583, &#x27;WARTH&#x27;, 2, &#x27;2017-06-30 00:00:00&#x27;, &#x27;2017-07-04 00:00:00&#x27;, 2, 7.28, &#x27;Torikatu 38&#x27;, &#x27;Oulu&#x27;, NULL, &#x27;90110&#x27;, &#x27;Finland&#x27;);INSERT INTO `orders` VALUES (10584, &#x27;BLONP&#x27;, 4, &#x27;2017-06-30 00:00:00&#x27;, &#x27;2017-07-04 00:00:00&#x27;, 1, 59.14, &#x27;24-place Kléber&#x27;, &#x27;Strasbourg&#x27;, NULL, &#x27;67000&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10585, &#x27;WELLI&#x27;, 7, &#x27;2017-07-01 00:00:00&#x27;, &#x27;2017-07-10 00:00:00&#x27;, 1, 13.41, &#x27;Rua do Mercado-12&#x27;, &#x27;Resende&#x27;, &#x27;SP&#x27;, &#x27;08737-363&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10586, &#x27;REGGC&#x27;, 9, &#x27;2017-07-02 00:00:00&#x27;, &#x27;2017-07-09 00:00:00&#x27;, 1, 0.48, &#x27;Strada Provinciale 124&#x27;, &#x27;Reggio Emilia&#x27;, NULL, &#x27;42100&#x27;, &#x27;Italy&#x27;);INSERT INTO `orders` VALUES (10587, &#x27;QUEDE&#x27;, 1, &#x27;2017-07-02 00:00:00&#x27;, &#x27;2017-07-09 00:00:00&#x27;, 1, 62.52, &#x27;Rua da Panificadora-12&#x27;, &#x27;Rio de Janeiro&#x27;, &#x27;RJ&#x27;, &#x27;02389-673&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10588, &#x27;QUICK&#x27;, 2, &#x27;2017-07-03 00:00:00&#x27;, &#x27;2017-07-10 00:00:00&#x27;, 3, 194.67, &#x27;Taucherstraße 10&#x27;, &#x27;Cunewalde&#x27;, NULL, &#x27;01307&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10589, &#x27;GREAL&#x27;, 8, &#x27;2017-07-04 00:00:00&#x27;, &#x27;2017-07-14 00:00:00&#x27;, 2, 4.42, &#x27;2732 Baker Blvd.&#x27;, &#x27;Eugene&#x27;, &#x27;OR&#x27;, &#x27;97403&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10590, &#x27;MEREP&#x27;, 4, &#x27;2017-07-07 00:00:00&#x27;, &#x27;2017-07-14 00:00:00&#x27;, 3, 44.77, &#x27;43 rue St. Laurent&#x27;, &#x27;Montréal&#x27;, &#x27;Québec&#x27;, &#x27;H1J 1C3&#x27;, &#x27;Canada&#x27;);INSERT INTO `orders` VALUES (10591, &#x27;VAFFE&#x27;, 1, &#x27;2017-07-07 00:00:00&#x27;, &#x27;2017-07-16 00:00:00&#x27;, 1, 55.92, &#x27;Smagsloget 45&#x27;, &#x27;Århus&#x27;, NULL, &#x27;8200&#x27;, &#x27;Denmark&#x27;);INSERT INTO `orders` VALUES (10592, &#x27;LEHMS&#x27;, 3, &#x27;2017-07-08 00:00:00&#x27;, &#x27;2017-07-16 00:00:00&#x27;, 1, 32.10, &#x27;Magazinweg 7&#x27;, &#x27;Frankfurt a.M.&#x27;, NULL, &#x27;60528&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10593, &#x27;LEHMS&#x27;, 7, &#x27;2017-07-09 00:00:00&#x27;, &#x27;2017-08-13 00:00:00&#x27;, 2, 174.20, &#x27;Magazinweg 7&#x27;, &#x27;Frankfurt a.M.&#x27;, NULL, &#x27;60528&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10594, &#x27;OLDWO&#x27;, 3, &#x27;2017-07-09 00:00:00&#x27;, &#x27;2017-07-16 00:00:00&#x27;, 2, 5.24, &#x27;2743 Bering St.&#x27;, &#x27;Anchorage&#x27;, &#x27;AK&#x27;, &#x27;99508&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10595, &#x27;ERNSH&#x27;, 2, &#x27;2017-07-10 00:00:00&#x27;, &#x27;2017-07-14 00:00:00&#x27;, 1, 96.78, &#x27;Kirchgasse 6&#x27;, &#x27;Graz&#x27;, NULL, &#x27;8010&#x27;, &#x27;Austria&#x27;);INSERT INTO `orders` VALUES (10596, &#x27;WHITC&#x27;, 8, &#x27;2017-07-11 00:00:00&#x27;, &#x27;2017-08-12 00:00:00&#x27;, 1, 16.34, &#x27;1029 - 12th Ave. S.&#x27;, &#x27;Seattle&#x27;, &#x27;WA&#x27;, &#x27;98124&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10597, &#x27;PICCO&#x27;, 7, &#x27;2017-07-11 00:00:00&#x27;, &#x27;2017-07-18 00:00:00&#x27;, 3, 35.12, &#x27;Geislweg 14&#x27;, &#x27;Salzburg&#x27;, NULL, &#x27;5020&#x27;, &#x27;Austria&#x27;);INSERT INTO `orders` VALUES (10598, &#x27;RATTC&#x27;, 1, &#x27;2017-07-14 00:00:00&#x27;, &#x27;2017-07-18 00:00:00&#x27;, 3, 44.42, &#x27;2817 Milton Dr.&#x27;, &#x27;Albuquerque&#x27;, &#x27;NM&#x27;, &#x27;87110&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10599, &#x27;BSBEV&#x27;, 6, &#x27;2017-07-15 00:00:00&#x27;, &#x27;2017-07-21 00:00:00&#x27;, 3, 29.98, &#x27;Fauntleroy Circus&#x27;, &#x27;Londo&#x27;, NULL, &#x27;EC2 5NT&#x27;, &#x27;UK&#x27;);INSERT INTO `orders` VALUES (10600, &#x27;HUNGC&#x27;, 4, &#x27;2017-07-16 00:00:00&#x27;, &#x27;2017-07-21 00:00:00&#x27;, 1, 45.13, &#x27;City Center Plaza 516 Main St.&#x27;, &#x27;Elgi&#x27;, &#x27;OR&#x27;, &#x27;97827&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10601, &#x27;HILAA&#x27;, 7, &#x27;2017-07-16 00:00:00&#x27;, &#x27;2017-07-22 00:00:00&#x27;, 1, 58.30, &#x27;Carrera 22 con Ave. Carlos Soublette #8-35&#x27;, &#x27;San Cristóbal&#x27;, &#x27;Táchira&#x27;, &#x27;5022&#x27;, &#x27;Venezuela&#x27;);INSERT INTO `orders` VALUES (10602, &#x27;VAFFE&#x27;, 8, &#x27;2017-07-17 00:00:00&#x27;, &#x27;2017-07-22 00:00:00&#x27;, 2, 2.92, &#x27;Smagsloget 45&#x27;, &#x27;Århus&#x27;, NULL, &#x27;8200&#x27;, &#x27;Denmark&#x27;);INSERT INTO `orders` VALUES (10603, &#x27;SAVEA&#x27;, 8, &#x27;2017-07-18 00:00:00&#x27;, &#x27;2017-08-08 00:00:00&#x27;, 2, 48.77, &#x27;187 Suffolk Ln.&#x27;, &#x27;Boise&#x27;, &#x27;ID&#x27;, &#x27;83720&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10604, &#x27;FURIB&#x27;, 1, &#x27;2017-07-18 00:00:00&#x27;, &#x27;2017-07-29 00:00:00&#x27;, 1, 7.46, &#x27;Jardim das rosas n. 32&#x27;, &#x27;Lisboa&#x27;, NULL, &#x27;1675&#x27;, &#x27;Portugal&#x27;);INSERT INTO `orders` VALUES (10605, &#x27;MEREP&#x27;, 1, &#x27;2017-07-21 00:00:00&#x27;, &#x27;2017-07-29 00:00:00&#x27;, 2, 379.13, &#x27;43 rue St. Laurent&#x27;, &#x27;Montréal&#x27;, &#x27;Québec&#x27;, &#x27;H1J 1C3&#x27;, &#x27;Canada&#x27;);INSERT INTO `orders` VALUES (10606, &#x27;TRADH&#x27;, 4, &#x27;2017-07-22 00:00:00&#x27;, &#x27;2017-07-31 00:00:00&#x27;, 3, 79.40, &#x27;Av. Inês de Castro-414&#x27;, &#x27;Sao Paulo&#x27;, &#x27;SP&#x27;, &#x27;05634-030&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10607, &#x27;SAVEA&#x27;, 5, &#x27;2017-07-22 00:00:00&#x27;, &#x27;2017-07-25 00:00:00&#x27;, 1, 200.24, &#x27;187 Suffolk Ln.&#x27;, &#x27;Boise&#x27;, &#x27;ID&#x27;, &#x27;83720&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10608, &#x27;TOMSP&#x27;, 4, &#x27;2017-07-23 00:00:00&#x27;, &#x27;2017-08-01 00:00:00&#x27;, 2, 27.79, &#x27;Luisenstr. 48&#x27;, &#x27;Münster&#x27;, NULL, &#x27;44087&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10609, &#x27;DUMO&#x27;, 7, &#x27;2017-07-24 00:00:00&#x27;, &#x27;2017-07-30 00:00:00&#x27;, 2, 1.85, &#x27;67-rue des Cinquante Otages&#x27;, &#x27;Nantes&#x27;, NULL, &#x27;44000&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10610, &#x27;LAMAI&#x27;, 8, &#x27;2017-07-25 00:00:00&#x27;, &#x27;2017-08-06 00:00:00&#x27;, 1, 26.78, &#x27;1 rue Alsace-Lorraine&#x27;, &#x27;Toulouse&#x27;, NULL, &#x27;31000&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10611, &#x27;WOLZA&#x27;, 6, &#x27;2017-07-25 00:00:00&#x27;, &#x27;2017-08-01 00:00:00&#x27;, 2, 80.65, &#x27;ul. Filtrowa 68&#x27;, &#x27;Warszawa&#x27;, NULL, &#x27;01-012&#x27;, &#x27;Poland&#x27;);INSERT INTO `orders` VALUES (10612, &#x27;SAVEA&#x27;, 1, &#x27;2017-07-28 00:00:00&#x27;, &#x27;2017-08-01 00:00:00&#x27;, 2, 544.08, &#x27;187 Suffolk Ln.&#x27;, &#x27;Boise&#x27;, &#x27;ID&#x27;, &#x27;83720&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10613, &#x27;HILAA&#x27;, 4, &#x27;2017-07-29 00:00:00&#x27;, &#x27;2017-08-01 00:00:00&#x27;, 2, 8.11, &#x27;Carrera 22 con Ave. Carlos Soublette #8-35&#x27;, &#x27;San Cristóbal&#x27;, &#x27;Táchira&#x27;, &#x27;5022&#x27;, &#x27;Venezuela&#x27;);INSERT INTO `orders` VALUES (10614, &#x27;BLAUS&#x27;, 8, &#x27;2017-07-29 00:00:00&#x27;, &#x27;2017-08-01 00:00:00&#x27;, 3, 1.93, &#x27;Forsterstr. 57&#x27;, &#x27;Mannheim&#x27;, NULL, &#x27;68306&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10615, &#x27;WILMK&#x27;, 2, &#x27;2017-07-30 00:00:00&#x27;, &#x27;2017-08-06 00:00:00&#x27;, 3, 0.75, &#x27;Keskuskatu 45&#x27;, &#x27;Helsinki&#x27;, NULL, &#x27;21240&#x27;, &#x27;Finland&#x27;);INSERT INTO `orders` VALUES (10616, &#x27;GREAL&#x27;, 1, &#x27;2017-07-31 00:00:00&#x27;, &#x27;2017-08-05 00:00:00&#x27;, 2, 116.53, &#x27;2732 Baker Blvd.&#x27;, &#x27;Eugene&#x27;, &#x27;OR&#x27;, &#x27;97403&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10617, &#x27;GREAL&#x27;, 4, &#x27;2017-07-31 00:00:00&#x27;, &#x27;2017-08-04 00:00:00&#x27;, 2, 18.53, &#x27;2732 Baker Blvd.&#x27;, &#x27;Eugene&#x27;, &#x27;OR&#x27;, &#x27;97403&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10618, &#x27;MEREP&#x27;, 1, &#x27;2017-08-01 00:00:00&#x27;, &#x27;2017-08-08 00:00:00&#x27;, 1, 154.68, &#x27;43 rue St. Laurent&#x27;, &#x27;Montréal&#x27;, &#x27;Québec&#x27;, &#x27;H1J 1C3&#x27;, &#x27;Canada&#x27;);INSERT INTO `orders` VALUES (10619, &#x27;MEREP&#x27;, 3, &#x27;2017-08-04 00:00:00&#x27;, &#x27;2017-08-07 00:00:00&#x27;, 3, 91.05, &#x27;43 rue St. Laurent&#x27;, &#x27;Montréal&#x27;, &#x27;Québec&#x27;, &#x27;H1J 1C3&#x27;, &#x27;Canada&#x27;);INSERT INTO `orders` VALUES (10620, &#x27;LAUGB&#x27;, 2, &#x27;2017-08-05 00:00:00&#x27;, &#x27;2017-08-14 00:00:00&#x27;, 3, 0.94, &#x27;2319 Elm St.&#x27;, &#x27;Vancouver&#x27;, &#x27;BC&#x27;, &#x27;V3F 2K1&#x27;, &#x27;Canada&#x27;);INSERT INTO `orders` VALUES (10621, &#x27;ISLAT&#x27;, 4, &#x27;2017-08-05 00:00:00&#x27;, &#x27;2017-08-11 00:00:00&#x27;, 2, 23.73, &#x27;Garden House Crowther Way&#x27;, &#x27;Cowes&#x27;, &#x27;Isle of Wight&#x27;, &#x27;PO31 7PJ&#x27;, &#x27;UK&#x27;);INSERT INTO `orders` VALUES (10622, &#x27;RICAR&#x27;, 4, &#x27;2017-08-06 00:00:00&#x27;, &#x27;2017-08-11 00:00:00&#x27;, 3, 50.97, &#x27;Av. Copacabana-267&#x27;, &#x27;Rio de Janeiro&#x27;, &#x27;RJ&#x27;, &#x27;02389-890&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10623, &#x27;FRANK&#x27;, 8, &#x27;2017-08-07 00:00:00&#x27;, &#x27;2017-08-12 00:00:00&#x27;, 2, 97.18, &#x27;Berliner Platz 43&#x27;, &#x27;Münche&#x27;, NULL, &#x27;80805&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10624, &#x27;THECR&#x27;, 4, &#x27;2017-08-07 00:00:00&#x27;, &#x27;2017-08-19 00:00:00&#x27;, 2, 94.80, &#x27;55 Grizzly Peak Rd.&#x27;, &#x27;Butte&#x27;, &#x27;MT&#x27;, &#x27;59801&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10625, &#x27;ANATR&#x27;, 3, &#x27;2017-08-08 00:00:00&#x27;, &#x27;2017-08-14 00:00:00&#x27;, 1, 43.90, &#x27;Avda. de la Constitución 2222&#x27;, &#x27;México D.F.&#x27;, NULL, &#x27;05021&#x27;, &#x27;Mexico&#x27;);INSERT INTO `orders` VALUES (10626, &#x27;BERGS&#x27;, 1, &#x27;2017-08-11 00:00:00&#x27;, &#x27;2017-08-20 00:00:00&#x27;, 2, 138.69, &#x27;Berguvsvägen  8&#x27;, &#x27;Luleå&#x27;, NULL, &#x27;S-958 22&#x27;, &#x27;Sweden&#x27;);INSERT INTO `orders` VALUES (10627, &#x27;SAVEA&#x27;, 8, &#x27;2017-08-11 00:00:00&#x27;, &#x27;2017-08-21 00:00:00&#x27;, 3, 107.46, &#x27;187 Suffolk Ln.&#x27;, &#x27;Boise&#x27;, &#x27;ID&#x27;, &#x27;83720&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10628, &#x27;BLONP&#x27;, 4, &#x27;2017-08-12 00:00:00&#x27;, &#x27;2017-08-20 00:00:00&#x27;, 3, 30.36, &#x27;24-place Kléber&#x27;, &#x27;Strasbourg&#x27;, NULL, &#x27;67000&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10629, &#x27;GODOS&#x27;, 4, &#x27;2017-08-12 00:00:00&#x27;, &#x27;2017-08-20 00:00:00&#x27;, 3, 85.46, &#x27;C/ Romero-33&#x27;, &#x27;Sevilla&#x27;, NULL, &#x27;41101&#x27;, &#x27;Spain&#x27;);INSERT INTO `orders` VALUES (10630, &#x27;KOENE&#x27;, 1, &#x27;2017-08-13 00:00:00&#x27;, &#x27;2017-08-19 00:00:00&#x27;, 2, 32.35, &#x27;Maubelstr. 90&#x27;, &#x27;Brandenburg&#x27;, NULL, &#x27;14776&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10631, &#x27;LAMAI&#x27;, 8, &#x27;2017-08-14 00:00:00&#x27;, &#x27;2017-08-15 00:00:00&#x27;, 1, 0.87, &#x27;1 rue Alsace-Lorraine&#x27;, &#x27;Toulouse&#x27;, NULL, &#x27;31000&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10632, &#x27;WANDK&#x27;, 8, &#x27;2017-08-14 00:00:00&#x27;, &#x27;2017-08-19 00:00:00&#x27;, 1, 41.38, &#x27;Adenauerallee 900&#x27;, &#x27;Stuttgart&#x27;, NULL, &#x27;70563&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10633, &#x27;ERNSH&#x27;, 7, &#x27;2017-08-15 00:00:00&#x27;, &#x27;2017-08-18 00:00:00&#x27;, 3, 477.90, &#x27;Kirchgasse 6&#x27;, &#x27;Graz&#x27;, NULL, &#x27;8010&#x27;, &#x27;Austria&#x27;);INSERT INTO `orders` VALUES (10634, &#x27;FOLIG&#x27;, 4, &#x27;2017-08-15 00:00:00&#x27;, &#x27;2017-08-21 00:00:00&#x27;, 3, 487.38, &#x27;184-chaussée de Tournai&#x27;, &#x27;Lille&#x27;, NULL, &#x27;59000&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10635, &#x27;MAGAA&#x27;, 8, &#x27;2017-08-18 00:00:00&#x27;, &#x27;2017-08-21 00:00:00&#x27;, 3, 47.46, &#x27;Via Ludovico il Moro 22&#x27;, &#x27;Bergamo&#x27;, NULL, &#x27;24100&#x27;, &#x27;Italy&#x27;);INSERT INTO `orders` VALUES (10636, &#x27;WARTH&#x27;, 4, &#x27;2017-08-19 00:00:00&#x27;, &#x27;2017-08-26 00:00:00&#x27;, 1, 1.15, &#x27;Torikatu 38&#x27;, &#x27;Oulu&#x27;, NULL, &#x27;90110&#x27;, &#x27;Finland&#x27;);INSERT INTO `orders` VALUES (10637, &#x27;QUEE&#x27;, 6, &#x27;2017-08-19 00:00:00&#x27;, &#x27;2017-08-26 00:00:00&#x27;, 1, 201.29, &#x27;Alameda dos Canàrios-891&#x27;, &#x27;Sao Paulo&#x27;, &#x27;SP&#x27;, &#x27;05487-020&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10638, &#x27;LINOD&#x27;, 3, &#x27;2017-08-20 00:00:00&#x27;, &#x27;2017-09-01 00:00:00&#x27;, 1, 158.44, &#x27;Ave. 5 de Mayo Porlamar&#x27;, &#x27;I. de Margarita&#x27;, &#x27;Nueva Esparta&#x27;, &#x27;4980&#x27;, &#x27;Venezuela&#x27;);INSERT INTO `orders` VALUES (10639, &#x27;SANTG&#x27;, 7, &#x27;2017-08-20 00:00:00&#x27;, &#x27;2017-08-27 00:00:00&#x27;, 3, 38.64, &#x27;Erling Skakkes gate 78&#x27;, &#x27;Staver&#x27;, NULL, &#x27;4110&#x27;, &#x27;Norway&#x27;);INSERT INTO `orders` VALUES (10640, &#x27;WANDK&#x27;, 4, &#x27;2017-08-21 00:00:00&#x27;, &#x27;2017-08-28 00:00:00&#x27;, 1, 23.55, &#x27;Adenauerallee 900&#x27;, &#x27;Stuttgart&#x27;, NULL, &#x27;70563&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10641, &#x27;HILAA&#x27;, 4, &#x27;2017-08-22 00:00:00&#x27;, &#x27;2017-08-26 00:00:00&#x27;, 2, 179.61, &#x27;Carrera 22 con Ave. Carlos Soublette #8-35&#x27;, &#x27;San Cristóbal&#x27;, &#x27;Táchira&#x27;, &#x27;5022&#x27;, &#x27;Venezuela&#x27;);INSERT INTO `orders` VALUES (10642, &#x27;SIMOB&#x27;, 7, &#x27;2017-08-22 00:00:00&#x27;, &#x27;2017-09-05 00:00:00&#x27;, 3, 41.89, &#x27;Vinbæltet 34&#x27;, &#x27;Kobenhav&#x27;, NULL, &#x27;1734&#x27;, &#x27;Denmark&#x27;);INSERT INTO `orders` VALUES (10643, &#x27;ALFKI&#x27;, 6, &#x27;2017-08-25 00:00:00&#x27;, &#x27;2017-09-02 00:00:00&#x27;, 1, 29.46, &#x27;Obere Str. 57&#x27;, &#x27;Berli&#x27;, NULL, &#x27;12209&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10644, &#x27;WELLI&#x27;, 3, &#x27;2017-08-25 00:00:00&#x27;, &#x27;2017-09-01 00:00:00&#x27;, 2, 0.14, &#x27;Rua do Mercado-12&#x27;, &#x27;Resende&#x27;, &#x27;SP&#x27;, &#x27;08737-363&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10645, &#x27;HANAR&#x27;, 4, &#x27;2017-08-26 00:00:00&#x27;, &#x27;2017-09-02 00:00:00&#x27;, 1, 12.41, &#x27;Rua do Paço-67&#x27;, &#x27;Rio de Janeiro&#x27;, &#x27;RJ&#x27;, &#x27;05454-876&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10646, &#x27;HUNGO&#x27;, 9, &#x27;2017-08-27 00:00:00&#x27;, &#x27;2017-09-03 00:00:00&#x27;, 3, 142.33, &#x27;8 Johnstown Road&#x27;, &#x27;Cork&#x27;, &#x27;Co. Cork&#x27;, NULL, &#x27;Ireland&#x27;);INSERT INTO `orders` VALUES (10647, &#x27;QUEDE&#x27;, 4, &#x27;2017-08-27 00:00:00&#x27;, &#x27;2017-09-03 00:00:00&#x27;, 2, 45.54, &#x27;Rua da Panificadora-12&#x27;, &#x27;Rio de Janeiro&#x27;, &#x27;RJ&#x27;, &#x27;02389-673&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10648, &#x27;RICAR&#x27;, 5, &#x27;2017-08-28 00:00:00&#x27;, &#x27;2017-09-09 00:00:00&#x27;, 2, 14.25, &#x27;Av. Copacabana-267&#x27;, &#x27;Rio de Janeiro&#x27;, &#x27;RJ&#x27;, &#x27;02389-890&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10649, &#x27;MAISD&#x27;, 5, &#x27;2017-08-28 00:00:00&#x27;, &#x27;2017-08-29 00:00:00&#x27;, 3, 6.20, &#x27;Rue Joseph-Bens 532&#x27;, &#x27;Bruxelles&#x27;, NULL, &#x27;B-1180&#x27;, &#x27;Belgium&#x27;);INSERT INTO `orders` VALUES (10650, &#x27;FAMIA&#x27;, 5, &#x27;2017-08-29 00:00:00&#x27;, &#x27;2017-09-03 00:00:00&#x27;, 3, 176.81, &#x27;Rua Orós-92&#x27;, &#x27;Sao Paulo&#x27;, &#x27;SP&#x27;, &#x27;05442-030&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10651, &#x27;WANDK&#x27;, 8, &#x27;2017-09-01 00:00:00&#x27;, &#x27;2017-09-11 00:00:00&#x27;, 2, 20.60, &#x27;Adenauerallee 900&#x27;, &#x27;Stuttgart&#x27;, NULL, &#x27;70563&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10652, &#x27;GOURL&#x27;, 4, &#x27;2017-09-01 00:00:00&#x27;, &#x27;2017-09-08 00:00:00&#x27;, 2, 7.14, &#x27;Av. Brasil-442&#x27;, &#x27;Campinas&#x27;, &#x27;SP&#x27;, &#x27;04876-786&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10653, &#x27;FRANK&#x27;, 1, &#x27;2017-09-02 00:00:00&#x27;, &#x27;2017-09-19 00:00:00&#x27;, 1, 93.25, &#x27;Berliner Platz 43&#x27;, &#x27;Münche&#x27;, NULL, &#x27;80805&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10654, &#x27;BERGS&#x27;, 5, &#x27;2017-09-02 00:00:00&#x27;, &#x27;2017-09-11 00:00:00&#x27;, 1, 55.26, &#x27;Berguvsvägen  8&#x27;, &#x27;Luleå&#x27;, NULL, &#x27;S-958 22&#x27;, &#x27;Sweden&#x27;);INSERT INTO `orders` VALUES (10655, &#x27;REGGC&#x27;, 1, &#x27;2017-09-03 00:00:00&#x27;, &#x27;2017-09-11 00:00:00&#x27;, 2, 4.41, &#x27;Strada Provinciale 124&#x27;, &#x27;Reggio Emilia&#x27;, NULL, &#x27;42100&#x27;, &#x27;Italy&#x27;);INSERT INTO `orders` VALUES (10656, &#x27;GREAL&#x27;, 6, &#x27;2017-09-04 00:00:00&#x27;, &#x27;2017-09-10 00:00:00&#x27;, 1, 57.15, &#x27;2732 Baker Blvd.&#x27;, &#x27;Eugene&#x27;, &#x27;OR&#x27;, &#x27;97403&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10657, &#x27;SAVEA&#x27;, 2, &#x27;2017-09-04 00:00:00&#x27;, &#x27;2017-09-15 00:00:00&#x27;, 2, 352.69, &#x27;187 Suffolk Ln.&#x27;, &#x27;Boise&#x27;, &#x27;ID&#x27;, &#x27;83720&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10658, &#x27;QUICK&#x27;, 4, &#x27;2017-09-05 00:00:00&#x27;, &#x27;2017-09-08 00:00:00&#x27;, 1, 364.15, &#x27;Taucherstraße 10&#x27;, &#x27;Cunewalde&#x27;, NULL, &#x27;01307&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10659, &#x27;QUEE&#x27;, 7, &#x27;2017-09-05 00:00:00&#x27;, &#x27;2017-09-10 00:00:00&#x27;, 2, 105.81, &#x27;Alameda dos Canàrios-891&#x27;, &#x27;Sao Paulo&#x27;, &#x27;SP&#x27;, &#x27;05487-020&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10660, &#x27;HUNGC&#x27;, 8, &#x27;2017-09-08 00:00:00&#x27;, &#x27;2017-10-15 00:00:00&#x27;, 1, 111.29, &#x27;City Center Plaza 516 Main St.&#x27;, &#x27;Elgi&#x27;, &#x27;OR&#x27;, &#x27;97827&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10661, &#x27;HUNGO&#x27;, 7, &#x27;2017-09-09 00:00:00&#x27;, &#x27;2017-09-15 00:00:00&#x27;, 3, 17.55, &#x27;8 Johnstown Road&#x27;, &#x27;Cork&#x27;, &#x27;Co. Cork&#x27;, NULL, &#x27;Ireland&#x27;);INSERT INTO `orders` VALUES (10662, &#x27;LONEP&#x27;, 3, &#x27;2017-09-09 00:00:00&#x27;, &#x27;2017-09-18 00:00:00&#x27;, 2, 1.28, &#x27;89 Chiaroscuro Rd.&#x27;, &#x27;Portland&#x27;, &#x27;OR&#x27;, &#x27;97219&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10663, &#x27;BONAP&#x27;, 2, &#x27;2017-09-10 00:00:00&#x27;, &#x27;2017-10-03 00:00:00&#x27;, 2, 113.15, &#x27;12-rue des Bouchers&#x27;, &#x27;Marseille&#x27;, NULL, &#x27;13008&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10664, &#x27;FURIB&#x27;, 1, &#x27;2017-09-10 00:00:00&#x27;, &#x27;2017-09-19 00:00:00&#x27;, 3, 1.27, &#x27;Jardim das rosas n. 32&#x27;, &#x27;Lisboa&#x27;, NULL, &#x27;1675&#x27;, &#x27;Portugal&#x27;);INSERT INTO `orders` VALUES (10665, &#x27;LONEP&#x27;, 1, &#x27;2017-09-11 00:00:00&#x27;, &#x27;2017-09-17 00:00:00&#x27;, 2, 26.31, &#x27;89 Chiaroscuro Rd.&#x27;, &#x27;Portland&#x27;, &#x27;OR&#x27;, &#x27;97219&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10666, &#x27;RICSU&#x27;, 7, &#x27;2017-09-12 00:00:00&#x27;, &#x27;2017-09-22 00:00:00&#x27;, 2, 232.42, &#x27;Starenweg 5&#x27;, &#x27;Genève&#x27;, NULL, &#x27;1204&#x27;, &#x27;Switzerland&#x27;);INSERT INTO `orders` VALUES (10667, &#x27;ERNSH&#x27;, 7, &#x27;2017-09-12 00:00:00&#x27;, &#x27;2017-09-19 00:00:00&#x27;, 1, 78.09, &#x27;Kirchgasse 6&#x27;, &#x27;Graz&#x27;, NULL, &#x27;8010&#x27;, &#x27;Austria&#x27;);INSERT INTO `orders` VALUES (10668, &#x27;WANDK&#x27;, 1, &#x27;2017-09-15 00:00:00&#x27;, &#x27;2017-09-23 00:00:00&#x27;, 2, 47.22, &#x27;Adenauerallee 900&#x27;, &#x27;Stuttgart&#x27;, NULL, &#x27;70563&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10669, &#x27;SIMOB&#x27;, 2, &#x27;2017-09-15 00:00:00&#x27;, &#x27;2017-09-22 00:00:00&#x27;, 1, 24.39, &#x27;Vinbæltet 34&#x27;, &#x27;Kobenhav&#x27;, NULL, &#x27;1734&#x27;, &#x27;Denmark&#x27;);INSERT INTO `orders` VALUES (10670, &#x27;FRANK&#x27;, 4, &#x27;2017-09-16 00:00:00&#x27;, &#x27;2017-09-18 00:00:00&#x27;, 1, 203.48, &#x27;Berliner Platz 43&#x27;, &#x27;Münche&#x27;, NULL, &#x27;80805&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10671, &#x27;FRANR&#x27;, 1, &#x27;2017-09-17 00:00:00&#x27;, &#x27;2017-09-24 00:00:00&#x27;, 1, 30.34, &#x27;54-rue Royale&#x27;, &#x27;Nantes&#x27;, NULL, &#x27;44000&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10672, &#x27;BERGS&#x27;, 9, &#x27;2017-09-17 00:00:00&#x27;, &#x27;2017-09-26 00:00:00&#x27;, 2, 95.75, &#x27;Berguvsvägen  8&#x27;, &#x27;Luleå&#x27;, NULL, &#x27;S-958 22&#x27;, &#x27;Sweden&#x27;);INSERT INTO `orders` VALUES (10673, &#x27;WILMK&#x27;, 2, &#x27;2017-09-18 00:00:00&#x27;, &#x27;2017-09-19 00:00:00&#x27;, 1, 22.76, &#x27;Keskuskatu 45&#x27;, &#x27;Helsinki&#x27;, NULL, &#x27;21240&#x27;, &#x27;Finland&#x27;);INSERT INTO `orders` VALUES (10674, &#x27;ISLAT&#x27;, 4, &#x27;2017-09-18 00:00:00&#x27;, &#x27;2017-09-30 00:00:00&#x27;, 2, 0.90, &#x27;Garden House Crowther Way&#x27;, &#x27;Cowes&#x27;, &#x27;Isle of Wight&#x27;, &#x27;PO31 7PJ&#x27;, &#x27;UK&#x27;);INSERT INTO `orders` VALUES (10675, &#x27;FRANK&#x27;, 5, &#x27;2017-09-19 00:00:00&#x27;, &#x27;2017-09-23 00:00:00&#x27;, 2, 31.85, &#x27;Berliner Platz 43&#x27;, &#x27;Münche&#x27;, NULL, &#x27;80805&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10676, &#x27;TORTU&#x27;, 2, &#x27;2017-09-22 00:00:00&#x27;, &#x27;2017-09-29 00:00:00&#x27;, 2, 2.01, &#x27;Avda. Azteca 123&#x27;, &#x27;México D.F.&#x27;, NULL, &#x27;05033&#x27;, &#x27;Mexico&#x27;);INSERT INTO `orders` VALUES (10677, &#x27;ANTO&#x27;, 1, &#x27;2017-09-22 00:00:00&#x27;, &#x27;2017-09-26 00:00:00&#x27;, 3, 4.03, &#x27;Mataderos  2312&#x27;, &#x27;México D.F.&#x27;, NULL, &#x27;05023&#x27;, &#x27;Mexico&#x27;);INSERT INTO `orders` VALUES (10678, &#x27;SAVEA&#x27;, 7, &#x27;2017-09-23 00:00:00&#x27;, &#x27;2017-10-16 00:00:00&#x27;, 3, 388.98, &#x27;187 Suffolk Ln.&#x27;, &#x27;Boise&#x27;, &#x27;ID&#x27;, &#x27;83720&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10679, &#x27;BLONP&#x27;, 8, &#x27;2017-09-23 00:00:00&#x27;, &#x27;2017-09-30 00:00:00&#x27;, 3, 27.94, &#x27;24-place Kléber&#x27;, &#x27;Strasbourg&#x27;, NULL, &#x27;67000&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10680, &#x27;OLDWO&#x27;, 1, &#x27;2017-09-24 00:00:00&#x27;, &#x27;2017-09-26 00:00:00&#x27;, 1, 26.61, &#x27;2743 Bering St.&#x27;, &#x27;Anchorage&#x27;, &#x27;AK&#x27;, &#x27;99508&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10681, &#x27;GREAL&#x27;, 3, &#x27;2017-09-25 00:00:00&#x27;, &#x27;2017-09-30 00:00:00&#x27;, 3, 76.13, &#x27;2732 Baker Blvd.&#x27;, &#x27;Eugene&#x27;, &#x27;OR&#x27;, &#x27;97403&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10682, &#x27;ANTO&#x27;, 3, &#x27;2017-09-25 00:00:00&#x27;, &#x27;2017-10-01 00:00:00&#x27;, 2, 36.13, &#x27;Mataderos  2312&#x27;, &#x27;México D.F.&#x27;, NULL, &#x27;05023&#x27;, &#x27;Mexico&#x27;);INSERT INTO `orders` VALUES (10683, &#x27;DUMO&#x27;, 2, &#x27;2017-09-26 00:00:00&#x27;, &#x27;2017-10-01 00:00:00&#x27;, 1, 4.40, &#x27;67-rue des Cinquante Otages&#x27;, &#x27;Nantes&#x27;, NULL, &#x27;44000&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10684, &#x27;OTTIK&#x27;, 3, &#x27;2017-09-26 00:00:00&#x27;, &#x27;2017-09-30 00:00:00&#x27;, 1, 145.63, &#x27;Mehrheimerstr. 369&#x27;, &#x27;Köl&#x27;, NULL, &#x27;50739&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10685, &#x27;GOURL&#x27;, 4, &#x27;2017-09-29 00:00:00&#x27;, &#x27;2017-10-03 00:00:00&#x27;, 2, 33.75, &#x27;Av. Brasil-442&#x27;, &#x27;Campinas&#x27;, &#x27;SP&#x27;, &#x27;04876-786&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10686, &#x27;PICCO&#x27;, 2, &#x27;2017-09-30 00:00:00&#x27;, &#x27;2017-10-08 00:00:00&#x27;, 1, 96.50, &#x27;Geislweg 14&#x27;, &#x27;Salzburg&#x27;, NULL, &#x27;5020&#x27;, &#x27;Austria&#x27;);INSERT INTO `orders` VALUES (10687, &#x27;HUNGO&#x27;, 9, &#x27;2017-09-30 00:00:00&#x27;, &#x27;2017-10-30 00:00:00&#x27;, 2, 296.43, &#x27;8 Johnstown Road&#x27;, &#x27;Cork&#x27;, &#x27;Co. Cork&#x27;, NULL, &#x27;Ireland&#x27;);INSERT INTO `orders` VALUES (10688, &#x27;VAFFE&#x27;, 4, &#x27;2017-10-01 00:00:00&#x27;, &#x27;2017-10-07 00:00:00&#x27;, 2, 299.09, &#x27;Smagsloget 45&#x27;, &#x27;Århus&#x27;, NULL, &#x27;8200&#x27;, &#x27;Denmark&#x27;);INSERT INTO `orders` VALUES (10689, &#x27;BERGS&#x27;, 1, &#x27;2017-10-01 00:00:00&#x27;, &#x27;2017-10-07 00:00:00&#x27;, 2, 13.42, &#x27;Berguvsvägen  8&#x27;, &#x27;Luleå&#x27;, NULL, &#x27;S-958 22&#x27;, &#x27;Sweden&#x27;);INSERT INTO `orders` VALUES (10690, &#x27;HANAR&#x27;, 1, &#x27;2017-10-02 00:00:00&#x27;, &#x27;2017-10-03 00:00:00&#x27;, 1, 15.80, &#x27;Rua do Paço-67&#x27;, &#x27;Rio de Janeiro&#x27;, &#x27;RJ&#x27;, &#x27;05454-876&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10691, &#x27;QUICK&#x27;, 2, &#x27;2017-10-03 00:00:00&#x27;, &#x27;2017-10-22 00:00:00&#x27;, 2, 810.05, &#x27;Taucherstraße 10&#x27;, &#x27;Cunewalde&#x27;, NULL, &#x27;01307&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10692, &#x27;ALFKI&#x27;, 4, &#x27;2017-10-03 00:00:00&#x27;, &#x27;2017-10-13 00:00:00&#x27;, 2, 61.02, &#x27;Obere Str. 57&#x27;, &#x27;Berli&#x27;, NULL, &#x27;12209&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10693, &#x27;WHITC&#x27;, 3, &#x27;2017-10-06 00:00:00&#x27;, &#x27;2017-10-10 00:00:00&#x27;, 3, 139.34, &#x27;1029 - 12th Ave. S.&#x27;, &#x27;Seattle&#x27;, &#x27;WA&#x27;, &#x27;98124&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10694, &#x27;QUICK&#x27;, 8, &#x27;2017-10-06 00:00:00&#x27;, &#x27;2017-10-09 00:00:00&#x27;, 3, 398.36, &#x27;Taucherstraße 10&#x27;, &#x27;Cunewalde&#x27;, NULL, &#x27;01307&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10695, &#x27;WILMK&#x27;, 7, &#x27;2017-10-07 00:00:00&#x27;, &#x27;2017-10-14 00:00:00&#x27;, 1, 16.72, &#x27;Keskuskatu 45&#x27;, &#x27;Helsinki&#x27;, NULL, &#x27;21240&#x27;, &#x27;Finland&#x27;);INSERT INTO `orders` VALUES (10696, &#x27;WHITC&#x27;, 8, &#x27;2017-10-08 00:00:00&#x27;, &#x27;2017-10-14 00:00:00&#x27;, 3, 102.55, &#x27;1029 - 12th Ave. S.&#x27;, &#x27;Seattle&#x27;, &#x27;WA&#x27;, &#x27;98124&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10697, &#x27;LINOD&#x27;, 3, &#x27;2017-10-08 00:00:00&#x27;, &#x27;2017-10-14 00:00:00&#x27;, 1, 45.52, &#x27;Ave. 5 de Mayo Porlamar&#x27;, &#x27;I. de Margarita&#x27;, &#x27;Nueva Esparta&#x27;, &#x27;4980&#x27;, &#x27;Venezuela&#x27;);INSERT INTO `orders` VALUES (10698, &#x27;ERNSH&#x27;, 4, &#x27;2017-10-09 00:00:00&#x27;, &#x27;2017-10-17 00:00:00&#x27;, 1, 272.47, &#x27;Kirchgasse 6&#x27;, &#x27;Graz&#x27;, NULL, &#x27;8010&#x27;, &#x27;Austria&#x27;);INSERT INTO `orders` VALUES (10699, &#x27;MORGK&#x27;, 3, &#x27;2017-10-09 00:00:00&#x27;, &#x27;2017-10-13 00:00:00&#x27;, 3, 0.58, &#x27;Heerstr. 22&#x27;, &#x27;Leipzig&#x27;, NULL, &#x27;04179&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10700, &#x27;SAVEA&#x27;, 3, &#x27;2017-10-10 00:00:00&#x27;, &#x27;2017-10-16 00:00:00&#x27;, 1, 65.10, &#x27;187 Suffolk Ln.&#x27;, &#x27;Boise&#x27;, &#x27;ID&#x27;, &#x27;83720&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10701, &#x27;HUNGO&#x27;, 6, &#x27;2017-10-13 00:00:00&#x27;, &#x27;2017-10-15 00:00:00&#x27;, 3, 220.31, &#x27;8 Johnstown Road&#x27;, &#x27;Cork&#x27;, &#x27;Co. Cork&#x27;, NULL, &#x27;Ireland&#x27;);INSERT INTO `orders` VALUES (10702, &#x27;ALFKI&#x27;, 4, &#x27;2017-10-13 00:00:00&#x27;, &#x27;2017-10-21 00:00:00&#x27;, 1, 23.94, &#x27;Obere Str. 57&#x27;, &#x27;Berli&#x27;, NULL, &#x27;12209&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10703, &#x27;FOLKO&#x27;, 6, &#x27;2017-10-14 00:00:00&#x27;, &#x27;2017-10-20 00:00:00&#x27;, 2, 152.30, &#x27;Åkergatan 24&#x27;, &#x27;Bräcke&#x27;, NULL, &#x27;S-844 67&#x27;, &#x27;Sweden&#x27;);INSERT INTO `orders` VALUES (10704, &#x27;QUEE&#x27;, 6, &#x27;2017-10-14 00:00:00&#x27;, &#x27;2017-11-07 00:00:00&#x27;, 1, 4.78, &#x27;Alameda dos Canàrios-891&#x27;, &#x27;Sao Paulo&#x27;, &#x27;SP&#x27;, &#x27;05487-020&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10705, &#x27;HILAA&#x27;, 9, &#x27;2017-10-15 00:00:00&#x27;, &#x27;2017-11-18 00:00:00&#x27;, 2, 3.52, &#x27;Carrera 22 con Ave. Carlos Soublette #8-35&#x27;, &#x27;San Cristóbal&#x27;, &#x27;Táchira&#x27;, &#x27;5022&#x27;, &#x27;Venezuela&#x27;);INSERT INTO `orders` VALUES (10706, &#x27;OLDWO&#x27;, 8, &#x27;2017-10-16 00:00:00&#x27;, &#x27;2017-10-21 00:00:00&#x27;, 3, 135.63, &#x27;2743 Bering St.&#x27;, &#x27;Anchorage&#x27;, &#x27;AK&#x27;, &#x27;99508&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10707, &#x27;AROUT&#x27;, 4, &#x27;2017-10-16 00:00:00&#x27;, &#x27;2017-10-23 00:00:00&#x27;, 3, 21.74, &#x27;Brook Farm Stratford St. Mary&#x27;, &#x27;Colchester&#x27;, &#x27;Essex&#x27;, &#x27;CO7 6JX&#x27;, &#x27;UK&#x27;);INSERT INTO `orders` VALUES (10708, &#x27;THEBI&#x27;, 6, &#x27;2017-10-17 00:00:00&#x27;, &#x27;2017-11-05 00:00:00&#x27;, 2, 2.96, &#x27;89 Jefferson Way Suite 2&#x27;, &#x27;Portland&#x27;, &#x27;OR&#x27;, &#x27;97201&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10709, &#x27;GOURL&#x27;, 1, &#x27;2017-10-17 00:00:00&#x27;, &#x27;2017-11-20 00:00:00&#x27;, 3, 210.80, &#x27;Av. Brasil-442&#x27;, &#x27;Campinas&#x27;, &#x27;SP&#x27;, &#x27;04876-786&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10710, &#x27;FRANS&#x27;, 1, &#x27;2017-10-20 00:00:00&#x27;, &#x27;2017-10-23 00:00:00&#x27;, 1, 4.98, &#x27;Via Monte Bianco 34&#x27;, &#x27;Torino&#x27;, NULL, &#x27;10100&#x27;, &#x27;Italy&#x27;);INSERT INTO `orders` VALUES (10711, &#x27;SAVEA&#x27;, 5, &#x27;2017-10-21 00:00:00&#x27;, &#x27;2017-10-29 00:00:00&#x27;, 2, 52.41, &#x27;187 Suffolk Ln.&#x27;, &#x27;Boise&#x27;, &#x27;ID&#x27;, &#x27;83720&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10712, &#x27;HUNGO&#x27;, 3, &#x27;2017-10-21 00:00:00&#x27;, &#x27;2017-10-31 00:00:00&#x27;, 1, 89.93, &#x27;8 Johnstown Road&#x27;, &#x27;Cork&#x27;, &#x27;Co. Cork&#x27;, NULL, &#x27;Ireland&#x27;);INSERT INTO `orders` VALUES (10713, &#x27;SAVEA&#x27;, 1, &#x27;2017-10-22 00:00:00&#x27;, &#x27;2017-10-24 00:00:00&#x27;, 1, 167.05, &#x27;187 Suffolk Ln.&#x27;, &#x27;Boise&#x27;, &#x27;ID&#x27;, &#x27;83720&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10714, &#x27;SAVEA&#x27;, 5, &#x27;2017-10-22 00:00:00&#x27;, &#x27;2017-10-27 00:00:00&#x27;, 3, 24.49, &#x27;187 Suffolk Ln.&#x27;, &#x27;Boise&#x27;, &#x27;ID&#x27;, &#x27;83720&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10715, &#x27;BONAP&#x27;, 3, &#x27;2017-10-23 00:00:00&#x27;, &#x27;2017-10-29 00:00:00&#x27;, 1, 63.20, &#x27;12-rue des Bouchers&#x27;, &#x27;Marseille&#x27;, NULL, &#x27;13008&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10716, &#x27;RANCH&#x27;, 4, &#x27;2017-10-24 00:00:00&#x27;, &#x27;2017-10-27 00:00:00&#x27;, 2, 22.57, &#x27;Av. del Libertador 900&#x27;, &#x27;Buenos Aires&#x27;, NULL, &#x27;1010&#x27;, &#x27;Argentina&#x27;);INSERT INTO `orders` VALUES (10717, &#x27;FRANK&#x27;, 1, &#x27;2017-10-24 00:00:00&#x27;, &#x27;2017-10-29 00:00:00&#x27;, 2, 59.25, &#x27;Berliner Platz 43&#x27;, &#x27;Münche&#x27;, NULL, &#x27;80805&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10718, &#x27;KOENE&#x27;, 1, &#x27;2017-10-27 00:00:00&#x27;, &#x27;2017-10-29 00:00:00&#x27;, 3, 170.88, &#x27;Maubelstr. 90&#x27;, &#x27;Brandenburg&#x27;, NULL, &#x27;14776&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10719, &#x27;LETSS&#x27;, 8, &#x27;2017-10-27 00:00:00&#x27;, &#x27;2017-11-05 00:00:00&#x27;, 2, 51.44, &#x27;87 Polk St. Suite 5&#x27;, &#x27;San Francisco&#x27;, &#x27;CA&#x27;, &#x27;94117&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10720, &#x27;QUEDE&#x27;, 8, &#x27;2017-10-28 00:00:00&#x27;, &#x27;2017-11-05 00:00:00&#x27;, 2, 9.53, &#x27;Rua da Panificadora-12&#x27;, &#x27;Rio de Janeiro&#x27;, &#x27;RJ&#x27;, &#x27;02389-673&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10721, &#x27;QUICK&#x27;, 5, &#x27;2017-10-29 00:00:00&#x27;, &#x27;2017-10-31 00:00:00&#x27;, 3, 48.92, &#x27;Taucherstraße 10&#x27;, &#x27;Cunewalde&#x27;, NULL, &#x27;01307&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10722, &#x27;SAVEA&#x27;, 8, &#x27;2017-10-29 00:00:00&#x27;, &#x27;2017-11-04 00:00:00&#x27;, 1, 74.58, &#x27;187 Suffolk Ln.&#x27;, &#x27;Boise&#x27;, &#x27;ID&#x27;, &#x27;83720&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10723, &#x27;WHITC&#x27;, 3, &#x27;2017-10-30 00:00:00&#x27;, &#x27;2017-11-25 00:00:00&#x27;, 1, 21.72, &#x27;1029 - 12th Ave. S.&#x27;, &#x27;Seattle&#x27;, &#x27;WA&#x27;, &#x27;98124&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10724, &#x27;MEREP&#x27;, 8, &#x27;2017-10-30 00:00:00&#x27;, &#x27;2017-11-05 00:00:00&#x27;, 2, 57.75, &#x27;43 rue St. Laurent&#x27;, &#x27;Montréal&#x27;, &#x27;Québec&#x27;, &#x27;H1J 1C3&#x27;, &#x27;Canada&#x27;);INSERT INTO `orders` VALUES (10725, &#x27;FAMIA&#x27;, 4, &#x27;2017-10-31 00:00:00&#x27;, &#x27;2017-11-05 00:00:00&#x27;, 3, 10.83, &#x27;Rua Orós-92&#x27;, &#x27;Sao Paulo&#x27;, &#x27;SP&#x27;, &#x27;05442-030&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10726, &#x27;EASTC&#x27;, 4, &#x27;2017-11-03 00:00:00&#x27;, &#x27;2017-12-05 00:00:00&#x27;, 1, 16.56, &#x27;35 King George&#x27;, &#x27;Londo&#x27;, NULL, &#x27;WX3 6FW&#x27;, &#x27;UK&#x27;);INSERT INTO `orders` VALUES (10727, &#x27;REGGC&#x27;, 2, &#x27;2017-11-03 00:00:00&#x27;, &#x27;2017-12-05 00:00:00&#x27;, 1, 89.90, &#x27;Strada Provinciale 124&#x27;, &#x27;Reggio Emilia&#x27;, NULL, &#x27;42100&#x27;, &#x27;Italy&#x27;);INSERT INTO `orders` VALUES (10728, &#x27;QUEE&#x27;, 4, &#x27;2017-11-04 00:00:00&#x27;, &#x27;2017-11-11 00:00:00&#x27;, 2, 58.33, &#x27;Alameda dos Canàrios-891&#x27;, &#x27;Sao Paulo&#x27;, &#x27;SP&#x27;, &#x27;05487-020&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10729, &#x27;LINOD&#x27;, 8, &#x27;2017-11-04 00:00:00&#x27;, &#x27;2017-11-14 00:00:00&#x27;, 3, 141.06, &#x27;Ave. 5 de Mayo Porlamar&#x27;, &#x27;I. de Margarita&#x27;, &#x27;Nueva Esparta&#x27;, &#x27;4980&#x27;, &#x27;Venezuela&#x27;);INSERT INTO `orders` VALUES (10730, &#x27;BONAP&#x27;, 5, &#x27;2017-11-05 00:00:00&#x27;, &#x27;2017-11-14 00:00:00&#x27;, 1, 20.12, &#x27;12-rue des Bouchers&#x27;, &#x27;Marseille&#x27;, NULL, &#x27;13008&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10731, &#x27;CHOPS&#x27;, 7, &#x27;2017-11-06 00:00:00&#x27;, &#x27;2017-11-14 00:00:00&#x27;, 1, 96.65, &#x27;Hauptstr. 31&#x27;, &#x27;Ber&#x27;, NULL, &#x27;3012&#x27;, &#x27;Switzerland&#x27;);INSERT INTO `orders` VALUES (10732, &#x27;BONAP&#x27;, 3, &#x27;2017-11-06 00:00:00&#x27;, &#x27;2017-11-07 00:00:00&#x27;, 1, 16.97, &#x27;12-rue des Bouchers&#x27;, &#x27;Marseille&#x27;, NULL, &#x27;13008&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10733, &#x27;BERGS&#x27;, 1, &#x27;2017-11-07 00:00:00&#x27;, &#x27;2017-11-10 00:00:00&#x27;, 3, 110.11, &#x27;Berguvsvägen  8&#x27;, &#x27;Luleå&#x27;, NULL, &#x27;S-958 22&#x27;, &#x27;Sweden&#x27;);INSERT INTO `orders` VALUES (10734, &#x27;GOURL&#x27;, 2, &#x27;2017-11-07 00:00:00&#x27;, &#x27;2017-11-12 00:00:00&#x27;, 3, 1.63, &#x27;Av. Brasil-442&#x27;, &#x27;Campinas&#x27;, &#x27;SP&#x27;, &#x27;04876-786&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10735, &#x27;LETSS&#x27;, 6, &#x27;2017-11-10 00:00:00&#x27;, &#x27;2017-11-21 00:00:00&#x27;, 2, 45.97, &#x27;87 Polk St. Suite 5&#x27;, &#x27;San Francisco&#x27;, &#x27;CA&#x27;, &#x27;94117&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10736, &#x27;HUNGO&#x27;, 9, &#x27;2017-11-11 00:00:00&#x27;, &#x27;2017-11-21 00:00:00&#x27;, 2, 44.10, &#x27;8 Johnstown Road&#x27;, &#x27;Cork&#x27;, &#x27;Co. Cork&#x27;, NULL, &#x27;Ireland&#x27;);INSERT INTO `orders` VALUES (10737, &#x27;VINET&#x27;, 2, &#x27;2017-11-11 00:00:00&#x27;, &#x27;2017-11-18 00:00:00&#x27;, 2, 7.79, &#x27;59 rue de l\\&#x27;\\&#x27;Abbaye&#x27;, &#x27;Reims&#x27;, NULL, &#x27;51100&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10738, &#x27;SPECD&#x27;, 2, &#x27;2017-11-12 00:00:00&#x27;, &#x27;2017-11-18 00:00:00&#x27;, 1, 2.91, &#x27;25-rue Lauristo&#x27;, &#x27;Paris&#x27;, NULL, &#x27;75016&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10739, &#x27;VINET&#x27;, 3, &#x27;2017-11-12 00:00:00&#x27;, &#x27;2017-11-17 00:00:00&#x27;, 3, 11.08, &#x27;59 rue de l\\&#x27;\\&#x27;Abbaye&#x27;, &#x27;Reims&#x27;, NULL, &#x27;51100&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10740, &#x27;WHITC&#x27;, 4, &#x27;2017-11-13 00:00:00&#x27;, &#x27;2017-11-25 00:00:00&#x27;, 2, 81.88, &#x27;1029 - 12th Ave. S.&#x27;, &#x27;Seattle&#x27;, &#x27;WA&#x27;, &#x27;98124&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10741, &#x27;AROUT&#x27;, 4, &#x27;2017-11-14 00:00:00&#x27;, &#x27;2017-11-18 00:00:00&#x27;, 3, 10.96, &#x27;Brook Farm Stratford St. Mary&#x27;, &#x27;Colchester&#x27;, &#x27;Essex&#x27;, &#x27;CO7 6JX&#x27;, &#x27;UK&#x27;);INSERT INTO `orders` VALUES (10742, &#x27;BOTTM&#x27;, 3, &#x27;2017-11-14 00:00:00&#x27;, &#x27;2017-11-18 00:00:00&#x27;, 3, 243.73, &#x27;23 Tsawassen Blvd.&#x27;, &#x27;Tsawasse&#x27;, &#x27;BC&#x27;, &#x27;T2F 8M4&#x27;, &#x27;Canada&#x27;);INSERT INTO `orders` VALUES (10743, &#x27;AROUT&#x27;, 1, &#x27;2017-11-17 00:00:00&#x27;, &#x27;2017-11-21 00:00:00&#x27;, 2, 23.72, &#x27;Brook Farm Stratford St. Mary&#x27;, &#x27;Colchester&#x27;, &#x27;Essex&#x27;, &#x27;CO7 6JX&#x27;, &#x27;UK&#x27;);INSERT INTO `orders` VALUES (10744, &#x27;VAFFE&#x27;, 6, &#x27;2017-11-17 00:00:00&#x27;, &#x27;2017-11-24 00:00:00&#x27;, 1, 69.19, &#x27;Smagsloget 45&#x27;, &#x27;Århus&#x27;, NULL, &#x27;8200&#x27;, &#x27;Denmark&#x27;);INSERT INTO `orders` VALUES (10745, &#x27;QUICK&#x27;, 9, &#x27;2017-11-18 00:00:00&#x27;, &#x27;2017-11-27 00:00:00&#x27;, 1, 3.52, &#x27;Taucherstraße 10&#x27;, &#x27;Cunewalde&#x27;, NULL, &#x27;01307&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10746, &#x27;CHOPS&#x27;, 1, &#x27;2017-11-19 00:00:00&#x27;, &#x27;2017-11-21 00:00:00&#x27;, 3, 31.43, &#x27;Hauptstr. 31&#x27;, &#x27;Ber&#x27;, NULL, &#x27;3012&#x27;, &#x27;Switzerland&#x27;);INSERT INTO `orders` VALUES (10747, &#x27;PICCO&#x27;, 6, &#x27;2017-11-19 00:00:00&#x27;, &#x27;2017-11-26 00:00:00&#x27;, 1, 117.33, &#x27;Geislweg 14&#x27;, &#x27;Salzburg&#x27;, NULL, &#x27;5020&#x27;, &#x27;Austria&#x27;);INSERT INTO `orders` VALUES (10748, &#x27;SAVEA&#x27;, 3, &#x27;2017-11-20 00:00:00&#x27;, &#x27;2017-11-28 00:00:00&#x27;, 1, 232.55, &#x27;187 Suffolk Ln.&#x27;, &#x27;Boise&#x27;, &#x27;ID&#x27;, &#x27;83720&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10749, &#x27;ISLAT&#x27;, 4, &#x27;2017-11-20 00:00:00&#x27;, &#x27;2017-12-19 00:00:00&#x27;, 2, 61.53, &#x27;Garden House Crowther Way&#x27;, &#x27;Cowes&#x27;, &#x27;Isle of Wight&#x27;, &#x27;PO31 7PJ&#x27;, &#x27;UK&#x27;);INSERT INTO `orders` VALUES (10750, &#x27;WARTH&#x27;, 9, &#x27;2017-11-21 00:00:00&#x27;, &#x27;2017-11-24 00:00:00&#x27;, 1, 79.30, &#x27;Torikatu 38&#x27;, &#x27;Oulu&#x27;, NULL, &#x27;90110&#x27;, &#x27;Finland&#x27;);INSERT INTO `orders` VALUES (10751, &#x27;RICSU&#x27;, 3, &#x27;2017-11-24 00:00:00&#x27;, &#x27;2017-12-03 00:00:00&#x27;, 3, 130.79, &#x27;Starenweg 5&#x27;, &#x27;Genève&#x27;, NULL, &#x27;1204&#x27;, &#x27;Switzerland&#x27;);INSERT INTO `orders` VALUES (10752, &#x27;NORTS&#x27;, 2, &#x27;2017-11-24 00:00:00&#x27;, &#x27;2017-11-28 00:00:00&#x27;, 3, 1.39, &#x27;South House 300 Queensbridge&#x27;, &#x27;Londo&#x27;, NULL, &#x27;SW7 1RZ&#x27;, &#x27;UK&#x27;);INSERT INTO `orders` VALUES (10753, &#x27;FRANS&#x27;, 3, &#x27;2017-11-25 00:00:00&#x27;, &#x27;2017-11-27 00:00:00&#x27;, 1, 7.70, &#x27;Via Monte Bianco 34&#x27;, &#x27;Torino&#x27;, NULL, &#x27;10100&#x27;, &#x27;Italy&#x27;);INSERT INTO `orders` VALUES (10754, &#x27;MAGAA&#x27;, 6, &#x27;2017-11-25 00:00:00&#x27;, &#x27;2017-11-27 00:00:00&#x27;, 3, 2.38, &#x27;Via Ludovico il Moro 22&#x27;, &#x27;Bergamo&#x27;, NULL, &#x27;24100&#x27;, &#x27;Italy&#x27;);INSERT INTO `orders` VALUES (10755, &#x27;BONAP&#x27;, 4, &#x27;2017-11-26 00:00:00&#x27;, &#x27;2017-11-28 00:00:00&#x27;, 2, 16.71, &#x27;12-rue des Bouchers&#x27;, &#x27;Marseille&#x27;, NULL, &#x27;13008&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10756, &#x27;SPLIR&#x27;, 8, &#x27;2017-11-27 00:00:00&#x27;, &#x27;2017-12-02 00:00:00&#x27;, 2, 73.21, &#x27;P.O. Box 555&#x27;, &#x27;Lander&#x27;, &#x27;WY&#x27;, &#x27;82520&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10757, &#x27;SAVEA&#x27;, 6, &#x27;2017-11-27 00:00:00&#x27;, &#x27;2017-12-15 00:00:00&#x27;, 1, 8.19, &#x27;187 Suffolk Ln.&#x27;, &#x27;Boise&#x27;, &#x27;ID&#x27;, &#x27;83720&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10758, &#x27;RICSU&#x27;, 3, &#x27;2017-11-28 00:00:00&#x27;, &#x27;2017-12-04 00:00:00&#x27;, 3, 138.17, &#x27;Starenweg 5&#x27;, &#x27;Genève&#x27;, NULL, &#x27;1204&#x27;, &#x27;Switzerland&#x27;);INSERT INTO `orders` VALUES (10759, &#x27;ANATR&#x27;, 3, &#x27;2017-11-28 00:00:00&#x27;, &#x27;2017-12-12 00:00:00&#x27;, 3, 11.99, &#x27;Avda. de la Constitución 2222&#x27;, &#x27;México D.F.&#x27;, NULL, &#x27;05021&#x27;, &#x27;Mexico&#x27;);INSERT INTO `orders` VALUES (10760, &#x27;MAISD&#x27;, 4, &#x27;2017-12-01 00:00:00&#x27;, &#x27;2017-12-10 00:00:00&#x27;, 1, 155.64, &#x27;Rue Joseph-Bens 532&#x27;, &#x27;Bruxelles&#x27;, NULL, &#x27;B-1180&#x27;, &#x27;Belgium&#x27;);INSERT INTO `orders` VALUES (10761, &#x27;RATTC&#x27;, 5, &#x27;2017-12-02 00:00:00&#x27;, &#x27;2017-12-08 00:00:00&#x27;, 2, 18.66, &#x27;2817 Milton Dr.&#x27;, &#x27;Albuquerque&#x27;, &#x27;NM&#x27;, &#x27;87110&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10762, &#x27;FOLKO&#x27;, 3, &#x27;2017-12-02 00:00:00&#x27;, &#x27;2017-12-09 00:00:00&#x27;, 1, 328.74, &#x27;Åkergatan 24&#x27;, &#x27;Bräcke&#x27;, NULL, &#x27;S-844 67&#x27;, &#x27;Sweden&#x27;);INSERT INTO `orders` VALUES (10763, &#x27;FOLIG&#x27;, 3, &#x27;2017-12-03 00:00:00&#x27;, &#x27;2017-12-08 00:00:00&#x27;, 3, 37.35, &#x27;184-chaussée de Tournai&#x27;, &#x27;Lille&#x27;, NULL, &#x27;59000&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10764, &#x27;ERNSH&#x27;, 6, &#x27;2017-12-03 00:00:00&#x27;, &#x27;2017-12-08 00:00:00&#x27;, 3, 145.45, &#x27;Kirchgasse 6&#x27;, &#x27;Graz&#x27;, NULL, &#x27;8010&#x27;, &#x27;Austria&#x27;);INSERT INTO `orders` VALUES (10765, &#x27;QUICK&#x27;, 3, &#x27;2017-12-04 00:00:00&#x27;, &#x27;2017-12-09 00:00:00&#x27;, 3, 42.74, &#x27;Taucherstraße 10&#x27;, &#x27;Cunewalde&#x27;, NULL, &#x27;01307&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10766, &#x27;OTTIK&#x27;, 4, &#x27;2017-12-05 00:00:00&#x27;, &#x27;2017-12-09 00:00:00&#x27;, 1, 157.55, &#x27;Mehrheimerstr. 369&#x27;, &#x27;Köl&#x27;, NULL, &#x27;50739&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10767, &#x27;SUPRD&#x27;, 4, &#x27;2017-12-05 00:00:00&#x27;, &#x27;2017-12-15 00:00:00&#x27;, 3, 1.59, &#x27;Boulevard Tirou-255&#x27;, &#x27;Charleroi&#x27;, NULL, &#x27;B-6000&#x27;, &#x27;Belgium&#x27;);INSERT INTO `orders` VALUES (10768, &#x27;AROUT&#x27;, 3, &#x27;2017-12-08 00:00:00&#x27;, &#x27;2017-12-15 00:00:00&#x27;, 2, 146.32, &#x27;Brook Farm Stratford St. Mary&#x27;, &#x27;Colchester&#x27;, &#x27;Essex&#x27;, &#x27;CO7 6JX&#x27;, &#x27;UK&#x27;);INSERT INTO `orders` VALUES (10769, &#x27;VAFFE&#x27;, 3, &#x27;2017-12-08 00:00:00&#x27;, &#x27;2017-12-12 00:00:00&#x27;, 1, 65.06, &#x27;Smagsloget 45&#x27;, &#x27;Århus&#x27;, NULL, &#x27;8200&#x27;, &#x27;Denmark&#x27;);INSERT INTO `orders` VALUES (10770, &#x27;HANAR&#x27;, 8, &#x27;2017-12-09 00:00:00&#x27;, &#x27;2017-12-17 00:00:00&#x27;, 3, 5.32, &#x27;Rua do Paço-67&#x27;, &#x27;Rio de Janeiro&#x27;, &#x27;RJ&#x27;, &#x27;05454-876&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10771, &#x27;ERNSH&#x27;, 9, &#x27;2017-12-10 00:00:00&#x27;, &#x27;2018-01-02 00:00:00&#x27;, 2, 11.19, &#x27;Kirchgasse 6&#x27;, &#x27;Graz&#x27;, NULL, &#x27;8010&#x27;, &#x27;Austria&#x27;);INSERT INTO `orders` VALUES (10772, &#x27;LEHMS&#x27;, 3, &#x27;2017-12-10 00:00:00&#x27;, &#x27;2017-12-19 00:00:00&#x27;, 2, 91.28, &#x27;Magazinweg 7&#x27;, &#x27;Frankfurt a.M.&#x27;, NULL, &#x27;60528&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10773, &#x27;ERNSH&#x27;, 1, &#x27;2017-12-11 00:00:00&#x27;, &#x27;2017-12-16 00:00:00&#x27;, 3, 96.43, &#x27;Kirchgasse 6&#x27;, &#x27;Graz&#x27;, NULL, &#x27;8010&#x27;, &#x27;Austria&#x27;);INSERT INTO `orders` VALUES (10774, &#x27;FOLKO&#x27;, 4, &#x27;2017-12-11 00:00:00&#x27;, &#x27;2017-12-12 00:00:00&#x27;, 1, 48.20, &#x27;Åkergatan 24&#x27;, &#x27;Bräcke&#x27;, NULL, &#x27;S-844 67&#x27;, &#x27;Sweden&#x27;);INSERT INTO `orders` VALUES (10775, &#x27;THECR&#x27;, 7, &#x27;2017-12-12 00:00:00&#x27;, &#x27;2017-12-26 00:00:00&#x27;, 1, 20.25, &#x27;55 Grizzly Peak Rd.&#x27;, &#x27;Butte&#x27;, &#x27;MT&#x27;, &#x27;59801&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10776, &#x27;ERNSH&#x27;, 1, &#x27;2017-12-15 00:00:00&#x27;, &#x27;2017-12-18 00:00:00&#x27;, 3, 351.53, &#x27;Kirchgasse 6&#x27;, &#x27;Graz&#x27;, NULL, &#x27;8010&#x27;, &#x27;Austria&#x27;);INSERT INTO `orders` VALUES (10777, &#x27;GOURL&#x27;, 7, &#x27;2017-12-15 00:00:00&#x27;, &#x27;2018-01-21 00:00:00&#x27;, 2, 3.01, &#x27;Av. Brasil-442&#x27;, &#x27;Campinas&#x27;, &#x27;SP&#x27;, &#x27;04876-786&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10778, &#x27;BERGS&#x27;, 3, &#x27;2017-12-16 00:00:00&#x27;, &#x27;2017-12-24 00:00:00&#x27;, 1, 6.79, &#x27;Berguvsvägen  8&#x27;, &#x27;Luleå&#x27;, NULL, &#x27;S-958 22&#x27;, &#x27;Sweden&#x27;);INSERT INTO `orders` VALUES (10779, &#x27;MORGK&#x27;, 3, &#x27;2017-12-16 00:00:00&#x27;, &#x27;2018-01-14 00:00:00&#x27;, 2, 58.13, &#x27;Heerstr. 22&#x27;, &#x27;Leipzig&#x27;, NULL, &#x27;04179&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10780, &#x27;LILAS&#x27;, 2, &#x27;2017-12-16 00:00:00&#x27;, &#x27;2017-12-25 00:00:00&#x27;, 1, 42.13, &#x27;Carrera 52 con Ave. Bolívar #65-98 Llano Largo&#x27;, &#x27;Barquisimeto&#x27;, &#x27;Lara&#x27;, &#x27;3508&#x27;, &#x27;Venezuela&#x27;);INSERT INTO `orders` VALUES (10781, &#x27;WARTH&#x27;, 2, &#x27;2017-12-17 00:00:00&#x27;, &#x27;2017-12-19 00:00:00&#x27;, 3, 73.16, &#x27;Torikatu 38&#x27;, &#x27;Oulu&#x27;, NULL, &#x27;90110&#x27;, &#x27;Finland&#x27;);INSERT INTO `orders` VALUES (10782, &#x27;CACTU&#x27;, 9, &#x27;2017-12-17 00:00:00&#x27;, &#x27;2017-12-22 00:00:00&#x27;, 3, 1.10, &#x27;Cerrito 333&#x27;, &#x27;Buenos Aires&#x27;, NULL, &#x27;1010&#x27;, &#x27;Argentina&#x27;);INSERT INTO `orders` VALUES (10783, &#x27;HANAR&#x27;, 4, &#x27;2017-12-18 00:00:00&#x27;, &#x27;2017-12-19 00:00:00&#x27;, 2, 124.98, &#x27;Rua do Paço-67&#x27;, &#x27;Rio de Janeiro&#x27;, &#x27;RJ&#x27;, &#x27;05454-876&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10784, &#x27;MAGAA&#x27;, 4, &#x27;2017-12-18 00:00:00&#x27;, &#x27;2017-12-22 00:00:00&#x27;, 3, 70.09, &#x27;Via Ludovico il Moro 22&#x27;, &#x27;Bergamo&#x27;, NULL, &#x27;24100&#x27;, &#x27;Italy&#x27;);INSERT INTO `orders` VALUES (10785, &#x27;GROSR&#x27;, 1, &#x27;2017-12-18 00:00:00&#x27;, &#x27;2017-12-24 00:00:00&#x27;, 3, 1.51, &#x27;5ª Ave. Los Palos Grandes&#x27;, &#x27;Caracas&#x27;, &#x27;DF&#x27;, &#x27;1081&#x27;, &#x27;Venezuela&#x27;);INSERT INTO `orders` VALUES (10786, &#x27;QUEE&#x27;, 8, &#x27;2017-12-19 00:00:00&#x27;, &#x27;2017-12-23 00:00:00&#x27;, 1, 110.87, &#x27;Alameda dos Canàrios-891&#x27;, &#x27;Sao Paulo&#x27;, &#x27;SP&#x27;, &#x27;05487-020&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10787, &#x27;LAMAI&#x27;, 2, &#x27;2017-12-19 00:00:00&#x27;, &#x27;2017-12-26 00:00:00&#x27;, 1, 249.93, &#x27;1 rue Alsace-Lorraine&#x27;, &#x27;Toulouse&#x27;, NULL, &#x27;31000&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10788, &#x27;QUICK&#x27;, 1, &#x27;2017-12-22 00:00:00&#x27;, &#x27;2018-01-19 00:00:00&#x27;, 2, 42.70, &#x27;Taucherstraße 10&#x27;, &#x27;Cunewalde&#x27;, NULL, &#x27;01307&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10789, &#x27;FOLIG&#x27;, 1, &#x27;2017-12-22 00:00:00&#x27;, &#x27;2017-12-31 00:00:00&#x27;, 2, 100.60, &#x27;184-chaussée de Tournai&#x27;, &#x27;Lille&#x27;, NULL, &#x27;59000&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10790, &#x27;GOURL&#x27;, 6, &#x27;2017-12-22 00:00:00&#x27;, &#x27;2017-12-26 00:00:00&#x27;, 1, 28.23, &#x27;Av. Brasil-442&#x27;, &#x27;Campinas&#x27;, &#x27;SP&#x27;, &#x27;04876-786&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10791, &#x27;FRANK&#x27;, 6, &#x27;2017-12-23 00:00:00&#x27;, &#x27;2018-01-01 00:00:00&#x27;, 2, 16.85, &#x27;Berliner Platz 43&#x27;, &#x27;Münche&#x27;, NULL, &#x27;80805&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10792, &#x27;WOLZA&#x27;, 1, &#x27;2017-12-23 00:00:00&#x27;, &#x27;2017-12-31 00:00:00&#x27;, 3, 23.79, &#x27;ul. Filtrowa 68&#x27;, &#x27;Warszawa&#x27;, NULL, &#x27;01-012&#x27;, &#x27;Poland&#x27;);INSERT INTO `orders` VALUES (10793, &#x27;AROUT&#x27;, 3, &#x27;2017-12-24 00:00:00&#x27;, &#x27;2018-01-08 00:00:00&#x27;, 3, 4.52, &#x27;Brook Farm Stratford St. Mary&#x27;, &#x27;Colchester&#x27;, &#x27;Essex&#x27;, &#x27;CO7 6JX&#x27;, &#x27;UK&#x27;);INSERT INTO `orders` VALUES (10794, &#x27;QUEDE&#x27;, 6, &#x27;2017-12-24 00:00:00&#x27;, &#x27;2018-01-02 00:00:00&#x27;, 1, 21.49, &#x27;Rua da Panificadora-12&#x27;, &#x27;Rio de Janeiro&#x27;, &#x27;RJ&#x27;, &#x27;02389-673&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10795, &#x27;ERNSH&#x27;, 8, &#x27;2017-12-24 00:00:00&#x27;, &#x27;2018-01-20 00:00:00&#x27;, 2, 126.66, &#x27;Kirchgasse 6&#x27;, &#x27;Graz&#x27;, NULL, &#x27;8010&#x27;, &#x27;Austria&#x27;);INSERT INTO `orders` VALUES (10796, &#x27;HILAA&#x27;, 3, &#x27;2017-12-25 00:00:00&#x27;, &#x27;2018-01-14 00:00:00&#x27;, 1, 26.52, &#x27;Carrera 22 con Ave. Carlos Soublette #8-35&#x27;, &#x27;San Cristóbal&#x27;, &#x27;Táchira&#x27;, &#x27;5022&#x27;, &#x27;Venezuela&#x27;);INSERT INTO `orders` VALUES (10797, &#x27;DRACD&#x27;, 7, &#x27;2017-12-25 00:00:00&#x27;, &#x27;2018-01-05 00:00:00&#x27;, 2, 33.35, &#x27;Walserweg 21&#x27;, &#x27;Aache&#x27;, NULL, &#x27;52066&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10798, &#x27;ISLAT&#x27;, 2, &#x27;2017-12-26 00:00:00&#x27;, &#x27;2018-01-05 00:00:00&#x27;, 1, 2.33, &#x27;Garden House Crowther Way&#x27;, &#x27;Cowes&#x27;, &#x27;Isle of Wight&#x27;, &#x27;PO31 7PJ&#x27;, &#x27;UK&#x27;);INSERT INTO `orders` VALUES (10799, &#x27;KOENE&#x27;, 9, &#x27;2017-12-26 00:00:00&#x27;, &#x27;2018-01-05 00:00:00&#x27;, 3, 30.76, &#x27;Maubelstr. 90&#x27;, &#x27;Brandenburg&#x27;, NULL, &#x27;14776&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10800, &#x27;SEVES&#x27;, 1, &#x27;2017-12-26 00:00:00&#x27;, &#x27;2018-01-05 00:00:00&#x27;, 3, 137.44, &#x27;90 Wadhurst Rd.&#x27;, &#x27;Londo&#x27;, NULL, &#x27;OX15 4NB&#x27;, &#x27;UK&#x27;);INSERT INTO `orders` VALUES (10801, &#x27;BOLID&#x27;, 4, &#x27;2017-12-29 00:00:00&#x27;, &#x27;2017-12-31 00:00:00&#x27;, 2, 97.09, &#x27;C/ Araquil-67&#x27;, &#x27;Madrid&#x27;, NULL, &#x27;28023&#x27;, &#x27;Spain&#x27;);INSERT INTO `orders` VALUES (10802, &#x27;SIMOB&#x27;, 4, &#x27;2017-12-29 00:00:00&#x27;, &#x27;2018-01-02 00:00:00&#x27;, 2, 257.26, &#x27;Vinbæltet 34&#x27;, &#x27;Kobenhav&#x27;, NULL, &#x27;1734&#x27;, &#x27;Denmark&#x27;);INSERT INTO `orders` VALUES (10803, &#x27;WELLI&#x27;, 4, &#x27;2017-12-30 00:00:00&#x27;, &#x27;2018-01-06 00:00:00&#x27;, 1, 55.23, &#x27;Rua do Mercado-12&#x27;, &#x27;Resende&#x27;, &#x27;SP&#x27;, &#x27;08737-363&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10804, &#x27;SEVES&#x27;, 6, &#x27;2017-12-30 00:00:00&#x27;, &#x27;2018-01-07 00:00:00&#x27;, 2, 27.33, &#x27;90 Wadhurst Rd.&#x27;, &#x27;Londo&#x27;, NULL, &#x27;OX15 4NB&#x27;, &#x27;UK&#x27;);INSERT INTO `orders` VALUES (10805, &#x27;THEBI&#x27;, 2, &#x27;2017-12-30 00:00:00&#x27;, &#x27;2018-01-09 00:00:00&#x27;, 3, 237.34, &#x27;89 Jefferson Way Suite 2&#x27;, &#x27;Portland&#x27;, &#x27;OR&#x27;, &#x27;97201&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10806, &#x27;VICTE&#x27;, 3, &#x27;2017-12-31 00:00:00&#x27;, &#x27;2018-01-05 00:00:00&#x27;, 2, 22.11, &#x27;2-rue du Commerce&#x27;, &#x27;Lyo&#x27;, NULL, &#x27;69004&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10807, &#x27;FRANS&#x27;, 4, &#x27;2017-12-31 00:00:00&#x27;, &#x27;2018-01-30 00:00:00&#x27;, 1, 1.36, &#x27;Via Monte Bianco 34&#x27;, &#x27;Torino&#x27;, NULL, &#x27;10100&#x27;, &#x27;Italy&#x27;);INSERT INTO `orders` VALUES (10808, &#x27;OLDWO&#x27;, 2, &#x27;2018-01-01 00:00:00&#x27;, &#x27;2018-01-09 00:00:00&#x27;, 3, 45.53, &#x27;2743 Bering St.&#x27;, &#x27;Anchorage&#x27;, &#x27;AK&#x27;, &#x27;99508&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10809, &#x27;WELLI&#x27;, 7, &#x27;2018-01-01 00:00:00&#x27;, &#x27;2018-01-07 00:00:00&#x27;, 1, 4.87, &#x27;Rua do Mercado-12&#x27;, &#x27;Resende&#x27;, &#x27;SP&#x27;, &#x27;08737-363&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10810, &#x27;LAUGB&#x27;, 2, &#x27;2018-01-01 00:00:00&#x27;, &#x27;2018-01-07 00:00:00&#x27;, 3, 4.33, &#x27;2319 Elm St.&#x27;, &#x27;Vancouver&#x27;, &#x27;BC&#x27;, &#x27;V3F 2K1&#x27;, &#x27;Canada&#x27;);INSERT INTO `orders` VALUES (10811, &#x27;LINOD&#x27;, 8, &#x27;2018-01-02 00:00:00&#x27;, &#x27;2018-01-08 00:00:00&#x27;, 1, 31.22, &#x27;Ave. 5 de Mayo Porlamar&#x27;, &#x27;I. de Margarita&#x27;, &#x27;Nueva Esparta&#x27;, &#x27;4980&#x27;, &#x27;Venezuela&#x27;);INSERT INTO `orders` VALUES (10812, &#x27;REGGC&#x27;, 5, &#x27;2018-01-02 00:00:00&#x27;, &#x27;2018-01-12 00:00:00&#x27;, 1, 59.78, &#x27;Strada Provinciale 124&#x27;, &#x27;Reggio Emilia&#x27;, NULL, &#x27;42100&#x27;, &#x27;Italy&#x27;);INSERT INTO `orders` VALUES (10813, &#x27;RICAR&#x27;, 1, &#x27;2018-01-05 00:00:00&#x27;, &#x27;2018-01-09 00:00:00&#x27;, 1, 47.38, &#x27;Av. Copacabana-267&#x27;, &#x27;Rio de Janeiro&#x27;, &#x27;RJ&#x27;, &#x27;02389-890&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10814, &#x27;VICTE&#x27;, 3, &#x27;2018-01-05 00:00:00&#x27;, &#x27;2018-01-14 00:00:00&#x27;, 3, 130.94, &#x27;2-rue du Commerce&#x27;, &#x27;Lyo&#x27;, NULL, &#x27;69004&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10815, &#x27;SAVEA&#x27;, 2, &#x27;2018-01-05 00:00:00&#x27;, &#x27;2018-01-14 00:00:00&#x27;, 3, 14.62, &#x27;187 Suffolk Ln.&#x27;, &#x27;Boise&#x27;, &#x27;ID&#x27;, &#x27;83720&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10816, &#x27;GREAL&#x27;, 4, &#x27;2018-01-06 00:00:00&#x27;, &#x27;2018-02-04 00:00:00&#x27;, 2, 719.78, &#x27;2732 Baker Blvd.&#x27;, &#x27;Eugene&#x27;, &#x27;OR&#x27;, &#x27;97403&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10817, &#x27;KOENE&#x27;, 3, &#x27;2018-01-06 00:00:00&#x27;, &#x27;2018-01-13 00:00:00&#x27;, 2, 306.07, &#x27;Maubelstr. 90&#x27;, &#x27;Brandenburg&#x27;, NULL, &#x27;14776&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10818, &#x27;MAGAA&#x27;, 7, &#x27;2018-01-07 00:00:00&#x27;, &#x27;2018-01-12 00:00:00&#x27;, 3, 65.48, &#x27;Via Ludovico il Moro 22&#x27;, &#x27;Bergamo&#x27;, NULL, &#x27;24100&#x27;, &#x27;Italy&#x27;);INSERT INTO `orders` VALUES (10819, &#x27;CACTU&#x27;, 2, &#x27;2018-01-07 00:00:00&#x27;, &#x27;2018-01-16 00:00:00&#x27;, 3, 19.76, &#x27;Cerrito 333&#x27;, &#x27;Buenos Aires&#x27;, NULL, &#x27;1010&#x27;, &#x27;Argentina&#x27;);INSERT INTO `orders` VALUES (10820, &#x27;RATTC&#x27;, 3, &#x27;2018-01-07 00:00:00&#x27;, &#x27;2018-01-13 00:00:00&#x27;, 2, 37.52, &#x27;2817 Milton Dr.&#x27;, &#x27;Albuquerque&#x27;, &#x27;NM&#x27;, &#x27;87110&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10821, &#x27;SPLIR&#x27;, 1, &#x27;2018-01-08 00:00:00&#x27;, &#x27;2018-01-15 00:00:00&#x27;, 1, 36.68, &#x27;P.O. Box 555&#x27;, &#x27;Lander&#x27;, &#x27;WY&#x27;, &#x27;82520&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10822, &#x27;TRAIH&#x27;, 6, &#x27;2018-01-08 00:00:00&#x27;, &#x27;2018-01-16 00:00:00&#x27;, 3, 7.00, &#x27;722 DaVinci Blvd.&#x27;, &#x27;Kirkland&#x27;, &#x27;WA&#x27;, &#x27;98034&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10823, &#x27;LILAS&#x27;, 5, &#x27;2018-01-09 00:00:00&#x27;, &#x27;2018-01-13 00:00:00&#x27;, 2, 163.97, &#x27;Carrera 52 con Ave. Bolívar #65-98 Llano Largo&#x27;, &#x27;Barquisimeto&#x27;, &#x27;Lara&#x27;, &#x27;3508&#x27;, &#x27;Venezuela&#x27;);INSERT INTO `orders` VALUES (10824, &#x27;FOLKO&#x27;, 8, &#x27;2018-01-09 00:00:00&#x27;, &#x27;2018-01-30 00:00:00&#x27;, 1, 1.23, &#x27;Åkergatan 24&#x27;, &#x27;Bräcke&#x27;, NULL, &#x27;S-844 67&#x27;, &#x27;Sweden&#x27;);INSERT INTO `orders` VALUES (10825, &#x27;DRACD&#x27;, 1, &#x27;2018-01-09 00:00:00&#x27;, &#x27;2018-01-14 00:00:00&#x27;, 1, 79.25, &#x27;Walserweg 21&#x27;, &#x27;Aache&#x27;, NULL, &#x27;52066&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10826, &#x27;BLONP&#x27;, 6, &#x27;2018-01-12 00:00:00&#x27;, &#x27;2018-02-06 00:00:00&#x27;, 1, 7.09, &#x27;24-place Kléber&#x27;, &#x27;Strasbourg&#x27;, NULL, &#x27;67000&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10827, &#x27;BONAP&#x27;, 1, &#x27;2018-01-12 00:00:00&#x27;, &#x27;2018-02-06 00:00:00&#x27;, 2, 63.54, &#x27;12-rue des Bouchers&#x27;, &#x27;Marseille&#x27;, NULL, &#x27;13008&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10828, &#x27;RANCH&#x27;, 9, &#x27;2018-01-13 00:00:00&#x27;, &#x27;2018-02-04 00:00:00&#x27;, 1, 90.85, &#x27;Av. del Libertador 900&#x27;, &#x27;Buenos Aires&#x27;, NULL, &#x27;1010&#x27;, &#x27;Argentina&#x27;);INSERT INTO `orders` VALUES (10829, &#x27;ISLAT&#x27;, 9, &#x27;2018-01-13 00:00:00&#x27;, &#x27;2018-01-23 00:00:00&#x27;, 1, 154.72, &#x27;Garden House Crowther Way&#x27;, &#x27;Cowes&#x27;, &#x27;Isle of Wight&#x27;, &#x27;PO31 7PJ&#x27;, &#x27;UK&#x27;);INSERT INTO `orders` VALUES (10830, &#x27;TRADH&#x27;, 4, &#x27;2018-01-13 00:00:00&#x27;, &#x27;2018-01-21 00:00:00&#x27;, 2, 81.83, &#x27;Av. Inês de Castro-414&#x27;, &#x27;Sao Paulo&#x27;, &#x27;SP&#x27;, &#x27;05634-030&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10831, &#x27;SANTG&#x27;, 3, &#x27;2018-01-14 00:00:00&#x27;, &#x27;2018-01-23 00:00:00&#x27;, 2, 72.19, &#x27;Erling Skakkes gate 78&#x27;, &#x27;Staver&#x27;, NULL, &#x27;4110&#x27;, &#x27;Norway&#x27;);INSERT INTO `orders` VALUES (10832, &#x27;LAMAI&#x27;, 2, &#x27;2018-01-14 00:00:00&#x27;, &#x27;2018-01-19 00:00:00&#x27;, 2, 43.26, &#x27;1 rue Alsace-Lorraine&#x27;, &#x27;Toulouse&#x27;, NULL, &#x27;31000&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10833, &#x27;OTTIK&#x27;, 6, &#x27;2018-01-15 00:00:00&#x27;, &#x27;2018-01-23 00:00:00&#x27;, 2, 71.49, &#x27;Mehrheimerstr. 369&#x27;, &#x27;Köl&#x27;, NULL, &#x27;50739&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10834, &#x27;TRADH&#x27;, 1, &#x27;2018-01-15 00:00:00&#x27;, &#x27;2018-01-19 00:00:00&#x27;, 3, 29.78, &#x27;Av. Inês de Castro-414&#x27;, &#x27;Sao Paulo&#x27;, &#x27;SP&#x27;, &#x27;05634-030&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10835, &#x27;ALFKI&#x27;, 1, &#x27;2018-01-15 00:00:00&#x27;, &#x27;2018-01-21 00:00:00&#x27;, 3, 69.53, &#x27;Obere Str. 57&#x27;, &#x27;Berli&#x27;, NULL, &#x27;12209&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10836, &#x27;ERNSH&#x27;, 7, &#x27;2018-01-16 00:00:00&#x27;, &#x27;2018-01-21 00:00:00&#x27;, 1, 411.88, &#x27;Kirchgasse 6&#x27;, &#x27;Graz&#x27;, NULL, &#x27;8010&#x27;, &#x27;Austria&#x27;);INSERT INTO `orders` VALUES (10837, &#x27;BERGS&#x27;, 9, &#x27;2018-01-16 00:00:00&#x27;, &#x27;2018-01-23 00:00:00&#x27;, 3, 13.32, &#x27;Berguvsvägen  8&#x27;, &#x27;Luleå&#x27;, NULL, &#x27;S-958 22&#x27;, &#x27;Sweden&#x27;);INSERT INTO `orders` VALUES (10838, &#x27;LINOD&#x27;, 3, &#x27;2018-01-19 00:00:00&#x27;, &#x27;2018-01-23 00:00:00&#x27;, 3, 59.28, &#x27;Ave. 5 de Mayo Porlamar&#x27;, &#x27;I. de Margarita&#x27;, &#x27;Nueva Esparta&#x27;, &#x27;4980&#x27;, &#x27;Venezuela&#x27;);INSERT INTO `orders` VALUES (10839, &#x27;TRADH&#x27;, 3, &#x27;2018-01-19 00:00:00&#x27;, &#x27;2018-01-22 00:00:00&#x27;, 3, 35.43, &#x27;Av. Inês de Castro-414&#x27;, &#x27;Sao Paulo&#x27;, &#x27;SP&#x27;, &#x27;05634-030&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10840, &#x27;LINOD&#x27;, 4, &#x27;2018-01-19 00:00:00&#x27;, &#x27;2018-02-16 00:00:00&#x27;, 2, 2.71, &#x27;Ave. 5 de Mayo Porlamar&#x27;, &#x27;I. de Margarita&#x27;, &#x27;Nueva Esparta&#x27;, &#x27;4980&#x27;, &#x27;Venezuela&#x27;);INSERT INTO `orders` VALUES (10841, &#x27;SUPRD&#x27;, 5, &#x27;2018-01-20 00:00:00&#x27;, &#x27;2018-01-29 00:00:00&#x27;, 2, 424.30, &#x27;Boulevard Tirou-255&#x27;, &#x27;Charleroi&#x27;, NULL, &#x27;B-6000&#x27;, &#x27;Belgium&#x27;);INSERT INTO `orders` VALUES (10842, &#x27;TORTU&#x27;, 1, &#x27;2018-01-20 00:00:00&#x27;, &#x27;2018-01-29 00:00:00&#x27;, 3, 54.42, &#x27;Avda. Azteca 123&#x27;, &#x27;México D.F.&#x27;, NULL, &#x27;05033&#x27;, &#x27;Mexico&#x27;);INSERT INTO `orders` VALUES (10843, &#x27;VICTE&#x27;, 4, &#x27;2018-01-21 00:00:00&#x27;, &#x27;2018-01-26 00:00:00&#x27;, 2, 9.26, &#x27;2-rue du Commerce&#x27;, &#x27;Lyo&#x27;, NULL, &#x27;69004&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10844, &#x27;PICCO&#x27;, 8, &#x27;2018-01-21 00:00:00&#x27;, &#x27;2018-01-26 00:00:00&#x27;, 2, 25.22, &#x27;Geislweg 14&#x27;, &#x27;Salzburg&#x27;, NULL, &#x27;5020&#x27;, &#x27;Austria&#x27;);INSERT INTO `orders` VALUES (10845, &#x27;QUICK&#x27;, 8, &#x27;2018-01-21 00:00:00&#x27;, &#x27;2018-01-30 00:00:00&#x27;, 1, 212.98, &#x27;Taucherstraße 10&#x27;, &#x27;Cunewalde&#x27;, NULL, &#x27;01307&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10846, &#x27;SUPRD&#x27;, 2, &#x27;2018-01-22 00:00:00&#x27;, &#x27;2018-01-23 00:00:00&#x27;, 3, 56.46, &#x27;Boulevard Tirou-255&#x27;, &#x27;Charleroi&#x27;, NULL, &#x27;B-6000&#x27;, &#x27;Belgium&#x27;);INSERT INTO `orders` VALUES (10847, &#x27;SAVEA&#x27;, 4, &#x27;2018-01-22 00:00:00&#x27;, &#x27;2018-02-10 00:00:00&#x27;, 3, 487.57, &#x27;187 Suffolk Ln.&#x27;, &#x27;Boise&#x27;, &#x27;ID&#x27;, &#x27;83720&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10848, &#x27;CONSH&#x27;, 7, &#x27;2018-01-23 00:00:00&#x27;, &#x27;2018-01-29 00:00:00&#x27;, 2, 38.24, &#x27;Berkeley Gardens 12  Brewery&#x27;, &#x27;Londo&#x27;, NULL, &#x27;WX1 6LT&#x27;, &#x27;UK&#x27;);INSERT INTO `orders` VALUES (10849, &#x27;KOENE&#x27;, 9, &#x27;2018-01-23 00:00:00&#x27;, &#x27;2018-01-30 00:00:00&#x27;, 2, 0.56, &#x27;Maubelstr. 90&#x27;, &#x27;Brandenburg&#x27;, NULL, &#x27;14776&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10850, &#x27;VICTE&#x27;, 1, &#x27;2018-01-23 00:00:00&#x27;, &#x27;2018-01-30 00:00:00&#x27;, 1, 49.19, &#x27;2-rue du Commerce&#x27;, &#x27;Lyo&#x27;, NULL, &#x27;69004&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10851, &#x27;RICAR&#x27;, 5, &#x27;2018-01-26 00:00:00&#x27;, &#x27;2018-02-02 00:00:00&#x27;, 1, 160.55, &#x27;Av. Copacabana-267&#x27;, &#x27;Rio de Janeiro&#x27;, &#x27;RJ&#x27;, &#x27;02389-890&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10852, &#x27;RATTC&#x27;, 8, &#x27;2018-01-26 00:00:00&#x27;, &#x27;2018-01-30 00:00:00&#x27;, 1, 174.05, &#x27;2817 Milton Dr.&#x27;, &#x27;Albuquerque&#x27;, &#x27;NM&#x27;, &#x27;87110&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10853, &#x27;BLAUS&#x27;, 9, &#x27;2018-01-27 00:00:00&#x27;, &#x27;2018-02-03 00:00:00&#x27;, 2, 53.83, &#x27;Forsterstr. 57&#x27;, &#x27;Mannheim&#x27;, NULL, &#x27;68306&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10854, &#x27;ERNSH&#x27;, 3, &#x27;2018-01-27 00:00:00&#x27;, &#x27;2018-02-05 00:00:00&#x27;, 2, 100.22, &#x27;Kirchgasse 6&#x27;, &#x27;Graz&#x27;, NULL, &#x27;8010&#x27;, &#x27;Austria&#x27;);INSERT INTO `orders` VALUES (10855, &#x27;OLDWO&#x27;, 3, &#x27;2018-01-27 00:00:00&#x27;, &#x27;2018-02-04 00:00:00&#x27;, 1, 170.97, &#x27;2743 Bering St.&#x27;, &#x27;Anchorage&#x27;, &#x27;AK&#x27;, &#x27;99508&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10856, &#x27;ANTO&#x27;, 3, &#x27;2018-01-28 00:00:00&#x27;, &#x27;2018-02-10 00:00:00&#x27;, 2, 58.43, &#x27;Mataderos  2312&#x27;, &#x27;México D.F.&#x27;, NULL, &#x27;05023&#x27;, &#x27;Mexico&#x27;);INSERT INTO `orders` VALUES (10857, &#x27;BERGS&#x27;, 8, &#x27;2018-01-28 00:00:00&#x27;, &#x27;2018-02-06 00:00:00&#x27;, 2, 188.85, &#x27;Berguvsvägen  8&#x27;, &#x27;Luleå&#x27;, NULL, &#x27;S-958 22&#x27;, &#x27;Sweden&#x27;);INSERT INTO `orders` VALUES (10858, &#x27;LACOR&#x27;, 2, &#x27;2018-01-29 00:00:00&#x27;, &#x27;2018-02-03 00:00:00&#x27;, 1, 52.51, &#x27;67-avenue de l\\&#x27;\\&#x27;Europe&#x27;, &#x27;Versailles&#x27;, NULL, &#x27;78000&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10859, &#x27;FRANK&#x27;, 1, &#x27;2018-01-29 00:00:00&#x27;, &#x27;2018-02-02 00:00:00&#x27;, 2, 76.10, &#x27;Berliner Platz 43&#x27;, &#x27;Münche&#x27;, NULL, &#x27;80805&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10860, &#x27;FRANR&#x27;, 3, &#x27;2018-01-29 00:00:00&#x27;, &#x27;2018-02-04 00:00:00&#x27;, 3, 19.26, &#x27;54-rue Royale&#x27;, &#x27;Nantes&#x27;, NULL, &#x27;44000&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10861, &#x27;WHITC&#x27;, 4, &#x27;2018-01-30 00:00:00&#x27;, &#x27;2018-02-17 00:00:00&#x27;, 2, 14.93, &#x27;1029 - 12th Ave. S.&#x27;, &#x27;Seattle&#x27;, &#x27;WA&#x27;, &#x27;98124&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10862, &#x27;LEHMS&#x27;, 8, &#x27;2018-01-30 00:00:00&#x27;, &#x27;2018-02-02 00:00:00&#x27;, 2, 53.23, &#x27;Magazinweg 7&#x27;, &#x27;Frankfurt a.M.&#x27;, NULL, &#x27;60528&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10863, &#x27;HILAA&#x27;, 4, &#x27;2018-02-02 00:00:00&#x27;, &#x27;2018-02-17 00:00:00&#x27;, 2, 30.26, &#x27;Carrera 22 con Ave. Carlos Soublette #8-35&#x27;, &#x27;San Cristóbal&#x27;, &#x27;Táchira&#x27;, &#x27;5022&#x27;, &#x27;Venezuela&#x27;);INSERT INTO `orders` VALUES (10864, &#x27;AROUT&#x27;, 4, &#x27;2018-02-02 00:00:00&#x27;, &#x27;2018-02-09 00:00:00&#x27;, 2, 3.04, &#x27;Brook Farm Stratford St. Mary&#x27;, &#x27;Colchester&#x27;, &#x27;Essex&#x27;, &#x27;CO7 6JX&#x27;, &#x27;UK&#x27;);INSERT INTO `orders` VALUES (10865, &#x27;QUICK&#x27;, 2, &#x27;2018-02-02 00:00:00&#x27;, &#x27;2018-02-12 00:00:00&#x27;, 1, 348.14, &#x27;Taucherstraße 10&#x27;, &#x27;Cunewalde&#x27;, NULL, &#x27;01307&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10866, &#x27;BERGS&#x27;, 5, &#x27;2018-02-03 00:00:00&#x27;, &#x27;2018-02-12 00:00:00&#x27;, 1, 109.11, &#x27;Berguvsvägen  8&#x27;, &#x27;Luleå&#x27;, NULL, &#x27;S-958 22&#x27;, &#x27;Sweden&#x27;);INSERT INTO `orders` VALUES (10867, &#x27;LONEP&#x27;, 6, &#x27;2018-02-03 00:00:00&#x27;, &#x27;2018-02-11 00:00:00&#x27;, 1, 1.93, &#x27;89 Chiaroscuro Rd.&#x27;, &#x27;Portland&#x27;, &#x27;OR&#x27;, &#x27;97219&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10868, &#x27;QUEE&#x27;, 7, &#x27;2018-02-04 00:00:00&#x27;, &#x27;2018-02-23 00:00:00&#x27;, 2, 191.27, &#x27;Alameda dos Canàrios-891&#x27;, &#x27;Sao Paulo&#x27;, &#x27;SP&#x27;, &#x27;05487-020&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10869, &#x27;SEVES&#x27;, 5, &#x27;2018-02-04 00:00:00&#x27;, &#x27;2018-02-09 00:00:00&#x27;, 1, 143.28, &#x27;90 Wadhurst Rd.&#x27;, &#x27;Londo&#x27;, NULL, &#x27;OX15 4NB&#x27;, &#x27;UK&#x27;);INSERT INTO `orders` VALUES (10870, &#x27;WOLZA&#x27;, 5, &#x27;2018-02-04 00:00:00&#x27;, &#x27;2018-02-13 00:00:00&#x27;, 3, 12.04, &#x27;ul. Filtrowa 68&#x27;, &#x27;Warszawa&#x27;, NULL, &#x27;01-012&#x27;, &#x27;Poland&#x27;);INSERT INTO `orders` VALUES (10871, &#x27;BONAP&#x27;, 9, &#x27;2018-02-05 00:00:00&#x27;, &#x27;2018-02-10 00:00:00&#x27;, 2, 112.27, &#x27;12-rue des Bouchers&#x27;, &#x27;Marseille&#x27;, NULL, &#x27;13008&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10872, &#x27;GODOS&#x27;, 5, &#x27;2018-02-05 00:00:00&#x27;, &#x27;2018-02-09 00:00:00&#x27;, 2, 175.32, &#x27;C/ Romero-33&#x27;, &#x27;Sevilla&#x27;, NULL, &#x27;41101&#x27;, &#x27;Spain&#x27;);INSERT INTO `orders` VALUES (10873, &#x27;WILMK&#x27;, 4, &#x27;2018-02-06 00:00:00&#x27;, &#x27;2018-02-09 00:00:00&#x27;, 1, 0.82, &#x27;Keskuskatu 45&#x27;, &#x27;Helsinki&#x27;, NULL, &#x27;21240&#x27;, &#x27;Finland&#x27;);INSERT INTO `orders` VALUES (10874, &#x27;GODOS&#x27;, 5, &#x27;2018-02-06 00:00:00&#x27;, &#x27;2018-02-11 00:00:00&#x27;, 2, 19.58, &#x27;C/ Romero-33&#x27;, &#x27;Sevilla&#x27;, NULL, &#x27;41101&#x27;, &#x27;Spain&#x27;);INSERT INTO `orders` VALUES (10875, &#x27;BERGS&#x27;, 4, &#x27;2018-02-06 00:00:00&#x27;, &#x27;2018-03-03 00:00:00&#x27;, 2, 32.37, &#x27;Berguvsvägen  8&#x27;, &#x27;Luleå&#x27;, NULL, &#x27;S-958 22&#x27;, &#x27;Sweden&#x27;);INSERT INTO `orders` VALUES (10876, &#x27;BONAP&#x27;, 7, &#x27;2018-02-09 00:00:00&#x27;, &#x27;2018-02-12 00:00:00&#x27;, 3, 60.42, &#x27;12-rue des Bouchers&#x27;, &#x27;Marseille&#x27;, NULL, &#x27;13008&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10877, &#x27;RICAR&#x27;, 1, &#x27;2018-02-09 00:00:00&#x27;, &#x27;2018-02-19 00:00:00&#x27;, 1, 38.06, &#x27;Av. Copacabana-267&#x27;, &#x27;Rio de Janeiro&#x27;, &#x27;RJ&#x27;, &#x27;02389-890&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10878, &#x27;QUICK&#x27;, 4, &#x27;2018-02-10 00:00:00&#x27;, &#x27;2018-02-12 00:00:00&#x27;, 1, 46.69, &#x27;Taucherstraße 10&#x27;, &#x27;Cunewalde&#x27;, NULL, &#x27;01307&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10879, &#x27;WILMK&#x27;, 3, &#x27;2018-02-10 00:00:00&#x27;, &#x27;2018-02-12 00:00:00&#x27;, 3, 8.50, &#x27;Keskuskatu 45&#x27;, &#x27;Helsinki&#x27;, NULL, &#x27;21240&#x27;, &#x27;Finland&#x27;);INSERT INTO `orders` VALUES (10880, &#x27;FOLKO&#x27;, 7, &#x27;2018-02-10 00:00:00&#x27;, &#x27;2018-02-18 00:00:00&#x27;, 1, 88.01, &#x27;Åkergatan 24&#x27;, &#x27;Bräcke&#x27;, NULL, &#x27;S-844 67&#x27;, &#x27;Sweden&#x27;);INSERT INTO `orders` VALUES (10881, &#x27;CACTU&#x27;, 4, &#x27;2018-02-11 00:00:00&#x27;, &#x27;2018-02-18 00:00:00&#x27;, 1, 2.84, &#x27;Cerrito 333&#x27;, &#x27;Buenos Aires&#x27;, NULL, &#x27;1010&#x27;, &#x27;Argentina&#x27;);INSERT INTO `orders` VALUES (10882, &#x27;SAVEA&#x27;, 4, &#x27;2018-02-11 00:00:00&#x27;, &#x27;2018-02-20 00:00:00&#x27;, 3, 23.10, &#x27;187 Suffolk Ln.&#x27;, &#x27;Boise&#x27;, &#x27;ID&#x27;, &#x27;83720&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10883, &#x27;LONEP&#x27;, 8, &#x27;2018-02-12 00:00:00&#x27;, &#x27;2018-02-20 00:00:00&#x27;, 3, 0.53, &#x27;89 Chiaroscuro Rd.&#x27;, &#x27;Portland&#x27;, &#x27;OR&#x27;, &#x27;97219&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10884, &#x27;LETSS&#x27;, 4, &#x27;2018-02-12 00:00:00&#x27;, &#x27;2018-02-13 00:00:00&#x27;, 2, 90.97, &#x27;87 Polk St. Suite 5&#x27;, &#x27;San Francisco&#x27;, &#x27;CA&#x27;, &#x27;94117&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10885, &#x27;SUPRD&#x27;, 6, &#x27;2018-02-12 00:00:00&#x27;, &#x27;2018-02-18 00:00:00&#x27;, 3, 5.64, &#x27;Boulevard Tirou-255&#x27;, &#x27;Charleroi&#x27;, NULL, &#x27;B-6000&#x27;, &#x27;Belgium&#x27;);INSERT INTO `orders` VALUES (10886, &#x27;HANAR&#x27;, 1, &#x27;2018-02-13 00:00:00&#x27;, &#x27;2018-03-02 00:00:00&#x27;, 1, 4.99, &#x27;Rua do Paço-67&#x27;, &#x27;Rio de Janeiro&#x27;, &#x27;RJ&#x27;, &#x27;05454-876&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10887, &#x27;GALED&#x27;, 8, &#x27;2018-02-13 00:00:00&#x27;, &#x27;2018-02-16 00:00:00&#x27;, 3, 1.25, &#x27;Rambla de Cataluña-23&#x27;, &#x27;Barcelona&#x27;, NULL, &#x27;8022&#x27;, &#x27;Spain&#x27;);INSERT INTO `orders` VALUES (10888, &#x27;GODOS&#x27;, 1, &#x27;2018-02-16 00:00:00&#x27;, &#x27;2018-02-23 00:00:00&#x27;, 2, 51.87, &#x27;C/ Romero-33&#x27;, &#x27;Sevilla&#x27;, NULL, &#x27;41101&#x27;, &#x27;Spain&#x27;);INSERT INTO `orders` VALUES (10889, &#x27;RATTC&#x27;, 9, &#x27;2018-02-16 00:00:00&#x27;, &#x27;2018-02-23 00:00:00&#x27;, 3, 280.61, &#x27;2817 Milton Dr.&#x27;, &#x27;Albuquerque&#x27;, &#x27;NM&#x27;, &#x27;87110&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10890, &#x27;DUMO&#x27;, 7, &#x27;2018-02-16 00:00:00&#x27;, &#x27;2018-02-18 00:00:00&#x27;, 1, 32.76, &#x27;67-rue des Cinquante Otages&#x27;, &#x27;Nantes&#x27;, NULL, &#x27;44000&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10891, &#x27;LEHMS&#x27;, 7, &#x27;2018-02-17 00:00:00&#x27;, &#x27;2018-02-19 00:00:00&#x27;, 2, 20.37, &#x27;Magazinweg 7&#x27;, &#x27;Frankfurt a.M.&#x27;, NULL, &#x27;60528&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10892, &#x27;MAISD&#x27;, 4, &#x27;2018-02-17 00:00:00&#x27;, &#x27;2018-02-19 00:00:00&#x27;, 2, 120.27, &#x27;Rue Joseph-Bens 532&#x27;, &#x27;Bruxelles&#x27;, NULL, &#x27;B-1180&#x27;, &#x27;Belgium&#x27;);INSERT INTO `orders` VALUES (10893, &#x27;KOENE&#x27;, 9, &#x27;2018-02-18 00:00:00&#x27;, &#x27;2018-02-20 00:00:00&#x27;, 2, 77.78, &#x27;Maubelstr. 90&#x27;, &#x27;Brandenburg&#x27;, NULL, &#x27;14776&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10894, &#x27;SAVEA&#x27;, 1, &#x27;2018-02-18 00:00:00&#x27;, &#x27;2018-02-20 00:00:00&#x27;, 1, 116.13, &#x27;187 Suffolk Ln.&#x27;, &#x27;Boise&#x27;, &#x27;ID&#x27;, &#x27;83720&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10895, &#x27;ERNSH&#x27;, 3, &#x27;2018-02-18 00:00:00&#x27;, &#x27;2018-02-23 00:00:00&#x27;, 1, 162.75, &#x27;Kirchgasse 6&#x27;, &#x27;Graz&#x27;, NULL, &#x27;8010&#x27;, &#x27;Austria&#x27;);INSERT INTO `orders` VALUES (10896, &#x27;MAISD&#x27;, 7, &#x27;2018-02-19 00:00:00&#x27;, &#x27;2018-02-27 00:00:00&#x27;, 3, 32.45, &#x27;Rue Joseph-Bens 532&#x27;, &#x27;Bruxelles&#x27;, NULL, &#x27;B-1180&#x27;, &#x27;Belgium&#x27;);INSERT INTO `orders` VALUES (10897, &#x27;HUNGO&#x27;, 3, &#x27;2018-02-19 00:00:00&#x27;, &#x27;2018-02-25 00:00:00&#x27;, 2, 603.54, &#x27;8 Johnstown Road&#x27;, &#x27;Cork&#x27;, &#x27;Co. Cork&#x27;, NULL, &#x27;Ireland&#x27;);INSERT INTO `orders` VALUES (10898, &#x27;OCEA&#x27;, 4, &#x27;2018-02-20 00:00:00&#x27;, &#x27;2018-03-06 00:00:00&#x27;, 2, 1.27, &#x27;Ing. Gustavo Moncada 8585 Piso 20-A&#x27;, &#x27;Buenos Aires&#x27;, NULL, &#x27;1010&#x27;, &#x27;Argentina&#x27;);INSERT INTO `orders` VALUES (10899, &#x27;LILAS&#x27;, 5, &#x27;2018-02-20 00:00:00&#x27;, &#x27;2018-02-26 00:00:00&#x27;, 3, 1.21, &#x27;Carrera 52 con Ave. Bolívar #65-98 Llano Largo&#x27;, &#x27;Barquisimeto&#x27;, &#x27;Lara&#x27;, &#x27;3508&#x27;, &#x27;Venezuela&#x27;);INSERT INTO `orders` VALUES (10900, &#x27;WELLI&#x27;, 1, &#x27;2018-02-20 00:00:00&#x27;, &#x27;2018-03-04 00:00:00&#x27;, 2, 1.66, &#x27;Rua do Mercado-12&#x27;, &#x27;Resende&#x27;, &#x27;SP&#x27;, &#x27;08737-363&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10901, &#x27;HILAA&#x27;, 4, &#x27;2018-02-23 00:00:00&#x27;, &#x27;2018-02-26 00:00:00&#x27;, 1, 62.09, &#x27;Carrera 22 con Ave. Carlos Soublette #8-35&#x27;, &#x27;San Cristóbal&#x27;, &#x27;Táchira&#x27;, &#x27;5022&#x27;, &#x27;Venezuela&#x27;);INSERT INTO `orders` VALUES (10902, &#x27;FOLKO&#x27;, 1, &#x27;2018-02-23 00:00:00&#x27;, &#x27;2018-03-03 00:00:00&#x27;, 1, 44.15, &#x27;Åkergatan 24&#x27;, &#x27;Bräcke&#x27;, NULL, &#x27;S-844 67&#x27;, &#x27;Sweden&#x27;);INSERT INTO `orders` VALUES (10903, &#x27;HANAR&#x27;, 3, &#x27;2018-02-24 00:00:00&#x27;, &#x27;2018-03-04 00:00:00&#x27;, 3, 36.71, &#x27;Rua do Paço-67&#x27;, &#x27;Rio de Janeiro&#x27;, &#x27;RJ&#x27;, &#x27;05454-876&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10904, &#x27;WHITC&#x27;, 3, &#x27;2018-02-24 00:00:00&#x27;, &#x27;2018-02-27 00:00:00&#x27;, 3, 162.95, &#x27;1029 - 12th Ave. S.&#x27;, &#x27;Seattle&#x27;, &#x27;WA&#x27;, &#x27;98124&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10905, &#x27;WELLI&#x27;, 9, &#x27;2018-02-24 00:00:00&#x27;, &#x27;2018-03-06 00:00:00&#x27;, 2, 13.72, &#x27;Rua do Mercado-12&#x27;, &#x27;Resende&#x27;, &#x27;SP&#x27;, &#x27;08737-363&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10906, &#x27;WOLZA&#x27;, 4, &#x27;2018-02-25 00:00:00&#x27;, &#x27;2018-03-03 00:00:00&#x27;, 3, 26.29, &#x27;ul. Filtrowa 68&#x27;, &#x27;Warszawa&#x27;, NULL, &#x27;01-012&#x27;, &#x27;Poland&#x27;);INSERT INTO `orders` VALUES (10907, &#x27;SPECD&#x27;, 6, &#x27;2018-02-25 00:00:00&#x27;, &#x27;2018-02-27 00:00:00&#x27;, 3, 9.19, &#x27;25-rue Lauristo&#x27;, &#x27;Paris&#x27;, NULL, &#x27;75016&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10908, &#x27;REGGC&#x27;, 4, &#x27;2018-02-26 00:00:00&#x27;, &#x27;2018-03-06 00:00:00&#x27;, 2, 32.96, &#x27;Strada Provinciale 124&#x27;, &#x27;Reggio Emilia&#x27;, NULL, &#x27;42100&#x27;, &#x27;Italy&#x27;);INSERT INTO `orders` VALUES (10909, &#x27;SANTG&#x27;, 1, &#x27;2018-02-26 00:00:00&#x27;, &#x27;2018-03-10 00:00:00&#x27;, 2, 53.05, &#x27;Erling Skakkes gate 78&#x27;, &#x27;Staver&#x27;, NULL, &#x27;4110&#x27;, &#x27;Norway&#x27;);INSERT INTO `orders` VALUES (10910, &#x27;WILMK&#x27;, 1, &#x27;2018-02-26 00:00:00&#x27;, &#x27;2018-03-04 00:00:00&#x27;, 3, 38.11, &#x27;Keskuskatu 45&#x27;, &#x27;Helsinki&#x27;, NULL, &#x27;21240&#x27;, &#x27;Finland&#x27;);INSERT INTO `orders` VALUES (10911, &#x27;GODOS&#x27;, 3, &#x27;2018-02-26 00:00:00&#x27;, &#x27;2018-03-05 00:00:00&#x27;, 1, 38.19, &#x27;C/ Romero-33&#x27;, &#x27;Sevilla&#x27;, NULL, &#x27;41101&#x27;, &#x27;Spain&#x27;);INSERT INTO `orders` VALUES (10912, &#x27;HUNGO&#x27;, 2, &#x27;2018-02-26 00:00:00&#x27;, &#x27;2018-03-18 00:00:00&#x27;, 2, 580.91, &#x27;8 Johnstown Road&#x27;, &#x27;Cork&#x27;, &#x27;Co. Cork&#x27;, NULL, &#x27;Ireland&#x27;);INSERT INTO `orders` VALUES (10913, &#x27;QUEE&#x27;, 4, &#x27;2018-02-26 00:00:00&#x27;, &#x27;2018-03-04 00:00:00&#x27;, 1, 33.05, &#x27;Alameda dos Canàrios-891&#x27;, &#x27;Sao Paulo&#x27;, &#x27;SP&#x27;, &#x27;05487-020&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10914, &#x27;QUEE&#x27;, 6, &#x27;2018-02-27 00:00:00&#x27;, &#x27;2018-03-02 00:00:00&#x27;, 1, 21.19, &#x27;Alameda dos Canàrios-891&#x27;, &#x27;Sao Paulo&#x27;, &#x27;SP&#x27;, &#x27;05487-020&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10915, &#x27;TORTU&#x27;, 2, &#x27;2018-02-27 00:00:00&#x27;, &#x27;2018-03-02 00:00:00&#x27;, 2, 3.51, &#x27;Avda. Azteca 123&#x27;, &#x27;México D.F.&#x27;, NULL, &#x27;05033&#x27;, &#x27;Mexico&#x27;);INSERT INTO `orders` VALUES (10916, &#x27;RANCH&#x27;, 1, &#x27;2018-02-27 00:00:00&#x27;, &#x27;2018-03-09 00:00:00&#x27;, 2, 63.77, &#x27;Av. del Libertador 900&#x27;, &#x27;Buenos Aires&#x27;, NULL, &#x27;1010&#x27;, &#x27;Argentina&#x27;);INSERT INTO `orders` VALUES (10917, &#x27;ROMEY&#x27;, 4, &#x27;2018-03-02 00:00:00&#x27;, &#x27;2018-03-11 00:00:00&#x27;, 2, 8.29, &#x27;Gran Vía-1&#x27;, &#x27;Madrid&#x27;, NULL, &#x27;28001&#x27;, &#x27;Spain&#x27;);INSERT INTO `orders` VALUES (10918, &#x27;BOTTM&#x27;, 3, &#x27;2018-03-02 00:00:00&#x27;, &#x27;2018-03-11 00:00:00&#x27;, 3, 48.83, &#x27;23 Tsawassen Blvd.&#x27;, &#x27;Tsawasse&#x27;, &#x27;BC&#x27;, &#x27;T2F 8M4&#x27;, &#x27;Canada&#x27;);INSERT INTO `orders` VALUES (10919, &#x27;LINOD&#x27;, 2, &#x27;2018-03-02 00:00:00&#x27;, &#x27;2018-03-04 00:00:00&#x27;, 2, 19.80, &#x27;Ave. 5 de Mayo Porlamar&#x27;, &#x27;I. de Margarita&#x27;, &#x27;Nueva Esparta&#x27;, &#x27;4980&#x27;, &#x27;Venezuela&#x27;);INSERT INTO `orders` VALUES (10920, &#x27;AROUT&#x27;, 4, &#x27;2018-03-03 00:00:00&#x27;, &#x27;2018-03-09 00:00:00&#x27;, 2, 29.61, &#x27;Brook Farm Stratford St. Mary&#x27;, &#x27;Colchester&#x27;, &#x27;Essex&#x27;, &#x27;CO7 6JX&#x27;, &#x27;UK&#x27;);INSERT INTO `orders` VALUES (10921, &#x27;VAFFE&#x27;, 1, &#x27;2018-03-03 00:00:00&#x27;, &#x27;2018-03-09 00:00:00&#x27;, 1, 176.48, &#x27;Smagsloget 45&#x27;, &#x27;Århus&#x27;, NULL, &#x27;8200&#x27;, &#x27;Denmark&#x27;);INSERT INTO `orders` VALUES (10922, &#x27;HANAR&#x27;, 5, &#x27;2018-03-03 00:00:00&#x27;, &#x27;2018-03-05 00:00:00&#x27;, 3, 62.74, &#x27;Rua do Paço-67&#x27;, &#x27;Rio de Janeiro&#x27;, &#x27;RJ&#x27;, &#x27;05454-876&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10923, &#x27;LAMAI&#x27;, 7, &#x27;2018-03-03 00:00:00&#x27;, &#x27;2018-03-13 00:00:00&#x27;, 3, 68.26, &#x27;1 rue Alsace-Lorraine&#x27;, &#x27;Toulouse&#x27;, NULL, &#x27;31000&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10924, &#x27;BERGS&#x27;, 3, &#x27;2018-03-04 00:00:00&#x27;, &#x27;2018-04-08 00:00:00&#x27;, 2, 151.52, &#x27;Berguvsvägen  8&#x27;, &#x27;Luleå&#x27;, NULL, &#x27;S-958 22&#x27;, &#x27;Sweden&#x27;);INSERT INTO `orders` VALUES (10925, &#x27;HANAR&#x27;, 3, &#x27;2018-03-04 00:00:00&#x27;, &#x27;2018-03-13 00:00:00&#x27;, 1, 2.27, &#x27;Rua do Paço-67&#x27;, &#x27;Rio de Janeiro&#x27;, &#x27;RJ&#x27;, &#x27;05454-876&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10926, &#x27;ANATR&#x27;, 4, &#x27;2018-03-04 00:00:00&#x27;, &#x27;2018-03-11 00:00:00&#x27;, 3, 39.92, &#x27;Avda. de la Constitución 2222&#x27;, &#x27;México D.F.&#x27;, NULL, &#x27;05021&#x27;, &#x27;Mexico&#x27;);INSERT INTO `orders` VALUES (10927, &#x27;LACOR&#x27;, 4, &#x27;2018-03-05 00:00:00&#x27;, &#x27;2018-04-08 00:00:00&#x27;, 1, 19.79, &#x27;67-avenue de l\\&#x27;\\&#x27;Europe&#x27;, &#x27;Versailles&#x27;, NULL, &#x27;78000&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10928, &#x27;GALED&#x27;, 1, &#x27;2018-03-05 00:00:00&#x27;, &#x27;2018-03-18 00:00:00&#x27;, 1, 1.36, &#x27;Rambla de Cataluña-23&#x27;, &#x27;Barcelona&#x27;, NULL, &#x27;8022&#x27;, &#x27;Spain&#x27;);INSERT INTO `orders` VALUES (10929, &#x27;FRANK&#x27;, 6, &#x27;2018-03-05 00:00:00&#x27;, &#x27;2018-03-12 00:00:00&#x27;, 1, 33.93, &#x27;Berliner Platz 43&#x27;, &#x27;Münche&#x27;, NULL, &#x27;80805&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10930, &#x27;SUPRD&#x27;, 4, &#x27;2018-03-06 00:00:00&#x27;, &#x27;2018-03-18 00:00:00&#x27;, 3, 15.55, &#x27;Boulevard Tirou-255&#x27;, &#x27;Charleroi&#x27;, NULL, &#x27;B-6000&#x27;, &#x27;Belgium&#x27;);INSERT INTO `orders` VALUES (10931, &#x27;RICSU&#x27;, 4, &#x27;2018-03-06 00:00:00&#x27;, &#x27;2018-03-19 00:00:00&#x27;, 2, 13.60, &#x27;Starenweg 5&#x27;, &#x27;Genève&#x27;, NULL, &#x27;1204&#x27;, &#x27;Switzerland&#x27;);INSERT INTO `orders` VALUES (10932, &#x27;BONAP&#x27;, 8, &#x27;2018-03-06 00:00:00&#x27;, &#x27;2018-03-24 00:00:00&#x27;, 1, 134.64, &#x27;12-rue des Bouchers&#x27;, &#x27;Marseille&#x27;, NULL, &#x27;13008&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10933, &#x27;ISLAT&#x27;, 6, &#x27;2018-03-06 00:00:00&#x27;, &#x27;2018-03-16 00:00:00&#x27;, 3, 54.15, &#x27;Garden House Crowther Way&#x27;, &#x27;Cowes&#x27;, &#x27;Isle of Wight&#x27;, &#x27;PO31 7PJ&#x27;, &#x27;UK&#x27;);INSERT INTO `orders` VALUES (10934, &#x27;LEHMS&#x27;, 3, &#x27;2018-03-09 00:00:00&#x27;, &#x27;2018-03-12 00:00:00&#x27;, 3, 32.01, &#x27;Magazinweg 7&#x27;, &#x27;Frankfurt a.M.&#x27;, NULL, &#x27;60528&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10935, &#x27;WELLI&#x27;, 4, &#x27;2018-03-09 00:00:00&#x27;, &#x27;2018-03-18 00:00:00&#x27;, 3, 47.59, &#x27;Rua do Mercado-12&#x27;, &#x27;Resende&#x27;, &#x27;SP&#x27;, &#x27;08737-363&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10936, &#x27;GREAL&#x27;, 3, &#x27;2018-03-09 00:00:00&#x27;, &#x27;2018-03-18 00:00:00&#x27;, 2, 33.68, &#x27;2732 Baker Blvd.&#x27;, &#x27;Eugene&#x27;, &#x27;OR&#x27;, &#x27;97403&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10937, &#x27;CACTU&#x27;, 7, &#x27;2018-03-10 00:00:00&#x27;, &#x27;2018-03-13 00:00:00&#x27;, 3, 31.51, &#x27;Cerrito 333&#x27;, &#x27;Buenos Aires&#x27;, NULL, &#x27;1010&#x27;, &#x27;Argentina&#x27;);INSERT INTO `orders` VALUES (10938, &#x27;QUICK&#x27;, 3, &#x27;2018-03-10 00:00:00&#x27;, &#x27;2018-03-16 00:00:00&#x27;, 2, 31.89, &#x27;Taucherstraße 10&#x27;, &#x27;Cunewalde&#x27;, NULL, &#x27;01307&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10939, &#x27;MAGAA&#x27;, 2, &#x27;2018-03-10 00:00:00&#x27;, &#x27;2018-03-13 00:00:00&#x27;, 2, 76.33, &#x27;Via Ludovico il Moro 22&#x27;, &#x27;Bergamo&#x27;, NULL, &#x27;24100&#x27;, &#x27;Italy&#x27;);INSERT INTO `orders` VALUES (10940, &#x27;BONAP&#x27;, 8, &#x27;2018-03-11 00:00:00&#x27;, &#x27;2018-03-23 00:00:00&#x27;, 3, 19.77, &#x27;12-rue des Bouchers&#x27;, &#x27;Marseille&#x27;, NULL, &#x27;13008&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10941, &#x27;SAVEA&#x27;, 7, &#x27;2018-03-11 00:00:00&#x27;, &#x27;2018-03-20 00:00:00&#x27;, 2, 400.81, &#x27;187 Suffolk Ln.&#x27;, &#x27;Boise&#x27;, &#x27;ID&#x27;, &#x27;83720&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10942, &#x27;REGGC&#x27;, 9, &#x27;2018-03-11 00:00:00&#x27;, &#x27;2018-03-18 00:00:00&#x27;, 3, 17.95, &#x27;Strada Provinciale 124&#x27;, &#x27;Reggio Emilia&#x27;, NULL, &#x27;42100&#x27;, &#x27;Italy&#x27;);INSERT INTO `orders` VALUES (10943, &#x27;BSBEV&#x27;, 4, &#x27;2018-03-11 00:00:00&#x27;, &#x27;2018-03-19 00:00:00&#x27;, 2, 2.17, &#x27;Fauntleroy Circus&#x27;, &#x27;Londo&#x27;, NULL, &#x27;EC2 5NT&#x27;, &#x27;UK&#x27;);INSERT INTO `orders` VALUES (10944, &#x27;BOTTM&#x27;, 6, &#x27;2018-03-12 00:00:00&#x27;, &#x27;2018-03-13 00:00:00&#x27;, 3, 52.92, &#x27;23 Tsawassen Blvd.&#x27;, &#x27;Tsawasse&#x27;, &#x27;BC&#x27;, &#x27;T2F 8M4&#x27;, &#x27;Canada&#x27;);INSERT INTO `orders` VALUES (10945, &#x27;MORGK&#x27;, 4, &#x27;2018-03-12 00:00:00&#x27;, &#x27;2018-03-18 00:00:00&#x27;, 1, 10.22, &#x27;Heerstr. 22&#x27;, &#x27;Leipzig&#x27;, NULL, &#x27;04179&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10946, &#x27;VAFFE&#x27;, 1, &#x27;2018-03-12 00:00:00&#x27;, &#x27;2018-03-19 00:00:00&#x27;, 2, 27.20, &#x27;Smagsloget 45&#x27;, &#x27;Århus&#x27;, NULL, &#x27;8200&#x27;, &#x27;Denmark&#x27;);INSERT INTO `orders` VALUES (10947, &#x27;BSBEV&#x27;, 3, &#x27;2018-03-13 00:00:00&#x27;, &#x27;2018-03-16 00:00:00&#x27;, 2, 3.26, &#x27;Fauntleroy Circus&#x27;, &#x27;Londo&#x27;, NULL, &#x27;EC2 5NT&#x27;, &#x27;UK&#x27;);INSERT INTO `orders` VALUES (10948, &#x27;GODOS&#x27;, 3, &#x27;2018-03-13 00:00:00&#x27;, &#x27;2018-03-19 00:00:00&#x27;, 3, 23.39, &#x27;C/ Romero-33&#x27;, &#x27;Sevilla&#x27;, NULL, &#x27;41101&#x27;, &#x27;Spain&#x27;);INSERT INTO `orders` VALUES (10949, &#x27;BOTTM&#x27;, 2, &#x27;2018-03-13 00:00:00&#x27;, &#x27;2018-03-17 00:00:00&#x27;, 3, 74.44, &#x27;23 Tsawassen Blvd.&#x27;, &#x27;Tsawasse&#x27;, &#x27;BC&#x27;, &#x27;T2F 8M4&#x27;, &#x27;Canada&#x27;);INSERT INTO `orders` VALUES (10950, &#x27;MAGAA&#x27;, 1, &#x27;2018-03-16 00:00:00&#x27;, &#x27;2018-03-23 00:00:00&#x27;, 2, 2.50, &#x27;Via Ludovico il Moro 22&#x27;, &#x27;Bergamo&#x27;, NULL, &#x27;24100&#x27;, &#x27;Italy&#x27;);INSERT INTO `orders` VALUES (10951, &#x27;RICSU&#x27;, 9, &#x27;2018-03-16 00:00:00&#x27;, &#x27;2018-04-07 00:00:00&#x27;, 2, 30.85, &#x27;Starenweg 5&#x27;, &#x27;Genève&#x27;, NULL, &#x27;1204&#x27;, &#x27;Switzerland&#x27;);INSERT INTO `orders` VALUES (10952, &#x27;ALFKI&#x27;, 1, &#x27;2018-03-16 00:00:00&#x27;, &#x27;2018-03-24 00:00:00&#x27;, 1, 40.42, &#x27;Obere Str. 57&#x27;, &#x27;Berli&#x27;, NULL, &#x27;12209&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10953, &#x27;AROUT&#x27;, 9, &#x27;2018-03-16 00:00:00&#x27;, &#x27;2018-03-25 00:00:00&#x27;, 2, 23.72, &#x27;Brook Farm Stratford St. Mary&#x27;, &#x27;Colchester&#x27;, &#x27;Essex&#x27;, &#x27;CO7 6JX&#x27;, &#x27;UK&#x27;);INSERT INTO `orders` VALUES (10954, &#x27;LINOD&#x27;, 5, &#x27;2018-03-17 00:00:00&#x27;, &#x27;2018-03-20 00:00:00&#x27;, 1, 27.91, &#x27;Ave. 5 de Mayo Porlamar&#x27;, &#x27;I. de Margarita&#x27;, &#x27;Nueva Esparta&#x27;, &#x27;4980&#x27;, &#x27;Venezuela&#x27;);INSERT INTO `orders` VALUES (10955, &#x27;FOLKO&#x27;, 8, &#x27;2018-03-17 00:00:00&#x27;, &#x27;2018-03-20 00:00:00&#x27;, 2, 3.26, &#x27;Åkergatan 24&#x27;, &#x27;Bräcke&#x27;, NULL, &#x27;S-844 67&#x27;, &#x27;Sweden&#x27;);INSERT INTO `orders` VALUES (10956, &#x27;BLAUS&#x27;, 6, &#x27;2018-03-17 00:00:00&#x27;, &#x27;2018-03-20 00:00:00&#x27;, 2, 44.65, &#x27;Forsterstr. 57&#x27;, &#x27;Mannheim&#x27;, NULL, &#x27;68306&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10957, &#x27;HILAA&#x27;, 8, &#x27;2018-03-18 00:00:00&#x27;, &#x27;2018-03-27 00:00:00&#x27;, 3, 105.36, &#x27;Carrera 22 con Ave. Carlos Soublette #8-35&#x27;, &#x27;San Cristóbal&#x27;, &#x27;Táchira&#x27;, &#x27;5022&#x27;, &#x27;Venezuela&#x27;);INSERT INTO `orders` VALUES (10958, &#x27;OCEA&#x27;, 7, &#x27;2018-03-18 00:00:00&#x27;, &#x27;2018-03-27 00:00:00&#x27;, 2, 49.56, &#x27;Ing. Gustavo Moncada 8585 Piso 20-A&#x27;, &#x27;Buenos Aires&#x27;, NULL, &#x27;1010&#x27;, &#x27;Argentina&#x27;);INSERT INTO `orders` VALUES (10959, &#x27;GOURL&#x27;, 6, &#x27;2018-03-18 00:00:00&#x27;, &#x27;2018-03-23 00:00:00&#x27;, 2, 4.98, &#x27;Av. Brasil-442&#x27;, &#x27;Campinas&#x27;, &#x27;SP&#x27;, &#x27;04876-786&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10960, &#x27;HILAA&#x27;, 3, &#x27;2018-03-19 00:00:00&#x27;, &#x27;2018-04-08 00:00:00&#x27;, 1, 2.08, &#x27;Carrera 22 con Ave. Carlos Soublette #8-35&#x27;, &#x27;San Cristóbal&#x27;, &#x27;Táchira&#x27;, &#x27;5022&#x27;, &#x27;Venezuela&#x27;);INSERT INTO `orders` VALUES (10961, &#x27;QUEE&#x27;, 8, &#x27;2018-03-19 00:00:00&#x27;, &#x27;2018-03-30 00:00:00&#x27;, 1, 104.47, &#x27;Alameda dos Canàrios-891&#x27;, &#x27;Sao Paulo&#x27;, &#x27;SP&#x27;, &#x27;05487-020&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10962, &#x27;QUICK&#x27;, 8, &#x27;2018-03-19 00:00:00&#x27;, &#x27;2018-03-23 00:00:00&#x27;, 2, 275.79, &#x27;Taucherstraße 10&#x27;, &#x27;Cunewalde&#x27;, NULL, &#x27;01307&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10963, &#x27;FURIB&#x27;, 9, &#x27;2018-03-19 00:00:00&#x27;, &#x27;2018-03-26 00:00:00&#x27;, 3, 2.70, &#x27;Jardim das rosas n. 32&#x27;, &#x27;Lisboa&#x27;, NULL, &#x27;1675&#x27;, &#x27;Portugal&#x27;);INSERT INTO `orders` VALUES (10964, &#x27;SPECD&#x27;, 3, &#x27;2018-03-20 00:00:00&#x27;, &#x27;2018-03-24 00:00:00&#x27;, 2, 87.38, &#x27;25-rue Lauristo&#x27;, &#x27;Paris&#x27;, NULL, &#x27;75016&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10965, &#x27;OLDWO&#x27;, 6, &#x27;2018-03-20 00:00:00&#x27;, &#x27;2018-03-30 00:00:00&#x27;, 3, 144.38, &#x27;2743 Bering St.&#x27;, &#x27;Anchorage&#x27;, &#x27;AK&#x27;, &#x27;99508&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10966, &#x27;CHOPS&#x27;, 4, &#x27;2018-03-20 00:00:00&#x27;, &#x27;2018-04-08 00:00:00&#x27;, 1, 27.19, &#x27;Hauptstr. 31&#x27;, &#x27;Ber&#x27;, NULL, &#x27;3012&#x27;, &#x27;Switzerland&#x27;);INSERT INTO `orders` VALUES (10967, &#x27;TOMSP&#x27;, 2, &#x27;2018-03-23 00:00:00&#x27;, &#x27;2018-04-02 00:00:00&#x27;, 2, 62.22, &#x27;Luisenstr. 48&#x27;, &#x27;Münster&#x27;, NULL, &#x27;44087&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10968, &#x27;ERNSH&#x27;, 1, &#x27;2018-03-23 00:00:00&#x27;, &#x27;2018-04-01 00:00:00&#x27;, 3, 74.60, &#x27;Kirchgasse 6&#x27;, &#x27;Graz&#x27;, NULL, &#x27;8010&#x27;, &#x27;Austria&#x27;);INSERT INTO `orders` VALUES (10969, &#x27;COMMI&#x27;, 1, &#x27;2018-03-23 00:00:00&#x27;, &#x27;2018-03-30 00:00:00&#x27;, 2, 0.21, &#x27;Av. dos Lusíadas-23&#x27;, &#x27;Sao Paulo&#x27;, &#x27;SP&#x27;, &#x27;05432-043&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10970, &#x27;BOLID&#x27;, 9, &#x27;2018-03-24 00:00:00&#x27;, &#x27;2018-04-24 00:00:00&#x27;, 1, 16.16, &#x27;C/ Araquil-67&#x27;, &#x27;Madrid&#x27;, NULL, &#x27;28023&#x27;, &#x27;Spain&#x27;);INSERT INTO `orders` VALUES (10971, &#x27;FRANR&#x27;, 2, &#x27;2018-03-24 00:00:00&#x27;, &#x27;2018-04-02 00:00:00&#x27;, 2, 121.82, &#x27;54-rue Royale&#x27;, &#x27;Nantes&#x27;, NULL, &#x27;44000&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10972, &#x27;LACOR&#x27;, 4, &#x27;2018-03-24 00:00:00&#x27;, &#x27;2018-03-26 00:00:00&#x27;, 2, 0.02, &#x27;67-avenue de l\\&#x27;\\&#x27;Europe&#x27;, &#x27;Versailles&#x27;, NULL, &#x27;78000&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10973, &#x27;LACOR&#x27;, 6, &#x27;2018-03-24 00:00:00&#x27;, &#x27;2018-03-27 00:00:00&#x27;, 2, 15.17, &#x27;67-avenue de l\\&#x27;\\&#x27;Europe&#x27;, &#x27;Versailles&#x27;, NULL, &#x27;78000&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (10974, &#x27;SPLIR&#x27;, 3, &#x27;2018-03-25 00:00:00&#x27;, &#x27;2018-04-03 00:00:00&#x27;, 3, 12.96, &#x27;P.O. Box 555&#x27;, &#x27;Lander&#x27;, &#x27;WY&#x27;, &#x27;82520&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10975, &#x27;BOTTM&#x27;, 1, &#x27;2018-03-25 00:00:00&#x27;, &#x27;2018-03-27 00:00:00&#x27;, 3, 32.27, &#x27;23 Tsawassen Blvd.&#x27;, &#x27;Tsawasse&#x27;, &#x27;BC&#x27;, &#x27;T2F 8M4&#x27;, &#x27;Canada&#x27;);INSERT INTO `orders` VALUES (10976, &#x27;HILAA&#x27;, 1, &#x27;2018-03-25 00:00:00&#x27;, &#x27;2018-04-03 00:00:00&#x27;, 1, 37.97, &#x27;Carrera 22 con Ave. Carlos Soublette #8-35&#x27;, &#x27;San Cristóbal&#x27;, &#x27;Táchira&#x27;, &#x27;5022&#x27;, &#x27;Venezuela&#x27;);INSERT INTO `orders` VALUES (10977, &#x27;FOLKO&#x27;, 8, &#x27;2018-03-26 00:00:00&#x27;, &#x27;2018-04-10 00:00:00&#x27;, 3, 208.50, &#x27;Åkergatan 24&#x27;, &#x27;Bräcke&#x27;, NULL, &#x27;S-844 67&#x27;, &#x27;Sweden&#x27;);INSERT INTO `orders` VALUES (10978, &#x27;MAISD&#x27;, 9, &#x27;2018-03-26 00:00:00&#x27;, &#x27;2018-04-23 00:00:00&#x27;, 2, 32.82, &#x27;Rue Joseph-Bens 532&#x27;, &#x27;Bruxelles&#x27;, NULL, &#x27;B-1180&#x27;, &#x27;Belgium&#x27;);INSERT INTO `orders` VALUES (10979, &#x27;ERNSH&#x27;, 8, &#x27;2018-03-26 00:00:00&#x27;, &#x27;2018-03-31 00:00:00&#x27;, 2, 353.07, &#x27;Kirchgasse 6&#x27;, &#x27;Graz&#x27;, NULL, &#x27;8010&#x27;, &#x27;Austria&#x27;);INSERT INTO `orders` VALUES (10980, &#x27;FOLKO&#x27;, 4, &#x27;2018-03-27 00:00:00&#x27;, &#x27;2018-04-17 00:00:00&#x27;, 1, 1.26, &#x27;Åkergatan 24&#x27;, &#x27;Bräcke&#x27;, NULL, &#x27;S-844 67&#x27;, &#x27;Sweden&#x27;);INSERT INTO `orders` VALUES (10981, &#x27;HANAR&#x27;, 1, &#x27;2018-03-27 00:00:00&#x27;, &#x27;2018-04-02 00:00:00&#x27;, 2, 193.37, &#x27;Rua do Paço-67&#x27;, &#x27;Rio de Janeiro&#x27;, &#x27;RJ&#x27;, &#x27;05454-876&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10982, &#x27;BOTTM&#x27;, 2, &#x27;2018-03-27 00:00:00&#x27;, &#x27;2018-04-08 00:00:00&#x27;, 1, 14.01, &#x27;23 Tsawassen Blvd.&#x27;, &#x27;Tsawasse&#x27;, &#x27;BC&#x27;, &#x27;T2F 8M4&#x27;, &#x27;Canada&#x27;);INSERT INTO `orders` VALUES (10983, &#x27;SAVEA&#x27;, 2, &#x27;2018-03-27 00:00:00&#x27;, &#x27;2018-04-06 00:00:00&#x27;, 2, 657.54, &#x27;187 Suffolk Ln.&#x27;, &#x27;Boise&#x27;, &#x27;ID&#x27;, &#x27;83720&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10984, &#x27;SAVEA&#x27;, 1, &#x27;2018-03-30 00:00:00&#x27;, &#x27;2018-04-03 00:00:00&#x27;, 3, 211.22, &#x27;187 Suffolk Ln.&#x27;, &#x27;Boise&#x27;, &#x27;ID&#x27;, &#x27;83720&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10985, &#x27;HUNGO&#x27;, 2, &#x27;2018-03-30 00:00:00&#x27;, &#x27;2018-04-02 00:00:00&#x27;, 1, 91.51, &#x27;8 Johnstown Road&#x27;, &#x27;Cork&#x27;, &#x27;Co. Cork&#x27;, NULL, &#x27;Ireland&#x27;);INSERT INTO `orders` VALUES (10986, &#x27;OCEA&#x27;, 8, &#x27;2018-03-30 00:00:00&#x27;, &#x27;2018-04-21 00:00:00&#x27;, 2, 217.86, &#x27;Ing. Gustavo Moncada 8585 Piso 20-A&#x27;, &#x27;Buenos Aires&#x27;, NULL, &#x27;1010&#x27;, &#x27;Argentina&#x27;);INSERT INTO `orders` VALUES (10987, &#x27;EASTC&#x27;, 8, &#x27;2018-03-31 00:00:00&#x27;, &#x27;2018-04-06 00:00:00&#x27;, 1, 185.48, &#x27;35 King George&#x27;, &#x27;Londo&#x27;, NULL, &#x27;WX3 6FW&#x27;, &#x27;UK&#x27;);INSERT INTO `orders` VALUES (10988, &#x27;RATTC&#x27;, 3, &#x27;2018-03-31 00:00:00&#x27;, &#x27;2018-04-10 00:00:00&#x27;, 2, 61.14, &#x27;2817 Milton Dr.&#x27;, &#x27;Albuquerque&#x27;, &#x27;NM&#x27;, &#x27;87110&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10989, &#x27;QUEDE&#x27;, 2, &#x27;2018-03-31 00:00:00&#x27;, &#x27;2018-04-02 00:00:00&#x27;, 1, 34.76, &#x27;Rua da Panificadora-12&#x27;, &#x27;Rio de Janeiro&#x27;, &#x27;RJ&#x27;, &#x27;02389-673&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (10990, &#x27;ERNSH&#x27;, 2, &#x27;2018-04-01 00:00:00&#x27;, &#x27;2018-04-07 00:00:00&#x27;, 3, 117.61, &#x27;Kirchgasse 6&#x27;, &#x27;Graz&#x27;, NULL, &#x27;8010&#x27;, &#x27;Austria&#x27;);INSERT INTO `orders` VALUES (10991, &#x27;QUICK&#x27;, 1, &#x27;2018-04-01 00:00:00&#x27;, &#x27;2018-04-07 00:00:00&#x27;, 1, 38.51, &#x27;Taucherstraße 10&#x27;, &#x27;Cunewalde&#x27;, NULL, &#x27;01307&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10992, &#x27;THEBI&#x27;, 1, &#x27;2018-04-01 00:00:00&#x27;, &#x27;2018-04-03 00:00:00&#x27;, 3, 4.27, &#x27;89 Jefferson Way Suite 2&#x27;, &#x27;Portland&#x27;, &#x27;OR&#x27;, &#x27;97201&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (10993, &#x27;FOLKO&#x27;, 7, &#x27;2018-04-01 00:00:00&#x27;, &#x27;2018-04-10 00:00:00&#x27;, 3, 8.81, &#x27;Åkergatan 24&#x27;, &#x27;Bräcke&#x27;, NULL, &#x27;S-844 67&#x27;, &#x27;Sweden&#x27;);INSERT INTO `orders` VALUES (10994, &#x27;VAFFE&#x27;, 2, &#x27;2018-04-02 00:00:00&#x27;, &#x27;2018-04-09 00:00:00&#x27;, 3, 65.53, &#x27;Smagsloget 45&#x27;, &#x27;Århus&#x27;, NULL, &#x27;8200&#x27;, &#x27;Denmark&#x27;);INSERT INTO `orders` VALUES (10995, &#x27;PERIC&#x27;, 1, &#x27;2018-04-02 00:00:00&#x27;, &#x27;2018-04-06 00:00:00&#x27;, 3, 46.00, &#x27;Calle Dr. Jorge Cash 321&#x27;, &#x27;México D.F.&#x27;, NULL, &#x27;05033&#x27;, &#x27;Mexico&#x27;);INSERT INTO `orders` VALUES (10996, &#x27;QUICK&#x27;, 4, &#x27;2018-04-02 00:00:00&#x27;, &#x27;2018-04-10 00:00:00&#x27;, 2, 1.12, &#x27;Taucherstraße 10&#x27;, &#x27;Cunewalde&#x27;, NULL, &#x27;01307&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (10997, &#x27;LILAS&#x27;, 8, &#x27;2018-04-03 00:00:00&#x27;, &#x27;2018-04-13 00:00:00&#x27;, 2, 73.91, &#x27;Carrera 52 con Ave. Bolívar #65-98 Llano Largo&#x27;, &#x27;Barquisimeto&#x27;, &#x27;Lara&#x27;, &#x27;3508&#x27;, &#x27;Venezuela&#x27;);INSERT INTO `orders` VALUES (10998, &#x27;WOLZA&#x27;, 8, &#x27;2018-04-03 00:00:00&#x27;, &#x27;2018-04-17 00:00:00&#x27;, 2, 20.31, &#x27;ul. Filtrowa 68&#x27;, &#x27;Warszawa&#x27;, NULL, &#x27;01-012&#x27;, &#x27;Poland&#x27;);INSERT INTO `orders` VALUES (10999, &#x27;OTTIK&#x27;, 6, &#x27;2018-04-03 00:00:00&#x27;, &#x27;2018-04-10 00:00:00&#x27;, 2, 96.35, &#x27;Mehrheimerstr. 369&#x27;, &#x27;Köl&#x27;, NULL, &#x27;50739&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (11000, &#x27;RATTC&#x27;, 2, &#x27;2018-04-06 00:00:00&#x27;, &#x27;2018-04-14 00:00:00&#x27;, 3, 55.12, &#x27;2817 Milton Dr.&#x27;, &#x27;Albuquerque&#x27;, &#x27;NM&#x27;, &#x27;87110&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (11001, &#x27;FOLKO&#x27;, 2, &#x27;2018-04-06 00:00:00&#x27;, &#x27;2018-04-14 00:00:00&#x27;, 2, 197.30, &#x27;Åkergatan 24&#x27;, &#x27;Bräcke&#x27;, NULL, &#x27;S-844 67&#x27;, &#x27;Sweden&#x27;);INSERT INTO `orders` VALUES (11002, &#x27;SAVEA&#x27;, 4, &#x27;2018-04-06 00:00:00&#x27;, &#x27;2018-04-16 00:00:00&#x27;, 1, 141.16, &#x27;187 Suffolk Ln.&#x27;, &#x27;Boise&#x27;, &#x27;ID&#x27;, &#x27;83720&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (11003, &#x27;THECR&#x27;, 3, &#x27;2018-04-06 00:00:00&#x27;, &#x27;2018-04-08 00:00:00&#x27;, 3, 14.91, &#x27;55 Grizzly Peak Rd.&#x27;, &#x27;Butte&#x27;, &#x27;MT&#x27;, &#x27;59801&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (11004, &#x27;MAISD&#x27;, 3, &#x27;2018-04-07 00:00:00&#x27;, &#x27;2018-04-20 00:00:00&#x27;, 1, 44.84, &#x27;Rue Joseph-Bens 532&#x27;, &#x27;Bruxelles&#x27;, NULL, &#x27;B-1180&#x27;, &#x27;Belgium&#x27;);INSERT INTO `orders` VALUES (11005, &#x27;WILMK&#x27;, 2, &#x27;2018-04-07 00:00:00&#x27;, &#x27;2018-04-10 00:00:00&#x27;, 1, 0.75, &#x27;Keskuskatu 45&#x27;, &#x27;Helsinki&#x27;, NULL, &#x27;21240&#x27;, &#x27;Finland&#x27;);INSERT INTO `orders` VALUES (11006, &#x27;GREAL&#x27;, 3, &#x27;2018-04-07 00:00:00&#x27;, &#x27;2018-04-15 00:00:00&#x27;, 2, 25.19, &#x27;2732 Baker Blvd.&#x27;, &#x27;Eugene&#x27;, &#x27;OR&#x27;, &#x27;97403&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (11007, &#x27;PRINI&#x27;, 8, &#x27;2018-04-08 00:00:00&#x27;, &#x27;2018-04-13 00:00:00&#x27;, 2, 202.24, &#x27;Estrada da saúde n. 58&#x27;, &#x27;Lisboa&#x27;, NULL, &#x27;1756&#x27;, &#x27;Portugal&#x27;);INSERT INTO `orders` VALUES (11008, &#x27;ERNSH&#x27;, 7, &#x27;2018-04-08 00:00:00&#x27;, NULL, 3, 79.46, &#x27;Kirchgasse 6&#x27;, &#x27;Graz&#x27;, NULL, &#x27;8010&#x27;, &#x27;Austria&#x27;);INSERT INTO `orders` VALUES (11009, &#x27;GODOS&#x27;, 2, &#x27;2018-04-08 00:00:00&#x27;, &#x27;2018-04-10 00:00:00&#x27;, 1, 59.11, &#x27;C/ Romero-33&#x27;, &#x27;Sevilla&#x27;, NULL, &#x27;41101&#x27;, &#x27;Spain&#x27;);INSERT INTO `orders` VALUES (11010, &#x27;REGGC&#x27;, 2, &#x27;2018-04-09 00:00:00&#x27;, &#x27;2018-04-21 00:00:00&#x27;, 2, 28.71, &#x27;Strada Provinciale 124&#x27;, &#x27;Reggio Emilia&#x27;, NULL, &#x27;42100&#x27;, &#x27;Italy&#x27;);INSERT INTO `orders` VALUES (11011, &#x27;ALFKI&#x27;, 3, &#x27;2018-04-09 00:00:00&#x27;, &#x27;2018-04-13 00:00:00&#x27;, 1, 1.21, &#x27;Obere Str. 57&#x27;, &#x27;Berli&#x27;, NULL, &#x27;12209&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (11012, &#x27;FRANK&#x27;, 1, &#x27;2018-04-09 00:00:00&#x27;, &#x27;2018-04-17 00:00:00&#x27;, 3, 242.95, &#x27;Berliner Platz 43&#x27;, &#x27;Münche&#x27;, NULL, &#x27;80805&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (11013, &#x27;ROMEY&#x27;, 2, &#x27;2018-04-09 00:00:00&#x27;, &#x27;2018-04-10 00:00:00&#x27;, 1, 32.99, &#x27;Gran Vía-1&#x27;, &#x27;Madrid&#x27;, NULL, &#x27;28001&#x27;, &#x27;Spain&#x27;);INSERT INTO `orders` VALUES (11014, &#x27;LINOD&#x27;, 2, &#x27;2018-04-10 00:00:00&#x27;, &#x27;2018-04-15 00:00:00&#x27;, 3, 23.60, &#x27;Ave. 5 de Mayo Porlamar&#x27;, &#x27;I. de Margarita&#x27;, &#x27;Nueva Esparta&#x27;, &#x27;4980&#x27;, &#x27;Venezuela&#x27;);INSERT INTO `orders` VALUES (11015, &#x27;SANTG&#x27;, 2, &#x27;2018-04-10 00:00:00&#x27;, &#x27;2018-04-20 00:00:00&#x27;, 2, 4.62, &#x27;Erling Skakkes gate 78&#x27;, &#x27;Staver&#x27;, NULL, &#x27;4110&#x27;, &#x27;Norway&#x27;);INSERT INTO `orders` VALUES (11016, &#x27;AROUT&#x27;, 9, &#x27;2018-04-10 00:00:00&#x27;, &#x27;2018-04-13 00:00:00&#x27;, 2, 33.80, &#x27;Brook Farm Stratford St. Mary&#x27;, &#x27;Colchester&#x27;, &#x27;Essex&#x27;, &#x27;CO7 6JX&#x27;, &#x27;UK&#x27;);INSERT INTO `orders` VALUES (11017, &#x27;ERNSH&#x27;, 9, &#x27;2018-04-13 00:00:00&#x27;, &#x27;2018-04-20 00:00:00&#x27;, 2, 754.26, &#x27;Kirchgasse 6&#x27;, &#x27;Graz&#x27;, NULL, &#x27;8010&#x27;, &#x27;Austria&#x27;);INSERT INTO `orders` VALUES (11018, &#x27;LONEP&#x27;, 4, &#x27;2018-04-13 00:00:00&#x27;, &#x27;2018-04-16 00:00:00&#x27;, 2, 11.65, &#x27;89 Chiaroscuro Rd.&#x27;, &#x27;Portland&#x27;, &#x27;OR&#x27;, &#x27;97219&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (11019, &#x27;RANCH&#x27;, 6, &#x27;2018-04-13 00:00:00&#x27;, NULL, 3, 3.17, &#x27;Av. del Libertador 900&#x27;, &#x27;Buenos Aires&#x27;, NULL, &#x27;1010&#x27;, &#x27;Argentina&#x27;);INSERT INTO `orders` VALUES (11020, &#x27;OTTIK&#x27;, 2, &#x27;2018-04-14 00:00:00&#x27;, &#x27;2018-04-16 00:00:00&#x27;, 2, 43.30, &#x27;Mehrheimerstr. 369&#x27;, &#x27;Köl&#x27;, NULL, &#x27;50739&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (11021, &#x27;QUICK&#x27;, 3, &#x27;2018-04-14 00:00:00&#x27;, &#x27;2018-04-21 00:00:00&#x27;, 1, 297.18, &#x27;Taucherstraße 10&#x27;, &#x27;Cunewalde&#x27;, NULL, &#x27;01307&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (11022, &#x27;HANAR&#x27;, 9, &#x27;2018-04-14 00:00:00&#x27;, &#x27;2018-05-04 00:00:00&#x27;, 2, 6.27, &#x27;Rua do Paço-67&#x27;, &#x27;Rio de Janeiro&#x27;, &#x27;RJ&#x27;, &#x27;05454-876&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (11023, &#x27;BSBEV&#x27;, 1, &#x27;2018-04-14 00:00:00&#x27;, &#x27;2018-04-24 00:00:00&#x27;, 2, 123.83, &#x27;Fauntleroy Circus&#x27;, &#x27;Londo&#x27;, NULL, &#x27;EC2 5NT&#x27;, &#x27;UK&#x27;);INSERT INTO `orders` VALUES (11024, &#x27;EASTC&#x27;, 4, &#x27;2018-04-15 00:00:00&#x27;, &#x27;2018-04-20 00:00:00&#x27;, 1, 74.36, &#x27;35 King George&#x27;, &#x27;Londo&#x27;, NULL, &#x27;WX3 6FW&#x27;, &#x27;UK&#x27;);INSERT INTO `orders` VALUES (11025, &#x27;WARTH&#x27;, 6, &#x27;2018-04-15 00:00:00&#x27;, &#x27;2018-04-24 00:00:00&#x27;, 3, 29.17, &#x27;Torikatu 38&#x27;, &#x27;Oulu&#x27;, NULL, &#x27;90110&#x27;, &#x27;Finland&#x27;);INSERT INTO `orders` VALUES (11026, &#x27;FRANS&#x27;, 4, &#x27;2018-04-15 00:00:00&#x27;, &#x27;2018-04-28 00:00:00&#x27;, 1, 47.09, &#x27;Via Monte Bianco 34&#x27;, &#x27;Torino&#x27;, NULL, &#x27;10100&#x27;, &#x27;Italy&#x27;);INSERT INTO `orders` VALUES (11027, &#x27;BOTTM&#x27;, 1, &#x27;2018-04-16 00:00:00&#x27;, &#x27;2018-04-20 00:00:00&#x27;, 1, 52.52, &#x27;23 Tsawassen Blvd.&#x27;, &#x27;Tsawasse&#x27;, &#x27;BC&#x27;, &#x27;T2F 8M4&#x27;, &#x27;Canada&#x27;);INSERT INTO `orders` VALUES (11028, &#x27;KOENE&#x27;, 2, &#x27;2018-04-16 00:00:00&#x27;, &#x27;2018-04-22 00:00:00&#x27;, 1, 29.59, &#x27;Maubelstr. 90&#x27;, &#x27;Brandenburg&#x27;, NULL, &#x27;14776&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (11029, &#x27;CHOPS&#x27;, 4, &#x27;2018-04-16 00:00:00&#x27;, &#x27;2018-04-27 00:00:00&#x27;, 1, 47.84, &#x27;Hauptstr. 31&#x27;, &#x27;Ber&#x27;, NULL, &#x27;3012&#x27;, &#x27;Switzerland&#x27;);INSERT INTO `orders` VALUES (11030, &#x27;SAVEA&#x27;, 7, &#x27;2018-04-17 00:00:00&#x27;, &#x27;2018-04-27 00:00:00&#x27;, 2, 830.75, &#x27;187 Suffolk Ln.&#x27;, &#x27;Boise&#x27;, &#x27;ID&#x27;, &#x27;83720&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (11031, &#x27;SAVEA&#x27;, 6, &#x27;2018-04-17 00:00:00&#x27;, &#x27;2018-04-24 00:00:00&#x27;, 2, 227.22, &#x27;187 Suffolk Ln.&#x27;, &#x27;Boise&#x27;, &#x27;ID&#x27;, &#x27;83720&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (11032, &#x27;WHITC&#x27;, 2, &#x27;2018-04-17 00:00:00&#x27;, &#x27;2018-04-23 00:00:00&#x27;, 3, 606.19, &#x27;1029 - 12th Ave. S.&#x27;, &#x27;Seattle&#x27;, &#x27;WA&#x27;, &#x27;98124&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (11033, &#x27;RICSU&#x27;, 7, &#x27;2018-04-17 00:00:00&#x27;, &#x27;2018-04-23 00:00:00&#x27;, 3, 84.74, &#x27;Starenweg 5&#x27;, &#x27;Genève&#x27;, NULL, &#x27;1204&#x27;, &#x27;Switzerland&#x27;);INSERT INTO `orders` VALUES (11034, &#x27;OLDWO&#x27;, 8, &#x27;2018-04-20 00:00:00&#x27;, &#x27;2018-04-27 00:00:00&#x27;, 1, 40.32, &#x27;2743 Bering St.&#x27;, &#x27;Anchorage&#x27;, &#x27;AK&#x27;, &#x27;99508&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (11035, &#x27;SUPRD&#x27;, 2, &#x27;2018-04-20 00:00:00&#x27;, &#x27;2018-04-24 00:00:00&#x27;, 2, 0.17, &#x27;Boulevard Tirou-255&#x27;, &#x27;Charleroi&#x27;, NULL, &#x27;B-6000&#x27;, &#x27;Belgium&#x27;);INSERT INTO `orders` VALUES (11036, &#x27;DRACD&#x27;, 8, &#x27;2018-04-20 00:00:00&#x27;, &#x27;2018-04-22 00:00:00&#x27;, 3, 149.47, &#x27;Walserweg 21&#x27;, &#x27;Aache&#x27;, NULL, &#x27;52066&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (11037, &#x27;GODOS&#x27;, 7, &#x27;2018-04-21 00:00:00&#x27;, &#x27;2018-04-27 00:00:00&#x27;, 1, 3.20, &#x27;C/ Romero-33&#x27;, &#x27;Sevilla&#x27;, NULL, &#x27;41101&#x27;, &#x27;Spain&#x27;);INSERT INTO `orders` VALUES (11038, &#x27;SUPRD&#x27;, 1, &#x27;2018-04-21 00:00:00&#x27;, &#x27;2018-04-30 00:00:00&#x27;, 2, 29.59, &#x27;Boulevard Tirou-255&#x27;, &#x27;Charleroi&#x27;, NULL, &#x27;B-6000&#x27;, &#x27;Belgium&#x27;);INSERT INTO `orders` VALUES (11039, &#x27;LINOD&#x27;, 1, &#x27;2018-04-21 00:00:00&#x27;, NULL, 2, 65.00, &#x27;Ave. 5 de Mayo Porlamar&#x27;, &#x27;I. de Margarita&#x27;, &#x27;Nueva Esparta&#x27;, &#x27;4980&#x27;, &#x27;Venezuela&#x27;);INSERT INTO `orders` VALUES (11040, &#x27;GREAL&#x27;, 4, &#x27;2018-04-22 00:00:00&#x27;, NULL, 3, 18.84, &#x27;2732 Baker Blvd.&#x27;, &#x27;Eugene&#x27;, &#x27;OR&#x27;, &#x27;97403&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (11041, &#x27;CHOPS&#x27;, 3, &#x27;2018-04-22 00:00:00&#x27;, &#x27;2018-04-28 00:00:00&#x27;, 2, 48.22, &#x27;Hauptstr. 31&#x27;, &#x27;Ber&#x27;, NULL, &#x27;3012&#x27;, &#x27;Switzerland&#x27;);INSERT INTO `orders` VALUES (11042, &#x27;COMMI&#x27;, 2, &#x27;2018-04-22 00:00:00&#x27;, &#x27;2018-05-01 00:00:00&#x27;, 1, 29.99, &#x27;Av. dos Lusíadas-23&#x27;, &#x27;Sao Paulo&#x27;, &#x27;SP&#x27;, &#x27;05432-043&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (11043, &#x27;SPECD&#x27;, 5, &#x27;2018-04-22 00:00:00&#x27;, &#x27;2018-04-29 00:00:00&#x27;, 2, 8.80, &#x27;25-rue Lauristo&#x27;, &#x27;Paris&#x27;, NULL, &#x27;75016&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (11044, &#x27;WOLZA&#x27;, 4, &#x27;2018-04-23 00:00:00&#x27;, &#x27;2018-05-01 00:00:00&#x27;, 1, 8.72, &#x27;ul. Filtrowa 68&#x27;, &#x27;Warszawa&#x27;, NULL, &#x27;01-012&#x27;, &#x27;Poland&#x27;);INSERT INTO `orders` VALUES (11045, &#x27;BOTTM&#x27;, 6, &#x27;2018-04-23 00:00:00&#x27;, NULL, 2, 70.58, &#x27;23 Tsawassen Blvd.&#x27;, &#x27;Tsawasse&#x27;, &#x27;BC&#x27;, &#x27;T2F 8M4&#x27;, &#x27;Canada&#x27;);INSERT INTO `orders` VALUES (11046, &#x27;WANDK&#x27;, 8, &#x27;2018-04-23 00:00:00&#x27;, &#x27;2018-04-24 00:00:00&#x27;, 2, 71.64, &#x27;Adenauerallee 900&#x27;, &#x27;Stuttgart&#x27;, NULL, &#x27;70563&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (11047, &#x27;EASTC&#x27;, 7, &#x27;2018-04-24 00:00:00&#x27;, &#x27;2018-05-01 00:00:00&#x27;, 3, 46.62, &#x27;35 King George&#x27;, &#x27;Londo&#x27;, NULL, &#x27;WX3 6FW&#x27;, &#x27;UK&#x27;);INSERT INTO `orders` VALUES (11048, &#x27;BOTTM&#x27;, 7, &#x27;2018-04-24 00:00:00&#x27;, &#x27;2018-04-30 00:00:00&#x27;, 3, 24.12, &#x27;23 Tsawassen Blvd.&#x27;, &#x27;Tsawasse&#x27;, &#x27;BC&#x27;, &#x27;T2F 8M4&#x27;, &#x27;Canada&#x27;);INSERT INTO `orders` VALUES (11049, &#x27;GOURL&#x27;, 3, &#x27;2018-04-24 00:00:00&#x27;, &#x27;2018-05-04 00:00:00&#x27;, 1, 8.34, &#x27;Av. Brasil-442&#x27;, &#x27;Campinas&#x27;, &#x27;SP&#x27;, &#x27;04876-786&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (11050, &#x27;FOLKO&#x27;, 8, &#x27;2018-04-27 00:00:00&#x27;, &#x27;2018-05-05 00:00:00&#x27;, 2, 59.41, &#x27;Åkergatan 24&#x27;, &#x27;Bräcke&#x27;, NULL, &#x27;S-844 67&#x27;, &#x27;Sweden&#x27;);INSERT INTO `orders` VALUES (11051, &#x27;LAMAI&#x27;, 7, &#x27;2018-04-27 00:00:00&#x27;, NULL, 3, 2.79, &#x27;1 rue Alsace-Lorraine&#x27;, &#x27;Toulouse&#x27;, NULL, &#x27;31000&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (11052, &#x27;HANAR&#x27;, 3, &#x27;2018-04-27 00:00:00&#x27;, &#x27;2018-05-01 00:00:00&#x27;, 1, 67.26, &#x27;Rua do Paço-67&#x27;, &#x27;Rio de Janeiro&#x27;, &#x27;RJ&#x27;, &#x27;05454-876&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (11053, &#x27;PICCO&#x27;, 2, &#x27;2018-04-27 00:00:00&#x27;, &#x27;2018-04-29 00:00:00&#x27;, 2, 53.05, &#x27;Geislweg 14&#x27;, &#x27;Salzburg&#x27;, NULL, &#x27;5020&#x27;, &#x27;Austria&#x27;);INSERT INTO `orders` VALUES (11054, &#x27;CACTU&#x27;, 8, &#x27;2018-04-28 00:00:00&#x27;, NULL, 1, 0.33, &#x27;Cerrito 333&#x27;, &#x27;Buenos Aires&#x27;, NULL, &#x27;1010&#x27;, &#x27;Argentina&#x27;);INSERT INTO `orders` VALUES (11055, &#x27;HILAA&#x27;, 7, &#x27;2018-04-28 00:00:00&#x27;, &#x27;2018-05-05 00:00:00&#x27;, 2, 120.92, &#x27;Carrera 22 con Ave. Carlos Soublette #8-35&#x27;, &#x27;San Cristóbal&#x27;, &#x27;Táchira&#x27;, &#x27;5022&#x27;, &#x27;Venezuela&#x27;);INSERT INTO `orders` VALUES (11056, &#x27;EASTC&#x27;, 8, &#x27;2018-04-28 00:00:00&#x27;, &#x27;2018-05-01 00:00:00&#x27;, 2, 278.96, &#x27;35 King George&#x27;, &#x27;Londo&#x27;, NULL, &#x27;WX3 6FW&#x27;, &#x27;UK&#x27;);INSERT INTO `orders` VALUES (11057, &#x27;NORTS&#x27;, 3, &#x27;2018-04-29 00:00:00&#x27;, &#x27;2018-05-01 00:00:00&#x27;, 3, 4.13, &#x27;South House 300 Queensbridge&#x27;, &#x27;Londo&#x27;, NULL, &#x27;SW7 1RZ&#x27;, &#x27;UK&#x27;);INSERT INTO `orders` VALUES (11058, &#x27;BLAUS&#x27;, 9, &#x27;2018-04-29 00:00:00&#x27;, NULL, 3, 31.14, &#x27;Forsterstr. 57&#x27;, &#x27;Mannheim&#x27;, NULL, &#x27;68306&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (11059, &#x27;RICAR&#x27;, 2, &#x27;2018-04-29 00:00:00&#x27;, NULL, 2, 85.80, &#x27;Av. Copacabana-267&#x27;, &#x27;Rio de Janeiro&#x27;, &#x27;RJ&#x27;, &#x27;02389-890&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (11060, &#x27;FRANS&#x27;, 2, &#x27;2018-04-30 00:00:00&#x27;, &#x27;2018-05-04 00:00:00&#x27;, 2, 10.98, &#x27;Via Monte Bianco 34&#x27;, &#x27;Torino&#x27;, NULL, &#x27;10100&#x27;, &#x27;Italy&#x27;);INSERT INTO `orders` VALUES (11061, &#x27;GREAL&#x27;, 4, &#x27;2018-04-30 00:00:00&#x27;, NULL, 3, 14.01, &#x27;2732 Baker Blvd.&#x27;, &#x27;Eugene&#x27;, &#x27;OR&#x27;, &#x27;97403&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (11062, &#x27;REGGC&#x27;, 4, &#x27;2018-04-30 00:00:00&#x27;, NULL, 2, 29.93, &#x27;Strada Provinciale 124&#x27;, &#x27;Reggio Emilia&#x27;, NULL, &#x27;42100&#x27;, &#x27;Italy&#x27;);INSERT INTO `orders` VALUES (11063, &#x27;HUNGO&#x27;, 3, &#x27;2018-04-30 00:00:00&#x27;, &#x27;2018-05-06 00:00:00&#x27;, 2, 81.73, &#x27;8 Johnstown Road&#x27;, &#x27;Cork&#x27;, &#x27;Co. Cork&#x27;, NULL, &#x27;Ireland&#x27;);INSERT INTO `orders` VALUES (11064, &#x27;SAVEA&#x27;, 1, &#x27;2018-05-01 00:00:00&#x27;, &#x27;2018-05-04 00:00:00&#x27;, 1, 30.09, &#x27;187 Suffolk Ln.&#x27;, &#x27;Boise&#x27;, &#x27;ID&#x27;, &#x27;83720&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (11065, &#x27;LILAS&#x27;, 8, &#x27;2018-05-01 00:00:00&#x27;, NULL, 1, 12.91, &#x27;Carrera 52 con Ave. Bolívar #65-98 Llano Largo&#x27;, &#x27;Barquisimeto&#x27;, &#x27;Lara&#x27;, &#x27;3508&#x27;, &#x27;Venezuela&#x27;);INSERT INTO `orders` VALUES (11066, &#x27;WHITC&#x27;, 7, &#x27;2018-05-01 00:00:00&#x27;, &#x27;2018-05-04 00:00:00&#x27;, 2, 44.72, &#x27;1029 - 12th Ave. S.&#x27;, &#x27;Seattle&#x27;, &#x27;WA&#x27;, &#x27;98124&#x27;, &#x27;USA&#x27;);INSERT INTO `orders` VALUES (11067, &#x27;DRACD&#x27;, 1, &#x27;2018-05-04 00:00:00&#x27;, &#x27;2018-05-06 00:00:00&#x27;, 2, 7.98, &#x27;Walserweg 21&#x27;, &#x27;Aache&#x27;, NULL, &#x27;52066&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (11068, &#x27;QUEE&#x27;, 8, &#x27;2018-05-04 00:00:00&#x27;, NULL, 2, 81.75, &#x27;Alameda dos Canàrios-891&#x27;, &#x27;Sao Paulo&#x27;, &#x27;SP&#x27;, &#x27;05487-020&#x27;, &#x27;Brazil&#x27;);INSERT INTO `orders` VALUES (11069, &#x27;TORTU&#x27;, 1, &#x27;2018-05-04 00:00:00&#x27;, &#x27;2018-05-06 00:00:00&#x27;, 2, 15.67, &#x27;Avda. Azteca 123&#x27;, &#x27;México D.F.&#x27;, NULL, &#x27;05033&#x27;, &#x27;Mexico&#x27;);INSERT INTO `orders` VALUES (11070, &#x27;LEHMS&#x27;, 2, &#x27;2018-05-05 00:00:00&#x27;, NULL, 1, 136.00, &#x27;Magazinweg 7&#x27;, &#x27;Frankfurt a.M.&#x27;, NULL, &#x27;60528&#x27;, &#x27;Germany&#x27;);INSERT INTO `orders` VALUES (11071, &#x27;LILAS&#x27;, 1, &#x27;2018-05-05 00:00:00&#x27;, NULL, 1, 0.93, &#x27;Carrera 52 con Ave. Bolívar #65-98 Llano Largo&#x27;, &#x27;Barquisimeto&#x27;, &#x27;Lara&#x27;, &#x27;3508&#x27;, &#x27;Venezuela&#x27;);INSERT INTO `orders` VALUES (11072, &#x27;ERNSH&#x27;, 4, &#x27;2018-05-05 00:00:00&#x27;, NULL, 2, 258.64, &#x27;Kirchgasse 6&#x27;, &#x27;Graz&#x27;, NULL, &#x27;8010&#x27;, &#x27;Austria&#x27;);INSERT INTO `orders` VALUES (11073, &#x27;PERIC&#x27;, 2, &#x27;2018-05-05 00:00:00&#x27;, NULL, 2, 24.95, &#x27;Calle Dr. Jorge Cash 321&#x27;, &#x27;México D.F.&#x27;, NULL, &#x27;05033&#x27;, &#x27;Mexico&#x27;);INSERT INTO `orders` VALUES (11074, &#x27;SIMOB&#x27;, 7, &#x27;2018-05-06 00:00:00&#x27;, NULL, 2, 18.44, &#x27;Vinbæltet 34&#x27;, &#x27;Kobenhav&#x27;, NULL, &#x27;1734&#x27;, &#x27;Denmark&#x27;);INSERT INTO `orders` VALUES (11075, &#x27;RICSU&#x27;, 8, &#x27;2018-05-06 00:00:00&#x27;, NULL, 2, 6.19, &#x27;Starenweg 5&#x27;, &#x27;Genève&#x27;, NULL, &#x27;1204&#x27;, &#x27;Switzerland&#x27;);INSERT INTO `orders` VALUES (11076, &#x27;BONAP&#x27;, 4, &#x27;2018-05-06 00:00:00&#x27;, NULL, 2, 38.28, &#x27;12-rue des Bouchers&#x27;, &#x27;Marseille&#x27;, NULL, &#x27;13008&#x27;, &#x27;France&#x27;);INSERT INTO `orders` VALUES (11077, &#x27;RATTC&#x27;, 1, &#x27;2018-05-06 00:00:00&#x27;, NULL, 2, 8.53, &#x27;2817 Milton Dr.&#x27;, &#x27;Albuquerque&#x27;, &#x27;NM&#x27;, &#x27;87110&#x27;, &#x27;USA&#x27;);COMMIT;-- ------------------------------ Table structure for products-- ----------------------------DROP TABLE IF EXISTS `products`;CREATE TABLE `products` (  `product_id` int NOT NULL,  `product_name` varchar(40) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,  `supplier_id` int DEFAULT NULL,  `category_id` int DEFAULT NULL,  `quantity_per_unit` varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,  `unit_price` decimal(10,2) DEFAULT NULL,  `units_in_stock` smallint DEFAULT NULL,  `units_on_order` smallint DEFAULT NULL,  `discontinued` bit(1) DEFAULT NULL,  PRIMARY KEY (`product_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;-- ------------------------------ Records of products-- ----------------------------BEGIN;INSERT INTO `products` VALUES (1, &#x27;Chai&#x27;, 1, 1, &#x27;10 boxes x 20 bags&#x27;, 18.00, 39, 0, b&#x27;0&#x27;);INSERT INTO `products` VALUES (2, &#x27;Chang&#x27;, 1, 1, &#x27;24 - 12 oz bottles&#x27;, 19.00, 17, 40, b&#x27;0&#x27;);INSERT INTO `products` VALUES (3, &#x27;Aniseed Syrup&#x27;, 1, 2, &#x27;12 - 550 ml bottles&#x27;, 10.00, 13, 70, b&#x27;0&#x27;);INSERT INTO `products` VALUES (4, &#x27;Chef Anton\\&#x27;s Cajun Seasoning&#x27;, 2, 2, &#x27;48 - 6 oz jars&#x27;, 22.00, 53, 0, b&#x27;0&#x27;);INSERT INTO `products` VALUES (5, &#x27;Chef Anton\\&#x27;s Gumbo Mix&#x27;, 2, 2, &#x27;36 boxes&#x27;, 21.35, 0, 0, b&#x27;1&#x27;);INSERT INTO `products` VALUES (6, &#x27;Grandma\\&#x27;s Boysenberry Spread&#x27;, 3, 2, &#x27;12 - 8 oz jars&#x27;, 25.00, 120, 0, b&#x27;0&#x27;);INSERT INTO `products` VALUES (7, &#x27;Uncle Bob\\&#x27;s Organic Dried Pears&#x27;, 3, 7, &#x27;12 - 1 lb pkgs.&#x27;, 30.00, 15, 0, b&#x27;0&#x27;);INSERT INTO `products` VALUES (8, &#x27;Northwoods Cranberry Sauce&#x27;, 3, 2, &#x27;12 - 12 oz jars&#x27;, 40.00, 6, 0, b&#x27;0&#x27;);INSERT INTO `products` VALUES (9, &#x27;Mishi Kobe Niku&#x27;, 4, 6, &#x27;18 - 500 g pkgs.&#x27;, 97.00, 29, 0, b&#x27;1&#x27;);INSERT INTO `products` VALUES (10, &#x27;Ikura&#x27;, 4, 8, &#x27;12 - 200 ml jars&#x27;, 31.00, 31, 0, b&#x27;0&#x27;);INSERT INTO `products` VALUES (11, &#x27;Queso Cabrales&#x27;, 5, 4, &#x27;1 kg pkg.&#x27;, 21.00, 22, 30, b&#x27;0&#x27;);INSERT INTO `products` VALUES (12, &#x27;Queso Manchego La Pastora&#x27;, 5, 4, &#x27;10 - 500 g pkgs.&#x27;, 38.00, 86, 0, b&#x27;0&#x27;);INSERT INTO `products` VALUES (13, &#x27;Konbu&#x27;, 6, 8, &#x27;2 kg box&#x27;, 6.00, 24, 0, b&#x27;0&#x27;);INSERT INTO `products` VALUES (14, &#x27;Tofu&#x27;, 6, 7, &#x27;40 - 100 g pkgs.&#x27;, 23.25, 35, 0, b&#x27;0&#x27;);INSERT INTO `products` VALUES (15, &#x27;Genen Shouyu&#x27;, 6, 2, &#x27;24 - 250 ml bottles&#x27;, 15.50, 39, 0, b&#x27;0&#x27;);INSERT INTO `products` VALUES (16, &#x27;Pavlova&#x27;, 7, 3, &#x27;32 - 500 g boxes&#x27;, 17.45, 29, 0, b&#x27;0&#x27;);INSERT INTO `products` VALUES (17, &#x27;Alice Mutton&#x27;, 7, 6, &#x27;20 - 1 kg tins&#x27;, 39.00, 0, 0, b&#x27;1&#x27;);INSERT INTO `products` VALUES (18, &#x27;Carnarvon Tigers&#x27;, 7, 8, &#x27;16 kg pkg.&#x27;, 62.50, 42, 0, b&#x27;0&#x27;);INSERT INTO `products` VALUES (19, &#x27;Teatime Chocolate Biscuits&#x27;, 8, 3, &#x27;10 boxes x 12 pieces&#x27;, 9.20, 25, 0, b&#x27;0&#x27;);INSERT INTO `products` VALUES (20, &#x27;Sir Rodney\\&#x27;s Marmalade&#x27;, 8, 3, &#x27;30 gift boxes&#x27;, 81.00, 40, 0, b&#x27;0&#x27;);INSERT INTO `products` VALUES (21, &#x27;Sir Rodney\\&#x27;s Scones&#x27;, 8, 3, &#x27;24 pkgs. x 4 pieces&#x27;, 10.00, 3, 40, b&#x27;0&#x27;);INSERT INTO `products` VALUES (22, &#x27;Gustaf\\&#x27;s Knäckebröd&#x27;, 9, 5, &#x27;24 - 500 g pkgs.&#x27;, 21.00, 104, 0, b&#x27;0&#x27;);INSERT INTO `products` VALUES (23, &#x27;Tunnbröd&#x27;, 9, 5, &#x27;12 - 250 g pkgs.&#x27;, 9.00, 61, 0, b&#x27;0&#x27;);INSERT INTO `products` VALUES (24, &#x27;Guaraná Fantástica&#x27;, 10, 1, &#x27;12 - 355 ml cans&#x27;, 4.50, 20, 0, b&#x27;1&#x27;);INSERT INTO `products` VALUES (25, &#x27;NuNuCa Nuß-Nougat-Creme&#x27;, 11, 3, &#x27;20 - 450 g glasses&#x27;, 14.00, 76, 0, b&#x27;0&#x27;);INSERT INTO `products` VALUES (26, &#x27;Gumbär Gummibärchen&#x27;, 11, 3, &#x27;100 - 250 g bags&#x27;, 31.23, 15, 0, b&#x27;0&#x27;);INSERT INTO `products` VALUES (27, &#x27;Schoggi Schokolade&#x27;, 11, 3, &#x27;100 - 100 g pieces&#x27;, 43.90, 49, 0, b&#x27;0&#x27;);INSERT INTO `products` VALUES (28, &#x27;Rössle Sauerkraut&#x27;, 12, 7, &#x27;25 - 825 g cans&#x27;, 45.60, 26, 0, b&#x27;1&#x27;);INSERT INTO `products` VALUES (29, &#x27;Thüringer Rostbratwurst&#x27;, 12, 6, &#x27;50 bags x 30 sausgs.&#x27;, 123.79, 0, 0, b&#x27;1&#x27;);INSERT INTO `products` VALUES (30, &#x27;Nord-Ost Matjeshering&#x27;, 13, 8, &#x27;10 - 200 g glasses&#x27;, 25.89, 10, 0, b&#x27;0&#x27;);INSERT INTO `products` VALUES (31, &#x27;Gorgonzola Telino&#x27;, 14, 4, &#x27;12 - 100 g pkgs&#x27;, 12.50, 0, 70, b&#x27;0&#x27;);INSERT INTO `products` VALUES (32, &#x27;Mascarpone Fabioli&#x27;, 14, 4, &#x27;24 - 200 g pkgs.&#x27;, 32.00, 9, 40, b&#x27;0&#x27;);INSERT INTO `products` VALUES (33, &#x27;Geitost&#x27;, 16, 4, &#x27;500 g&#x27;, 2.50, 112, 0, b&#x27;0&#x27;);INSERT INTO `products` VALUES (34, &#x27;Sasquatch Ale&#x27;, 16, 1, &#x27;24 - 12 oz bottles&#x27;, 14.00, 111, 0, b&#x27;0&#x27;);INSERT INTO `products` VALUES (35, &#x27;Steeleye Stout&#x27;, 16, 1, &#x27;24 - 12 oz bottles&#x27;, 18.00, 20, 0, b&#x27;0&#x27;);INSERT INTO `products` VALUES (36, &#x27;Inlagd Sill&#x27;, 17, 8, &#x27;24 - 250 g jars&#x27;, 19.00, 112, 0, b&#x27;0&#x27;);INSERT INTO `products` VALUES (37, &#x27;Gravad lax&#x27;, 17, 8, &#x27;12 - 500 g pkgs.&#x27;, 26.00, 11, 50, b&#x27;0&#x27;);INSERT INTO `products` VALUES (38, &#x27;Côte de Blaye&#x27;, 18, 1, &#x27;12 - 75 cl bottles&#x27;, 263.50, 17, 0, b&#x27;0&#x27;);INSERT INTO `products` VALUES (39, &#x27;Chartreuse verte&#x27;, 18, 1, &#x27;750 cc per bottle&#x27;, 18.00, 69, 0, b&#x27;0&#x27;);INSERT INTO `products` VALUES (40, &#x27;Boston Crab Meat&#x27;, 19, 8, &#x27;24 - 4 oz tins&#x27;, 18.40, 123, 0, b&#x27;0&#x27;);INSERT INTO `products` VALUES (41, &#x27;Jack\\&#x27;s New England Clam Chowder&#x27;, 19, 8, &#x27;12 - 12 oz cans&#x27;, 9.65, 85, 0, b&#x27;0&#x27;);INSERT INTO `products` VALUES (42, &#x27;Singaporean Hokkien Fried Mee&#x27;, 20, 5, &#x27;32 - 1 kg pkgs.&#x27;, 14.00, 26, 0, b&#x27;1&#x27;);INSERT INTO `products` VALUES (43, &#x27;Ipoh Coffee&#x27;, 20, 1, &#x27;16 - 500 g tins&#x27;, 46.00, 17, 10, b&#x27;0&#x27;);INSERT INTO `products` VALUES (44, &#x27;Gula Malacca&#x27;, 20, 2, &#x27;20 - 2 kg bags&#x27;, 19.45, 27, 0, b&#x27;0&#x27;);INSERT INTO `products` VALUES (45, &#x27;Rogede sild&#x27;, 21, 8, &#x27;1k pkg.&#x27;, 9.50, 5, 70, b&#x27;0&#x27;);INSERT INTO `products` VALUES (46, &#x27;Spegesild&#x27;, 21, 8, &#x27;4 - 450 g glasses&#x27;, 12.00, 95, 0, b&#x27;0&#x27;);INSERT INTO `products` VALUES (47, &#x27;Zaanse koeken&#x27;, 22, 3, &#x27;10 - 4 oz boxes&#x27;, 9.50, 36, 0, b&#x27;0&#x27;);INSERT INTO `products` VALUES (48, &#x27;Chocolade&#x27;, 22, 3, &#x27;10 pkgs.&#x27;, 12.75, 15, 70, b&#x27;0&#x27;);INSERT INTO `products` VALUES (49, &#x27;Maxilaku&#x27;, 23, 3, &#x27;24 - 50 g pkgs.&#x27;, 20.00, 10, 60, b&#x27;0&#x27;);INSERT INTO `products` VALUES (50, &#x27;Valkoinen suklaa&#x27;, 23, 3, &#x27;12 - 100 g bars&#x27;, 16.25, 65, 0, b&#x27;0&#x27;);INSERT INTO `products` VALUES (51, &#x27;Manjimup Dried Apples&#x27;, 24, 7, &#x27;50 - 300 g pkgs.&#x27;, 53.00, 20, 0, b&#x27;0&#x27;);INSERT INTO `products` VALUES (52, &#x27;Filo Mix&#x27;, 24, 5, &#x27;16 - 2 kg boxes&#x27;, 7.00, 38, 0, b&#x27;0&#x27;);INSERT INTO `products` VALUES (53, &#x27;Perth Pasties&#x27;, 24, 6, &#x27;48 pieces&#x27;, 32.80, 0, 0, b&#x27;1&#x27;);INSERT INTO `products` VALUES (54, &#x27;Tourtière&#x27;, 25, 6, &#x27;16 pies&#x27;, 7.45, 21, 0, b&#x27;0&#x27;);INSERT INTO `products` VALUES (55, &#x27;Pâté chinois&#x27;, 25, 6, &#x27;24 boxes x 2 pies&#x27;, 24.00, 115, 0, b&#x27;0&#x27;);INSERT INTO `products` VALUES (56, &#x27;Gnocchi di nonna Alice&#x27;, 26, 5, &#x27;24 - 250 g pkgs.&#x27;, 38.00, 21, 10, b&#x27;0&#x27;);INSERT INTO `products` VALUES (57, &#x27;Ravioli Angelo&#x27;, 26, 5, &#x27;24 - 250 g pkgs.&#x27;, 19.50, 36, 0, b&#x27;0&#x27;);INSERT INTO `products` VALUES (58, &#x27;Escargots de Bourgogne&#x27;, 27, 8, &#x27;24 pieces&#x27;, 13.25, 62, 0, b&#x27;0&#x27;);INSERT INTO `products` VALUES (59, &#x27;Raclette Courdavault&#x27;, 28, 4, &#x27;5 kg pkg.&#x27;, 55.00, 79, 0, b&#x27;0&#x27;);INSERT INTO `products` VALUES (60, &#x27;Camembert Pierrot&#x27;, 28, 4, &#x27;15 - 300 g rounds&#x27;, 34.00, 19, 0, b&#x27;0&#x27;);INSERT INTO `products` VALUES (61, &#x27;Sirop d\\&#x27;érable&#x27;, 29, 2, &#x27;24 - 500 ml bottles&#x27;, 28.50, 113, 0, b&#x27;0&#x27;);INSERT INTO `products` VALUES (62, &#x27;Tarte au sucre&#x27;, 29, 3, &#x27;48 pies&#x27;, 49.30, 17, 0, b&#x27;0&#x27;);INSERT INTO `products` VALUES (63, &#x27;Vegie-spread&#x27;, 7, 2, &#x27;15 - 625 g jars&#x27;, 43.90, 24, 0, b&#x27;0&#x27;);INSERT INTO `products` VALUES (64, &#x27;Wimmers gute Semmelknödel&#x27;, 12, 5, &#x27;20 bags x 4 pieces&#x27;, 33.25, 22, 80, b&#x27;0&#x27;);INSERT INTO `products` VALUES (65, &#x27;Louisiana Fiery Hot Pepper Sauce&#x27;, 2, 2, &#x27;32 - 8 oz bottles&#x27;, 21.05, 76, 0, b&#x27;0&#x27;);INSERT INTO `products` VALUES (66, &#x27;Louisiana Hot Spiced Okra&#x27;, 2, 2, &#x27;24 - 8 oz jars&#x27;, 17.00, 4, 100, b&#x27;0&#x27;);INSERT INTO `products` VALUES (67, &#x27;Laughing Lumberjack Lager&#x27;, 16, 1, &#x27;24 - 12 oz bottles&#x27;, 14.00, 52, 0, b&#x27;0&#x27;);INSERT INTO `products` VALUES (68, &#x27;Scottish Longbreads&#x27;, 8, 3, &#x27;10 boxes x 8 pieces&#x27;, 12.50, 6, 10, b&#x27;0&#x27;);INSERT INTO `products` VALUES (69, &#x27;Gudbrandsdalsost&#x27;, 16, 4, &#x27;10 kg pkg.&#x27;, 36.00, 26, 0, b&#x27;0&#x27;);INSERT INTO `products` VALUES (70, &#x27;Outback Lager&#x27;, 7, 1, &#x27;24 - 355 ml bottles&#x27;, 15.00, 15, 10, b&#x27;0&#x27;);INSERT INTO `products` VALUES (71, &#x27;Flotemysost&#x27;, 16, 4, &#x27;10 - 500 g pkgs.&#x27;, 21.50, 26, 0, b&#x27;0&#x27;);INSERT INTO `products` VALUES (72, &#x27;Mozzarella di Giovanni&#x27;, 14, 4, &#x27;24 - 200 g pkgs.&#x27;, 34.80, 14, 0, b&#x27;0&#x27;);INSERT INTO `products` VALUES (73, &#x27;Röd Kaviar&#x27;, 17, 8, &#x27;24 - 150 g jars&#x27;, 15.00, 101, 0, b&#x27;0&#x27;);INSERT INTO `products` VALUES (74, &#x27;Longlife Tofu&#x27;, 4, 7, &#x27;5 kg pkg.&#x27;, 10.00, 4, 20, b&#x27;0&#x27;);INSERT INTO `products` VALUES (75, &#x27;Rhönbräu Klosterbier&#x27;, 12, 1, &#x27;24 - 0.5 l bottles&#x27;, 7.75, 125, 0, b&#x27;0&#x27;);INSERT INTO `products` VALUES (76, &#x27;Lakkalikööri&#x27;, 23, 1, &#x27;500 ml&#x27;, 18.00, 57, 0, b&#x27;0&#x27;);INSERT INTO `products` VALUES (77, &#x27;Original Frankfurter grüne Soße&#x27;, 12, 2, &#x27;12 boxes&#x27;, 13.00, 32, 0, b&#x27;0&#x27;);COMMIT;-- ------------------------------ Table structure for suppliers-- ----------------------------DROP TABLE IF EXISTS `suppliers`;CREATE TABLE `suppliers` (  `supplier_id` int NOT NULL,  `company_name` varchar(40) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,  `address` varchar(60) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,  `city` varchar(15) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,  `region` varchar(15) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,  `postal_code` varchar(10) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,  `country` varchar(15) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,  PRIMARY KEY (`supplier_id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;-- ------------------------------ Records of suppliers-- ----------------------------BEGIN;INSERT INTO `suppliers` VALUES (1, &#x27;Exotic Liquids&#x27;, &#x27;49 Gilbert St.&#x27;, &#x27;London&#x27;, NULL, &#x27;EC1 4SD&#x27;, &#x27;UK&#x27;);INSERT INTO `suppliers` VALUES (2, &#x27;New Orleans Cajun Delights&#x27;, &#x27;P.O. Box 78934&#x27;, &#x27;New Orleans&#x27;, &#x27;LA&#x27;, &#x27;70117&#x27;, &#x27;USA&#x27;);INSERT INTO `suppliers` VALUES (3, &#x27;Grandma Kelly\\&#x27;s Homestead&#x27;, &#x27;707 Oxford Rd.&#x27;, &#x27;Ann Arbor&#x27;, &#x27;MI&#x27;, &#x27;48104&#x27;, &#x27;USA&#x27;);INSERT INTO `suppliers` VALUES (4, &#x27;Tokyo Traders&#x27;, &#x27;9-8 Sekimai Musashino-shi&#x27;, &#x27;Tokyo&#x27;, NULL, &#x27;100&#x27;, &#x27;Japan&#x27;);INSERT INTO `suppliers` VALUES (5, &#x27;Cooperativa de Quesos \\&#x27;Las Cabras\\&#x27;&#x27;, &#x27;Calle del Rosal 4&#x27;, &#x27;Oviedo&#x27;, &#x27;Asturias&#x27;, &#x27;33007&#x27;, &#x27;Spain&#x27;);INSERT INTO `suppliers` VALUES (6, &#x27;Mayumi\\&#x27;s&#x27;, &#x27;92 Setsuko Chuo-ku&#x27;, &#x27;Osaka&#x27;, NULL, &#x27;545&#x27;, &#x27;Japan&#x27;);INSERT INTO `suppliers` VALUES (7, &#x27;Pavlova, Ltd.&#x27;, &#x27;74 Rose St. Moonie Ponds&#x27;, &#x27;Melbourne&#x27;, &#x27;Victoria&#x27;, &#x27;3058&#x27;, &#x27;Australia&#x27;);INSERT INTO `suppliers` VALUES (8, &#x27;Specialty Biscuits, Ltd.&#x27;, &#x27;29 King\\&#x27;s Way&#x27;, &#x27;Manchester&#x27;, NULL, &#x27;M14 GSD&#x27;, &#x27;UK&#x27;);INSERT INTO `suppliers` VALUES (9, &#x27;PB Knäckebröd AB&#x27;, &#x27;Kaloadagatan 13&#x27;, &#x27;Göteborg&#x27;, NULL, &#x27;S-345 67&#x27;, &#x27;Sweden&#x27;);INSERT INTO `suppliers` VALUES (10, &#x27;Refrescos Americanas LTDA&#x27;, &#x27;Av. das Americanas 12.890&#x27;, &#x27;Sao Paulo&#x27;, NULL, &#x27;5442&#x27;, &#x27;Brazil&#x27;);INSERT INTO `suppliers` VALUES (11, &#x27;Heli Süßwaren GmbH &amp; Co. KG&#x27;, &#x27;Tiergartenstraße 5&#x27;, &#x27;Berlin&#x27;, NULL, &#x27;10785&#x27;, &#x27;Germany&#x27;);INSERT INTO `suppliers` VALUES (12, &#x27;Plutzer Lebensmittelgroßmärkte AG&#x27;, &#x27;Bogenallee 51&#x27;, &#x27;Frankfurt&#x27;, NULL, &#x27;60439&#x27;, &#x27;Germany&#x27;);INSERT INTO `suppliers` VALUES (13, &#x27;Nord-Ost-Fisch Handelsgesellschaft mbH&#x27;, &#x27;Frahmredder 112a&#x27;, &#x27;Cuxhaven&#x27;, NULL, &#x27;27478&#x27;, &#x27;Germany&#x27;);INSERT INTO `suppliers` VALUES (14, &#x27;Formaggi Fortini s.r.l.&#x27;, &#x27;Viale Dante, 75&#x27;, &#x27;Ravenna&#x27;, NULL, &#x27;48100&#x27;, &#x27;Italy&#x27;);INSERT INTO `suppliers` VALUES (15, &#x27;Norske Meierier&#x27;, &#x27;Hatlevegen 5&#x27;, &#x27;Sandvika&#x27;, NULL, &#x27;1320&#x27;, &#x27;Norway&#x27;);INSERT INTO `suppliers` VALUES (16, &#x27;Bigfoot Breweries&#x27;, &#x27;3400 - 8th Avenue Suite 210&#x27;, &#x27;Bend&#x27;, &#x27;OR&#x27;, &#x27;97101&#x27;, &#x27;USA&#x27;);INSERT INTO `suppliers` VALUES (17, &#x27;Svensk Sjöföda AB&#x27;, &#x27;Brovallavägen 231&#x27;, &#x27;Stockholm&#x27;, NULL, &#x27;S-123 45&#x27;, &#x27;Sweden&#x27;);INSERT INTO `suppliers` VALUES (18, &#x27;Aux joyeux ecclésiastiques&#x27;, &#x27;203, Rue des Francs-Bourgeois&#x27;, &#x27;Paris&#x27;, NULL, &#x27;75004&#x27;, &#x27;France&#x27;);INSERT INTO `suppliers` VALUES (19, &#x27;New England Seafood Cannery&#x27;, &#x27;Order Processing Dept. 2100 Paul Revere Blvd.&#x27;, &#x27;Boston&#x27;, &#x27;MA&#x27;, &#x27;2134&#x27;, &#x27;USA&#x27;);INSERT INTO `suppliers` VALUES (20, &#x27;Leka Trading&#x27;, &#x27;471 Serangoon Loop, Suite #402&#x27;, &#x27;Singapore&#x27;, NULL, &#x27;512&#x27;, &#x27;Singapore&#x27;);INSERT INTO `suppliers` VALUES (21, &#x27;Lyngbysild&#x27;, &#x27;Lyngbysild Fiskebakken 10&#x27;, &#x27;Lyngby&#x27;, NULL, &#x27;2800&#x27;, &#x27;Denmark&#x27;);INSERT INTO `suppliers` VALUES (22, &#x27;Zaanse Snoepfabriek&#x27;, &#x27;Verkoop Rijnweg 22&#x27;, &#x27;Zaandam&#x27;, NULL, &#x27;9999 ZZ&#x27;, &#x27;Netherlands&#x27;);INSERT INTO `suppliers` VALUES (23, &#x27;Karkki Oy&#x27;, &#x27;Valtakatu 12&#x27;, &#x27;Lappeenranta&#x27;, NULL, &#x27;53120&#x27;, &#x27;Finland&#x27;);INSERT INTO `suppliers` VALUES (24, &#x27;G\\&#x27;day, Mate&#x27;, &#x27;170 Prince Edward Parade Hunter\\&#x27;s Hill&#x27;, &#x27;Sydney&#x27;, &#x27;NSW&#x27;, &#x27;2042&#x27;, &#x27;Australia&#x27;);INSERT INTO `suppliers` VALUES (25, &#x27;Ma Maison&#x27;, &#x27;2960 Rue St. Laurent&#x27;, &#x27;Montréal&#x27;, &#x27;Québec&#x27;, &#x27;H1J 1C3&#x27;, &#x27;Canada&#x27;);INSERT INTO `suppliers` VALUES (26, &#x27;Pasta Buttini s.r.l.&#x27;, &#x27;Via dei Gelsomini, 153&#x27;, &#x27;Salerno&#x27;, NULL, &#x27;84100&#x27;, &#x27;Italy&#x27;);INSERT INTO `suppliers` VALUES (27, &#x27;Escargots Nouveaux&#x27;, &#x27;22, rue H. Voiron&#x27;, &#x27;Montceau&#x27;, NULL, &#x27;71300&#x27;, &#x27;France&#x27;);INSERT INTO `suppliers` VALUES (28, &#x27;Gai pâturage&#x27;, &#x27;Bat. B 3, rue des Alpes&#x27;, &#x27;Annecy&#x27;, NULL, &#x27;74000&#x27;, &#x27;France&#x27;);INSERT INTO `suppliers` VALUES (29, &#x27;Forêts d\\&#x27;érables&#x27;, &#x27;148 rue Chasseur&#x27;, &#x27;Ste-Hyacinthe&#x27;, &#x27;Québec&#x27;, &#x27;J2S 7S8&#x27;, &#x27;Canada&#x27;);COMMIT;SET FOREIGN_KEY_CHECKS = 1;\n十三、总结\n\n\n","categories":["大数据"],"tags":["数据操作","SQL","数据库"]},{"title":"Typecho创建","url":"/post/typechocreate.html","content":"在写完Halo博客搭建后，决定再记录一下主站typecho博客的搭建过程。typecho是一款轻量化博客程序，系统内存占用少，性能良好，搭建方便，操作简单。在多年前就是口碑良好的博客程序。遗憾的是在2017年就已经停止更新了（似乎又恢复更新了），并且缺点是所有插件需要自己安装，主题切换不保存设置数据，且不支持在博客页面编辑主题信息，编写文章时没有预览功能等。但是非常节省内存资源，加上宝塔面板占用才200-300M，相比之下Halo就需要800M左右的空间来保证运行，在Haxio白嫖的Kvm的机器内存非常(没)好用(钱)，只是内存只有可怜的450M，用来做typecho再合适不过（随便玩玩，随时寄），毕竟是原生IP，只是用来做节点有点浪费。\n注意，虚拟化方式为Openvz的vps建议先开启tun，以hax为例（hax账号注册需要tg账号，搜索HAX_bot得到id，在登录页面输入id后，bot会发送一串校验码，复制到登录页内重置密码即可，这里不过多赘述），登录后点击Poweroff &amp; Restart VPS\n\n点击Enable TUN，然后在终端输入 cat /dev/net/tun，显示in bad state或者Finalshell显示文件处于错误的描述阶段就表示开启成功（halo博客文中已提及）\n安装宝塔面板\n请保证是纯净的系统，未安装任何环境\nyum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh\ntypecho博客之所以简单在于基本只需要这一行代码即可完成博客部署\n具体步骤Halo文中已经写过\n安装LNMP套件，PHP版本请选择7.2（typecho最高支持7.2）\n一键部署\n在软件商店-宝塔插件内安装宝塔一键部署源码\n\n点击设置，选择博客，点击typecho一键部署\n\n输入域名之后很快，会弹出MySQL的账号和密码,复制好保存备用（halo博客使用的是H2 Database，所以LNMP套件可以不安装MySQL及其相关）\n\n点击网站，在创建好的域名后点击设置，设置伪静态，选择typecho模板并保存\n\n主题和插件上传\n保存完点击网站目录-usr-themes，上传自己喜欢的主题，网站目录-usr-plugins上传插件。这里提供两个typecho主题和插件的下载网站1站和2站，建议上传压缩包上传后解压，不然上传速度很慢\n\n使用域名访问博客并进行初始化，输入之前保存的数据库信息，设置后台访问的账号密码，安装成功\n\n\n进入主页即可撰写文章，更换主题，安装插件\n\n这里提供一个有众多live2d看板娘模型的网站，推荐的其他插件有代码高亮，动态线条聚合等，需要数学公式的请在footer.php中手动添加mathjax（或Katex），具体方式自行搜索\n&lt;script type=&quot;text/x-mathjax-config&quot;&gt;    MathJax.Hub.Config(&#123;      extensions: [&quot;tex2jax.js&quot;],      jax: [&quot;input/TeX&quot;, &quot;output/HTML-CSS&quot;],      tex2jax: &#123;        inlineMath:  [ [&quot;$&quot;, &quot;$&quot;],  [&quot;\\(&quot;,&quot;\\)&quot;] ],        displayMath: [ [&quot;$$&quot;,&quot;$$&quot;], [&quot;\\[&quot;,&quot;\\]&quot;] ],        processEscapes: true      &#125;,      &quot;HTML-CSS&quot;: &#123; availableFonts: [&quot;TeX&quot;] &#125;    &#125;);  &lt;/script&gt;  &lt;script type=&quot;text/javascript&quot;     src=&quot;http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&quot;&gt;  &lt;/script&gt;\n开启ssl\n详情请见Halo\nlets encrypt申请失败的话可以自行去阿里云/腾讯云申请后粘贴到其他证书内\n关于开启代理后的问题\n开启cf代理的目的是使只有IPv6地址的服务器能够被纯IPv4访问\ncf代理开启方式\ntypecho在开启代理后请不要在宝塔面板打开强制https，第二点是打开代理后博客后台可能会出现无法登录的情况，点登录后仍然返回登录界面，因为本地没有开启强制https导致cf cdn重定向错误无法登录typecho后台\n这时候需要在网站目录的config.inc.php的代码注释过后（大约第9-10行）加入\ndefine(&#x27;__TYPECHO_SECURE__&#x27;,true);\n\n更多功能还请读者自行探索，文章若有错误还望大佬评论区告知谢谢\n","categories":["旧日"],"tags":["blog","nginx","vps"]},{"title":"Halo创建","url":"/post/halocreate.html","content":"本文将对VPS使用Docker容器搭建Halo博客的一般方式作简述（小白的逐步操作），大致分为\n\n安装Docker引擎\n创建容器\n拉取Halo镜像\n安装nginx并配置反向代理\n开启SSL\n创建，美化博客页面\n\n搭建Halo博客需要VPS服务器一台（最低配置要求1C1G，docker本身占用就接近400M的Ram，至于核心一般来说1核就够了），域名1个，搭建完就吃灰的决心。\n如果购买的是虚拟化方式为Openvz的服务器请先前往运营商处开启tun，然后在终端输入 cat /dev/net/tun，显示in bad state或者Finalshell显示文件处于错误的描述阶段就表示开启成功了，不过应该没人买Ovz的机器，除了像我这样从Hax白嫖的\n首先使用Finalshell/Xshell或者命令行（ssh root@）连接上购买服务器的IP地址\n依赖安装与配置\n安装Docker引擎\n参考：Docker官方文档\n\n常见系统的安装都有，本文只介绍最简单的安装过程，可选步骤请移步官方文档\n1.安装utils包\nyum install -y yum-utils\n2.设置仓库\nyum-config-manager \\    --add-repo \\    https://download.docker.com/linux/centos/docker-ce.repo\n3.安装docker引擎\nyum install docker-ce docker-ce-cli containerd.io\n4.启动docker\nsystemctl start docker\nsystemctl enable docker.service//设置docker开机自启动\ndocker自启动的设置可选择不执行，博主的服务器在执行自启动后nginx会出现异常导致网站无法正常访问，如果执行后无法使用域名访问博客可以关闭自启动（enable改为disable)reboot可解决\n*5.拉取测试镜像(可选)\ndocker run hello-world//拉取hello-world测试docker是否正常运行，一般都是正常，可以不用操作\n安装过程出现的询问操作输入y即可，第三步安装引擎时有个指纹校对可以对比一下，一般都是吻合的\n060A 61C5 1B55 8A7F 742B 77AA C52F EB6B 621E 9F35\n使用 Docker 部署 Halo\n参考：官方文档\n安装完毕就可以使用docker部署halo了，按照官方文档操作\n1.创建工作目录\nmkdir ~/.halo &amp;&amp; cd ~/.halo\n2.下载示例配置文件到工作目录\nwget https://dl.halo.run/config/application-template.yaml -O ./application.yaml\n*3.编辑配置文件，配置数据库或者端口等，如需配置请参考官方文档(可选)\nvim application.yaml\n4.拉取最新的 Halo 镜像\ndocker pull halohub/halo:1.4.17//截至本文发布halo的最新版本为1.4.17，访客可自行前往官网查询最新版本或者将版本号改为latest\n纯IPv6机器请先修改DNS否则无法解析echo &quot;nameserver 2a00:1098:2b::1&quot; &gt; /etc/resolv.conf\n5.创建容器\ndocker run -it -d --name halo -p 8090:8090 -v ~/.halo:/root/.halo --restart=unless-stopped halohub/halo:1.4.17//注意版本号\n对创建容器的部分代码作解释\n第一个8090表示本地的端口映射到第二个halo上的8090端口，第一个可以更改为任意没有被占用的端口，第二个不可更改。更改端口可以在一台服务器上安装多个halo博客，阿里云/腾讯云等开启了安全组的云服务器商请先在服务商控制面板处开启端口放行80，443等常用端口以及halo映射的端口\n-it： 开启输入功能并连接伪终端-d： 后台运行容器-name： 为容器指定一个名称-p： 端口映射，格式为 主机(宿主)端口:容器端口 ，可在 application.yaml 配置。-v： 工作目录映射。形式为：-v 宿主机路径:/root/.halo，后者不能修改。-restart： 建议设置为 unless-stopped，在 Docker 启动的时候自动启动 Halo 容器。其它设置： no\t       不自动重启容器. (默认value) on-failure    容器发生error而退出(容器退出状态不为0)重启容器 unless-stopped \t在容器已经stop掉或Docker stoped/restarted的时候才重启容器 always     在容器已经stop掉或Docker stoped/restarted的时候才重启容器完成后等待片刻（finalshell中cpu占有降低时），halo博客就部署完成了，此时就可以使用http://ip:端口号 的形式即可看到安装引导界面，不过建议配置好反向代理后再初始化博客。\n安装nginx并配置反向代理\n源码安装\n方法1使用的是源码安装nginx，目录/etc/nginx如果有需要LNMP套件的可以使用以下代码安装\nwget http://soft.vpser.net/lnmp/lnmp1.8.tar.gz -cO lnmp1.8.tar.gz &amp;&amp; tar zxf lnmp1.8.tar.gz &amp;&amp; cd lnmp1.8 &amp;&amp; ./install.sh lnmp\n安装目录Nginx 目录: /usr/local/nginx/MySQL 目录 : /usr/local/mysql/MySQL数据库所在目录：/usr/local/mysql/var/PHP目录 : /usr/local/php/默认网站目录 : /home/wwwroot/default/Nginx日志目录：/home/wwwlogs/LNMP软件配置文件路径Nginx主配置(默认虚拟主机)文件：/usr/local/nginx/conf/nginx.conf添加的虚拟主机配置文件：/usr/local/nginx/conf/vhost/域名.confMySQL配置文件：/etc/my.cnfPHP配置文件：/usr/local/php/etc/php.iniphp-fpm配置文件：/usr/local/php/etc/php-fpm.conf\\#重启服务让配置生效lnmp &#123;nginx|mysql|mariadb|php-fpm|pureftpd&#125; restart\\#或者直接重启LNMP：lnmp restart\n1.添加 Nginx 源\nrpm -Uvh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm\n2.安装 Nginx（CentOS）\nyum install -y nginx\n3.启动 Nginx\nsystemctl start nginx.service\n4.设置开机自启 Nginx\nsystemctl enable nginx.service\nUbuntu系统nginx安装方式\nsudo updatesudo apt install nginx\n5.下载 Halo 官方的 Nginx 配置模板到本地\ncurl -o /etc/nginx/conf.d/halo.conf --create-dirs https://dl.halo.run/config/nginx.conf\nnginx若出现启动失败，通常是80端口被占用，查看与80相关的端口\nnetstat -lnp|grep 80\\# 命令无法使用请先输入下面代码安装yum -y install net-tools\n在找到80端口的占用后杀死对应的进程号，如果仍然启动失败可尝试多杀几次\nkill -9 进程号systemctl restart nginx//重启nginx\n如果使用yum拉取镜像安装nginx，nginx一般安装在/usr/local/nginx/conf/nginx.conf文件夹中，宝塔面板则是在/www/server/panel/vhost/nginx/conf/nginx.conf使用下面的代码无法直接配置nginx，而是会创建一个新的目录存放halo.conf，需要建立软连接（请自行搜索方法）或在nginx安装目录中找到nginx.conf，在http{}中添加\ninclude /etc/nginx/conf.d/halo.conf\n或者其他自定义的路径，保证正确即可\n6.使用vi/vim编辑halo.conf应用nginx配置，或者使用finalshell等其他工具对文件进行编辑\nvim /etc/nginx/conf.d/halo.conf//如果vim提示命令不存在可使用vi,配置完毕后按下esc键输入 :wq 退出并保存\n模板文件打开后格式为\nupstream halo &#123;  server 127.0.0.1:8090;//更改为你的服务器ip以及设置的端口&#125;server &#123;  listen 80;  listen [::]:80;  server_name xxx.xx;//你的域名  client_max_body_size 1024m;  location / &#123;    proxy_pass http://halo;    proxy_set_header HOST $host;    proxy_set_header X-Forwarded-Proto $scheme;    proxy_set_header X-Real-IP $remote_addr;    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  &#125;&#125;\n配置完后使用nginx检查是否含有错误\nnginx -t\n出现successfully时，表示配置文件无误，重新载入nginx即可使用域名访问博客\nnginx -s reload\n至此，源码安装的方式部署完成。\n使用宝塔面板安装nginx\n方法2是使用宝塔帮助安装web服务器，优点是可视化，操作简单，首先安装宝塔面板\nyum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh\n期间出现的询问都输入y\n安装完毕后会提示默认端口8888和用户名密码，没有弹出的话输入bt default\n外网面板地址: http://*****:****/*****内网面板地址: http://***.**.**.**:****/******以下仅为初始默认账户密码，若无法登录请执行bt命令重置账户/密码登录username: ******password: ****\n此时访问外网面板登录会提示绑定宝塔账号，博主个人不太接受这种强制绑定的方式（不介意的跳过下面这步），所以在网上搜集了解除的方法。目前宝塔面板最新版为7.8，暂时还没有破解方式，现在的思路是降级到7.7。\n最新消息，使用破解版宝塔面板7.8的服务器都将被查封，并且拉黑IP，即该服务器将永远无法安装宝塔面板，读者请量力而行，7.7暂时安全\ncurl -sSO https://raw.githubusercontent.com/zhucaidan/btpanel-v7.7.0/main/install/install_panel.sh &amp;&amp; bash install_panel.shsed -i &quot;s|bind_user == &#x27;True&#x27;|bind_user == &#x27;XXXX&#x27;|&quot;/www/server/panel/BTPanel/static/js/index.jsrm -f /www/server/panel/data/bind.pl\n此时访问已不再提示登录，并在首页弹出Linux套件安装，选择LNMP推荐的（nginx-php-mysql-apache）一键安装即可，经过漫长的等待（约20-30min）依赖环境都安装完毕。\n点击网站添加站点，填上主域名（不可泛解析），次域名（选填），网站备注\n\n然后点击设置，选择反向代理，根据面板的提示键入信息即可完成反向代理\n\n或者选择配置文件，按照方法1中配置的方式，在配置文件49-61使用ctrl+/注释掉，然后在62行{}添加相应的信息（使用面板的反向代理只能反代一个halo博客，添加新的反向代理会覆盖之前的配置–貌似）\n使用宝塔辅助nginx反代配置完成\n location / &#123;  proxy_pass http://127.0.0.1:8090/;  rewrite ^/(.*)$ /$1 break;  proxy_redirect off;  proxy_set_header Host $host;  proxy_set_header X-Forwarded-Proto $scheme;  proxy_set_header X-Real-IP $remote_addr;  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  proxy_set_header Upgrade-Insecure-Requests 1;  proxy_set_header X-Forwarded-Proto https;&#125;\n开启SSL，启用https访问\n配置完反向代理后，已经可以使用域名访问博客，但浏览器显示的是网站不安全，因为没有受信任的证书，此时是http明文与主机传输数据，需要申请ssl证书上传并验证通过才能启用https。\nssl证书可以在阿里云、腾讯云，Cloudflare，acme.sh、certbot申请，\n其中阿里云和腾讯云免费申请的是1年有效的亚洲诚信颁发的证书，Cloudflare免费申请的是一年有效的边缘证书或最高15年有效的cf自签名证书，acme.sh和certbot免费申请的是3个月Let’s Encrypt证书（可自动续期，但可能失败），有需要也可以在这些平台购买付费证书，安全性更高，并且有专人帮你安装（价格不菲）\n如果上一步使用的是宝塔面板辅助安装的，可以直接在网站页面点击ssl部署，选中域名一键申请，宝塔就会自动申请证书并帮你完成部署，再点击右上角的强制https就实现了https访问，此时网站已变成受信任状态（如果在DNS服务商处已经开启了强制https请不要点击，会导致重定向次数过多无法正常访问），或者已经拥有其他平台的证书，点击其他证书，把公钥和私钥内容粘贴进去即可\n\n阿里云和腾讯云请在控制台搜索ssl申请证书，关于其他平台证书的申请方式请自行搜索，本文只介绍证书的导入和安装，其中cf的自签名证书只会显示一次，没有保存就找不到了，证书的格式为.pem，腾讯云的为.crt（貌似也有pem），密钥格式为.key\n证书下载到本地后，使用FTP上传到服务器（不知道怎么使用的自行搜索）或者使用Finalshell进行上传，上传完成后打开之前配置的halo.conf，启用ssl，打开443端口监听\nupstream halo &#123;  server 127.0.0.1:8090;&#125;server &#123;  listen 80;  listen [::]:80;  listen 443 ssl;  server_name ****.**;//多个域名请加 , 后继续输入  client_max_body_size 1024m;ssl_certificate /crt/certificate.pem;//证书上传的存放路径ssl_certificate_key /crt/privatekey.key;//密钥上传的存放路径ssl_session_timeout 5m;ssl_protocols TLSv1 TLSv1.1 TLSv1.2;//启用的tls版本，建议不要开启tls v1，存在漏洞，最新版本为v1.3ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;//加密方式ssl_prefer_server_ciphers on;//开启加密  location / &#123;     proxy_pass http://halo;     proxy_set_header HOST $host;     proxy_set_header X-Forwarded-Proto $scheme;     proxy_set_header X-Real-IP $remote_addr;     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  &#125;&#125;\n检查规则，重新加载nginx\nnginx -tnginx -s reload\n检查ssl是否正常开启，出现ssl xxx的就代表开启成功\necho|openssl s_client -connect 127.0.0.1:443 -servername sslconfigure.certqa.cn 2&gt;/dev/null\n如果没有请检查防火墙是否拦截，宝塔面板用户请进入安全页面放行443端口\nfirewall-cmd --state//检查防火墙开启状态firewall-cmd –zone=public –add-port=443/tcp –permanent//放行443端口\n完成以上步骤，就可以使用https访问博客了\n*IPV6 Only的服务器如何能让IPV4 Only的网络访问\n一些廉价服务器只提供IPV6的公网地址（IPV4公网地址太少了得加钱），导致只有IPV4网络的用户无法访问。而IPV 4 to 6的隧道部署又相对较为繁琐，这里博主采用cf的CDN代理来解决\n\n打开cloudflare，添加站点,将cf提供的两个地址填入域名注册商的名称服务器，等待生效后打开添加的站点，点击DNS输入IP地址以及解析形式，小云朵代理状态选择开启\n\n打开始终使用https（宝塔面板的记得关闭），最低tls版本选择1.1，打开随机加密，此时只有IPV4的网络经过cf代理也能成功访问博客（貌似不上传证书和配置ssl，只打开代理也能实现https访问，感兴趣的读者可自行尝试），但服务器仍然无法访问仅IPV4的资源，需要IPV 6 to 4隧道/NAT地址转换或者安装warp以实现，这里不再赘述。\n博客美化\n使用 域名/admin 访问博客，完成初始化操作并登录后台\n\n\n打开面板后可以看到各种博客数据，非常简洁，而且面板样式也很简约但又没有过分固化，个人是挺喜欢的，非常适合只想安心写博客的朋友，不过默认的网站外观不太好看，可以前往Halo官方的主题仓库选择自己喜欢的外观，点击面板的外观页面，点击安装选择安装包安装或远程安装（推荐安装包安装），~~本人使用的是大佬移植Wordpress的Sakura主题，如有使用该主题的，~~博客外观设置可以参考LIlGG的操作指南\n\n外观设置完毕后可以在页面栏选择新建页面用于在博客内分栏展示，在外观的菜单栏中可以添加独立页面的小图标，Sakura主题支持Font Awesome图标，各图标样式可以点击查看和Font Awesome v6，另外可以对图标增加的动态效果代码可以查看。具体使用方法实示例\nfa fa-bank faa-tada//银行图标，放大旋转特效\n\n然后点击用户栏，设置个人资料包括用户名，昵称，邮箱，以及更改密码都在这个页面\n最后点击系统栏-博客设置添加网站的logo和favicon（浏览器标签页图标）还有页脚信息，可用于添加统计代码（访客数量，网站运行时间等，但貌似只能添加一个）如有需要添加api服务的可以点击高级选项进行设置\n自建的一言api\n\n仍然有改造主题需要的可以点击外观栏的主题编辑进行修改]16\n一般对footer和header进行更改即可，具体方式和更多有趣的内容还请自行探索\n以上就是halo博客从创建到美化的全过程了，本人小白，折腾这个博客也是花了不少时间，故理清流程后将其记录，如本文有错漏之处，还请大佬可以在评论区留言谢谢!\n","categories":["旧日"],"tags":["blog","nginx","vps"]},{"title":"数字跑表","url":"/post/4a12443.html","content":"一、课程设计的地位与任务\n《系统设计与仿真课程设计》是电子信息、通信工程专业安排的必修的一门电子电路综合技能训练课程。通过本课程的学习，使同学们掌握常用电子元器件的应用，熟练掌握模拟集成电路、数字集成电路、单片机集成电路的设计方法与应用；理解中规模、大规模集成电路的可靠性设计的概念和方法，学会电子产品的系统设计方法，为学习智能仪器等后续课程和专业技术工作打下良好的基础。\n二、课程设计的基本内容和要求\n第一部分： EDA技术仿真\n用Verilog HDL语言设计如下数字电路，并仿真验证：\n1. 多人表决器\n设计1个多人表决器，同意为1，不同意为0，同意者过半则表决通过，指示灯亮，否则指示灯灭。表决人数和描述方式自行选择。\nmodule vote7(input [7:1] vote,output reg pass);reg [2:0] sum;integer i;always@(vote)begin sum=0;for(i=1;i&lt;=7;i=i+1)if(vote[i]) sum=sum+1;if(sum[2]) pass=1;else pass=0;endendmodule\n7人表决器，大于4人通过(0100)\n激励文件\nmodule tb_vote7();reg [7:1] vote;wire pass;vote7 i1(.pass(pass),.vote(vote));initial beginvote=7&#x27;b1110001;#50 vote=7&#x27;b1100000;#50 vote=7&#x27;b1101101;  #50 $finish;endendmodule\n2. 流水灯控制器\n流水灯控制器包含三个输入端口：时钟端，使能端和清零端。\n采用有限状态机实现流水灯控制器，控制LED灯实现多种花型.\n\n从左到右依次逐个点亮，全灭；\n从两边往中间逐个亮，全灭；\n循环执行上诉过程。\n学生选定题目后，查找相关资料，熟悉课程题目的方向和设计要求与具体基本指标，确定可行的方案。首先进行在仿真软件，得出正确合理的仿真结果；然后进行下载和调试，最后运行其实现的功能。在基本的功能上，学生可以自我扩展电路功能，创新设计效果，完善电路实现功能。\n\nmodule flow(clk,clr,led,rst);input clk,clr,rst;output reg [7:0] led;integer i;always@(posedge clk)begin if(!rst) begin led&lt;=8&#x27;h00;endif(!clr) begin led&lt;=8&#x27;h80;i&lt;=4&#x27;b0000;endelsebegin case(i)4&#x27;b0000:begin led&lt;=8&#x27;h80;i=4&#x27;b0001;end4&#x27;b0001:begin led&lt;=8&#x27;h40;i=4&#x27;b0010;end4&#x27;b0010:begin led&lt;=8&#x27;h20;i=4&#x27;b0011;end4&#x27;b0011:begin led&lt;=8&#x27;h10;i=4&#x27;b0100;end4&#x27;b0100:begin led&lt;=8&#x27;h08;i=4&#x27;b0101;end4&#x27;b0101:begin led&lt;=8&#x27;h04;i=4&#x27;b0110;end4&#x27;b0110:begin led&lt;=8&#x27;h02;i=4&#x27;b0111;end4&#x27;b0111:begin led&lt;=8&#x27;h01;i=4&#x27;b1000;end4&#x27;b1000:begin led&lt;=8&#x27;h00;i=4&#x27;b1001;end4&#x27;b1001:begin led&lt;=8&#x27;h81;i=4&#x27;b1010;end4&#x27;b1010:begin led&lt;=8&#x27;h42;i=4&#x27;b1011;end4&#x27;b1011:begin led&lt;=8&#x27;h24;i=4&#x27;b1100;end4&#x27;b1100:begin led&lt;=8&#x27;h18;i=4&#x27;b1101;end4&#x27;b1101:begin led&lt;=8&#x27;h00;i=4&#x27;b0000;endendcaseendendendmodule\n这里使用16进制表示灯的花型，使用顺序编码编号状态，状态编码也可采用格雷码等实现，花型可采用一位热码编码、约翰逊编码，8421BCD等实现\n激励文件\nmodule tb_flow();parameter DELY=20;reg clk;reg clr;reg rst;wire[7:0] led;flow i1(    .clk(clk),    .clr(clr),    .rst(rst),    .led(led));initial beginclk=1&#x27;b0;clr=1&#x27;b0;rst=1&#x27;b1;#(DELY*2) clr=1&#x27;b1;endalways begin#(DELY/2) clk=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\x7eclk;endendmodule\n第二部分：综合设计\n综合设计分二部分的内容：CPLD/FPGA仿真设计。综合题目有5个，学生可以自行选择其中一个题目进行，也可以自己拟订题目，但必须征得指导老师的同意方能进行。学生选定题目后，查找相关资料，熟悉课程题目的方向和设计要求与具体基本指标，确定可行的方案。在基本的功能上，学生可以自我扩展电路功能，创新设计效果，完善电路实现功能。\n1、 基于Verilog HDL数字频率计的设计\n技术要求：\n\n频率测量范围：     10hz—1Mhz\n测量分辨率：       1hz\n测量误差：         ±1\n测量显示：         6位数码管显示\n设计任务：\n说明设计具体思路。\n画出系统模块框图。\n画出系统顶层原理图。\n按设计技术要求编写程序。\n画出系统功能仿真波形图。\n设计出硬件实现电路图，下载测试。\n完成课程设计报告一份。\n\n2、 基于Verilog HDL数字交通灯的设计\n技术要求：\n交通灯的基本工作状态：\n\n(主干道)绿灯：车辆前行；\n(次干道）红灯：禁止通行；\n(主干道)黄灯：过渡状态；\n(主干道)红灯：禁止车辆通行；\n(次干道)绿灯：车辆前行。\n● 注：红黄绿等均为前行方向的信号指示灯。\n设计任务：\n说明设计具体思路。\n画出系统模块框图。\n画出系统顶层原理图。\n按设计技术要求编写程序。\n画出系统功能仿真波形图。\n设计出硬件实现电路图，下载测试。\n完成课程设计报告一份。\n\n3、 基于Verilog HDL数字钟的设计\n技术要求：\n\n该时钟具有校准时间、闹铃、整点报时等功能。\n秒表至少有3个输入端，分别为时钟输入、校准信号、复位按键，也可以考虑一些扩展功能。\n秒、分钟信号、小时采用BCD码计数方式。\n设计任务：\n说明设计具体思路。\n画出系统模块框图。\n画出系统顶层原理图。\n按设计技术要求编写程序。\n画出系统功能仿真波形图。\n设计出硬件实现电路图，下载测试。\n完成课程设计报告一份。\n\n4、 基于Verilog HDL数字跑表的设计\n设计任务：设计一个以0.01s为基准计时信号的实用数字式跑表\n技术要求：\n\n跑表计时显示范围0.01s-59min59.99s，计时精度为10ms。\n具有清零、启动计时、暂停计时功能。\n时钟源误差不超过0.01s。\n设计任务：\n说明设计具体思路。\n画出系统模块框图。\n画出系统顶层原理图。\n按设计技术要求编写程序。\n画出系统功能仿真波形图。\n设计出硬件实现电路图，下载测试。\n完成课程设计报告一份。\n\n5、 基于Verilog HDL 汽车尾灯控制器的设计\n设计任务：汽车尾灯控制器\n技术要求：\n\n正常行驶时，指示灯不亮；\n刹车时，指示灯亮；\n左转时，左侧的一盏灯闪烁，亮1s，灭1s；\n右转时，右侧的一盏灯闪烁，亮1s，灭1s；\n发生故障和事故时，双侧的灯都闪烁，亮0.5s，灭0.5s；\n设计任务：\n说明设计具体思路。\n画出系统模块框图。\n画出系统顶层原理图。\n按设计技术要求编写程序。\n画出系统功能仿真波形图。\n设计出硬件实现电路图，下载测试。\n完成课程设计报告一份。\n\n这里我选择的是数字跑表设计\n在完成基本功能后添加了从当前时间开始倒计时，60秒倒计时，每计时1分钟短暂蜂鸣，倒计时结束持续蜂鸣功能\n\n`timescale 1ns / 1ps//////////////////////////////////////////////////////////////////////////////////module chronograph(input   clk,pause,reset,reversal,cnt,    output  reg[3:0] bai1,bai2,miao1,miao2,fen1,fen2,buzzer=0);//buzzer蜂鸣不用4位寄存器，懒得另外写了  always @(posedge clk, posedge reset)//百分秒计时if(!reversal)    begin        if(reset)begin bai1&lt;=0;bai2&lt;=0; end  //复位信号               //else if(pause);//begin bai1&lt;=bai1;a&lt;=bai1;end        else if(!pause)            begin   if(bai2==9&amp;&amp;bai1==9) begin bai2&lt;=0;bai1&lt;=0;miao1&lt;=miao1+1; end   //百分秒计满后秒进位                    else begin                        if(bai1==9) begin bai1&lt;=0;bai2&lt;=bai2+1;end  //百分秒第一位进位                        else begin bai1&lt;=bai1+1;end                                             end            end    endelse if(reversal)  //倒计时begin        if(reset)begin bai1&lt;=0;bai2&lt;=0; end//复位        else if(!pause&amp;&amp;cnt==0)//从当前时间倒计时            begin   if(bai2==0&amp;&amp;bai1==0&amp;&amp;miao1&gt;0) begin bai2&lt;=9;bai1&lt;=9;miao1&lt;=miao1-1; end                     else if(bai2==0&amp;&amp;bai1==0&amp;&amp;miao1==0&amp;&amp;miao2&gt;0)begin miao1&lt;=9;bai1&lt;=9;bai2&lt;=9;miao2&lt;=miao2-1;end//代码有瑕疵，其实还有别的情况，但是懒得改了，功能基本完成                    else begin//同正常计时的逆向                        if(bai1==0&amp;&amp;bai2&gt;0) begin bai1&lt;=9;bai2&lt;=bai2-1;end                        else if(bai2==0&amp;&amp;bai1==0&amp;&amp;miao1==0);                        else begin bai1&lt;=bai1-1;end                                             end            end               else if(!pause&amp;&amp;cnt)            begin fen2&lt;=0;fen1&lt;=0;miao2&lt;=6;miao1&lt;=0;bai2&lt;=0;bai1&lt;=0;endendelse if(reset)begin bai1&lt;=0;bai2&lt;=0; endalways @(bai1,bai2,pause,reset)//秒计时，基本和百分秒相同if(!reversal)                               begin        if(reset)begin miao1&lt;=0;miao2&lt;=0;end                        //else if(pause);//begin miao1&lt;=miao1;end        else if(!pause)            begin   if(miao2==5&amp;&amp;miao1&gt;9) begin miao2&lt;=0;miao1&lt;=0;fen1&lt;=fen1+1;  end                    else begin                        if(miao1&gt;9) begin miao1&lt;=0;miao2&lt;=miao2+1;end                        end                        if(miao1==9&amp;&amp;miao2==5&amp;&amp;bai1==9&amp;&amp;bai2==9) buzzer&lt;=1;//在每次计时到59秒99时短暂蜂鸣                        else buzzer&lt;=0;            end               endelse if(reversal)                               begin        if(reset)begin miao1&lt;=0;miao2&lt;=0;end        else if(!pause&amp;&amp;cnt==0)            begin   if(miao2==0&amp;&amp;miao1==0&amp;&amp;(fen1&gt;0||fen2&gt;0)) begin miao2&lt;=5;miao1&lt;=9; bai2&lt;=9;bai1&lt;=9;fen1&lt;=fen1-1;  end                    else begin                        if(miao1==0&amp;&amp;miao2&gt;0) begin miao1&lt;=9;miao2&lt;=miao2-1;end                        if(miao1==0&amp;&amp;miao2==0&amp;&amp;bai1==0&amp;&amp;bai2==0) buzzer&lt;=1;//倒计时结束后持续蜂鸣，可能还要加上分也等于0？                        else buzzer&lt;=0;                        end            end            else if(!pause&amp;&amp;cnt)            begin fen2&lt;=0;fen1&lt;=0;miao2&lt;=6;miao1&lt;=0;bai2&lt;=0;bai1&lt;=0;end//cnt信号表示进行60秒倒计时    end else if(reset)begin miao1&lt;=0;miao2&lt;=0;endalways @(miao1,miao2,pause,reset)//分计时if(!reversal)         begin        if(reset)            begin fen1&lt;=0;fen2&lt;=0;end                                    //else if(pause);//begin fen1&lt;=fen1;end        else if(!pause)            begin   if(fen2==5&amp;&amp;fen1&gt;9)begin fen2&lt;=0;fen1&lt;=0;end                    else begin                        if(fen1&gt;9)begin  fen1&lt;=0; fen2&lt;=fen2+1;end                        end            end    endelse if(reversal)       begin        if(reset)begin fen1&lt;=0;fen2&lt;=0;end        else if(!pause&amp;&amp;cnt==0)            begin if(fen1==0&amp;&amp;fen2&gt;0)begin  fen1&lt;=9;miao2&lt;=5;miao1&lt;=9; bai2&lt;=9;bai1&lt;=9;fen2&lt;=fen2-1;end                                   end    end    else if(!pause&amp;&amp;cnt)            begin fen2&lt;=0;fen1&lt;=0;miao2&lt;=6;miao1&lt;=0;bai2&lt;=0;bai1&lt;=0;endelse if(reset) begin fen1&lt;=0;fen2&lt;=0;endendmodule\n激励文件\n`timescale 1ns / 1ps//////////////////////////////////////////////////////////////////////////////////module tb_chronograph();reg clk,pause,reset,reversal,cnt;wire [3:0] bai1,bai2,miao1,miao2,fen1,fen2,buzzer;chronograph i1(        .clk(clk),        .pause(pause),        .reset(reset),        .bai1(bai1),        .bai2(bai2),        .miao1(miao1),        .miao2(miao2),        .fen1(fen1),        .fen2(fen2),        .reversal(reversal),        .cnt(cnt),        .buzzer(buzzer)        );initial begin    clk = 1;reset = 1;pause = 0;reversal=0;cnt=0;#1;reset = 0;#5;pause = \\x7epause;//时延可以设置为相同，之前以为这个数字是连续的正常时间才把间隔越搞越大，实际上就是时间间隔#10;pause = \\x7epause;#15;pause = \\x7epause;#20;pause = \\x7epause;#3000;reset=0;reversal=1;#7000;reversal=0;#15000;reset=0;reversal=1;cnt=1;#15010;cnt=0;endalways begin    #1 clk=\\x7eclk;endendmodule\n仿真波形图\n\n基础计时 重置时间和暂停功能\n\n从当前时间倒计时\n\n正常计时至59秒99时短暂蜂鸣\n\n倒计时状态下计时结束持续蜂鸣\n\n60秒信号停止输入且倒计时信号继续输入开始从60秒倒计时\n\n取消倒计时后正常计时停止蜂鸣\n\n倒计时和60秒信号同时触发60秒倒计时未设置上升沿触发导致不同步\n\n整体情况\n一次比较简单的课程设计，主要考察Verilog HDL的基础运用，时间原因未设计编译码模块并连接开发板测试实际效果，文章如有错误还望指出！\n","categories":["旧日"],"tags":["电子","Verilog"]},{"title":"小记数字图像处理","url":"/post/fbbe638c.html","content":"数字图像处理第3章图像增强\n若数学公式加载失败，请移步主站\nγ校正\n非线性部件的输人-输出特性，都是一个能够反映各自特性的幂函数，即如果输人的光信号强度为L,输出的电信号强度为I,则输入、输出之间的关系满足\nI=c⋅LγI = c · L^γI=c⋅Lγ\nc为放大倍数（常数），γ为幂函数的指数，用于衡量非线性部件的转换特性，称为幂律转换特性，又称γ特性，对非线性关系的校正称为γ校正\n\n对比度计算公式\nC=∑δδ(i,j)2Pδ(i,j)C=\\sum_{\\delta}\\delta(i,j)^2P_\\delta(i,j)C=∑δ​δ(i,j)2Pδ​(i,j)\n计算方式有四近邻或八近邻，略\n线性对比度展宽\n线性对比度展宽处理，实际上是图像灰度值的线性映射。假设处理后图像与处理前图像的量化级数相同，即处理前后图像的灰度分布范围均为[0,255],则如果需要进行对比度展宽,从原理上说，只能通过抑制非重要信息的对比度来腾出空间给重要信息进行对比度的展宽。\n设原图像的灰度为 f(i,j),处理后图像的灰度为g(i, j),设原图重要景物灰度在[fa，fb]范围内，处理后灰度分布在[ga，gb]内，α&lt;1,γ&lt;1,表示对非重要景物的抑制，β&gt;1表示重要景物的对比度展宽增强。\n对比度线性展宽计算公式\ng(i,j)={αf(i,j),0≤f(i,j)&lt;faβ(f(i,j)−fa)+ga,fa≤f(i,j)&lt;fbγ(f(i,j)−fb)+gb,fb≤f(i,j)&lt;255g(i,j) =\n\\begin{cases}\n\\alpha f(i,j),  &amp; 0\\le f(i,j)\\lt f_a \\\\[2ex]\n\\beta(f(i,j)-f_a)+g_a, &amp; f_a\\le f(i,j)\\lt f_b \\\\[2ex]\n\\gamma(f(i,j)-f_b)+g_b, &amp;f_b\\le f(i,j)\\lt 255\n\\end{cases}\ng(i,j)=⎩⎨⎧​αf(i,j),β(f(i,j)−fa​)+ga​,γ(f(i,j)−fb​)+gb​,​0≤f(i,j)&lt;fa​fa​≤f(i,j)&lt;fb​fb​≤f(i,j)&lt;255​\n(i=1,2,…,m;j=1,2,…,n)\n其中，α=gafa,β=gb−gafb−fa,γ=255−gb255−gb\\alpha =\\frac{g_a}{f_a},\\beta =\\frac{g_b-g_a}{f_b-f_a},\\gamma =\\frac{255-g_b}{255-g_b}α=fa​ga​​,β=fb​−fa​gb​−ga​​,γ=255−gb​255−gb​​，图像的大小为m*n\n当得到一张矩阵形式的灰度图像时，若要进行线性对比度展宽，需先画出灰度直方图，确认原图重要景物的灰度分布范围fa，fb，根据需要确认处理后的灰度范围ga，gb，代入公式进行计算\n灰级窗与灰级窗切片\n灰级窗是将灰度值在一定范围内的目标进行对比度增强，使范围内像素映射到另一范围，使其达到分离图像区域（切片）以及高亮（映射）的效果，灰级窗映射计算公式\ng(i,j)={0,0≤f(i,j)&lt;faβ(f(i,j)−fa),fb≤f(i,j)&lt;fa0,fb≤f(i,j)&lt;255g(i,j) =\n\\begin{cases}\n0,  &amp; 0\\le f(i,j)\\lt f_a \\\\[2ex]\n\\beta(f(i,j)-f_a), &amp; f_b\\le f(i,j)\\lt f_a \\\\[2ex]\n0, &amp;f_b\\le f(i,j)\\lt 255\n\\end{cases}\ng(i,j)=⎩⎨⎧​0,β(f(i,j)−fa​),0,​0≤f(i,j)&lt;fa​fb​≤f(i,j)&lt;fa​fb​≤f(i,j)&lt;255​\n(i=1,2,…,m;j=1,2,…,n)\n其中，β=255fb−fa\\beta =\\frac{255}{f_b-f_a}β=fb​−fa​255​，图像的大小为m*n\n灰级窗切片计算公式\ng(i,j)={0,0≤f(i,j)&lt;fa255,fa≤f(i,j)&lt;fb0,fb≤f(i,j)&lt;255g(i,j) =\n\\begin{cases}\n0,  &amp; 0\\le f(i,j)\\lt f_a \\\\[2ex]\n255, &amp; f_a\\le f(i,j)\\lt f_b \\\\[2ex]\n0, &amp;f_b\\le f(i,j)\\lt 255\n\\end{cases}\ng(i,j)=⎩⎨⎧​0,255,0,​0≤f(i,j)&lt;fa​fa​≤f(i,j)&lt;fb​fb​≤f(i,j)&lt;255​\n(i=1,2,…,m;j=1,2,…,n)，图像的大小为m*n\n动态范围调整\n线性动态范围调整\n线性动态范围是先进行亮暗限幅，即将图像中黑的像素值调大,由0调整到a，白的像素值调小，由255调整到b。然后将区域[a,b]进行线性映射到[0,255]范围内。使一部分较暗的像素点以及较亮的像素点进入饱和，中间部分的像素值因为可以进行对比度扩展，而使得其细节部分看的更加清楚，结果是目标区域的像素得到增强，两边区域的细节丢失。线性动态范围调整公式\ng(i,j)={0,f(i,j)&lt;fa255b−a[f(i,j)−a],fa≤f(i,j)&lt;fb255,f(i,j)&gt;fbg(i,j) =\n\\begin{cases}\n0,  &amp; f(i,j)\\lt f_a \\\\[2ex]\n\\frac{255}{b-a}[f(i,j)-a], &amp; f_a\\le f(i,j)\\lt f_b \\\\[2ex]\n255, &amp;f(i,j)\\gt f_b\n\\end{cases}\ng(i,j)=⎩⎨⎧​0,b−a255​[f(i,j)−a],255,​f(i,j)&lt;fa​fa​≤f(i,j)&lt;fb​f(i,j)&gt;fb​​\n(i=1,2,…,m;j=1,2,…,n)，图像的大小为m*n,[a,b]为灰度变化范围\n非线性动态范围调整\n非线性动态范围调整的作用是抑制高亮度区域，扩展低亮度区域，一定程度解决了景物中高亮度区的信号掩盖暗区信号问题。\n非线性动态范围调整的计算公式\ng(i,j)=c · lg(1+f(i,j)) (i=1,2,…,m;j=1,2,…,n)\n首先计算灰度变化范围lg(灰度变化范围+1)\\frac{灰度变化范围}{lg(灰度变化范围+1)}lg(灰度变化范围+1)灰度变化范围​，再计算g(i,j)\n直方图均衡化\n对图像中像素个数多的灰度值进行展宽，对像素个数多的灰度值进行进行归并，设f(i,j),g(i,j)(i=1,2,…,M;j=1,2,…,N)分别为原图像和处理后图像图像的灰度变化范围为[0，255]，方法如下\n①求原图[f(i,j)]M∗N[f(i,j)]_{M*N}[f(i,j)]M∗N​的灰度直方图，设用256维的向量hfh_fhf​表示\n②由hfh_fhf​求原图的灰度分布概率，记作pfp_fpf​,则\npf(i)=1Nf⋅hf(i),i=0,1,2,…,255p_f(i)=\\frac{1}{N_f} · h_f(i), i=0,1,2,…,255\npf​(i)=Nf​1​⋅hf​(i),i=0,1,2,…,255\nNfN_fNf​=M*N,为图像的总像素个数\n③计算图像各个灰度值的累计分布概率，记作pap_apa​，则\npa(i)=∑k=0ipf(k),i=0,1,2,…,255pa(0)=0p_a(i)=\\sum_{k=0}^i p_f(k), i=0,1,2,…,255\np_a(0)=0\npa​(i)=k=0∑i​pf​(k),i=0,1,2,…,255pa​(0)=0\n④进行直方图均衡化计算处理后像素值g(i,j)=255 · pap_apa​(k)\n同态滤波\nf(x,y)=i(x,y) · r(x,y)\n两边取对数得lnf(x,y)=lni(x,y)+lnr(x,y)\n两边进行傅里叶变换得F(u,v)=I(u,v)+R(u,v)\n用频域滤波函数H(u,v)进行滤波得H(u,v)F(u,v)=H(u,v)I(u,v)+H(u,v)R(u,v)，Hf(u,v)=Hi(u,v)+Hr(u,v)H_f(u,v)=H_i(u,v)+H_r(u,v)Hf​(u,v)=Hi​(u,v)+Hr​(u,v)\n反变换到空域得hf(x,y)=hi(x,y)+hr(x,y)h_f(x,y)=h_i(x,y)+h_r(x,y)hf​(x,y)=hi​(x,y)+hr​(x,y)\n取指数得同态滤波图像\ng(x,y)=exp|hf(x,y)h_f(x,y)hf​(x,y)|=exp|hi(x,y)h_i(x,y)hi​(x,y)|=exp|hr(x,y)h_r(x,y)hr​(x,y)|\n伪彩色\n以上为数字图像处理（科学出版社）第3章给出的图像增强方法，附习题\n\n","categories":["旧日"],"tags":["图像处理","电子"]},{"title":"以太网和IP","url":"/post/ab626e9a.html","content":"摘要：局域网技术的概述，IP基本原理以及IP子网划分\n\n本期内容较为杂乱且基础，故列出以下大致目录\n\n早期以太网技术\n全双工与半双工\nMDI与MDIX\nCSMA/CD\n以太网流量控制\n现代以太网技术\nWLAN技术\nCSMA/CA\n广域网基本原理\n常见接口\nIP基本原理\n\n\n\n早期以太网技术\n\n\n\n名称\n速率\n介质类型\n最大线缆长度\n\n\n\n\n10BASE5\n10 Mbps\n粗同轴电缆\n500m\n\n\n10BASE2\n10 Mbps\n细同轴电缆\n200m\n\n\n10BASE-T\n10 Mbps\n双绞线\n100m\n\n\n\n以10BASE5为例，10表示传输速率最高为10Mbps，5表示最大线缆长度为500m，仍可使用中继器将其延长，但最大长度不超过2000m。10BASE-T为常见的网线\n\n集线器和中继器的工作方式都为半双工\n光纤的工作方式为全双工\n半双工指在同一时间两端只能发送或接受信号，全双工则能同时收发信号并且不会产生冲突。\nMDI和MDIX\n\n\n\n\n主机网卡(MDI)\n路由器以太口(MDI)\n交换机/集线器接入口(MDIX)\n交换机/集线器级连口（MDI）\n\n\n\n\n主机网卡(MDI)\n交叉线\n交叉线\n直连线\nN/A\n\n\n路由器以太口(MDI)\n交叉线\n交叉线\n直连线\nN/A\n\n\n交换机/集线器接入口(MDIX)\n直连线\n直连线\n交叉线\n直连线\n\n\n交换机/集线器级连口(MDI)\nN/A\nN/A\n直连线\n交叉线\n\n\n同类接口互连用交叉线，异类接口互连用直连线\n\n\n\n\n\n\n\nCSMA/CD\n目的：解决总线型拓扑结构中半双工的收发冲突\n工作机制：载波侦听-&gt;空闲-&gt;抢占-&gt;检测冲突-&gt;随即退避-&gt;退避期满，继续发送\n缺点：延迟高\n\n数据的发送方式：单播，组播，广播\n数据链路层的以太网流量控制（防止传输速率太快导致数据丢失）方式：在半双工线路上采用背压式流控，接收方反向发送电压信号制造冲突，使发送方停止发送：在全双工线路上采用802.3 PAUSE流控接收方向保留组播地址01-80-C2-00-00-01发送PAUSE帧，通知发送方停止发送\n\n现代以太网技术\n现代以太网采用交换机取代了中继器和集线器进行以太网拓扑，隔离冲突域，避免冲突域过大，进一步扩大物理连接范围，提高以太网带宽利用率，增加吞吐量，适应不同的速率和不同的双工状况。\nWLAN技术\n无线覆盖原则：蜂窝式覆盖。任意相邻区域使用无频率交叉的频道，如1、6、11频道；适当调整发射功率，避免跨区域同频干扰；蜂窝式无线覆盖实现无交叉频率重复使用\n\nCSMA/CA（载波侦听多点接入／避让机制）\n\n无线网络典型部署：热点覆盖、办公地点无线互联\n\n广域网基本原理\n目的：局域网主要完成工作站、终端、服务器等在较小物理范围内的互联，只能解决局部的资源共享；广域网可以使相距遥远的局域网互相连接起来，远距离传输数据、语音、视频等，实现大范围的资源共享\n\n广域网连接方式：专线方式、电路交换方式、分组交换方式\n接口线缆\nV.24和V.35均为串行接口\nG口（以太网口）默认数据链路层协议802.3，S口（串口）默认数据链路层协议PPP。根据不同物理层介质，数据链路层选择不同的协议。\n以下接口线缆非仅广域网中使用\n\n\n\n\n\n\nIP基本原理\nIP相关协议（网络层）：ICMP、IGMP、ARP、RARP\nIP的作用：标识节点和链路 ①用唯一的IP地址标识每一个节点②用唯一的IP网络号标识每一个链路；\n寻址和转发①确定节点所在网络的位置，进而确定节点所在的位置②IP路由器选择适当的路径将IP包转发到目的节点；\n适应各种数据链路 ①根据链路的MTU对IP包进行分片和重组 ②为了通过实际的数据链路传递信息，须建立IP地 址到数据链路层地址的映射\n\nIP网络由多个网段构成，每个网段对应一个链路 ，路由器负责将网段连接起来，适配链路层 协议，在网络之间转发数据包\n\n网络号用于区分不同的IP网络、主机号用于标识该网络内的一个IP节点\n\n版本（Version）：用于标识封装是IPv4/IPv6\n头长度（Internet Header Length,IHL）：描述数据包头的内容长度\n总长度（Total Length）：数据包总长度，字段长16Bit，数据包最长为65535B\n标识（Identification）：标识某个分片来自于哪个数据包\n标志（Flags）：标识数据包是否允许分片\nFragment Offset：分片偏移，用于描述分片在数据包中的位置\n生存时间（Time to Live,TTL）：该数据包允许经过的最多路由器数量（每经过一个路由器值-1，0时丢弃）\n协议（Protocol）：标识上层协议TCP,6/UDP,17（协议号）\n头校验和（Header Checksum）：用于检查包头完整性\n源地址Source Address和目的地址Destination Address：标识数据包的源节点和目的节点IP地址\n\nA类IP地址：1.0.0.0~126.255.255.255（127为回环测试，127.0.0.1通常表示本机，0.0.0.0通常用于路由器指定默认路由），每个A类网络有2^24个A类IP地址，2^24-2个可用主机数\nB类IP地址：128.0.0.0~191.255.255.255，每个B类网络有2^16个B类IP地址，2^16-2个可用主机数\nC类IP地址：192.0.0.0~223.255.255.255，每个C类网络有2^8个C类IP地址，2^8-2个可用主机数\nD类IP地址：第一个八位段1110开头，取值224~239，通常为组播地址\nE类IP地址：11110开头，保留用于研究\n网段（网络地址）：主机号全为0；网段广播（广播地址）：主机号全为1\nARP：将IP解析为MAC，RARP为反向ARP解析\n\n若目的地址所处网络号与本机所处网络司号相同，则目的处于直连网段；\n①处于同一网段，主机可以与其直接通信，此时主机首先解析目的主机IP地址所对应的硬件地址，随即将IP包以此硬件地址为目的地址封装成帧，由直接连结此网段的接口发送给目的主机\n②如果属于不同网段，则主机需要将IP包交给网关去处理，此时主机根据网关的IP地址解析其物理地址，随即将IP包以此硬件地址为目的地址封装成帧，由直连此网段的接口发送给网关\n\n路由器收到IP包首先检查IP包的目的地址是不是自己，是的话就接收此包并将其解封装所得数据交给上层协议处理，如果目的IP不是自己\n①处于同一个直连网段，可以与其直接通信，此时路由器首先解析目的IP地址所对应的硬件地址，随即将IP包以此硬件地址为目的地址封装成帧，由此直接连接此网段的接口发给目的主机\n②如果处于不同网段，则需要交给下一跳路由器处理，此时根据路由器上面的路由表查出下一跳的IP地址，解析出一下跳的硬件地址，随即将IP包以此硬件地址为目的地址封装成帧，由此直接连接此网段的接口发给下一跳的路由器\n\n\nIP子网划分\n子网划分方法：在主机号中划分出子网号，达到在自然分类中再次划分主机的目的\n\n得到一个IP地址首先判断在自然分类中他的网络号的位数，再通过给出的位数相减得到子网号位数；得到一个16进制子网掩码首先将其转换为二进制，再判断子网号位数，用自然分类得出网络地址和广播地址的方式就能得出子网划分后的地址的网络地址/广播地址。\n\n可用主机数：2^（主机位数）-2  //此时的主机位数同自然分类中的主机位数-子网号位数（在告知主机数和IP时，用2^（主机位数）-2&gt;=主机数，来算出主机位数和子网位数即可得出子网掩码）\n\n\n可用子网数：2^（子网位数）（在告知子网数和IP时，用2^（子网位数）&gt;=子网数，来算出子网位数即可得出子网掩码）\n可用主机范围：网络地址+1~广播地址-1\nVLSM和CIDR\n子网划分的局限性 ：无法实现把网络划分为不同大小的子网，常常会浪费许多主机地址 ，使用VLSM(Variable Length Subnet Mask，可变长子网掩码）可以允许使用多个子网掩码划分子网，使组织的IP地址空间得到更有效的利用\nCIDR(Classless Inter-Domain Routing, 无类域间路由） 消除了自然分类地址和子网划分的界限、将网络前缀相同的连续IP地址组成CIDR地址块、支持强化地址汇聚\n题目示例\n基于CIDR划分子网\n\n请根据10.0.0.0/8划分4个子网，并给出每个子网的网络地址、广播地址、可用IP地址范围和子网掩码。\n2^M&gt;=4,M&gt;=2\n8+2=10位，255.192.0.0\n10.0.0.0  10.63.255.255   10.0.0.1~10.63.255.254\n10.64.0.0  10.127.255.255   10.64.0.1~10.127.255.254\n10.128.0.0  10.191.255.255   10.128.0.1~10.191.255.254\n10.192.0.0  10.255.255.255   10.192.0.1~10.255.255.254\n\n请根据172.16.96.0/19划分4个子网，并给出每个子网的网络地址、广播地址、可用IP地址范围和子网掩码。\n2^M&gt;=4,M&gt;=2\n子网掩码：19+2=21；255.255.248.0\n172.16.96.0  172.16.103.255  172.16.96.1~172.16.103.254\n172.16.104.0  172.16.111.255  172.16.104.1~172.16.111.254\n172.16.112.0  172.16.119.255   172.16.112.1~172.16.119.254\n172.16.120.0  172.16.127.255   172.16.120.1~172.16.127.254\n\n请根据IP地址为100.100.100.100/11，计算该IP地址所属网段的网络地址、广播地址、可用IP地址范围和子网掩码。\n100.011 00000.0.0=100.96.0.0\n100.011 11111.255.255=100.127.255.255\n可用IP地址范围：100.96.0.1~100.127.255.254\n255.224.0.0\n\n请根据IP地址为200.200.200.200/27，计算该IP地址所属网段的网络地址、广播地址、可用IP地址范围和子网掩码。\n200.200.200.110 11111\n200.200.200.192  200.200.200.223\n200.200.200.193~200.200.200.222\n255.255.255.224\n\n\n\n\n基于VLSM划分子网\n\n某公司有A、B、C、D四个部门，计算机数量分别是100台、55台、29台、20台。该公司拟通过192.168.1.0/24划分子网，请给出每个子网的网络地址、广播地址、可用IP地址范围和子网掩码。\nA：2^n-2&gt;=100,n&gt;=7,32-7=25\n192.168.1.0 0000000:\n192.168.1.0  192.168.1.127   192.168.1.1~192.168.1.126\nB；2^n-2&gt;=55,n&gt;=6;32-6=26\n192.168.1.1 0 000000:\n192.168.1.128  192.168.1.191  192.168.1.129~192.168.1.190\nC:2^n-2&gt;=29,n&gt;=5;32-5=27\n192.168.1.110 00000:\n192.168.1.192 192.168.1.223  192.168.1.193~192.168.1.222\nD:2^n-2&gt;=20,n&gt;=5;32-5=27\n192.168.1.111 00000:\n192.168.1.224  192.168.1.255  192.168.1.225~192.168.1.254\n\n某公司向运营商（ISP）申请到200.200.200.160/27的网络地址，数据中心有10台服务器，5个公网IP用作NAT（网络地址转换），其他IP用作网络设备之间提供点对点服务。请划分子网，并给出每个子网的网络地址、广播地址、可用IP地址范围和子网掩码。\n\n\n地址聚合\n\n某企业分配给产品部的IP地址块为192.168.31.192/26，分配给市场部的IP地址块为192.168.31.160/27，分配给财务部的IP地址块为192.168.31.128/27，那么这三个地址块经过聚合后的地址为（C  ）\nA、192.168.31.0/25                B、192.168.31.0/26\nC、192.168.31.128/25              D、192.168.31.128/26\n比较，相同的部分均为192.168.31，总共24位相同，最后一组换成二进制再比较：\n192.168.31.11000000\n192.168.31.10100000\n192.168.31.10000000\n比较得出，总共25位相同，那么，聚合后的IP（网络前缀）就为192.168.31.10000000，将10000000转为十进制为128，聚合后的IP就是192.168.31.128。可直接写成192.168.31.128/25。\n因为有25位相同，也以，子网掩码网络号就是25位，主机号剩下7位，网络号全为1，主机号全为0，即11111111.11111111.11111111.10000000，转换为十进制，255.255.255.128。\n\n有４条路由：172.18.129.0/24, 172.18.130.0/24, 172.18.132.0/24, 172.18.133.0/24,如果进行路由会聚，能覆盖这４条路由的地址是（A ）。\nA．172.18.128.0/21                B. 172.18.128.0/22\nC.172.18.130.0/22                 D. 172.18.132.0/23\n首先从左到右开始，把不同的那个ip数字换算成二进制，\n即 129 二进制 1000 0001 130 二进制 1000 0010 132 二进制 1000 0100 133 二进制 1000 0101\n这四个数的前五位相同都是10000，所以加上前面的172.18这两部分相同的位数，网络号就是8+8+5=21。把共同的保留下来，其他全部为0，就是路由汇聚的地址。10000000转换回十进制就是128。所以，路由汇聚的ip地址就是172.18.128.0，最终就是172.18.128.0/21。\n\n为缩小路由表，请根据192.168.20.0/24、192.168.21.0/24、192.168.22.0/24、192.168.23.0/24等4个子网进行地址聚合，求出超网地址。（不同的号位为0）\n192.168.20.0/24 192.168.00010100.0\n192.168.21.0/24 192.168.00010101.0\n192.168.22.0/24 192.168.00010110.0\n192.168.23.0/24 192.168.00010111.0\n故可得超网地址为：192.168.20.0/22\n\n","categories":["旧日"],"tags":["通信","IP","路由"]},{"title":"OSI和TCPIP","url":"/post/b66e59b1.html","content":"摘要：OSI模型的7层结构及对应功能，TCP/IP模型的分层结构和OSI模型的对比\n\n开放式系统互联模型（Open System Interconnection Model，缩写：OSI；简称为OSI模型）是一种概念模型，由国际标准化组织（ISO）提出，一个试图使各种计算机在世界范围内互连为网络的标准框架。定义于ISO/IEC 7498-1。\n该模型将通信系统中的数据流划分为七个层，从分布式应用程序数据的最高层表示到跨通信介质传输数据的物理实现。每个中间层为其上一层提供功能，其自身功能则由其下一层提供。功能的类别通过标准的通信协议在软件中实现。\n开放式系统互联模型的开发始于上世纪70年代后期，用以支持各种计算机联网方法的出现。在上世纪80年代，该模型成为国际标准化组织（ISO）开放系统互连小组的工作产品。-------------------------维基百科\n\n\nOSI七层参考模型有以下优点\n\n开放的标准化接口\n多厂商兼容性\n易于理解、学习和更新协议标准\n实现模块化工程，降低开发实现的复杂度\n便于故障排除\n\nOSI参考模型\n7    应用层：(数据名)应用层协议数据单元APDU（Application Protocol Data Unit）\n6    表示层：表示层协议数据单元PPDU（Presentation Protocol Data Unit）\n5    会话层：会话层协议数据单元SPDU（Session Protocol Data Unit）\n4    传输层：      段  Segment\n3    网络层：      数据包 Packet\n2    数据链路层：  帧 Frame\n1    物理层：      比特流 Bit\n物理层\n介质：同轴电缆，双绞线，光纤，串行电缆，电磁波等\n局域网接口线缆标准：10Base-T、100Base-Tx/Fx、1000Base-T、1000Base-Sx/Lx\n广域网接口线缆标准：RS-232(EIA/TIA-232)、V.24、V.35\n常见设备：中继器（局域网），集线器（局域网），调制解调器（广域网）\n数据链路层\n主要功能：①帧同步（编帧和识别帧）②数据链路的建立，维持和释放③传输资源控制④流量控制⑤差错控制⑥寻址⑦标识上层数据\nIEEE 802标准：\n\n802.1描述局域网需要解决的问题（802.1d描述生成树协议）\n802.2 LLC子层标准制定\n802.3 MAC子层标准制定（如解决总线型拓扑的半双工单点故障的技术CSMA/CD）\n802.4 令牌总线标准制定\n802.5 令牌环网标准制定\n802.11 无线局域网标准制定\n我国应用最广的LAN标准是基于IEEE802.3的以太网标准\n广域网数据链路层标准：HDLC（高级数据链路控制）、PPP（点到点协议）、X.25、帧中继协议等\n常见设备：交换机\n\n网络层\n主要功能：编址、路由选择、拥塞控制、异种网络互连\n主要协议：路由协议（RIP，OSPF，IS-IS，IGRP，EIGRP，BGP协议等）和可路由协议（IP，IPX协议等）\n\n面向连接的服务：适合可靠性要求高的应用。特点①通信前建立连接，通信完成后断开连接②有序传递③应答确认④差错重传\n无连接的服务：适合对延迟敏感的应用。特点①尽力而为的服务②无需建立连接③无序列号机制，无确认机制，无重传机制\n传输层\n主要功能：负责创建端到端的通信连接、差错校验和重传、流量控制。\n主要协议：TCP、UDP、SPX协议等。\n会话层\n利用传输层提供的端到端服务，向表示层或会话用户提供会话服务。\n表示层\n转换应用层的信息，对数据进行加密和压缩。\n应用层\n对软件提供接口，实现用户与应用程序交互。\n\nTCP/IP模型\n\nTCP/IP参考模型是一个抽象的分层模型，这个模型中，所有的TCP/IP系列网络协议都归类到4个抽象的“层”中。每一抽象层创建在低一层提供的服务上，并且为高一层提供服务。 完成一些特定的任务需要众多的协议协同工作，这些协议分布在参考模型的不同层中的，因此有时称它们为一个协议栈。 TCP/IP参考模型为TCP/IP协议栈订身制作。其中IP协议只关心如何使得数据能够跨越本地网络边界的问题，而不关心如何利用传输媒体，数据如何传输。整个TCP/IP协议栈则负责解决数据如何通过许许多多个点对点通路（一个点对点通路，也称为一“跳”, 1 hop）顺利传输，由此不同的网络成员能够在许多“跳”的基础上创建相互的数据通路。 如想分析更普遍的网络通信问题，ISO的OSI模型也能起更好的帮助作用。---------------------维基百科\nTCP/IP模型\n4 应用层：融合了会话层和表示层—主要协议：Telnet，FTP，TFTP，SMTP，SNMP，HTTP等\n3 传输层：提供端到端连接—主要协议：TCP，UDP\n2 网络层：使主机能正确将信息发送至任何网络的目标—主要协议：IP，ICMP，IGMP\n1 网络接口层：主要技术：以太网，FDDI，令牌环，SLIP，HDLC，PPP，X.25，帧中继，ATM\n其中传输层协议的主要作用：\n\n\n提供面向连接和无连接的服务\n维护连接状态\n对应用层数据进行分段和封装\n实现多路复用\n可靠的传输数据\n执行流量控制\n\n##OSI参考模型和TCP/IP模型对比##\n\n\n以上为个人的粗浅认识，如有不正确之处，还望大佬指正谢谢\n","categories":["旧日"],"tags":["网络模型","通信"]},{"title":"5G网络架构和组网部署","url":"/post/7570f815.html","content":"5G网络架构的演进趋势\n\n5G移动通信系统包括5GC（5G Core Network，5G核心网）和NG-RAN（Next Generation Radio Access Network，5G无线接入网）。\n5G核心网与5G接入网通过NG接口连接，实现控制面和用户面功能;\n5G无线接入网之间通过Xn接口连接，实现控制面和用户面功能。\n\n\n图中gNB为5G基站的名称，g代表generation，NB代表NodeB，so gNB is （next）generation NodeB。\n5G NR：New Radio，指5G的无线空口技术\nng-eNB：next generation eNodeB。在option4系列非独立组网架构下（NSA），4G基站必须升级支持eLTE，和5G核心网对接，这种升级后的4G基站就叫ng-eNB。\n\nEvolved Node B，即演进型Node B简称eNB，LTE中基站的名称，相比现有3G中的Node B，集成了部分RNC的功能，减少了通信时协议的层次。\neNB的功能包括：RRM功能；IP头压缩及用户数据流加密；UE附着时的MME选择；寻呼信息的调度传输；广播信息的调度传输；以及设置和提供eNB的测量等。\n\nNode B是3G移动基站的称呼，它是通过标准的Iub接口与RNC互连，通过Uu接口与UE进行通信，主要完成Uu接口物理层协议和Iub接口协议的处理，相当于一个无线收发信器。\n一般，Node B主要由控制子系统、传输子系统、射频子系统、中频/基带子系统、天馈子系统等部分组成。\n\n网元\nUPF：用户面功能，实现用户数据处理\nSMF/AMF：控制面功能，实现接入管理\n","categories":["旧日"],"tags":["基站","网络基础"]}]